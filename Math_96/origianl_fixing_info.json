{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "/home/liumengjiao/Desktop/CI/Benchmark/data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.complex.ComplexTest::testMath221",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.math.complex.Complex",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "96",
  "workingDir": "../bugs/Math_96_buggy",
  "buggyCommit": "704342d6280becc3be194a23dfda2e56c2a64aed",
  "inducingCommit": "0a904461932f2c0455611e77ec6a8d8aced2980b",
  "originalCommit": "d5e5ca813228dac93f3111b3879e44e1642bf0cf",
  "bug_name": "Math_96",
  "derive": "defects4j",
  "original_fixing_commit": "e6449cccdeaba96ffba4c27db322c5c3d5c18662",
  "buildFiles_changed": false,
  "regression": false,
  "inducing_changes": [],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [
        "src/java/org/apache/commons/math/ConvergenceException.java",
        "src/java/org/apache/commons/math/MathConfigurationException.java",
        "src/java/org/apache/commons/math/MathException.java",
        "src/java/org/apache/commons/math/analysis/BisectionSolver.java",
        "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "src/java/org/apache/commons/math/analysis/ConvergenceException.java",
        "src/java/org/apache/commons/math/analysis/CubicSplineFunction.java",
        "src/java/org/apache/commons/math/analysis/QuinticFunction.java",
        "src/java/org/apache/commons/math/analysis/RootFinding.java",
        "src/java/org/apache/commons/math/analysis/SecantSolver.java",
        "src/java/org/apache/commons/math/analysis/SinFunction.java",
        "src/java/org/apache/commons/math/analysis/SplineInterpolator.java",
        "src/java/org/apache/commons/math/analysis/UnivariateFunction.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealFunction.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealInterpolator.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtil.java",
        "src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java",
        "src/java/org/apache/commons/math/complex/Complex.java",
        "src/java/org/apache/commons/math/complex/ComplexMath.java",
        "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java",
        "src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java",
        "src/java/org/apache/commons/math/distribution/BinomialDistribution.java",
        "src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java",
        "src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java",
        "src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java",
        "src/java/org/apache/commons/math/distribution/ContinuousDistribution.java",
        "src/java/org/apache/commons/math/distribution/DiscreteDistribution.java",
        "src/java/org/apache/commons/math/distribution/DistributionFactory.java",
        "src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java",
        "src/java/org/apache/commons/math/distribution/ExponentialDistribution.java",
        "src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java",
        "src/java/org/apache/commons/math/distribution/FDistribution.java",
        "src/java/org/apache/commons/math/distribution/FDistributionImpl.java",
        "src/java/org/apache/commons/math/distribution/GammaDistribution.java",
        "src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java",
        "src/java/org/apache/commons/math/distribution/HypergeometricDistribution.java",
        "src/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java",
        "src/java/org/apache/commons/math/distribution/TDistribution.java",
        "src/java/org/apache/commons/math/distribution/TDistributionImpl.java",
        "src/java/org/apache/commons/math/linear/RealMatrix.java",
        "src/java/org/apache/commons/math/linear/RealMatrixImpl.java",
        "src/java/org/apache/commons/math/random/EmpiricalDistribution.java",
        "src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java",
        "src/java/org/apache/commons/math/random/RandomData.java",
        "src/java/org/apache/commons/math/random/RandomDataImpl.java",
        "src/java/org/apache/commons/math/random/ValueServer.java",
        "src/java/org/apache/commons/math/special/Beta.java",
        "src/java/org/apache/commons/math/special/Gamma.java",
        "src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java",
        "src/java/org/apache/commons/math/stat/AbstractUnivariate.java",
        "src/java/org/apache/commons/math/stat/Applyable.java",
        "src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java",
        "src/java/org/apache/commons/math/stat/BivariateRegression.java",
        "src/java/org/apache/commons/math/stat/Frequency.java",
        "src/java/org/apache/commons/math/stat/ListUnivariateImpl.java",
        "src/java/org/apache/commons/math/stat/StatUtils.java",
        "src/java/org/apache/commons/math/stat/StoreUnivariate.java",
        "src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java",
        "src/java/org/apache/commons/math/stat/TestStatistic.java",
        "src/java/org/apache/commons/math/stat/TestStatisticImpl.java",
        "src/java/org/apache/commons/math/stat/Univariate.java",
        "src/java/org/apache/commons/math/stat/UnivariateImpl.java",
        "src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java",
        "src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java",
        "src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java",
        "src/java/org/apache/commons/math/stat/univariate/UnivariateStatistic.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/FirstMoment.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/FourthMoment.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/GeometricMean.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/Kurtosis.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/Mean.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/SecondMoment.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/Skewness.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/StandardDeviation.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/ThirdMoment.java",
        "src/java/org/apache/commons/math/stat/univariate/moment/Variance.java",
        "src/java/org/apache/commons/math/stat/univariate/rank/Max.java",
        "src/java/org/apache/commons/math/stat/univariate/rank/Median.java",
        "src/java/org/apache/commons/math/stat/univariate/rank/Min.java",
        "src/java/org/apache/commons/math/stat/univariate/rank/Percentile.java",
        "src/java/org/apache/commons/math/stat/univariate/summary/Product.java",
        "src/java/org/apache/commons/math/stat/univariate/summary/Sum.java",
        "src/java/org/apache/commons/math/stat/univariate/summary/SumOfLogs.java",
        "src/java/org/apache/commons/math/stat/univariate/summary/SumOfSquares.java",
        "src/java/org/apache/commons/math/util/BeanTransformer.java",
        "src/java/org/apache/commons/math/util/ContinuedFraction.java",
        "src/java/org/apache/commons/math/util/ContractableDoubleArray.java",
        "src/java/org/apache/commons/math/util/DefaultTransformer.java",
        "src/java/org/apache/commons/math/util/DoubleArray.java",
        "src/java/org/apache/commons/math/util/ExpandableDoubleArray.java",
        "src/java/org/apache/commons/math/util/FixedDoubleArray.java",
        "src/java/org/apache/commons/math/util/MathUtils.java",
        "src/java/org/apache/commons/math/util/NumberTransformer.java",
        "src/java/org/apache/commons/math/util/TransformerMap.java"
      ],
      "num": 98
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.complex.ComplexTest",
      "test_function": "testMath221",
      "assertion_line": "696",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003corg.apache.commons.math.complex.Complex@98b00000\u003e but was:\u003corg.apache.commons.math.complex.Complex@18b00000\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/math/complex/Complex.java",
        "src/java/org/apache/commons/math/complex/Complex.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.complex.Complex:equals:[Object other]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.complex.Complex:equals:[Object other]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "258",
            "259",
            "260",
            "261"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "258"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/math/complex/Complex.java b/src/java/org/apache/commons/math/complex/Complex.java\nindex 16b3873..8b622cb 100644\n--- a/src/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/java/org/apache/commons/math/complex/Complex.java\n@@ -255,10 +255,7 @@\n                 if (rhs.isNaN()) {\n                     ret \u003d this.isNaN();\n                 } else {\n-                ret \u003d (Double.doubleToRawLongBits(real) \u003d\u003d\n-                        Double.doubleToRawLongBits(rhs.getReal())) \u0026\u0026\n-                    (Double.doubleToRawLongBits(imaginary) \u003d\u003d\n-                        Double.doubleToRawLongBits(rhs.getImaginary())); \n+                    ret \u003d (real \u003d\u003d rhs.real) \u0026\u0026 (imaginary \u003d\u003d rhs.imaginary); \n                 }\n             } catch (ClassCastException ex) {\n                 // ignore exception\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "ParenthesizedExpression [9268,9286]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "ParenthesizedExpression [9290,9318]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [9269,9285]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [9291,9317]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "QualifiedName: rhs.real [9277,9285]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "QualifiedName: rhs.imaginary [9304,9317]"
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_RECEIVER [9265,9271]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: doubleToRawLongBits [9272,9291]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [9292,9296]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [9265,9297]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [9325,9366]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [9265,9366]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ParenthesizedExpression [9264,9367]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_RECEIVER [9392,9398]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: doubleToRawLongBits [9399,9418]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [9419,9428]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [9392,9429]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [9457,9503]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [9392,9503]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ParenthesizedExpression [9391,9504]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "patch_changed_mths": {
    "qualified_names": [],
    "num": 0
  }
}