===
insert-tree
---
ImportDeclaration [662,693]
    QualifiedName: java.text.FieldPosition [669,692]
to
CompilationUnit [0,3790]
at 1
===
insert-tree
---
ImportDeclaration [694,718]
    QualifiedName: java.text.Format [701,717]
to
CompilationUnit [0,3790]
at 2
===
insert-tree
---
ImportDeclaration [750,782]
    QualifiedName: java.text.ParseException [757,781]
to
CompilationUnit [0,3790]
at 4
===
insert-tree
---
ImportDeclaration [783,814]
    QualifiedName: java.text.ParsePosition [790,813]
to
CompilationUnit [0,3790]
at 5
===
insert-tree
---
SimpleType [1136,1142]
    SimpleName: Format [1136,1142]
to
TypeDeclaration [694,3782]
at 4
===
insert-tree
---
FieldDeclaration [1262,1368]
    Javadoc [1262,1301]
        TagElement [1266,1299]
            TextElement: The default imaginary character.  [1266,1299]
    Modifier: private [1306,1313]
    Modifier: static [1314,1320]
    Modifier: final [1321,1326]
    SimpleType [1327,1333]
        SimpleName: String [1327,1333]
    VariableDeclarationFragment [1334,1367]
        SimpleName: DEFAULT_IMAGINARY_CHARACTER [1334,1361]
        StringLiteral: "i" [1364,1367]
to
TypeDeclaration [694,3782]
at 6
===
insert-tree
---
FieldDeclaration [1504,1592]
    Javadoc [1504,1550]
        TagElement [1508,1548]
            TextElement: The format used for the imaginary part.  [1508,1548]
    Modifier: private [1555,1562]
    SimpleType [1563,1575]
        SimpleName: NumberFormat [1563,1575]
    VariableDeclarationFragment [1576,1591]
        SimpleName: imaginaryFormat [1576,1591]
to
TypeDeclaration [694,3782]
at 8
===
insert-tree
---
FieldDeclaration [1598,1676]
    Javadoc [1598,1639]
        TagElement [1602,1637]
            TextElement: The format used for the real part.  [1602,1637]
    Modifier: private [1644,1651]
    SimpleType [1652,1664]
        SimpleName: NumberFormat [1652,1664]
    VariableDeclarationFragment [1665,1675]
        SimpleName: realFormat [1665,1675]
to
TypeDeclaration [694,3782]
at 9
===
insert-tree
---
MethodDeclaration [1948,2234]
    Javadoc [1948,2129]
        TagElement [1959,2047]
            TextElement: Create an instance with a custom number format for both real and [1959,2023]
            TextElement: imaginary parts. [2031,2047]
        TagElement [2055,2121]
            SimpleName: format [2062,2068]
            TextElement:  the custom format for both real and imaginary parts. [2068,2121]
    Modifier: public [2134,2140]
    SimpleName: ComplexFormat [2141,2154]
    SingleVariableDeclaration [2155,2174]
        SimpleType [2155,2167]
            SimpleName: NumberFormat [2155,2167]
        SimpleName: format [2168,2174]
    Block [2176,2234]
        ConstructorInvocation [2186,2228]
            SimpleName: DEFAULT_IMAGINARY_CHARACTER [2191,2218]
            SimpleName: format [2220,2226]
to
TypeDeclaration [694,3782]
at 12
===
insert-tree
---
MethodDeclaration [2244,2691]
    Javadoc [2244,2519]
        TagElement [2255,2377]
            TextElement: Create an instance with a custom number format for the real part and a [2255,2325]
            TextElement: custom number format for the imaginary part. [2333,2377]
        TagElement [2385,2439]
            SimpleName: realFormat [2392,2402]
            TextElement:  the custom format for the real part. [2402,2439]
        TagElement [2447,2511]
            SimpleName: imaginaryFormat [2454,2469]
            TextElement:  the custom format for the imaginary part. [2469,2511]
    Modifier: public [2524,2530]
    SimpleName: ComplexFormat [2531,2544]
    SingleVariableDeclaration [2545,2568]
        SimpleType [2545,2557]
            SimpleName: NumberFormat [2545,2557]
        SimpleName: realFormat [2558,2568]
    SingleVariableDeclaration [2582,2610]
        SimpleType [2582,2594]
            SimpleName: NumberFormat [2582,2594]
        SimpleName: imaginaryFormat [2595,2610]
    Block [2612,2691]
        ConstructorInvocation [2622,2685]
            SimpleName: DEFAULT_IMAGINARY_CHARACTER [2627,2654]
            SimpleName: realFormat [2656,2666]
            SimpleName: imaginaryFormat [2668,2683]
to
TypeDeclaration [694,3782]
at 13
===
insert-tree
---
MethodDeclaration [3040,3473]
    Javadoc [3040,3320]
        TagElement [3051,3173]
            TextElement: Create an instance with a custom imaginary character, and a custom number [3051,3124]
            TextElement: format for both real and imaginary parts. [3132,3173]
        TagElement [3181,3238]
            SimpleName: imaginaryCharacter [3188,3206]
            TextElement:  The custom imaginary character. [3206,3238]
        TagElement [3246,3312]
            SimpleName: format [3253,3259]
            TextElement:  the custom format for both real and imaginary parts. [3259,3312]
    Modifier: public [3325,3331]
    SimpleName: ComplexFormat [3332,3345]
    SingleVariableDeclaration [3346,3371]
        SimpleType [3346,3352]
            SimpleName: String [3346,3352]
        SimpleName: imaginaryCharacter [3353,3371]
    SingleVariableDeclaration [3373,3392]
        SimpleType [3373,3385]
            SimpleName: NumberFormat [3373,3385]
        SimpleName: format [3386,3392]
    Block [3394,3473]
        ConstructorInvocation [3404,3467]
            SimpleName: imaginaryCharacter [3409,3427]
            SimpleName: format [3429,3435]
            CastExpression [3437,3465]
                SimpleType [3438,3450]
                    SimpleName: NumberFormat [3438,3450]
                MethodInvocation [3451,3465]
                    METHOD_INVOCATION_RECEIVER [3451,3457]
                        SimpleName: format [3451,3457]
                    SimpleName: clone [3458,3463]
to
TypeDeclaration [694,3782]
at 15
===
insert-tree
---
MethodDeclaration [3483,4136]
    Javadoc [3483,3861]
        TagElement [3494,3654]
            TextElement: Create an instance with a custom imaginary character, a custom number [3494,3563]
            TextElement: format for the real part, and a custom number format for the imaginary [3571,3641]
            TextElement: part. [3649,3654]
        TagElement [3662,3719]
            SimpleName: imaginaryCharacter [3669,3687]
            TextElement:  The custom imaginary character. [3687,3719]
        TagElement [3727,3781]
            SimpleName: realFormat [3734,3744]
            TextElement:  the custom format for the real part. [3744,3781]
        TagElement [3789,3853]
            SimpleName: imaginaryFormat [3796,3811]
            TextElement:  the custom format for the imaginary part. [3811,3853]
    Modifier: public [3866,3872]
    SimpleName: ComplexFormat [3873,3886]
    SingleVariableDeclaration [3887,3912]
        SimpleType [3887,3893]
            SimpleName: String [3887,3893]
        SimpleName: imaginaryCharacter [3894,3912]
    SingleVariableDeclaration [3914,3937]
        SimpleType [3914,3926]
            SimpleName: NumberFormat [3914,3926]
        SimpleName: realFormat [3927,3937]
    SingleVariableDeclaration [3951,3979]
        SimpleType [3951,3963]
            SimpleName: NumberFormat [3951,3963]
        SimpleName: imaginaryFormat [3964,3979]
    Block [3981,4136]
        SuperConstructorInvocation [3991,3999]
        ExpressionStatement [4008,4050]
            MethodInvocation [4008,4049]
                SimpleName: setImaginaryCharacter [4008,4029]
                METHOD_INVOCATION_ARGUMENTS [4030,4048]
                    SimpleName: imaginaryCharacter [4030,4048]
        ExpressionStatement [4059,4095]
            MethodInvocation [4059,4094]
                SimpleName: setImaginaryFormat [4059,4077]
                METHOD_INVOCATION_ARGUMENTS [4078,4093]
                    SimpleName: imaginaryFormat [4078,4093]
        ExpressionStatement [4104,4130]
            MethodInvocation [4104,4129]
                SimpleName: setRealFormat [4104,4117]
                METHOD_INVOCATION_ARGUMENTS [4118,4128]
                    SimpleName: realFormat [4118,4128]
to
TypeDeclaration [694,3782]
at 16
===
insert-tree
---
MethodDeclaration [4462,4916]
    Javadoc [4462,4738]
        TagElement [4473,4681]
            TextElement: Create a default number format.  The default number format is based on [4473,4543]
            TagElement [4551,4585]
                MethodRef [4558,4584]
                    SimpleName: NumberFormat [4558,4570]
                    SimpleName: getInstance [4571,4582]
            TextElement:  with the only customizing is the [4585,4618]
            TextElement: maximum number of fraction digits, which is set to 2.   [4626,4681]
        TagElement [4696,4730]
            TextElement:  the default number format. [4703,4730]
    Modifier: private [4743,4750]
    Modifier: static [4751,4757]
    SimpleType [4758,4770]
        SimpleName: NumberFormat [4758,4770]
    SimpleName: getDefaultNumberFormat [4771,4793]
    Block [4796,4916]
        VariableDeclarationStatement [4806,4851]
            SimpleType [4806,4818]
                SimpleName: NumberFormat [4806,4818]
            VariableDeclarationFragment [4819,4850]
                SimpleName: nf [4819,4821]
                MethodInvocation [4824,4850]
                    METHOD_INVOCATION_RECEIVER [4824,4836]
                        SimpleName: NumberFormat [4824,4836]
                    SimpleName: getInstance [4837,4848]
        ExpressionStatement [4860,4891]
            MethodInvocation [4860,4890]
                METHOD_INVOCATION_RECEIVER [4860,4862]
                    SimpleName: nf [4860,4862]
                SimpleName: setMaximumFractionDigits [4863,4887]
                METHOD_INVOCATION_ARGUMENTS [4888,4889]
                    NumberLiteral: 2 [4888,4889]
        ReturnStatement [4900,4910]
            SimpleName: nf [4907,4909]
to
TypeDeclaration [694,3782]
at 20
===
insert-tree
---
MethodDeclaration [4926,6121]
    Javadoc [4926,5281]
        TagElement [4937,4990]
            TextElement: Formats a  [4937,4947]
            TagElement [4947,4962]
                SimpleName: Complex [4954,4961]
            TextElement:  object to produce a string. [4962,4990]
        TagElement [5005,5041]
            SimpleName: complex [5012,5019]
            TextElement:  the object to format. [5019,5041]
        TagElement [5049,5099]
            SimpleName: toAppendTo [5056,5066]
            TextElement:  where the text is to be appended [5066,5099]
        TagElement [5107,5223]
            SimpleName: pos [5114,5117]
            TextElement:  On input: an alignment field, if desired. On output: the [5117,5174]
            TextElement: offsets of the alignment field [5193,5223]
        TagElement [5231,5273]
            TextElement:  the value passed in as toAppendTo. [5238,5273]
    Modifier: public [5286,5292]
    SimpleType [5293,5305]
        SimpleName: StringBuffer [5293,5305]
    SimpleName: format [5306,5312]
    SingleVariableDeclaration [5313,5328]
        SimpleType [5313,5320]
            SimpleName: Complex [5313,5320]
        SimpleName: complex [5321,5328]
    SingleVariableDeclaration [5330,5353]
        SimpleType [5330,5342]
            SimpleName: StringBuffer [5330,5342]
        SimpleName: toAppendTo [5343,5353]
    SingleVariableDeclaration [5367,5384]
        SimpleType [5367,5380]
            SimpleName: FieldPosition [5367,5380]
        SimpleName: pos [5381,5384]
    Block [5386,6121]
        ExpressionStatement [5405,5426]
            MethodInvocation [5405,5425]
                METHOD_INVOCATION_RECEIVER [5405,5408]
                    SimpleName: pos [5405,5408]
                SimpleName: setBeginIndex [5409,5422]
                METHOD_INVOCATION_ARGUMENTS [5423,5424]
                    NumberLiteral: 0 [5423,5424]
        ExpressionStatement [5435,5454]
            MethodInvocation [5435,5453]
                METHOD_INVOCATION_RECEIVER [5435,5438]
                    SimpleName: pos [5435,5438]
                SimpleName: setEndIndex [5439,5450]
                METHOD_INVOCATION_ARGUMENTS [5451,5452]
                    NumberLiteral: 0 [5451,5452]
        VariableDeclarationStatement [5487,5517]
            PrimitiveType: double [5487,5493]
            VariableDeclarationFragment [5494,5516]
                SimpleName: re [5494,5496]
                MethodInvocation [5499,5516]
                    METHOD_INVOCATION_RECEIVER [5499,5506]
                        SimpleName: complex [5499,5506]
                    SimpleName: getReal [5507,5514]
        ExpressionStatement [5526,5577]
            MethodInvocation [5526,5576]
                SimpleName: formatDouble [5526,5538]
                METHOD_INVOCATION_ARGUMENTS [5539,5575]
                    SimpleName: re [5539,5541]
                    MethodInvocation [5543,5558]
                        SimpleName: getRealFormat [5543,5556]
                    SimpleName: toAppendTo [5560,5570]
                    SimpleName: pos [5572,5575]
        VariableDeclarationStatement [5632,5667]
            PrimitiveType: double [5632,5638]
            VariableDeclarationFragment [5639,5666]
                SimpleName: im [5639,5641]
                MethodInvocation [5644,5666]
                    METHOD_INVOCATION_RECEIVER [5644,5651]
                        SimpleName: complex [5644,5651]
                    SimpleName: getImaginary [5652,5664]
        IfStatement [5676,6079]
            InfixExpression [5680,5688]
                SimpleName: im [5680,5682]
                INFIX_EXPRESSION_OPERATOR: < [5683,5684]
                NumberLiteral: 0.0 [5685,5688]
            Block [5690,5865]
                ExpressionStatement [5704,5729]
                    MethodInvocation [5704,5728]
                        METHOD_INVOCATION_RECEIVER [5704,5714]
                            SimpleName: toAppendTo [5704,5714]
                        SimpleName: append [5715,5721]
                        METHOD_INVOCATION_ARGUMENTS [5722,5727]
                            StringLiteral: " - " [5722,5727]
                ExpressionStatement [5742,5799]
                    MethodInvocation [5742,5798]
                        SimpleName: formatDouble [5742,5754]
                        METHOD_INVOCATION_ARGUMENTS [5755,5797]
                            PrefixExpression [5755,5758]
                                PREFIX_EXPRESSION_OPERATOR: - [5755,5756]
                                SimpleName: im [5756,5758]
                            MethodInvocation [5760,5780]
                                SimpleName: getImaginaryFormat [5760,5778]
                            SimpleName: toAppendTo [5782,5792]
                            SimpleName: pos [5794,5797]
                ExpressionStatement [5812,5855]
                    MethodInvocation [5812,5854]
                        METHOD_INVOCATION_RECEIVER [5812,5822]
                            SimpleName: toAppendTo [5812,5822]
                        SimpleName: append [5823,5829]
                        METHOD_INVOCATION_ARGUMENTS [5830,5853]
                            MethodInvocation [5830,5853]
                                SimpleName: getImaginaryCharacter [5830,5851]
            IfStatement [5871,6079]
                InfixExpression [5875,5903]
                    InfixExpression [5875,5883]
                        SimpleName: im [5875,5877]
                        INFIX_EXPRESSION_OPERATOR: > [5878,5879]
                        NumberLiteral: 0.0 [5880,5883]
                    INFIX_EXPRESSION_OPERATOR: || [5884,5886]
                    MethodInvocation [5887,5903]
                        METHOD_INVOCATION_RECEIVER [5887,5893]
                            SimpleName: Double [5887,5893]
                        SimpleName: isNaN [5894,5899]
                        METHOD_INVOCATION_ARGUMENTS [5900,5902]
                            SimpleName: im [5900,5902]
                Block [5905,6079]
                    ExpressionStatement [5919,5944]
                        MethodInvocation [5919,5943]
                            METHOD_INVOCATION_RECEIVER [5919,5929]
                                SimpleName: toAppendTo [5919,5929]
                            SimpleName: append [5930,5936]
                            METHOD_INVOCATION_ARGUMENTS [5937,5942]
                                StringLiteral: " + " [5937,5942]
                    ExpressionStatement [5957,6013]
                        MethodInvocation [5957,6012]
                            SimpleName: formatDouble [5957,5969]
                            METHOD_INVOCATION_ARGUMENTS [5970,6011]
                                SimpleName: im [5970,5972]
                                MethodInvocation [5974,5994]
                                    SimpleName: getImaginaryFormat [5974,5992]
                                SimpleName: toAppendTo [5996,6006]
                                SimpleName: pos [6008,6011]
                    ExpressionStatement [6026,6069]
                        MethodInvocation [6026,6068]
                            METHOD_INVOCATION_RECEIVER [6026,6036]
                                SimpleName: toAppendTo [6026,6036]
                            SimpleName: append [6037,6043]
                            METHOD_INVOCATION_ARGUMENTS [6044,6067]
                                MethodInvocation [6044,6067]
                                    SimpleName: getImaginaryCharacter [6044,6065]
        ReturnStatement [6097,6115]
            SimpleName: toAppendTo [6104,6114]
to
TypeDeclaration [694,3782]
at 21
===
insert-tree
---
MethodDeclaration [6131,7409]
    Javadoc [6131,6842]
        TagElement [6142,6371]
            TextElement: Formats a object to produce a string.  <code>obj</code> must be either a  [6142,6215]
            TagElement [6223,6238]
                SimpleName: Complex [6230,6237]
            TextElement:  object or a  [6238,6251]
            TagElement [6251,6265]
                SimpleName: Number [6258,6264]
            TextElement:  object.  Any other type of [6265,6292]
            TextElement: object will result in an  [6300,6325]
            TagElement [6325,6357]
                SimpleName: IllegalArgumentException [6332,6356]
            TextElement:  being thrown. [6357,6371]
        TagElement [6386,6418]
            SimpleName: obj [6393,6396]
            TextElement:  the object to format. [6396,6418]
        TagElement [6426,6476]
            SimpleName: toAppendTo [6433,6443]
            TextElement:  where the text is to be appended [6443,6476]
        TagElement [6484,6600]
            SimpleName: pos [6491,6494]
            TextElement:  On input: an alignment field, if desired. On output: the [6494,6551]
            TextElement: offsets of the alignment field [6570,6600]
        TagElement [6608,6650]
            TextElement:  the value passed in as toAppendTo. [6615,6650]
        TagElement [6658,6753]
            MethodRef [6663,6753]
                QualifiedName: java.text.Format [6663,6679]
                SimpleName: format [6680,6686]
                MethodRefParameter [6687,6703]
                    SimpleType [6687,6703]
                        QualifiedName: java.lang.Object [6687,6703]
                MethodRefParameter [6705,6727]
                    SimpleType [6705,6727]
                        QualifiedName: java.lang.StringBuffer [6705,6727]
                MethodRefParameter [6729,6752]
                    SimpleType [6729,6752]
                        QualifiedName: java.text.FieldPosition [6729,6752]
        TagElement [6761,6834]
            SimpleName: IllegalArgumentException [6769,6793]
            TextElement:  is <code>obj</code> is not a valid type. [6793,6834]
    Modifier: public [6847,6853]
    SimpleType [6854,6866]
        SimpleName: StringBuffer [6854,6866]
    SimpleName: format [6867,6873]
    SingleVariableDeclaration [6874,6884]
        SimpleType [6874,6880]
            SimpleName: Object [6874,6880]
        SimpleName: obj [6881,6884]
    SingleVariableDeclaration [6886,6909]
        SimpleType [6886,6898]
            SimpleName: StringBuffer [6886,6898]
        SimpleName: toAppendTo [6899,6909]
    SingleVariableDeclaration [6923,6940]
        SimpleType [6923,6936]
            SimpleName: FieldPosition [6923,6936]
        SimpleName: pos [6937,6940]
    Block [6942,7409]
        VariableDeclarationStatement [6961,6985]
            SimpleType [6961,6973]
                SimpleName: StringBuffer [6961,6973]
            VariableDeclarationFragment [6974,6984]
                SimpleName: ret [6974,6977]
                NullLiteral [6980,6984]
        IfStatement [7003,7374]
            InstanceofExpression [7007,7029]
                SimpleName: obj [7007,7010]
                SimpleType [7022,7029]
                    SimpleName: Complex [7022,7029]
            Block [7031,7100]
                ExpressionStatement [7045,7090]
                    Assignment [7045,7089]
                        SimpleName: ret [7045,7048]
                        ASSIGNMENT_OPERATOR: = [7049,7050]
                        MethodInvocation [7051,7089]
                            SimpleName: format [7051,7057]
                            METHOD_INVOCATION_ARGUMENTS [7059,7088]
                                CastExpression [7059,7071]
                                    SimpleType [7060,7067]
                                        SimpleName: Complex [7060,7067]
                                    SimpleName: obj [7068,7071]
                                SimpleName: toAppendTo [7073,7083]
                                SimpleName: pos [7085,7088]
            IfStatement [7106,7374]
                InstanceofExpression [7110,7131]
                    SimpleName: obj [7110,7113]
                    SimpleType [7125,7131]
                        SimpleName: Number [7125,7131]
                Block [7133,7251]
                    ExpressionStatement [7147,7241]
                        Assignment [7147,7240]
                            SimpleName: ret [7147,7150]
                            ASSIGNMENT_OPERATOR: = [7151,7152]
                            MethodInvocation [7153,7240]
                                SimpleName: format [7153,7159]
                                METHOD_INVOCATION_ARGUMENTS [7161,7239]
                                    ClassInstanceCreation [7161,7206]
                                        SimpleType [7165,7172]
                                            SimpleName: Complex [7165,7172]
                                        MethodInvocation [7173,7200]
                                            METHOD_INVOCATION_RECEIVER [7173,7186]
                                                ParenthesizedExpression [7173,7186]
                                                    CastExpression [7174,7185]
                                                        SimpleType [7175,7181]
                                                            SimpleName: Number [7175,7181]
                                                        SimpleName: obj [7182,7185]
                                            SimpleName: doubleValue [7187,7198]
                                        NumberLiteral: 0.0 [7202,7205]
                                    SimpleName: toAppendTo [7224,7234]
                                    SimpleName: pos [7236,7239]
                Block [7257,7374]
                    ThrowStatement [7272,7364]
                        ClassInstanceCreation [7278,7363]
                            SimpleType [7282,7306]
                                SimpleName: IllegalArgumentException [7282,7306]
                            StringLiteral: "Cannot format given Object as a Date" [7324,7362]
        ReturnStatement [7392,7403]
            SimpleName: ret [7399,7402]
to
TypeDeclaration [694,3782]
at 22
===
insert-tree
---
MethodDeclaration [7415,8555]
    Javadoc [7415,8130]
        TagElement [7426,7803]
            TextElement: Formats a double value to produce a string.  In general, the value is [7426,7495]
            TextElement: formatted using the formatting rules of <code>format</code>.  There are [7503,7574]
            TextElement: three exceptions to this: [7582,7607]
            TextElement: <ol> [7615,7619]
            TextElement: <li>NaN is formatted as '(NaN)'</li> [7627,7663]
            TextElement: <li>Positive infinity is formatted as '(Infinity)'</li> [7671,7726]
            TextElement: <li>Negative infinity is formatted as '(-Infinity)'</li> [7734,7790]
            TextElement: </ol> [7798,7803]
        TagElement [7818,7852]
            SimpleName: value [7825,7830]
            TextElement:  the double to format. [7830,7852]
        TagElement [7860,7890]
            SimpleName: format [7867,7873]
            TextElement:  the format used. [7873,7890]
        TagElement [7898,7948]
            SimpleName: toAppendTo [7905,7915]
            TextElement:  where the text is to be appended [7915,7948]
        TagElement [7956,8072]
            SimpleName: pos [7963,7966]
            TextElement:  On input: an alignment field, if desired. On output: the [7966,8023]
            TextElement: offsets of the alignment field [8042,8072]
        TagElement [8080,8122]
            TextElement:  the value passed in as toAppendTo. [8087,8122]
    Modifier: private [8135,8142]
    SimpleType [8143,8155]
        SimpleName: StringBuffer [8143,8155]
    SimpleName: formatDouble [8156,8168]
    SingleVariableDeclaration [8169,8181]
        PrimitiveType: double [8169,8175]
        SimpleName: value [8176,8181]
    SingleVariableDeclaration [8183,8202]
        SimpleType [8183,8195]
            SimpleName: NumberFormat [8183,8195]
        SimpleName: format [8196,8202]
    SingleVariableDeclaration [8216,8239]
        SimpleType [8216,8228]
            SimpleName: StringBuffer [8216,8228]
        SimpleName: toAppendTo [8229,8239]
    SingleVariableDeclaration [8241,8258]
        SimpleType [8241,8254]
            SimpleName: FieldPosition [8241,8254]
        SimpleName: pos [8255,8258]
    Block [8260,8555]
        IfStatement [8270,8522]
            InfixExpression [8274,8321]
                MethodInvocation [8274,8293]
                    METHOD_INVOCATION_RECEIVER [8274,8280]
                        SimpleName: Double [8274,8280]
                    SimpleName: isNaN [8281,8286]
                    METHOD_INVOCATION_ARGUMENTS [8287,8292]
                        SimpleName: value [8287,8292]
                INFIX_EXPRESSION_OPERATOR: || [8294,8296]
                MethodInvocation [8297,8321]
                    METHOD_INVOCATION_RECEIVER [8297,8303]
                        SimpleName: Double [8297,8303]
                    SimpleName: isInfinite [8304,8314]
                    METHOD_INVOCATION_ARGUMENTS [8315,8320]
                        SimpleName: value [8315,8320]
            Block [8324,8445]
                ExpressionStatement [8338,8361]
                    MethodInvocation [8338,8360]
                        METHOD_INVOCATION_RECEIVER [8338,8348]
                            SimpleName: toAppendTo [8338,8348]
                        SimpleName: append [8349,8355]
                        METHOD_INVOCATION_ARGUMENTS [8356,8359]
                            CharacterLiteral: '(' [8356,8359]
                ExpressionStatement [8374,8399]
                    MethodInvocation [8374,8398]
                        METHOD_INVOCATION_RECEIVER [8374,8384]
                            SimpleName: toAppendTo [8374,8384]
                        SimpleName: append [8385,8391]
                        METHOD_INVOCATION_ARGUMENTS [8392,8397]
                            SimpleName: value [8392,8397]
                ExpressionStatement [8412,8435]
                    MethodInvocation [8412,8434]
                        METHOD_INVOCATION_RECEIVER [8412,8422]
                            SimpleName: toAppendTo [8412,8422]
                        SimpleName: append [8423,8429]
                        METHOD_INVOCATION_ARGUMENTS [8430,8433]
                            CharacterLiteral: ')' [8430,8433]
            Block [8451,8522]
                ExpressionStatement [8465,8512]
                    MethodInvocation [8465,8511]
                        METHOD_INVOCATION_RECEIVER [8465,8480]
                            MethodInvocation [8465,8480]
                                SimpleName: getRealFormat [8465,8478]
                        SimpleName: format [8481,8487]
                        METHOD_INVOCATION_ARGUMENTS [8488,8510]
                            SimpleName: value [8488,8493]
                            SimpleName: toAppendTo [8495,8505]
                            SimpleName: pos [8507,8510]
        ReturnStatement [8531,8549]
            SimpleName: toAppendTo [8538,8548]
to
TypeDeclaration [694,3782]
at 23
===
insert-tree
---
MethodDeclaration [8565,8738]
    Javadoc [8565,8653]
        TagElement [8576,8606]
            TextElement: Access the imaginaryCharacter. [8576,8606]
        TagElement [8614,8645]
            TextElement:  the imaginaryCharacter. [8621,8645]
    Modifier: public [8658,8664]
    SimpleType [8665,8671]
        SimpleName: String [8665,8671]
    SimpleName: getImaginaryCharacter [8672,8693]
    Block [8696,8738]
        ReturnStatement [8706,8732]
            SimpleName: imaginaryCharacter [8713,8731]
to
TypeDeclaration [694,3782]
at 24
===
insert-tree
---
MethodDeclaration [8748,8915]
    Javadoc [8748,8830]
        TagElement [8759,8786]
            TextElement: Access the imaginaryFormat. [8759,8786]
        TagElement [8794,8822]
            TextElement:  the imaginaryFormat. [8801,8822]
    Modifier: public [8835,8841]
    SimpleType [8842,8854]
        SimpleName: NumberFormat [8842,8854]
    SimpleName: getImaginaryFormat [8855,8873]
    Block [8876,8915]
        ReturnStatement [8886,8909]
            SimpleName: imaginaryFormat [8893,8908]
to
TypeDeclaration [694,3782]
at 25
===
insert-tree
---
MethodDeclaration [8925,9072]
    Javadoc [8925,8997]
        TagElement [8936,8958]
            TextElement: Access the realFormat. [8936,8958]
        TagElement [8966,8989]
            TextElement:  the realFormat. [8973,8989]
    Modifier: public [9002,9008]
    SimpleType [9009,9021]
        SimpleName: NumberFormat [9009,9021]
    SimpleName: getRealFormat [9022,9035]
    Block [9038,9072]
        ReturnStatement [9048,9066]
            SimpleName: realFormat [9055,9065]
to
TypeDeclaration [694,3782]
at 26
===
insert-tree
---
MethodDeclaration [9078,9755]
    Javadoc [9078,9357]
        TagElement [9089,9141]
            TextElement: Parses a string to produce a  [9089,9118]
            TagElement [9118,9133]
                SimpleName: Complex [9125,9132]
            TextElement:  object. [9133,9141]
        TagElement [9156,9189]
            SimpleName: source [9163,9169]
            TextElement:  the string to parse [9169,9189]
        TagElement [9197,9239]
            TextElement:  the parsed  [9204,9216]
            TagElement [9216,9231]
                SimpleName: Complex [9223,9230]
            TextElement:  object. [9231,9239]
        TagElement [9247,9349]
            SimpleName: ParseException [9258,9272]
            TextElement:  if the beginning of the specified string [9272,9313]
            TextElement: cannot be parsed. [9332,9349]
    Modifier: public [9362,9368]
    SimpleType [9369,9376]
        SimpleName: Complex [9369,9376]
    SimpleName: parse [9377,9382]
    SingleVariableDeclaration [9383,9396]
        SimpleType [9383,9389]
            SimpleName: String [9383,9389]
        SimpleName: source [9390,9396]
    SimpleType [9405,9419]
        SimpleName: ParseException [9405,9419]
    Block [9420,9755]
        VariableDeclarationStatement [9430,9481]
            SimpleType [9430,9443]
                SimpleName: ParsePosition [9430,9443]
            VariableDeclarationFragment [9444,9480]
                SimpleName: parsePosition [9444,9457]
                ClassInstanceCreation [9460,9480]
                    SimpleType [9464,9477]
                        SimpleName: ParsePosition [9464,9477]
                    NumberLiteral: 0 [9478,9479]
        VariableDeclarationStatement [9490,9536]
            SimpleType [9490,9497]
                SimpleName: Complex [9490,9497]
            VariableDeclarationFragment [9498,9535]
                SimpleName: result [9498,9504]
                MethodInvocation [9507,9535]
                    SimpleName: parse [9507,9512]
                    METHOD_INVOCATION_ARGUMENTS [9513,9534]
                        SimpleName: source [9513,9519]
                        SimpleName: parsePosition [9521,9534]
        IfStatement [9545,9726]
            InfixExpression [9549,9578]
                MethodInvocation [9549,9573]
                    METHOD_INVOCATION_RECEIVER [9549,9562]
                        SimpleName: parsePosition [9549,9562]
                    SimpleName: getIndex [9563,9571]
                INFIX_EXPRESSION_OPERATOR: == [9574,9576]
                NumberLiteral: 0 [9577,9578]
            Block [9580,9726]
                ThrowStatement [9594,9716]
                    ClassInstanceCreation [9600,9715]
                        SimpleType [9604,9618]
                            SimpleName: ParseException [9604,9618]
                        InfixExpression [9619,9683]
                            StringLiteral: "Unparseable complex number: \"" [9619,9651]
                            INFIX_EXPRESSION_OPERATOR: + [9652,9653]
                            SimpleName: source [9654,9660]
                            StringLiteral: "\"" [9679,9683]
                        MethodInvocation [9685,9714]
                            METHOD_INVOCATION_RECEIVER [9685,9698]
                                SimpleName: parsePosition [9685,9698]
                            SimpleName: getErrorIndex [9699,9712]
        ReturnStatement [9735,9749]
            SimpleName: result [9742,9748]
to
TypeDeclaration [694,3782]
at 27
===
insert-tree
---
MethodDeclaration [9765,12221]
    Javadoc [9765,9983]
        TagElement [9776,9828]
            TextElement: Parses a string to produce a  [9776,9805]
            TagElement [9805,9820]
                SimpleName: Complex [9812,9819]
            TextElement:  object. [9820,9828]
        TagElement [9843,9876]
            SimpleName: source [9850,9856]
            TextElement:  the string to parse [9856,9876]
        TagElement [9884,9925]
            SimpleName: pos [9891,9894]
            TextElement:  input/ouput parsing parameter. [9894,9925]
        TagElement [9933,9975]
            TextElement:  the parsed  [9940,9952]
            TagElement [9952,9967]
                SimpleName: Complex [9959,9966]
            TextElement:  object. [9967,9975]
    Modifier: public [9988,9994]
    SimpleType [9995,10002]
        SimpleName: Complex [9995,10002]
    SimpleName: parse [10003,10008]
    SingleVariableDeclaration [10009,10022]
        SimpleType [10009,10015]
            SimpleName: String [10009,10015]
        SimpleName: source [10016,10022]
    SingleVariableDeclaration [10024,10041]
        SimpleType [10024,10037]
            SimpleName: ParsePosition [10024,10037]
        SimpleName: pos [10038,10041]
    Block [10043,12221]
        VariableDeclarationStatement [10053,10087]
            PrimitiveType: int [10053,10056]
            VariableDeclarationFragment [10057,10086]
                SimpleName: initialIndex [10057,10069]
                MethodInvocation [10072,10086]
                    METHOD_INVOCATION_RECEIVER [10072,10075]
                        SimpleName: pos [10072,10075]
                    SimpleName: getIndex [10076,10084]
        ExpressionStatement [10125,10163]
            MethodInvocation [10125,10162]
                SimpleName: parseAndIgnoreWhitespace [10125,10149]
                METHOD_INVOCATION_ARGUMENTS [10150,10161]
                    SimpleName: source [10150,10156]
                    SimpleName: pos [10158,10161]
        VariableDeclarationStatement [10195,10249]
            SimpleType [10195,10201]
                SimpleName: Number [10195,10201]
            VariableDeclarationFragment [10202,10248]
                SimpleName: re [10202,10204]
                MethodInvocation [10207,10248]
                    SimpleName: parseNumber [10207,10218]
                    METHOD_INVOCATION_ARGUMENTS [10219,10247]
                        SimpleName: source [10219,10225]
                        MethodInvocation [10227,10242]
                            SimpleName: getRealFormat [10227,10240]
                        SimpleName: pos [10244,10247]
        IfStatement [10258,10496]
            InfixExpression [10262,10272]
                SimpleName: re [10262,10264]
                INFIX_EXPRESSION_OPERATOR: == [10265,10267]
                NullLiteral [10268,10272]
            Block [10274,10496]
                ExpressionStatement [10434,10461]
                    MethodInvocation [10434,10460]
                        METHOD_INVOCATION_RECEIVER [10434,10437]
                            SimpleName: pos [10434,10437]
                        SimpleName: setIndex [10438,10446]
                        METHOD_INVOCATION_ARGUMENTS [10447,10459]
                            SimpleName: initialIndex [10447,10459]
                ReturnStatement [10474,10486]
                    NullLiteral [10481,10485]
        VariableDeclarationStatement [10528,10560]
            PrimitiveType: int [10528,10531]
            VariableDeclarationFragment [10532,10559]
                SimpleName: startIndex [10532,10542]
                MethodInvocation [10545,10559]
                    METHOD_INVOCATION_RECEIVER [10545,10548]
                        SimpleName: pos [10545,10548]
                    SimpleName: getIndex [10549,10557]
        VariableDeclarationStatement [10569,10610]
            PrimitiveType: char [10569,10573]
            VariableDeclarationFragment [10574,10609]
                SimpleName: c [10574,10575]
                MethodInvocation [10578,10609]
                    SimpleName: parseNextCharacter [10578,10596]
                    METHOD_INVOCATION_ARGUMENTS [10597,10608]
                        SimpleName: source [10597,10603]
                        SimpleName: pos [10605,10608]
        VariableDeclarationStatement [10619,10632]
            PrimitiveType: int [10619,10622]
            VariableDeclarationFragment [10623,10631]
                SimpleName: sign [10623,10627]
                NumberLiteral: 0 [10630,10631]
        SwitchStatement [10641,11188]
            SimpleName: c [10649,10650]
            SwitchCase [10662,10670]
                NumberLiteral: 0 [10667,10668]
            ReturnStatement [10753,10795]
                ClassInstanceCreation [10760,10794]
                    SimpleType [10764,10771]
                        SimpleName: Complex [10764,10771]
                    MethodInvocation [10772,10788]
                        METHOD_INVOCATION_RECEIVER [10772,10774]
                            SimpleName: re [10772,10774]
                        SimpleName: doubleValue [10775,10786]
                    NumberLiteral: 0.0 [10790,10793]
            SwitchCase [10804,10814]
                CharacterLiteral: '-' [10809,10812]
            ExpressionStatement [10827,10837]
                Assignment [10827,10836]
                    SimpleName: sign [10827,10831]
                    ASSIGNMENT_OPERATOR: = [10832,10833]
                    PrefixExpression [10834,10836]
                        PREFIX_EXPRESSION_OPERATOR: - [10834,10835]
                        NumberLiteral: 1 [10835,10836]
            BreakStatement [10850,10856]
            SwitchCase [10865,10875]
                CharacterLiteral: '+' [10870,10873]
            ExpressionStatement [10888,10897]
                Assignment [10888,10896]
                    SimpleName: sign [10888,10892]
                    ASSIGNMENT_OPERATOR: = [10893,10894]
                    NumberLiteral: 1 [10895,10896]
            BreakStatement [10910,10916]
            SwitchCase [10925,10934]
            ExpressionStatement [11083,11110]
                MethodInvocation [11083,11109]
                    METHOD_INVOCATION_RECEIVER [11083,11086]
                        SimpleName: pos [11083,11086]
                    SimpleName: setIndex [11087,11095]
                    METHOD_INVOCATION_ARGUMENTS [11096,11108]
                        SimpleName: initialIndex [11096,11108]
            ExpressionStatement [11123,11153]
                MethodInvocation [11123,11152]
                    METHOD_INVOCATION_RECEIVER [11123,11126]
                        SimpleName: pos [11123,11126]
                    SimpleName: setErrorIndex [11127,11140]
                    METHOD_INVOCATION_ARGUMENTS [11141,11151]
                        SimpleName: startIndex [11141,11151]
            ReturnStatement [11166,11178]
                NullLiteral [11173,11177]
        ExpressionStatement [11226,11264]
            MethodInvocation [11226,11263]
                SimpleName: parseAndIgnoreWhitespace [11226,11250]
                METHOD_INVOCATION_ARGUMENTS [11251,11262]
                    SimpleName: source [11251,11257]
                    SimpleName: pos [11259,11262]
        VariableDeclarationStatement [11301,11355]
            SimpleType [11301,11307]
                SimpleName: Number [11301,11307]
            VariableDeclarationFragment [11308,11354]
                SimpleName: im [11308,11310]
                MethodInvocation [11313,11354]
                    SimpleName: parseNumber [11313,11324]
                    METHOD_INVOCATION_ARGUMENTS [11325,11353]
                        SimpleName: source [11325,11331]
                        MethodInvocation [11333,11348]
                            SimpleName: getRealFormat [11333,11346]
                        SimpleName: pos [11350,11353]
        IfStatement [11364,11607]
            InfixExpression [11368,11378]
                SimpleName: im [11368,11370]
                INFIX_EXPRESSION_OPERATOR: == [11371,11373]
                NullLiteral [11374,11378]
            Block [11380,11607]
                ExpressionStatement [11545,11572]
                    MethodInvocation [11545,11571]
                        METHOD_INVOCATION_RECEIVER [11545,11548]
                            SimpleName: pos [11545,11548]
                        SimpleName: setIndex [11549,11557]
                        METHOD_INVOCATION_ARGUMENTS [11558,11570]
                            SimpleName: initialIndex [11558,11570]
                ReturnStatement [11585,11597]
                    NullLiteral [11592,11596]
        VariableDeclarationStatement [11654,11695]
            PrimitiveType: int [11654,11657]
            VariableDeclarationFragment [11658,11694]
                SimpleName: n [11658,11659]
                MethodInvocation [11662,11694]
                    METHOD_INVOCATION_RECEIVER [11662,11685]
                        MethodInvocation [11662,11685]
                            SimpleName: getImaginaryCharacter [11662,11683]
                    SimpleName: length [11686,11692]
        ExpressionStatement [11704,11732]
            Assignment [11704,11731]
                SimpleName: startIndex [11704,11714]
                ASSIGNMENT_OPERATOR: = [11715,11716]
                MethodInvocation [11717,11731]
                    METHOD_INVOCATION_RECEIVER [11717,11720]
                        SimpleName: pos [11717,11720]
                    SimpleName: getIndex [11721,11729]
        VariableDeclarationStatement [11741,11771]
            PrimitiveType: int [11741,11744]
            VariableDeclarationFragment [11745,11770]
                SimpleName: endIndex [11745,11753]
                InfixExpression [11756,11770]
                    SimpleName: startIndex [11756,11766]
                    INFIX_EXPRESSION_OPERATOR: + [11767,11768]
                    SimpleName: n [11769,11770]
        IfStatement [11780,12111]
            InfixExpression [11784,11875]
                MethodInvocation [11784,11870]
                    METHOD_INVOCATION_RECEIVER [11784,11822]
                        MethodInvocation [11784,11822]
                            METHOD_INVOCATION_RECEIVER [11784,11790]
                                SimpleName: source [11784,11790]
                            SimpleName: substring [11791,11800]
                            METHOD_INVOCATION_ARGUMENTS [11801,11821]
                                SimpleName: startIndex [11801,11811]
                                SimpleName: endIndex [11813,11821]
                    SimpleName: compareTo [11823,11832]
                    METHOD_INVOCATION_ARGUMENTS [11846,11869]
                        MethodInvocation [11846,11869]
                            SimpleName: getImaginaryCharacter [11846,11867]
                INFIX_EXPRESSION_OPERATOR: != [11871,11873]
                NumberLiteral: 0 [11874,11875]
            Block [11877,12111]
                ExpressionStatement [12006,12033]
                    MethodInvocation [12006,12032]
                        METHOD_INVOCATION_RECEIVER [12006,12009]
                            SimpleName: pos [12006,12009]
                        SimpleName: setIndex [12010,12018]
                        METHOD_INVOCATION_ARGUMENTS [12019,12031]
                            SimpleName: initialIndex [12019,12031]
                ExpressionStatement [12046,12076]
                    MethodInvocation [12046,12075]
                        METHOD_INVOCATION_RECEIVER [12046,12049]
                            SimpleName: pos [12046,12049]
                        SimpleName: setErrorIndex [12050,12063]
                        METHOD_INVOCATION_ARGUMENTS [12064,12074]
                            SimpleName: startIndex [12064,12074]
                ReturnStatement [12089,12101]
                    NullLiteral [12096,12100]
        ExpressionStatement [12120,12143]
            MethodInvocation [12120,12142]
                METHOD_INVOCATION_RECEIVER [12120,12123]
                    SimpleName: pos [12120,12123]
                SimpleName: setIndex [12124,12132]
                METHOD_INVOCATION_ARGUMENTS [12133,12141]
                    SimpleName: endIndex [12133,12141]
        ReturnStatement [12153,12215]
            ClassInstanceCreation [12160,12214]
                SimpleType [12164,12171]
                    SimpleName: Complex [12164,12171]
                MethodInvocation [12172,12188]
                    METHOD_INVOCATION_RECEIVER [12172,12174]
                        SimpleName: re [12172,12174]
                    SimpleName: doubleValue [12175,12186]
                InfixExpression [12190,12213]
                    MethodInvocation [12190,12206]
                        METHOD_INVOCATION_RECEIVER [12190,12192]
                            SimpleName: im [12190,12192]
                        SimpleName: doubleValue [12193,12204]
                    INFIX_EXPRESSION_OPERATOR: * [12207,12208]
                    SimpleName: sign [12209,12213]
to
TypeDeclaration [694,3782]
at 28
===
insert-tree
---
MethodDeclaration [12232,12681]
    Javadoc [12232,12514]
        TagElement [12243,12312]
            TextElement: Parses <code>source</code> until a non-whitespace character is found. [12243,12312]
        TagElement [12327,12360]
            SimpleName: source [12334,12340]
            TextElement:  the string to parse [12340,12360]
        TagElement [12368,12506]
            SimpleName: pos [12375,12378]
            TextElement:  input/ouput parsing parameter.  On output, <code>pos</code> [12378,12438]
            TextElement: holds the index of the next non-whitespace character. [12453,12506]
    Modifier: private [12519,12526]
    PrimitiveType: void [12527,12531]
    SimpleName: parseAndIgnoreWhitespace [12532,12556]
    SingleVariableDeclaration [12557,12570]
        SimpleType [12557,12563]
            SimpleName: String [12557,12563]
        SimpleName: source [12564,12570]
    SingleVariableDeclaration [12572,12589]
        SimpleType [12572,12585]
            SimpleName: ParsePosition [12572,12585]
        SimpleName: pos [12586,12589]
    Block [12591,12681]
        ExpressionStatement [12601,12633]
            MethodInvocation [12601,12632]
                SimpleName: parseNextCharacter [12601,12619]
                METHOD_INVOCATION_ARGUMENTS [12620,12631]
                    SimpleName: source [12620,12626]
                    SimpleName: pos [12628,12631]
        ExpressionStatement [12642,12675]
            MethodInvocation [12642,12674]
                METHOD_INVOCATION_RECEIVER [12642,12645]
                    SimpleName: pos [12642,12645]
                SimpleName: setIndex [12646,12654]
                METHOD_INVOCATION_ARGUMENTS [12655,12673]
                    InfixExpression [12655,12673]
                        MethodInvocation [12655,12669]
                            METHOD_INVOCATION_RECEIVER [12655,12658]
                                SimpleName: pos [12655,12658]
                            SimpleName: getIndex [12659,12667]
                        INFIX_EXPRESSION_OPERATOR: - [12670,12671]
                        NumberLiteral: 1 [12672,12673]
to
TypeDeclaration [694,3782]
at 29
===
insert-tree
---
MethodDeclaration [12687,13426]
    Javadoc [12687,12923]
        TagElement [12698,12767]
            TextElement: Parses <code>source</code> until a non-whitespace character is found. [12698,12767]
        TagElement [12782,12815]
            SimpleName: source [12789,12795]
            TextElement:  the string to parse [12795,12815]
        TagElement [12823,12864]
            SimpleName: pos [12830,12833]
            TextElement:  input/ouput parsing parameter. [12833,12864]
        TagElement [12872,12915]
            TextElement:  the first non-whitespace character. [12879,12915]
    Modifier: private [12928,12935]
    PrimitiveType: char [12936,12940]
    SimpleName: parseNextCharacter [12941,12959]
    SingleVariableDeclaration [12960,12973]
        SimpleType [12960,12966]
            SimpleName: String [12960,12966]
        SimpleName: source [12967,12973]
    SingleVariableDeclaration [12975,12992]
        SimpleType [12975,12988]
            SimpleName: ParsePosition [12975,12988]
        SimpleName: pos [12989,12992]
    Block [12994,13426]
        VariableDeclarationStatement [13005,13032]
            PrimitiveType: int [13005,13008]
            VariableDeclarationFragment [13009,13031]
                SimpleName: index [13009,13014]
                MethodInvocation [13017,13031]
                    METHOD_INVOCATION_RECEIVER [13017,13020]
                        SimpleName: pos [13017,13020]
                    SimpleName: getIndex [13021,13029]
        VariableDeclarationStatement [13042,13066]
            PrimitiveType: int [13042,13045]
            VariableDeclarationFragment [13046,13065]
                SimpleName: n [13046,13047]
                MethodInvocation [13050,13065]
                    METHOD_INVOCATION_RECEIVER [13050,13056]
                        SimpleName: source [13050,13056]
                    SimpleName: length [13057,13063]
        VariableDeclarationStatement [13076,13089]
            PrimitiveType: char [13076,13080]
            VariableDeclarationFragment [13081,13088]
                SimpleName: ret [13081,13084]
                NumberLiteral: 0 [13087,13088]
        IfStatement [13100,13389]
            InfixExpression [13104,13113]
                SimpleName: index [13104,13109]
                INFIX_EXPRESSION_OPERATOR: < [13110,13111]
                SimpleName: n [13112,13113]
            Block [13115,13389]
                VariableDeclarationStatement [13130,13137]
                    PrimitiveType: char [13130,13134]
                    VariableDeclarationFragment [13135,13136]
                        SimpleName: c [13135,13136]
                DoStatement [13151,13263]
                    Block [13154,13215]
                        ExpressionStatement [13173,13200]
                            Assignment [13173,13199]
                                SimpleName: c [13173,13174]
                                ASSIGNMENT_OPERATOR: = [13175,13176]
                                MethodInvocation [13177,13199]
                                    METHOD_INVOCATION_RECEIVER [13177,13183]
                                        SimpleName: source [13177,13183]
                                    SimpleName: charAt [13184,13190]
                                    METHOD_INVOCATION_ARGUMENTS [13191,13198]
                                        PostfixExpression [13191,13198]
                                            SimpleName: index [13191,13196]
                                            POSTFIX_EXPRESSION_OPERATOR: ++ [13196,13198]
                    InfixExpression [13223,13261]
                        MethodInvocation [13223,13248]
                            METHOD_INVOCATION_RECEIVER [13223,13232]
                                SimpleName: Character [13223,13232]
                            SimpleName: isWhitespace [13233,13245]
                            METHOD_INVOCATION_ARGUMENTS [13246,13247]
                                SimpleName: c [13246,13247]
                        INFIX_EXPRESSION_OPERATOR: && [13249,13251]
                        InfixExpression [13252,13261]
                            SimpleName: index [13252,13257]
                            INFIX_EXPRESSION_OPERATOR: < [13258,13259]
                            SimpleName: n [13260,13261]
                ExpressionStatement [13277,13297]
                    MethodInvocation [13277,13296]
                        METHOD_INVOCATION_RECEIVER [13277,13280]
                            SimpleName: pos [13277,13280]
                        SimpleName: setIndex [13281,13289]
                        METHOD_INVOCATION_ARGUMENTS [13290,13295]
                            SimpleName: index [13290,13295]
                IfStatement [13321,13378]
                    InfixExpression [13325,13334]
                        SimpleName: index [13325,13330]
                        INFIX_EXPRESSION_OPERATOR: < [13331,13332]
                        SimpleName: n [13333,13334]
                    Block [13336,13378]
                        ExpressionStatement [13355,13363]
                            Assignment [13355,13362]
                                SimpleName: ret [13355,13358]
                                ASSIGNMENT_OPERATOR: = [13359,13360]
                                SimpleName: c [13361,13362]
        ReturnStatement [13409,13420]
            SimpleName: ret [13416,13419]
to
TypeDeclaration [694,3782]
at 30
===
insert-tree
---
MethodDeclaration [13436,14408]
    Javadoc [13436,13783]
        TagElement [13447,13595]
            TextElement: Parses <code>source</code> for a special double values.  These values [13447,13516]
            TextElement: include Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY. [13524,13595]
        TagElement [13610,13643]
            SimpleName: source [13617,13623]
            TextElement:  the string to parse [13623,13643]
        TagElement [13651,13691]
            SimpleName: value [13658,13663]
            TextElement:  the special value to parse. [13663,13691]
        TagElement [13699,13740]
            SimpleName: pos [13706,13709]
            TextElement:  input/ouput parsing parameter. [13709,13740]
        TagElement [13748,13775]
            TextElement:  the special number. [13755,13775]
    Modifier: private [13788,13795]
    SimpleType [13796,13802]
        SimpleName: Number [13796,13802]
    SimpleName: parseNumber [13803,13814]
    SingleVariableDeclaration [13815,13828]
        SimpleType [13815,13821]
            SimpleName: String [13815,13821]
        SimpleName: source [13822,13828]
    SingleVariableDeclaration [13830,13842]
        PrimitiveType: double [13830,13836]
        SimpleName: value [13837,13842]
    SingleVariableDeclaration [13844,13861]
        SimpleType [13844,13857]
            SimpleName: ParsePosition [13844,13857]
        SimpleName: pos [13858,13861]
    Block [13863,14408]
        VariableDeclarationStatement [13873,13891]
            SimpleType [13873,13879]
                SimpleName: Number [13873,13879]
            VariableDeclarationFragment [13880,13890]
                SimpleName: ret [13880,13883]
                NullLiteral [13886,13890]
        VariableDeclarationStatement [13909,13946]
            SimpleType [13909,13921]
                SimpleName: StringBuffer [13909,13921]
            VariableDeclarationFragment [13922,13945]
                SimpleName: sb [13922,13924]
                ClassInstanceCreation [13927,13945]
                    SimpleType [13931,13943]
                        SimpleName: StringBuffer [13931,13943]
        ExpressionStatement [13955,13970]
            MethodInvocation [13955,13969]
                METHOD_INVOCATION_RECEIVER [13955,13957]
                    SimpleName: sb [13955,13957]
                SimpleName: append [13958,13964]
                METHOD_INVOCATION_ARGUMENTS [13965,13968]
                    CharacterLiteral: '(' [13965,13968]
        ExpressionStatement [13979,13996]
            MethodInvocation [13979,13995]
                METHOD_INVOCATION_RECEIVER [13979,13981]
                    SimpleName: sb [13979,13981]
                SimpleName: append [13982,13988]
                METHOD_INVOCATION_ARGUMENTS [13989,13994]
                    SimpleName: value [13989,13994]
        ExpressionStatement [14005,14020]
            MethodInvocation [14005,14019]
                METHOD_INVOCATION_RECEIVER [14005,14007]
                    SimpleName: sb [14005,14007]
                SimpleName: append [14008,14014]
                METHOD_INVOCATION_ARGUMENTS [14015,14018]
                    CharacterLiteral: ')' [14015,14018]
        VariableDeclarationStatement [14038,14058]
            PrimitiveType: int [14038,14041]
            VariableDeclarationFragment [14042,14057]
                SimpleName: n [14042,14043]
                MethodInvocation [14046,14057]
                    METHOD_INVOCATION_RECEIVER [14046,14048]
                        SimpleName: sb [14046,14048]
                    SimpleName: length [14049,14055]
        VariableDeclarationStatement [14067,14099]
            PrimitiveType: int [14067,14070]
            VariableDeclarationFragment [14071,14098]
                SimpleName: startIndex [14071,14081]
                MethodInvocation [14084,14098]
                    METHOD_INVOCATION_RECEIVER [14084,14087]
                        SimpleName: pos [14084,14087]
                    SimpleName: getIndex [14088,14096]
        VariableDeclarationStatement [14108,14138]
            PrimitiveType: int [14108,14111]
            VariableDeclarationFragment [14112,14137]
                SimpleName: endIndex [14112,14120]
                InfixExpression [14123,14137]
                    SimpleName: startIndex [14123,14133]
                    INFIX_EXPRESSION_OPERATOR: + [14134,14135]
                    SimpleName: n [14136,14137]
        IfStatement [14147,14373]
            InfixExpression [14151,14177]
                SimpleName: endIndex [14151,14159]
                INFIX_EXPRESSION_OPERATOR: < [14160,14161]
                MethodInvocation [14162,14177]
                    METHOD_INVOCATION_RECEIVER [14162,14168]
                        SimpleName: source [14162,14168]
                    SimpleName: length [14169,14175]
            Block [14179,14373]
                IfStatement [14193,14363]
                    InfixExpression [14197,14265]
                        MethodInvocation [14197,14260]
                            METHOD_INVOCATION_RECEIVER [14197,14235]
                                MethodInvocation [14197,14235]
                                    METHOD_INVOCATION_RECEIVER [14197,14203]
                                        SimpleName: source [14197,14203]
                                    SimpleName: substring [14204,14213]
                                    METHOD_INVOCATION_ARGUMENTS [14214,14234]
                                        SimpleName: startIndex [14214,14224]
                                        SimpleName: endIndex [14226,14234]
                            SimpleName: compareTo [14236,14245]
                            METHOD_INVOCATION_ARGUMENTS [14246,14259]
                                MethodInvocation [14246,14259]
                                    METHOD_INVOCATION_RECEIVER [14246,14248]
                                        SimpleName: sb [14246,14248]
                                    SimpleName: toString [14249,14257]
                        INFIX_EXPRESSION_OPERATOR: == [14261,14263]
                        NumberLiteral: 0 [14264,14265]
                    Block [14267,14363]
                        ExpressionStatement [14285,14309]
                            Assignment [14285,14308]
                                SimpleName: ret [14285,14288]
                                ASSIGNMENT_OPERATOR: = [14289,14290]
                                ClassInstanceCreation [14291,14308]
                                    SimpleType [14295,14301]
                                        SimpleName: Double [14295,14301]
                                    SimpleName: value [14302,14307]
                        ExpressionStatement [14326,14349]
                            MethodInvocation [14326,14348]
                                METHOD_INVOCATION_RECEIVER [14326,14329]
                                    SimpleName: pos [14326,14329]
                                SimpleName: setIndex [14330,14338]
                                METHOD_INVOCATION_ARGUMENTS [14339,14347]
                                    SimpleName: endIndex [14339,14347]
        ReturnStatement [14391,14402]
            SimpleName: ret [14398,14401]
to
TypeDeclaration [694,3782]
at 31
===
insert-tree
---
MethodDeclaration [14418,15586]
    Javadoc [14418,14866]
        TagElement [14429,14650]
            TextElement: Parses <code>source</code> for a number.  This method can parse normal, [14429,14500]
            TextElement: numeric values as well as special values.  These special values include [14508,14579]
            TextElement: Double.NaN, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY. [14587,14650]
        TagElement [14665,14698]
            SimpleName: source [14672,14678]
            TextElement:  the string to parse [14678,14698]
        TagElement [14706,14775]
            SimpleName: format [14713,14719]
            TextElement:  the number format used to parse normal, numeric values. [14719,14775]
        TagElement [14783,14824]
            SimpleName: pos [14790,14793]
            TextElement:  input/ouput parsing parameter. [14793,14824]
        TagElement [14832,14858]
            TextElement:  the parsed number. [14839,14858]
    Modifier: private [14871,14878]
    SimpleType [14879,14885]
        SimpleName: Number [14879,14885]
    SimpleName: parseNumber [14886,14897]
    SingleVariableDeclaration [14898,14911]
        SimpleType [14898,14904]
            SimpleName: String [14898,14904]
        SimpleName: source [14905,14911]
    SingleVariableDeclaration [14913,14932]
        SimpleType [14913,14925]
            SimpleName: NumberFormat [14913,14925]
        SimpleName: format [14926,14932]
    SingleVariableDeclaration [14934,14951]
        SimpleType [14934,14947]
            SimpleName: ParsePosition [14934,14947]
        SimpleName: pos [14948,14951]
    Block [14953,15586]
        VariableDeclarationStatement [14963,14995]
            PrimitiveType: int [14963,14966]
            VariableDeclarationFragment [14967,14994]
                SimpleName: startIndex [14967,14977]
                MethodInvocation [14980,14994]
                    METHOD_INVOCATION_RECEIVER [14980,14983]
                        SimpleName: pos [14980,14983]
                    SimpleName: getIndex [14984,14992]
        VariableDeclarationStatement [15004,15055]
            SimpleType [15004,15010]
                SimpleName: Number [15004,15010]
            VariableDeclarationFragment [15011,15054]
                SimpleName: number [15011,15017]
                MethodInvocation [15020,15054]
                    METHOD_INVOCATION_RECEIVER [15020,15035]
                        MethodInvocation [15020,15035]
                            SimpleName: getRealFormat [15020,15033]
                    SimpleName: parse [15036,15041]
                    METHOD_INVOCATION_ARGUMENTS [15042,15053]
                        SimpleName: source [15042,15048]
                        SimpleName: pos [15050,15053]
        VariableDeclarationStatement [15064,15094]
            PrimitiveType: int [15064,15067]
            VariableDeclarationFragment [15068,15093]
                SimpleName: endIndex [15068,15076]
                MethodInvocation [15079,15093]
                    METHOD_INVOCATION_RECEIVER [15079,15082]
                        SimpleName: pos [15079,15082]
                    SimpleName: getIndex [15083,15091]
        IfStatement [15154,15548]
            InfixExpression [15158,15180]
                SimpleName: startIndex [15158,15168]
                INFIX_EXPRESSION_OPERATOR: == [15169,15171]
                SimpleName: endIndex [15172,15180]
            Block [15182,15548]
                VariableDeclarationStatement [15239,15323]
                    ArrayType [15239,15247]
                        PrimitiveType: double [15239,15245]
                        Dimension [15245,15247]
                    VariableDeclarationFragment [15248,15322]
                        SimpleName: special [15248,15255]
                        ArrayInitializer [15258,15322]
                            QualifiedName: Double.NaN [15259,15269]
                            QualifiedName: Double.POSITIVE_INFINITY [15271,15295]
                            QualifiedName: Double.NEGATIVE_INFINITY [15297,15321]
                ForStatement [15336,15538]
                    VariableDeclarationExpression [15341,15350]
                        PrimitiveType: int [15341,15344]
                        VariableDeclarationFragment [15345,15350]
                            SimpleName: i [15345,15346]
                            NumberLiteral: 0 [15349,15350]
                    InfixExpression [15352,15370]
                        SimpleName: i [15352,15353]
                        INFIX_EXPRESSION_OPERATOR: < [15354,15355]
                        QualifiedName: special.length [15356,15370]
                    PrefixExpression [15372,15375]
                        PREFIX_EXPRESSION_OPERATOR: ++ [15372,15374]
                        SimpleName: i [15374,15375]
                    Block [15377,15538]
                        ExpressionStatement [15395,15441]
                            Assignment [15395,15440]
                                SimpleName: number [15395,15401]
                                ASSIGNMENT_OPERATOR: = [15402,15403]
                                MethodInvocation [15404,15440]
                                    SimpleName: parseNumber [15404,15415]
                                    METHOD_INVOCATION_ARGUMENTS [15416,15439]
                                        SimpleName: source [15416,15422]
                                        ArrayAccess [15424,15434]
                                            SimpleName: special [15424,15431]
                                            SimpleName: i [15432,15433]
                                        SimpleName: pos [15436,15439]
                        IfStatement [15458,15524]
                            InfixExpression [15462,15476]
                                SimpleName: number [15462,15468]
                                INFIX_EXPRESSION_OPERATOR: != [15469,15471]
                                NullLiteral [15472,15476]
                            Block [15478,15524]
                                BreakStatement [15500,15506]
        ReturnStatement [15566,15580]
            SimpleName: number [15573,15579]
to
TypeDeclaration [694,3782]
at 32
===
insert-tree
---
MethodDeclaration [15592,15969]
    Javadoc [15592,15862]
        TagElement [15603,15639]
            TextElement: Parses a string to produce a object. [15603,15639]
        TagElement [15654,15687]
            SimpleName: source [15661,15667]
            TextElement:  the string to parse [15667,15687]
        TagElement [15695,15736]
            SimpleName: pos [15702,15705]
            TextElement:  input/ouput parsing parameter. [15705,15736]
        TagElement [15744,15770]
            TextElement:  the parsed object. [15751,15770]
        TagElement [15778,15854]
            MethodRef [15783,15854]
                QualifiedName: java.text.Format [15783,15799]
                SimpleName: parseObject [15800,15811]
                MethodRefParameter [15812,15828]
                    SimpleType [15812,15828]
                        QualifiedName: java.lang.String [15812,15828]
                MethodRefParameter [15830,15853]
                    SimpleType [15830,15853]
                        QualifiedName: java.text.ParsePosition [15830,15853]
    Modifier: public [15867,15873]
    SimpleType [15874,15880]
        SimpleName: Object [15874,15880]
    SimpleName: parseObject [15881,15892]
    SingleVariableDeclaration [15893,15906]
        SimpleType [15893,15899]
            SimpleName: String [15893,15899]
        SimpleName: source [15900,15906]
    SingleVariableDeclaration [15908,15925]
        SimpleType [15908,15921]
            SimpleName: ParsePosition [15908,15921]
        SimpleName: pos [15922,15925]
    Block [15927,15969]
        ReturnStatement [15937,15963]
            MethodInvocation [15944,15962]
                SimpleName: parse [15944,15949]
                METHOD_INVOCATION_ARGUMENTS [15950,15961]
                    SimpleName: source [15950,15956]
                    SimpleName: pos [15958,15961]
to
TypeDeclaration [694,3782]
at 33
===
insert-tree
---
MethodDeclaration [15974,16551]
    Javadoc [15974,16221]
        TagElement [15985,16015]
            TextElement: Modify the imaginaryCharacter. [15985,16015]
        TagElement [16023,16082]
            SimpleName: imaginaryCharacter [16030,16048]
            TextElement:  The new imaginaryCharacter value. [16048,16082]
        TagElement [16090,16213]
            SimpleName: IllegalArgumentException [16098,16122]
            TextElement:  if <code>imaginaryCharacter</code> is [16122,16160]
            TextElement: <code>null</code> or an empty string. [16176,16213]
    Modifier: public [16226,16232]
    PrimitiveType: void [16233,16237]
    SimpleName: setImaginaryCharacter [16238,16259]
    SingleVariableDeclaration [16260,16285]
        SimpleType [16260,16266]
            SimpleName: String [16260,16266]
        SimpleName: imaginaryCharacter [16267,16285]
    Block [16287,16551]
        IfStatement [16297,16491]
            InfixExpression [16301,16363]
                InfixExpression [16301,16327]
                    SimpleName: imaginaryCharacter [16301,16319]
                    INFIX_EXPRESSION_OPERATOR: == [16320,16322]
                    NullLiteral [16323,16327]
                INFIX_EXPRESSION_OPERATOR: || [16328,16330]
                InfixExpression [16331,16363]
                    MethodInvocation [16331,16358]
                        METHOD_INVOCATION_RECEIVER [16331,16349]
                            SimpleName: imaginaryCharacter [16331,16349]
                        SimpleName: length [16350,16356]
                    INFIX_EXPRESSION_OPERATOR: == [16359,16361]
                    NumberLiteral: 0 [16362,16363]
            Block [16365,16491]
                ThrowStatement [16379,16481]
                    ClassInstanceCreation [16385,16480]
                        SimpleType [16389,16413]
                            SimpleName: IllegalArgumentException [16389,16413]
                        StringLiteral: "imaginaryCharacter must be a non-empty string." [16431,16479]
        ExpressionStatement [16500,16545]
            Assignment [16500,16544]
                FieldAccess [16500,16523]
                    ThisExpression [16500,16504]
                    SimpleName: imaginaryCharacter [16505,16523]
                ASSIGNMENT_OPERATOR: = [16524,16525]
                SimpleName: imaginaryCharacter [16526,16544]
to
TypeDeclaration [694,3782]
at 34
===
insert-tree
---
MethodDeclaration [16561,17048]
    Javadoc [16561,16777]
        TagElement [16572,16599]
            TextElement: Modify the imaginaryFormat. [16572,16599]
        TagElement [16607,16660]
            SimpleName: imaginaryFormat [16614,16629]
            TextElement:  The new imaginaryFormat value. [16629,16660]
        TagElement [16668,16769]
            SimpleName: IllegalArgumentException [16676,16700]
            TextElement:  if <code>imaginaryFormat</code> is [16700,16735]
            TextElement: <code>null</code>. [16751,16769]
    Modifier: public [16782,16788]
    PrimitiveType: void [16789,16793]
    SimpleName: setImaginaryFormat [16794,16812]
    SingleVariableDeclaration [16813,16841]
        SimpleType [16813,16825]
            SimpleName: NumberFormat [16813,16825]
        SimpleName: imaginaryFormat [16826,16841]
    Block [16843,17048]
        IfStatement [16853,16994]
            InfixExpression [16857,16880]
                SimpleName: imaginaryFormat [16857,16872]
                INFIX_EXPRESSION_OPERATOR: == [16873,16875]
                NullLiteral [16876,16880]
            Block [16882,16994]
                ThrowStatement [16896,16984]
                    ClassInstanceCreation [16902,16983]
                        SimpleType [16906,16930]
                            SimpleName: IllegalArgumentException [16906,16930]
                        StringLiteral: "imaginaryFormat can not be null." [16948,16982]
        ExpressionStatement [17003,17042]
            Assignment [17003,17041]
                FieldAccess [17003,17023]
                    ThisExpression [17003,17007]
                    SimpleName: imaginaryFormat [17008,17023]
                ASSIGNMENT_OPERATOR: = [17024,17025]
                SimpleName: imaginaryFormat [17026,17041]
to
TypeDeclaration [694,3782]
at 35
===
insert-tree
---
MethodDeclaration [17058,17495]
    Javadoc [17058,17254]
        TagElement [17069,17091]
            TextElement: Modify the realFormat. [17069,17091]
        TagElement [17099,17142]
            SimpleName: realFormat [17106,17116]
            TextElement:  The new realFormat value. [17116,17142]
        TagElement [17150,17246]
            SimpleName: IllegalArgumentException [17158,17182]
            TextElement:  if <code>realFormat</code> is [17182,17212]
            TextElement: <code>null</code>. [17228,17246]
    Modifier: public [17259,17265]
    PrimitiveType: void [17266,17270]
    SimpleName: setRealFormat [17271,17284]
    SingleVariableDeclaration [17285,17308]
        SimpleType [17285,17297]
            SimpleName: NumberFormat [17285,17297]
        SimpleName: realFormat [17298,17308]
    Block [17310,17495]
        IfStatement [17320,17451]
            InfixExpression [17324,17342]
                SimpleName: realFormat [17324,17334]
                INFIX_EXPRESSION_OPERATOR: == [17335,17337]
                NullLiteral [17338,17342]
            Block [17344,17451]
                ThrowStatement [17358,17441]
                    ClassInstanceCreation [17364,17440]
                        SimpleType [17368,17392]
                            SimpleName: IllegalArgumentException [17368,17392]
                        StringLiteral: "realFormat can not be null." [17410,17439]
        ExpressionStatement [17460,17489]
            Assignment [17460,17488]
                FieldAccess [17460,17475]
                    ThisExpression [17460,17464]
                    SimpleName: realFormat [17465,17475]
                ASSIGNMENT_OPERATOR: = [17476,17477]
                SimpleName: realFormat [17478,17488]
to
TypeDeclaration [694,3782]
at 36
===
insert-tree
---
Javadoc [1686,1838]
    TagElement [1697,1830]
        TextElement: Create an instance with the default imaginary character, 'i', and the [1697,1766]
        TextElement: default number format for both real and imaginary parts. [1774,1830]
to
MethodDeclaration [1346,1508]
at 0
===
update-node
---
TextElement: be replaced with 'j', and the number of decimal places to display  [776,842]
replace be replaced with 'j', and the number of decimal places to display  by be replaced with 'j', and the number format for both real and imaginary parts
===
update-node
---
TextElement:  $Revision: 1.6 $ $Date: 2004/05/23 00:52:32 $ [917,963]
replace  $Revision: 1.6 $ $Date: 2004/05/23 00:52:32 $ by  $Revision: 1.7 $ $Date: 2004/06/01 13:47:17 $
===
insert-tree
---
ConstructorInvocation [1876,1936]
    SimpleName: DEFAULT_IMAGINARY_CHARACTER [1881,1908]
    MethodInvocation [1910,1934]
        SimpleName: getDefaultNumberFormat [1910,1932]
to
Block [1506,1508]
at 0
===
insert-tree
---
ConstructorInvocation [2973,3024]
    SimpleName: imaginaryCharacter [2978,2996]
    MethodInvocation [2998,3022]
        SimpleName: getDefaultNumberFormat [2998,3020]
to
Block [1757,1818]
at 0
===
update-node
---
TextElement: Create an instance with a custom imaginary character, and the default number [1525,1601]
replace Create an instance with a custom imaginary character, and the default number by Create an instance with a custom imaginary character, and the default
===
update-node
---
TextElement: of decimal places - 2. [1609,1631]
replace of decimal places - 2. by number format for both real and imaginary parts.
===
delete-node
---
StringLiteral: "i" [1225,1228]
===
===
delete-tree
---
FieldDeclaration [1235,1340]
    Javadoc [1235,1303]
        TagElement [1239,1301]
            TextElement: The maximum number of decimal digits in the formatted output.  [1239,1301]
    Modifier: private [1309,1316]
    PrimitiveType: int [1317,1320]
    VariableDeclarationFragment [1321,1339]
        SimpleName: fractionDigits [1321,1335]
        NumberLiteral: 2 [1338,1339]
===
delete-tree
---
Javadoc [1346,1478]
    TagElement [1357,1470]
        TextElement: Create an instance with the default imaginary character 'i', and the default [1357,1433]
        TextElement: number of decimal places - 2. [1441,1470]
===
delete-tree
---
ExpressionStatement [1767,1812]
    Assignment [1767,1811]
        FieldAccess [1767,1790]
            ThisExpression [1767,1771]
            SimpleName: imaginaryCharacter [1772,1790]
        ASSIGNMENT_OPERATOR: = [1791,1792]
        SimpleName: imaginaryCharacter [1793,1811]
===
delete-tree
---
MethodDeclaration [1824,2253]
    Javadoc [1824,2073]
        TagElement [1835,1934]
            TextElement: Create an instance with a custom imaginary character, and a custom number of [1835,1911]
            TextElement: decimal places. [1919,1934]
        TagElement [1942,1999]
            SimpleName: imaginaryCharacter [1949,1967]
            TextElement:  The custom imaginary character. [1967,1999]
        TagElement [2007,2065]
            SimpleName: fractionDigits [2014,2028]
            TextElement:  The custom number of decimal places. [2028,2065]
    Modifier: public [2078,2084]
    SimpleName: ComplexFormat [2085,2098]
    SingleVariableDeclaration [2099,2124]
        SimpleType [2099,2105]
            SimpleName: String [2099,2105]
        SimpleName: imaginaryCharacter [2106,2124]
    SingleVariableDeclaration [2126,2144]
        PrimitiveType: int [2126,2129]
        SimpleName: fractionDigits [2130,2144]
    Block [2146,2253]
        ExpressionStatement [2156,2201]
            Assignment [2156,2200]
                FieldAccess [2156,2179]
                    ThisExpression [2156,2160]
                    SimpleName: imaginaryCharacter [2161,2179]
                ASSIGNMENT_OPERATOR: = [2180,2181]
                SimpleName: imaginaryCharacter [2182,2200]
        ExpressionStatement [2210,2247]
            Assignment [2210,2246]
                FieldAccess [2210,2229]
                    ThisExpression [2210,2214]
                    SimpleName: fractionDigits [2215,2229]
                ASSIGNMENT_OPERATOR: = [2230,2231]
                SimpleName: fractionDigits [2232,2246]
===
delete-tree
---
MethodDeclaration [2259,3460]
    Javadoc [2259,2496]
        TagElement [2270,2377]
            TextElement: Formats a Complex object and returns a String representing the "cartesian [2270,2343]
            TextElement: form" of a complex number. [2351,2377]
        TagElement [2392,2425]
            SimpleName: c [2399,2400]
            TextElement:  Complex object to format [2400,2425]
        TagElement [2433,2488]
            TextElement:  A formatted number in the form "Re(c) + Im(c)i" [2440,2488]
    Modifier: public [2501,2507]
    SimpleType [2508,2514]
        SimpleName: String [2508,2514]
    SimpleName: format [2515,2521]
    SingleVariableDeclaration [2522,2531]
        SimpleType [2522,2529]
            SimpleName: Complex [2522,2529]
        SimpleName: c [2530,2531]
    Block [2533,3460]
        VariableDeclarationStatement [2544,2593]
            SimpleType [2544,2556]
                SimpleName: NumberFormat [2544,2556]
            VariableDeclarationFragment [2557,2592]
                SimpleName: format [2557,2563]
                MethodInvocation [2566,2592]
                    METHOD_INVOCATION_RECEIVER [2566,2578]
                        SimpleName: NumberFormat [2566,2578]
                    SimpleName: getInstance [2579,2590]
        ExpressionStatement [2602,2652]
            MethodInvocation [2602,2651]
                METHOD_INVOCATION_RECEIVER [2602,2608]
                    SimpleName: format [2602,2608]
                SimpleName: setMaximumFractionDigits [2609,2633]
                METHOD_INVOCATION_ARGUMENTS [2635,2649]
                    SimpleName: fractionDigits [2635,2649]
        VariableDeclarationStatement [2662,2703]
            SimpleType [2662,2674]
                SimpleName: StringBuffer [2662,2674]
            VariableDeclarationFragment [2675,2702]
                SimpleName: buffer [2675,2681]
                ClassInstanceCreation [2684,2702]
                    SimpleType [2688,2700]
                        SimpleName: StringBuffer [2688,2700]
        IfStatement [2707,2888]
            InfixExpression [2711,2774]
                MethodInvocation [2711,2738]
                    METHOD_INVOCATION_RECEIVER [2711,2717]
                        SimpleName: Double [2711,2717]
                    SimpleName: isNaN [2718,2723]
                    METHOD_INVOCATION_ARGUMENTS [2725,2736]
                        MethodInvocation [2725,2736]
                            METHOD_INVOCATION_RECEIVER [2725,2726]
                                SimpleName: c [2725,2726]
                            SimpleName: getReal [2727,2734]
                INFIX_EXPRESSION_OPERATOR: || [2739,2741]
                MethodInvocation [2742,2774]
                    METHOD_INVOCATION_RECEIVER [2742,2748]
                        SimpleName: Double [2742,2748]
                    SimpleName: isInfinite [2749,2759]
                    METHOD_INVOCATION_ARGUMENTS [2761,2772]
                        MethodInvocation [2761,2772]
                            METHOD_INVOCATION_RECEIVER [2761,2762]
                                SimpleName: c [2761,2762]
                            SimpleName: getReal [2763,2770]
            Block [2777,2827]
                ExpressionStatement [2782,2823]
                    MethodInvocation [2782,2822]
                        METHOD_INVOCATION_RECEIVER [2782,2788]
                            SimpleName: buffer [2782,2788]
                        SimpleName: append [2789,2795]
                        METHOD_INVOCATION_ARGUMENTS [2797,2820]
                            InfixExpression [2797,2820]
                                StringLiteral: "(" [2797,2800]
                                INFIX_EXPRESSION_OPERATOR: + [2801,2802]
                                MethodInvocation [2803,2814]
                                    METHOD_INVOCATION_RECEIVER [2803,2804]
                                        SimpleName: c [2803,2804]
                                    SimpleName: getReal [2805,2812]
                                StringLiteral: ")" [2817,2820]
            Block [2833,2888]
                ExpressionStatement [2838,2884]
                    MethodInvocation [2838,2883]
                        METHOD_INVOCATION_RECEIVER [2838,2844]
                            SimpleName: buffer [2838,2844]
                        SimpleName: append [2845,2851]
                        METHOD_INVOCATION_ARGUMENTS [2853,2881]
                            MethodInvocation [2853,2881]
                                METHOD_INVOCATION_RECEIVER [2853,2859]
                                    SimpleName: format [2853,2859]
                                SimpleName: format [2860,2866]
                                METHOD_INVOCATION_ARGUMENTS [2868,2879]
                                    MethodInvocation [2868,2879]
                                        METHOD_INVOCATION_RECEIVER [2868,2869]
                                            SimpleName: c [2868,2869]
                                        SimpleName: getReal [2870,2877]
        IfStatement [2898,3087]
            InfixExpression [2902,2922]
                MethodInvocation [2902,2918]
                    METHOD_INVOCATION_RECEIVER [2902,2903]
                        SimpleName: c [2902,2903]
                    SimpleName: getImaginary [2904,2916]
                INFIX_EXPRESSION_OPERATOR: < [2919,2920]
                NumberLiteral: 0 [2921,2922]
            Block [2925,2972]
                ExpressionStatement [2939,2962]
                    MethodInvocation [2939,2961]
                        METHOD_INVOCATION_RECEIVER [2939,2945]
                            SimpleName: buffer [2939,2945]
                        SimpleName: append [2946,2952]
                        METHOD_INVOCATION_ARGUMENTS [2954,2959]
                            StringLiteral: " - " [2954,2959]
            IfStatement [2978,3087]
                InfixExpression [2982,3038]
                    InfixExpression [2982,3002]
                        MethodInvocation [2982,2998]
                            METHOD_INVOCATION_RECEIVER [2982,2983]
                                SimpleName: c [2982,2983]
                            SimpleName: getImaginary [2984,2996]
                        INFIX_EXPRESSION_OPERATOR: > [2999,3000]
                        NumberLiteral: 0 [3001,3002]
                    INFIX_EXPRESSION_OPERATOR: || [3003,3005]
                    MethodInvocation [3006,3038]
                        METHOD_INVOCATION_RECEIVER [3006,3012]
                            SimpleName: Double [3006,3012]
                        SimpleName: isNaN [3013,3018]
                        METHOD_INVOCATION_ARGUMENTS [3020,3036]
                            MethodInvocation [3020,3036]
                                METHOD_INVOCATION_RECEIVER [3020,3021]
                                    SimpleName: c [3020,3021]
                                SimpleName: getImaginary [3022,3034]
                Block [3040,3087]
                    ExpressionStatement [3054,3077]
                        MethodInvocation [3054,3076]
                            METHOD_INVOCATION_RECEIVER [3054,3060]
                                SimpleName: buffer [3054,3060]
                            SimpleName: append [3061,3067]
                            METHOD_INVOCATION_ARGUMENTS [3069,3074]
                                StringLiteral: " + " [3069,3074]
        IfStatement [3103,3407]
            InfixExpression [3107,3128]
                MethodInvocation [3107,3123]
                    METHOD_INVOCATION_RECEIVER [3107,3108]
                        SimpleName: c [3107,3108]
                    SimpleName: getImaginary [3109,3121]
                INFIX_EXPRESSION_OPERATOR: != [3124,3126]
                NumberLiteral: 0 [3127,3128]
            Block [3131,3407]
                IfStatement [3136,3363]
                    InfixExpression [3140,3213]
                        MethodInvocation [3140,3172]
                            METHOD_INVOCATION_RECEIVER [3140,3146]
                                SimpleName: Double [3140,3146]
                            SimpleName: isNaN [3147,3152]
                            METHOD_INVOCATION_ARGUMENTS [3154,3170]
                                MethodInvocation [3154,3170]
                                    METHOD_INVOCATION_RECEIVER [3154,3155]
                                        SimpleName: c [3154,3155]
                                    SimpleName: getImaginary [3156,3168]
                        INFIX_EXPRESSION_OPERATOR: || [3173,3175]
                        MethodInvocation [3176,3213]
                            METHOD_INVOCATION_RECEIVER [3176,3182]
                                SimpleName: Double [3176,3182]
                            SimpleName: isInfinite [3183,3193]
                            METHOD_INVOCATION_ARGUMENTS [3195,3211]
                                MethodInvocation [3195,3211]
                                    METHOD_INVOCATION_RECEIVER [3195,3196]
                                        SimpleName: c [3195,3196]
                                    SimpleName: getImaginary [3197,3209]
                    Block [3216,3285]
                        ExpressionStatement [3222,3280]
                            MethodInvocation [3222,3279]
                                METHOD_INVOCATION_RECEIVER [3222,3228]
                                    SimpleName: buffer [3222,3228]
                                SimpleName: append [3229,3235]
                                METHOD_INVOCATION_ARGUMENTS [3237,3277]
                                    InfixExpression [3237,3277]
                                        StringLiteral: "(" [3237,3240]
                                        INFIX_EXPRESSION_OPERATOR: + [3241,3242]
                                        MethodInvocation [3243,3271]
                                            METHOD_INVOCATION_RECEIVER [3243,3247]
                                                SimpleName: Math [3243,3247]
                                            SimpleName: abs [3248,3251]
                                            METHOD_INVOCATION_ARGUMENTS [3253,3269]
                                                MethodInvocation [3253,3269]
                                                    METHOD_INVOCATION_RECEIVER [3253,3254]
                                                        SimpleName: c [3253,3254]
                                                    SimpleName: getImaginary [3255,3267]
                                        StringLiteral: ")" [3274,3277]
                    Block [3291,3363]
                        ExpressionStatement [3297,3358]
                            MethodInvocation [3297,3357]
                                METHOD_INVOCATION_RECEIVER [3297,3303]
                                    SimpleName: buffer [3297,3303]
                                SimpleName: append [3304,3310]
                                METHOD_INVOCATION_ARGUMENTS [3312,3355]
                                    MethodInvocation [3312,3355]
                                        METHOD_INVOCATION_RECEIVER [3312,3318]
                                            SimpleName: format [3312,3318]
                                        SimpleName: format [3319,3325]
                                        METHOD_INVOCATION_ARGUMENTS [3327,3353]
                                            MethodInvocation [3327,3353]
                                                METHOD_INVOCATION_RECEIVER [3327,3331]
                                                    SimpleName: Math [3327,3331]
                                                SimpleName: abs [3332,3335]
                                                METHOD_INVOCATION_ARGUMENTS [3336,3352]
                                                    MethodInvocation [3336,3352]
                                                        METHOD_INVOCATION_RECEIVER [3336,3337]
                                                            SimpleName: c [3336,3337]
                                                        SimpleName: getImaginary [3338,3350]
                ExpressionStatement [3367,3403]
                    MethodInvocation [3367,3402]
                        METHOD_INVOCATION_RECEIVER [3367,3373]
                            SimpleName: buffer [3367,3373]
                        SimpleName: append [3374,3380]
                        METHOD_INVOCATION_ARGUMENTS [3382,3400]
                            SimpleName: imaginaryCharacter [3382,3400]
        ReturnStatement [3425,3453]
            ParenthesizedExpression [3431,3452]
                MethodInvocation [3433,3450]
                    METHOD_INVOCATION_RECEIVER [3433,3439]
                        SimpleName: buffer [3433,3439]
                    SimpleName: toString [3440,3448]
