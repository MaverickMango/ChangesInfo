===
update-node
---
SimpleName: numUseWithinUseCfgNode [9302,9324]
replace numUseWithinUseCfgNode by numUsesWithinCfgNode
===
insert-node
---
Modifier: final [16448,16453]
to
SingleVariableDeclaration [16487,16493]
at 0
===
update-node
---
SimpleName: n [16492,16493]
replace n by cfgNode
===
insert-tree
---
ExpressionStatement [16477,16502]
    Assignment [16477,16501]
        SimpleName: numUsesWithinCfgNode [16477,16497]
        ASSIGNMENT_OPERATOR: = [16498,16499]
        NumberLiteral: 0 [16500,16501]
to
Block [16495,17038]
at 0
===
update-node
---
SimpleName: numUseWithinUseCfgNode [11642,11664]
replace numUseWithinUseCfgNode by numUsesWithinCfgNode
===
move-tree
---
SimpleName: n [17986,17987]
to
VariableDeclarationFragment [17982,17999]
at 1
===
update-node
---
SimpleName: n [17019,17020]
replace n by cfgNode
===
insert-tree
---
MethodDeclaration [17408,17653]
    Modifier: private [17408,17415]
    PrimitiveType: boolean [17416,17423]
    SimpleName: isAssignChain [17424,17437]
    SingleVariableDeclaration [17438,17448]
        SimpleType [17438,17442]
            SimpleName: Node [17438,17442]
        SimpleName: child [17443,17448]
    SingleVariableDeclaration [17450,17463]
        SimpleType [17450,17454]
            SimpleName: Node [17450,17454]
        SimpleName: ancestor [17455,17463]
    Block [17465,17653]
        ForStatement [17477,17620]
            VariableDeclarationExpression [17482,17496]
                SimpleType [17482,17486]
                    SimpleName: Node [17482,17486]
                VariableDeclarationFragment [17487,17496]
                    SimpleName: n [17487,17488]
                    SimpleName: child [17491,17496]
            InfixExpression [17498,17511]
                SimpleName: n [17498,17499]
                INFIX_EXPRESSION_OPERATOR: != [17500,17502]
                SimpleName: ancestor [17503,17511]
            Assignment [17513,17530]
                SimpleName: n [17513,17514]
                ASSIGNMENT_OPERATOR: = [17515,17516]
                MethodInvocation [17517,17530]
                    METHOD_INVOCATION_RECEIVER [17517,17518]
                        SimpleName: n [17517,17518]
                    SimpleName: getParent [17519,17528]
            Block [17532,17620]
                IfStatement [17546,17608]
                    PrefixExpression [17550,17563]
                        PREFIX_EXPRESSION_OPERATOR: ! [17550,17551]
                        MethodInvocation [17551,17563]
                            METHOD_INVOCATION_RECEIVER [17551,17552]
                                SimpleName: n [17551,17552]
                            SimpleName: isAssign [17553,17561]
                    Block [17565,17608]
                        ReturnStatement [17581,17594]
                            BooleanLiteral: false [17588,17593]
        ReturnStatement [17631,17643]
            BooleanLiteral: true [17638,17642]
to
AnonymousClassDeclaration [16597,16977]
at 1
===
insert-node
---
IfStatement [17111,17376]
to
Block [16908,16959]
at 0
===
insert-tree
---
InfixExpression [17115,17215]
    MethodInvocation [17115,17132]
        METHOD_INVOCATION_RECEIVER [17115,17121]
            SimpleName: parent [17115,17121]
        SimpleName: isAssign [17122,17130]
    INFIX_EXPRESSION_OPERATOR: && [17133,17135]
    ParenthesizedExpression [17136,17165]
        InfixExpression [17137,17164]
            MethodInvocation [17137,17159]
                METHOD_INVOCATION_RECEIVER [17137,17143]
                    SimpleName: parent [17137,17143]
                SimpleName: getFirstChild [17144,17157]
            INFIX_EXPRESSION_OPERATOR: == [17160,17162]
            SimpleName: n [17163,17164]
    MethodInvocation [17185,17215]
        SimpleName: isAssignChain [17185,17198]
        METHOD_INVOCATION_ARGUMENTS [17199,17214]
            SimpleName: parent [17199,17205]
            SimpleName: cfgNode [17207,17214]
to
IfStatement [17111,17376]
at 0
===
insert-tree
---
Block [17217,17317]
    ReturnStatement [17296,17303]
to
IfStatement [17111,17376]
at 1
===
insert-node
---
Block [17323,17376]
to
IfStatement [17111,17376]
at 2
===
move-tree
---
ExpressionStatement [16922,16947]
    PostfixExpression [16922,16946]
        SimpleName: numUseWithinUseCfgNode [16922,16944]
        POSTFIX_EXPRESSION_OPERATOR: ++ [16944,16946]
to
Block [17323,17376]
at 0
===
update-node
---
SimpleName: numUseWithinUseCfgNode [16922,16944]
replace numUseWithinUseCfgNode by numUsesWithinCfgNode
===
delete-tree
---
PrefixExpression [16838,16906]
    PREFIX_EXPRESSION_OPERATOR: ! [16838,16839]
    ParenthesizedExpression [16839,16906]
        InfixExpression [16840,16905]
            MethodInvocation [16840,16857]
                METHOD_INVOCATION_RECEIVER [16840,16846]
                    SimpleName: parent [16840,16846]
                SimpleName: isAssign [16847,16855]
            INFIX_EXPRESSION_OPERATOR: && [16858,16860]
            ParenthesizedExpression [16876,16905]
                InfixExpression [16877,16904]
                    MethodInvocation [16877,16899]
                        METHOD_INVOCATION_RECEIVER [16877,16883]
                            SimpleName: parent [16877,16883]
                        SimpleName: getFirstChild [16884,16897]
                    INFIX_EXPRESSION_OPERATOR: == [16900,16902]
                    SimpleName: n [16903,16904]
===
delete-node
---
METHOD_INVOCATION_RECEIVER [17986,17987]
===
===
delete-node
---
SimpleName: getParent [17988,17997]
===
===
delete-node
---
MethodInvocation [17986,17999]
===
