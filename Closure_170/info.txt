{
  "bugName": "Closure_170_buggy",
  "bugId": "0",
  "repo": {
    "name": "../bugs/Closure_170_buggy/.git"
  },
  "inducingCommit": {
    "sha": "209cd96451c4c5bf1f4c5fee6453c481946aa596",
    "branchName": "HEAD",
    "fullMessage": "\nIf a name occurs also as a direct left child of an assignment expression, FlowSensitiveInlineVariables may still inline the variable. For example, x \u003d x + 1.\n\nR\u003dacleung\nDELTA\u003d17  (16 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223255\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@431 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
    "repoName": "../bugs/Closure_170_buggy/.git"
  },
  "originalCommit": {
    "sha": "a486b8345202c35efe3a2b63f16259e1933c359c",
    "branchName": "HEAD",
    "fullMessage": "\nCut variable coalescing runtime by about 40%.\nIf we know that variables x and y intersect, then we don\u0027t have\nto look at them again.\n\nR\u003djohnlenz\nDELTA\u003d140  (41 added, 61 deleted, 38 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d223254\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@430 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
    "repoName": "../bugs/Closure_170_buggy/.git"
  },
  "fixedCommit": {
    "sha": "49f54b28376a4ed5f72ec52d314020bd1f6cf3c6",
    "branchName": "HEAD",
    "fullMessage": "Fix issue 965\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45371896\n",
    "repoName": "../bugs/Closure_170_buggy/.git"
  },
  "buggyCommit": {
    "sha": "d5b7f2d9a109eefee69a6554eb4a899e60139101",
    "branchName": "HEAD",
    "fullMessage": "Re-arrange type resolution to handle IIFEs better\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID\u003d45366830\n",
    "repoName": "../bugs/Closure_170_buggy/.git"
  }
}