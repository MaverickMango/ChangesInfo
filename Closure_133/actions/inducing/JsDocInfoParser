===
move-tree
---
ContinueStatement [32499,32514]
    SimpleName: retry [32508,32513]
to
SwitchStatement [7172,37065]
at 16
===
move-tree
---
ContinueStatement [36000,36015]
    SimpleName: retry [36009,36014]
to
Block [36855,36924]
at 1
===
move-tree
---
ExpressionStatement [30481,30509]
    Assignment [30481,30508]
        SimpleName: token [30481,30486]
        ASSIGNMENT_OPERATOR: = [30487,30488]
        MethodInvocation [30489,30508]
            SimpleName: eatTokensUntilEOL [30489,30506]
to
Block [36930,37057]
at 1
===
move-tree
---
ContinueStatement [35038,35053]
    SimpleName: retry [35047,35052]
to
Block [36930,37057]
at 2
===
move-tree
---
ExpressionStatement [27619,27647]
    Assignment [27619,27646]
        SimpleName: token [27619,27624]
        ASSIGNMENT_OPERATOR: = [27625,27626]
        MethodInvocation [27627,27646]
            SimpleName: eatTokensUntilEOL [27627,27644]
to
SwitchStatement [7862,36031]
at 167
===
move-tree
---
ContinueStatement [27666,27681]
    SimpleName: retry [27675,27680]
to
SwitchStatement [7862,36031]
at 167
===
move-tree
---
ExpressionStatement [27974,28002]
    Assignment [27974,28001]
        SimpleName: token [27974,27979]
        ASSIGNMENT_OPERATOR: = [27980,27981]
        MethodInvocation [27982,28001]
            SimpleName: eatTokensUntilEOL [27982,27999]
to
SwitchStatement [7862,36031]
at 171
===
move-tree
---
ContinueStatement [28021,28036]
    SimpleName: retry [28030,28035]
to
SwitchStatement [7862,36031]
at 171
===
move-tree
---
ContinueStatement [28367,28382]
    SimpleName: retry [28376,28381]
to
SwitchStatement [7862,36031]
at 175
===
move-tree
---
ExpressionStatement [28320,28348]
    Assignment [28320,28347]
        SimpleName: token [28320,28325]
        ASSIGNMENT_OPERATOR: = [28326,28327]
        MethodInvocation [28328,28347]
            SimpleName: eatTokensUntilEOL [28328,28345]
to
SwitchStatement [7862,36031]
at 178
===
move-tree
---
ContinueStatement [28688,28703]
    SimpleName: retry [28697,28702]
to
SwitchStatement [7862,36031]
at 178
===
move-tree
---
ContinueStatement [29025,29040]
    SimpleName: retry [29034,29039]
to
SwitchStatement [7862,36031]
at 182
===
move-tree
---
ExpressionStatement [28641,28669]
    Assignment [28641,28668]
        SimpleName: token [28641,28646]
        ASSIGNMENT_OPERATOR: = [28647,28648]
        MethodInvocation [28649,28668]
            SimpleName: eatTokensUntilEOL [28649,28666]
to
SwitchStatement [7862,36031]
at 185
===
move-tree
---
ContinueStatement [29143,29158]
    SimpleName: retry [29152,29157]
to
SwitchStatement [7862,36031]
at 185
===
move-tree
---
ContinueStatement [29474,29489]
    SimpleName: retry [29483,29488]
to
SwitchStatement [7862,36031]
at 188
===
move-tree
---
ContinueStatement [30189,30204]
    SimpleName: retry [30198,30203]
to
SwitchStatement [7862,36031]
at 194
===
move-tree
---
ExpressionStatement [28978,29006]
    Assignment [28978,29005]
        SimpleName: token [28978,28983]
        ASSIGNMENT_OPERATOR: = [28984,28985]
        MethodInvocation [28986,29005]
            SimpleName: eatTokensUntilEOL [28986,29003]
to
SwitchStatement [7862,36031]
at 197
===
move-tree
---
ContinueStatement [30528,30543]
    SimpleName: retry [30537,30542]
to
SwitchStatement [7862,36031]
at 197
===
move-tree
---
ContinueStatement [30646,30661]
    SimpleName: retry [30655,30660]
to
SwitchStatement [7862,36031]
at 204
===
move-tree
---
SwitchCase [27350,27363]
    SimpleName: PRIVATE [27355,27362]
to
SwitchStatement [7862,36031]
at 206
===
move-tree
---
SwitchCase [27699,27714]
    SimpleName: PROTECTED [27704,27713]
to
SwitchStatement [7862,36031]
at 206
===
move-tree
---
SwitchCase [28054,28066]
    SimpleName: PUBLIC [28059,28065]
to
SwitchStatement [7862,36031]
at 206
===
move-tree
---
ExpressionStatement [29427,29455]
    Assignment [29427,29454]
        SimpleName: token [29427,29432]
        ASSIGNMENT_OPERATOR: = [29433,29434]
        MethodInvocation [29435,29454]
            SimpleName: eatTokensUntilEOL [29435,29452]
to
SwitchStatement [7862,36031]
at 212
===
move-tree
---
ContinueStatement [31479,31494]
    SimpleName: retry [31488,31493]
to
SwitchStatement [7862,36031]
at 212
===
insert-tree
---
VariableDeclarationStatement [31852,31899]
    PrimitiveType: boolean [31852,31859]
    VariableDeclarationFragment [31860,31898]
        SimpleName: hasType [31860,31867]
        MethodInvocation [31870,31898]
            SimpleName: lookAheadForTypeAnnotation [31870,31896]
to
SwitchStatement [7862,36031]
at 211
===
insert-tree
---
VariableDeclarationStatement [31918,32127]
    PrimitiveType: boolean [31918,31925]
    VariableDeclarationFragment [31926,32126]
        SimpleName: isVisibilityAnnotation [31926,31948]
        ParenthesizedExpression [31973,32126]
            InfixExpression [31974,32125]
                InfixExpression [31974,32067]
                    InfixExpression [31974,32006]
                        SimpleName: annotation [31974,31984]
                        INFIX_EXPRESSION_OPERATOR: == [31985,31987]
                        QualifiedName: Annotation.PRIVATE [31988,32006]
                    INFIX_EXPRESSION_OPERATOR: || [32007,32009]
                    InfixExpression [32033,32067]
                        SimpleName: annotation [32033,32043]
                        INFIX_EXPRESSION_OPERATOR: == [32044,32046]
                        QualifiedName: Annotation.PROTECTED [32047,32067]
                INFIX_EXPRESSION_OPERATOR: || [32068,32070]
                InfixExpression [32094,32125]
                    SimpleName: annotation [32094,32104]
                    INFIX_EXPRESSION_OPERATOR: == [32105,32107]
                    QualifiedName: Annotation.PUBLIC [32108,32125]
to
SwitchStatement [7862,36031]
at 212
===
insert-node
---
VariableDeclarationStatement [32146,32283]
to
SwitchStatement [7862,36031]
at 213
===
insert-tree
---
ExpressionStatement [32302,32314]
    Assignment [32302,32313]
        SimpleName: type [32302,32306]
        ASSIGNMENT_OPERATOR: = [32307,32308]
        NullLiteral [32309,32313]
to
SwitchStatement [7862,36031]
at 214
===
insert-node
---
IfStatement [32333,32729]
to
SwitchStatement [7862,36031]
at 215
===
insert-node
---
VariableDeclarationStatement [32858,32916]
to
SwitchStatement [7862,36031]
at 216
===
insert-node
---
IfStatement [32935,36944]
to
SwitchStatement [7862,36031]
at 217
===
insert-node
---
PrimitiveType: boolean [32146,32153]
to
VariableDeclarationStatement [32146,32283]
at 0
===
insert-node
---
VariableDeclarationFragment [32154,32282]
to
VariableDeclarationStatement [32146,32283]
at 1
===
insert-tree
---
InfixExpression [32337,32370]
    SimpleName: hasType [32337,32344]
    INFIX_EXPRESSION_OPERATOR: || [32345,32347]
    PrefixExpression [32348,32370]
        PREFIX_EXPRESSION_OPERATOR: ! [32348,32349]
        SimpleName: canSkipTypeAnnotation [32349,32370]
to
IfStatement [32333,32729]
at 0
===
move-tree
---
Block [33102,33253]
    ExpressionStatement [33124,33135]
        MethodInvocation [33124,33134]
            SimpleName: skipEOLs [33124,33132]
    ExpressionStatement [33156,33171]
        Assignment [33156,33170]
            SimpleName: token [33156,33161]
            ASSIGNMENT_OPERATOR: = [33162,33163]
            MethodInvocation [33164,33170]
                SimpleName: next [33164,33168]
    ExpressionStatement [33192,33233]
        Assignment [33192,33232]
            SimpleName: typeNode [33192,33200]
            ASSIGNMENT_OPERATOR: = [33201,33202]
            MethodInvocation [33203,33232]
                SimpleName: parseAndRecordTypeNode [33203,33225]
                METHOD_INVOCATION_ARGUMENTS [33226,33231]
                    SimpleName: token [33226,33231]
to
IfStatement [32333,32729]
at 1
===
insert-node
---
PrimitiveType: boolean [32858,32865]
to
VariableDeclarationStatement [32858,32916]
at 0
===
insert-node
---
VariableDeclarationFragment [32866,32915]
to
VariableDeclarationStatement [32858,32916]
at 1
===
insert-tree
---
PrefixExpression [32939,32948]
    PREFIX_EXPRESSION_OPERATOR: ! [32939,32940]
    SimpleName: hasError [32940,32948]
to
IfStatement [32935,36944]
at 0
===
move-tree
---
Block [33621,35933]
    SwitchStatement [33643,35913]
        SimpleName: annotation [33651,33661]
        SwitchCase [33687,33699]
            SimpleName: DEFINE [33692,33698]
        IfStatement [33724,33910]
            PrefixExpression [33728,33764]
                PREFIX_EXPRESSION_OPERATOR: ! [33728,33729]
                MethodInvocation [33729,33764]
                    METHOD_INVOCATION_RECEIVER [33729,33741]
                        SimpleName: jsdocBuilder [33729,33741]
                    SimpleName: recordDefineType [33742,33758]
                    METHOD_INVOCATION_ARGUMENTS [33759,33763]
                        SimpleName: type [33759,33763]
            Block [33766,33910]
                ExpressionStatement [33794,33884]
                    MethodInvocation [33794,33883]
                        METHOD_INVOCATION_RECEIVER [33794,33800]
                            SimpleName: parser [33794,33800]
                        SimpleName: addParserWarning [33801,33817]
                        METHOD_INVOCATION_ARGUMENTS [33818,33882]
                            StringLiteral: "msg.jsdoc.define" [33818,33836]
                            SimpleName: lineno [33868,33874]
                            SimpleName: charno [33876,33882]
        BreakStatement [33935,33941]
        SwitchCase [33965,33977]
            SimpleName: RETURN [33970,33976]
        IfStatement [34002,34227]
            PrefixExpression [34006,34042]
                PREFIX_EXPRESSION_OPERATOR: ! [34006,34007]
                MethodInvocation [34007,34042]
                    METHOD_INVOCATION_RECEIVER [34007,34019]
                        SimpleName: jsdocBuilder [34007,34019]
                    SimpleName: recordReturnType [34020,34036]
                    METHOD_INVOCATION_ARGUMENTS [34037,34041]
                        SimpleName: type [34037,34041]
            Block [34044,34227]
                ExpressionStatement [34072,34168]
                    MethodInvocation [34072,34167]
                        METHOD_INVOCATION_RECEIVER [34072,34078]
                            SimpleName: parser [34072,34078]
                        SimpleName: addTypeWarning [34079,34093]
                        METHOD_INVOCATION_ARGUMENTS [34125,34166]
                            StringLiteral: "msg.jsdoc.incompat.type" [34125,34150]
                            SimpleName: lineno [34152,34158]
                            SimpleName: charno [34160,34166]
                BreakStatement [34195,34201]
        IfStatement [34327,35013]
            MethodInvocation [34331,34370]
                METHOD_INVOCATION_RECEIVER [34331,34343]
                    SimpleName: jsdocBuilder [34331,34343]
                SimpleName: shouldParseDocumentation [34344,34368]
            Block [34372,34920]
                VariableDeclarationStatement [34400,34505]
                    SimpleType [34400,34414]
                        SimpleName: ExtractionInfo [34400,34414]
                    VariableDeclarationFragment [34415,34504]
                        SimpleName: returnDescriptionInfo [34415,34436]
                        MethodInvocation [34469,34504]
                            SimpleName: extractMultilineTextualBlock [34469,34497]
                            METHOD_INVOCATION_ARGUMENTS [34498,34503]
                                SimpleName: token [34498,34503]
                VariableDeclarationStatement [34533,34619]
                    SimpleType [34533,34539]
                        SimpleName: String [34533,34539]
                    VariableDeclarationFragment [34540,34618]
                        SimpleName: returnDescription [34540,34557]
                        QualifiedName: returnDescriptionInfo.string [34590,34618]
                IfStatement [34647,34830]
                    InfixExpression [34651,34681]
                        MethodInvocation [34651,34677]
                            METHOD_INVOCATION_RECEIVER [34651,34668]
                                SimpleName: returnDescription [34651,34668]
                            SimpleName: length [34669,34675]
                        INFIX_EXPRESSION_OPERATOR: > [34678,34679]
                        NumberLiteral: 0 [34680,34681]
                    Block [34683,34830]
                        ExpressionStatement [34713,34802]
                            MethodInvocation [34713,34801]
                                METHOD_INVOCATION_RECEIVER [34713,34725]
                                    SimpleName: jsdocBuilder [34713,34725]
                                SimpleName: recordReturnDescription [34726,34749]
                                METHOD_INVOCATION_ARGUMENTS [34783,34800]
                                    SimpleName: returnDescription [34783,34800]
                ExpressionStatement [34858,34894]
                    Assignment [34858,34893]
                        SimpleName: token [34858,34863]
                        ASSIGNMENT_OPERATOR: = [34864,34865]
                        QualifiedName: returnDescriptionInfo.token [34866,34893]
            Block [34926,35013]
                ExpressionStatement [34954,34987]
                    Assignment [34954,34986]
                        SimpleName: token [34954,34959]
                        ASSIGNMENT_OPERATOR: = [34960,34961]
                        MethodInvocation [34962,34986]
                            SimpleName: eatTokensUntilEOL [34962,34979]
                            METHOD_INVOCATION_ARGUMENTS [34980,34985]
                                SimpleName: token [34980,34985]
        ContinueStatement [35038,35053]
            SimpleName: retry [35047,35052]
        SwitchCase [35077,35087]
            SimpleName: THIS [35082,35086]
        IfStatement [35112,35302]
            PrefixExpression [35116,35150]
                PREFIX_EXPRESSION_OPERATOR: ! [35116,35117]
                MethodInvocation [35117,35150]
                    METHOD_INVOCATION_RECEIVER [35117,35129]
                        SimpleName: jsdocBuilder [35117,35129]
                    SimpleName: recordThisType [35130,35144]
                    METHOD_INVOCATION_ARGUMENTS [35145,35149]
                        SimpleName: type [35145,35149]
            Block [35152,35302]
                ExpressionStatement [35180,35276]
                    MethodInvocation [35180,35275]
                        METHOD_INVOCATION_RECEIVER [35180,35186]
                            SimpleName: parser [35180,35186]
                        SimpleName: addTypeWarning [35187,35201]
                        METHOD_INVOCATION_ARGUMENTS [35233,35274]
                            StringLiteral: "msg.jsdoc.incompat.type" [35233,35258]
                            SimpleName: lineno [35260,35266]
                            SimpleName: charno [35268,35274]
        BreakStatement [35327,35333]
        SwitchCase [35357,35367]
            SimpleName: TYPE [35362,35366]
        IfStatement [35392,35578]
            PrefixExpression [35396,35426]
                PREFIX_EXPRESSION_OPERATOR: ! [35396,35397]
                MethodInvocation [35397,35426]
                    METHOD_INVOCATION_RECEIVER [35397,35409]
                        SimpleName: jsdocBuilder [35397,35409]
                    SimpleName: recordType [35410,35420]
                    METHOD_INVOCATION_ARGUMENTS [35421,35425]
                        SimpleName: type [35421,35425]
            Block [35428,35578]
                ExpressionStatement [35456,35552]
                    MethodInvocation [35456,35551]
                        METHOD_INVOCATION_RECEIVER [35456,35462]
                            SimpleName: parser [35456,35462]
                        SimpleName: addTypeWarning [35463,35477]
                        METHOD_INVOCATION_ARGUMENTS [35509,35550]
                            StringLiteral: "msg.jsdoc.incompat.type" [35509,35534]
                            SimpleName: lineno [35536,35542]
                            SimpleName: charno [35544,35550]
        BreakStatement [35603,35609]
        SwitchCase [35633,35646]
            SimpleName: TYPEDEF [35638,35645]
        IfStatement [35671,35860]
            PrefixExpression [35675,35708]
                PREFIX_EXPRESSION_OPERATOR: ! [35675,35676]
                MethodInvocation [35676,35708]
                    METHOD_INVOCATION_RECEIVER [35676,35688]
                        SimpleName: jsdocBuilder [35676,35688]
                    SimpleName: recordTypedef [35689,35702]
                    METHOD_INVOCATION_ARGUMENTS [35703,35707]
                        SimpleName: type [35703,35707]
            Block [35710,35860]
                ExpressionStatement [35738,35834]
                    MethodInvocation [35738,35833]
                        METHOD_INVOCATION_RECEIVER [35738,35744]
                            SimpleName: parser [35738,35744]
                        SimpleName: addTypeWarning [35745,35759]
                        METHOD_INVOCATION_ARGUMENTS [35791,35832]
                            StringLiteral: "msg.jsdoc.incompat.type" [35791,35816]
                            SimpleName: lineno [35818,35824]
                            SimpleName: charno [35826,35832]
        BreakStatement [35885,35891]
to
IfStatement [32935,36944]
at 1
===
insert-node
---
SimpleName: canSkipTypeAnnotation [32154,32175]
to
VariableDeclarationFragment [32154,32282]
at 0
===
insert-node
---
ParenthesizedExpression [32200,32282]
to
VariableDeclarationFragment [32154,32282]
at 1
===
move-tree
---
IfStatement [33273,33392]
    InfixExpression [33277,33306]
        SimpleName: annotation [33277,33287]
        INFIX_EXPRESSION_OPERATOR: == [33288,33290]
        QualifiedName: Annotation.THIS [33291,33306]
    Block [33308,33392]
        ExpressionStatement [33330,33372]
            Assignment [33330,33371]
                SimpleName: typeNode [33330,33338]
                ASSIGNMENT_OPERATOR: = [33339,33340]
                MethodInvocation [33341,33371]
                    SimpleName: wrapNode [33341,33349]
                    METHOD_INVOCATION_ARGUMENTS [33350,33370]
                        QualifiedName: Token.BANG [33350,33360]
                        SimpleName: typeNode [33362,33370]
to
Block [33102,33253]
at 3
===
move-tree
---
ExpressionStatement [33411,33451]
    Assignment [33411,33450]
        SimpleName: type [33411,33415]
        ASSIGNMENT_OPERATOR: = [33416,33417]
        MethodInvocation [33418,33450]
            SimpleName: createJSTypeExpression [33418,33440]
            METHOD_INVOCATION_ARGUMENTS [33441,33449]
                SimpleName: typeNode [33441,33449]
to
Block [33102,33253]
at 4
===
insert-node
---
SimpleName: hasError [32866,32874]
to
VariableDeclarationFragment [32866,32915]
at 0
===
insert-node
---
InfixExpression [32877,32915]
to
VariableDeclarationFragment [32866,32915]
at 1
===
insert-node
---
IfStatement [33418,33747]
to
Block [33621,35933]
at 0
===
move-tree
---
SwitchCase [35357,35367]
    SimpleName: TYPE [35362,35366]
to
SwitchStatement [33643,35913]
at 4
===
move-tree
---
BreakStatement [35327,35333]
to
SwitchStatement [33643,35913]
at 5
===
move-tree
---
BreakStatement [35603,35609]
to
SwitchStatement [33643,35913]
at 6
===
move-tree
---
BreakStatement [35885,35891]
to
SwitchStatement [33643,35913]
at 12
===
insert-node
---
InfixExpression [32201,32281]
to
ParenthesizedExpression [32200,32282]
at 0
===
move-tree
---
InfixExpression [33475,33487]
    SimpleName: type [33475,33479]
    INFIX_EXPRESSION_OPERATOR: == [33480,33482]
    NullLiteral [33483,33487]
to
InfixExpression [32877,32915]
at 0
===
insert-node
---
INFIX_EXPRESSION_OPERATOR: && [32890,32892]
to
InfixExpression [32877,32915]
at 1
===
insert-tree
---
PrefixExpression [32893,32915]
    PREFIX_EXPRESSION_OPERATOR: ! [32893,32894]
    SimpleName: canSkipTypeAnnotation [32894,32915]
to
InfixExpression [32877,32915]
at 2
===
insert-tree
---
InfixExpression [33422,33519]
    ParenthesizedExpression [33422,33462]
        InfixExpression [33423,33461]
            InfixExpression [33423,33435]
                SimpleName: type [33423,33427]
                INFIX_EXPRESSION_OPERATOR: != [33428,33430]
                NullLiteral [33431,33435]
            INFIX_EXPRESSION_OPERATOR: && [33436,33438]
            SimpleName: isVisibilityAnnotation [33439,33461]
    INFIX_EXPRESSION_OPERATOR: || [33487,33489]
    InfixExpression [33490,33519]
        SimpleName: annotation [33490,33500]
        INFIX_EXPRESSION_OPERATOR: == [33501,33503]
        QualifiedName: Annotation.TYPE [33504,33519]
to
IfStatement [33418,33747]
at 0
===
insert-node
---
Block [33521,33747]
to
IfStatement [33418,33747]
at 1
===
move-tree
---
IfStatement [27382,27600]
    PrefixExpression [27386,27436]
        PREFIX_EXPRESSION_OPERATOR: ! [27386,27387]
        MethodInvocation [27387,27436]
            METHOD_INVOCATION_RECEIVER [27387,27399]
                SimpleName: jsdocBuilder [27387,27399]
            SimpleName: recordVisibility [27400,27416]
            METHOD_INVOCATION_ARGUMENTS [27417,27435]
                QualifiedName: Visibility.PRIVATE [27417,27435]
    Block [27438,27600]
        ExpressionStatement [27460,27580]
            MethodInvocation [27460,27579]
                METHOD_INVOCATION_RECEIVER [27460,27466]
                    SimpleName: parser [27460,27466]
                SimpleName: addParserWarning [27467,27483]
                METHOD_INVOCATION_ARGUMENTS [27484,27578]
                    StringLiteral: "msg.jsdoc.visibility.private" [27484,27514]
                    MethodInvocation [27540,27558]
                        METHOD_INVOCATION_RECEIVER [27540,27546]
                            SimpleName: stream [27540,27546]
                        SimpleName: getLineno [27547,27556]
                    MethodInvocation [27560,27578]
                        METHOD_INVOCATION_RECEIVER [27560,27566]
                            SimpleName: stream [27560,27566]
                        SimpleName: getCharno [27567,27576]
to
SwitchStatement [33643,35913]
at 5
===
insert-node
---
BreakStatement [34397,34403]
to
SwitchStatement [33643,35913]
at 6
===
insert-tree
---
SwitchCase [34427,34442]
    SimpleName: PROTECTED [34432,34441]
to
SwitchStatement [33643,35913]
at 7
===
move-tree
---
IfStatement [27733,27955]
    PrefixExpression [27737,27789]
        PREFIX_EXPRESSION_OPERATOR: ! [27737,27738]
        MethodInvocation [27738,27789]
            METHOD_INVOCATION_RECEIVER [27738,27750]
                SimpleName: jsdocBuilder [27738,27750]
            SimpleName: recordVisibility [27751,27767]
            METHOD_INVOCATION_ARGUMENTS [27768,27788]
                QualifiedName: Visibility.PROTECTED [27768,27788]
    Block [27791,27955]
        ExpressionStatement [27813,27935]
            MethodInvocation [27813,27934]
                METHOD_INVOCATION_RECEIVER [27813,27819]
                    SimpleName: parser [27813,27819]
                SimpleName: addParserWarning [27820,27836]
                METHOD_INVOCATION_ARGUMENTS [27837,27933]
                    StringLiteral: "msg.jsdoc.visibility.protected" [27837,27869]
                    MethodInvocation [27895,27913]
                        METHOD_INVOCATION_RECEIVER [27895,27901]
                            SimpleName: stream [27895,27901]
                        SimpleName: getLineno [27902,27911]
                    MethodInvocation [27915,27933]
                        METHOD_INVOCATION_RECEIVER [27915,27921]
                            SimpleName: stream [27915,27921]
                        SimpleName: getCharno [27922,27931]
to
SwitchStatement [33643,35913]
at 8
===
insert-tree
---
SwitchCase [34769,34781]
    SimpleName: PUBLIC [34774,34780]
to
SwitchStatement [33643,35913]
at 10
===
move-tree
---
IfStatement [28085,28301]
    PrefixExpression [28089,28138]
        PREFIX_EXPRESSION_OPERATOR: ! [28089,28090]
        MethodInvocation [28090,28138]
            METHOD_INVOCATION_RECEIVER [28090,28102]
                SimpleName: jsdocBuilder [28090,28102]
            SimpleName: recordVisibility [28103,28119]
            METHOD_INVOCATION_ARGUMENTS [28120,28137]
                QualifiedName: Visibility.PUBLIC [28120,28137]
    Block [28140,28301]
        ExpressionStatement [28162,28281]
            MethodInvocation [28162,28280]
                METHOD_INVOCATION_RECEIVER [28162,28168]
                    SimpleName: parser [28162,28168]
                SimpleName: addParserWarning [28169,28185]
                METHOD_INVOCATION_ARGUMENTS [28186,28279]
                    StringLiteral: "msg.jsdoc.visibility.public" [28186,28215]
                    MethodInvocation [28241,28259]
                        METHOD_INVOCATION_RECEIVER [28241,28247]
                            SimpleName: stream [28241,28247]
                        SimpleName: getLineno [28248,28257]
                    MethodInvocation [28261,28279]
                        METHOD_INVOCATION_RECEIVER [28261,28267]
                            SimpleName: stream [28261,28267]
                        SimpleName: getCharno [28268,28277]
to
SwitchStatement [33643,35913]
at 11
===
insert-tree
---
IfStatement [35139,35263]
    InfixExpression [35143,35155]
        SimpleName: type [35143,35147]
        INFIX_EXPRESSION_OPERATOR: == [35148,35150]
        NullLiteral [35151,35155]
    Block [35157,35263]
        ExpressionStatement [35185,35237]
            Assignment [35185,35236]
                SimpleName: type [35185,35189]
                ASSIGNMENT_OPERATOR: = [35190,35191]
                MethodInvocation [35192,35236]
                    SimpleName: createJSTypeExpression [35192,35214]
                    METHOD_INVOCATION_ARGUMENTS [35215,35235]
                        MethodInvocation [35215,35235]
                            SimpleName: newNode [35215,35222]
                            METHOD_INVOCATION_ARGUMENTS [35223,35234]
                                QualifiedName: Token.QMARK [35223,35234]
to
SwitchStatement [33643,35913]
at 14
===
move-tree
---
ContinueStatement [31800,31815]
    SimpleName: retry [31809,31814]
to
SwitchStatement [33643,35913]
at 17
===
insert-node
---
BreakStatement [36896,36902]
to
SwitchStatement [33643,35913]
at 24
===
insert-node
---
SimpleName: isVisibilityAnnotation [32201,32223]
to
InfixExpression [32201,32281]
at 0
===
insert-node
---
INFIX_EXPRESSION_OPERATOR: || [32224,32226]
to
InfixExpression [32201,32281]
at 1
===
move-tree
---
InfixExpression [32870,32901]
    SimpleName: annotation [32870,32880]
    INFIX_EXPRESSION_OPERATOR: == [32881,32883]
    QualifiedName: Annotation.RETURN [32884,32901]
to
InfixExpression [32201,32281]
at 2
===
move-tree
---
IfStatement [35392,35578]
    PrefixExpression [35396,35426]
        PREFIX_EXPRESSION_OPERATOR: ! [35396,35397]
        MethodInvocation [35397,35426]
            METHOD_INVOCATION_RECEIVER [35397,35409]
                SimpleName: jsdocBuilder [35397,35409]
            SimpleName: recordType [35410,35420]
            METHOD_INVOCATION_ARGUMENTS [35421,35425]
                SimpleName: type [35421,35425]
    Block [35428,35578]
        ExpressionStatement [35456,35552]
            MethodInvocation [35456,35551]
                METHOD_INVOCATION_RECEIVER [35456,35462]
                    SimpleName: parser [35456,35462]
                SimpleName: addTypeWarning [35463,35477]
                METHOD_INVOCATION_ARGUMENTS [35509,35550]
                    StringLiteral: "msg.jsdoc.incompat.type" [35509,35534]
                    SimpleName: lineno [35536,35542]
                    SimpleName: charno [35544,35550]
to
Block [33521,33747]
at 0
===
update-node
---
SimpleName: TYPE [35362,35366]
replace TYPE by PRIVATE
===
insert-node
---
SimpleName: lineno [34330,34336]
to
METHOD_INVOCATION_ARGUMENTS [27484,27578]
at 1
===
insert-node
---
SimpleName: charno [34338,34344]
to
METHOD_INVOCATION_ARGUMENTS [27484,27578]
at 2
===
insert-node
---
SimpleName: lineno [34672,34678]
to
METHOD_INVOCATION_ARGUMENTS [27837,27933]
at 1
===
insert-node
---
SimpleName: charno [34680,34686]
to
METHOD_INVOCATION_ARGUMENTS [27837,27933]
at 2
===
insert-node
---
SimpleName: lineno [35005,35011]
to
METHOD_INVOCATION_ARGUMENTS [28186,28279]
at 1
===
insert-node
---
SimpleName: charno [35013,35019]
to
METHOD_INVOCATION_ARGUMENTS [28186,28279]
at 2
===
delete-tree
---
ExpressionStatement [31753,31781]
    Assignment [31753,31780]
        SimpleName: token [31753,31758]
        ASSIGNMENT_OPERATOR: = [31759,31760]
        MethodInvocation [31761,31780]
            SimpleName: eatTokensUntilEOL [31761,31778]
===
delete-tree
---
MethodInvocation [27540,27558]
    METHOD_INVOCATION_RECEIVER [27540,27546]
        SimpleName: stream [27540,27546]
    SimpleName: getLineno [27547,27556]
===
delete-tree
---
MethodInvocation [27560,27578]
    METHOD_INVOCATION_RECEIVER [27560,27566]
        SimpleName: stream [27560,27566]
    SimpleName: getCharno [27567,27576]
===
delete-tree
---
MethodInvocation [27895,27913]
    METHOD_INVOCATION_RECEIVER [27895,27901]
        SimpleName: stream [27895,27901]
    SimpleName: getLineno [27902,27911]
===
delete-tree
---
MethodInvocation [27915,27933]
    METHOD_INVOCATION_RECEIVER [27915,27921]
        SimpleName: stream [27915,27921]
    SimpleName: getCharno [27922,27931]
===
delete-tree
---
MethodInvocation [28241,28259]
    METHOD_INVOCATION_RECEIVER [28241,28247]
        SimpleName: stream [28241,28247]
    SimpleName: getLineno [28248,28257]
===
delete-tree
---
MethodInvocation [28261,28279]
    METHOD_INVOCATION_RECEIVER [28261,28267]
        SimpleName: stream [28261,28267]
    SimpleName: getCharno [28268,28277]
===
delete-tree
---
PrefixExpression [32815,32844]
    PREFIX_EXPRESSION_OPERATOR: ! [32815,32816]
    MethodInvocation [32816,32844]
        SimpleName: lookAheadForTypeAnnotation [32816,32842]
===
delete-node
---
INFIX_EXPRESSION_OPERATOR: && [32845,32847]
===
===
delete-node
---
InfixExpression [32815,32901]
===
===
delete-tree
---
Block [32903,33096]
    ExpressionStatement [33044,33076]
        Assignment [33044,33075]
            SimpleName: typeNode [33044,33052]
            ASSIGNMENT_OPERATOR: = [33053,33054]
            MethodInvocation [33055,33075]
                SimpleName: newNode [33055,33062]
                METHOD_INVOCATION_ARGUMENTS [33063,33074]
                    QualifiedName: Token.QMARK [33063,33074]
===
delete-node
---
IfStatement [32811,33253]
===
===
delete-node
---
Block [33489,33615]
===
===
delete-node
---
IfStatement [33471,35933]
===
===
delete-tree
---
ExpressionStatement [35953,35981]
    Assignment [35953,35980]
        SimpleName: token [35953,35958]
        ASSIGNMENT_OPERATOR: = [35959,35960]
        MethodInvocation [35961,35980]
            SimpleName: eatTokensUntilEOL [35961,35978]
===
delete-tree
---
ContinueStatement [36742,36757]
    SimpleName: retry [36751,36756]
===
delete-tree
---
ContinueStatement [36897,36912]
    SimpleName: retry [36906,36911]
===
delete-tree
---
ExpressionStatement [36989,37017]
    Assignment [36989,37016]
        SimpleName: token [36989,36994]
        ASSIGNMENT_OPERATOR: = [36995,36996]
        MethodInvocation [36997,37016]
            SimpleName: eatTokensUntilEOL [36997,37014]
===
delete-tree
---
ContinueStatement [37030,37045]
    SimpleName: retry [37039,37044]
