diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java
index b6993d9..91008e4 100644
--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java
+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java
@@ -110,6 +110,17 @@
             pType == Token.NUMBER)) {
         return false;
       }
+
+      // Don't traverse functions that are getting lent to a prototype.
+      Node gramps = parent.getParent();
+      if (NodeUtil.isObjectLitKey(parent, gramps)) {
+        JSDocInfo maybeLends = gramps.getJSDocInfo();
+        if (maybeLends != null &&
+            maybeLends.getLendsName() != null &&
+            maybeLends.getLendsName().endsWith(".prototype")) {
+          return false;
+        }
+      }
     }
 
     if (parent != null && parent.getType() == Token.ASSIGN) {
diff --git a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
index e0e9820..8c8394c 100644
--- a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
@@ -220,4 +220,21 @@
     testSame("function Foo() {} " +
         "Foo.prototype = {write: function() { this.foo = 3; }};");
   }
+
+  public void testLendsAnnotation1() {
+    testFailure("/** @constructor */ function F() {}" +
+        "dojo.declare(F, {foo: function() { return this.foo; }});");
+  }
+
+  public void testLendsAnnotation2() {
+    testFailure("/** @constructor */ function F() {}" +
+        "dojo.declare(F, /** @lends {F.bar} */ (" +
+        "    {foo: function() { return this.foo; }}));");
+  }
+
+  public void testLendsAnnotation3() {
+    testSame("/** @constructor */ function F() {}" +
+        "dojo.declare(F, /** @lends {F.prototype} */ (" +
+        "    {foo: function() { return this.foo; }}));");
+  }
 }
