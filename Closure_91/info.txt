{
  "bugName": "Closure_91_buggy",
  "bugId": "37",
  "repo": {
    "name": "tmp/Closure_91_buggy/.git"
  },
  "buggyCommit": {
    "sha": "82a9956c6337d2f5d4a94ebe624d64faa54d9182",
    "branchName": "HEAD",
    "fullMessage": "\nChange on 2010/07/09 08:36:29 by nicksantos\n\n        when injecting param checks, do not inject them before any function\n        declarations, because that will break normalization constraints.\n\n        R\u003djohnlenz\n        DELTA\u003d22  (18 added, 0 deleted, 4 changed)\n\nChange on 2010/07/09 09:36:54 by johnlenz\n\n        Prefer FileWriter to PrintStream when charset translation isn\u0027t needed.\n\n        R\u003dacleung\n        DELTA\u003d68  (13 added, 2 deleted, 53 changed)\n\nChange on 2010/07/09 10:54:42 by nicksantos\n\n        our mechanism for injecting boilerplate does not work\n        for code that uses @const externs. So just don\u0027t use\n        any @const externs.\n\n        R\u003djohnlenz\n        DELTA\u003d3  (1 added, 0 deleted, 2 changed)\n\nChange on 2010/07/09 11:30:29 by nicksantos\n\n        Scan functional properties of object literals for invalid use\n        of \"this\".\n        Fixes issue 182.\n\n        R\u003dacleung\n        DELTA\u003d21  (19 added, 0 deleted, 2 changed)\n\nChange on 2010/07/09 12:40:16 by dcc\n\n        Separate pass instance for peephole preprocessing.\n        Now that I\u0027m writing instructions for how people can add their own\n        peephole passes, I want to make sure that the preprocessing\n        peephole optimizations that relies on don\u0027t get disturbed.\n\n        R\u003djohnlenz\n        DELTA\u003d18  (15 added, 0 deleted, 3 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d49008\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@270 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
    "repoName": "tmp/Closure_91_buggy/.git"
  },
  "commitBeforeBuggy": {
    "sha": "91d0d35fba40aac9316db9e2f8aa94cd3a3b6c2e",
    "branchName": "HEAD",
    "fullMessage": "\nChange on 2010/07/09 07:45:34 by nicksantos\n\n\tPreserve const annotations on variables run through run-time\n\ttype checking.\n\n\tR\u003dmoedinger\n\tDELTA\u003d15  (10 added, 4 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d50004\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@269 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
    "repoName": "tmp/Closure_91_buggy/.git"
  },
  "fixedCommit": {
    "sha": "7eb2d84de101a125d41d3a1157f4eed789ca4a0d",
    "branchName": "HEAD",
    "fullMessage": "\ndon\u0027t emit unsafe global this warnings\nwhen the @lends annotation is used correctly.\nfixes issue 248\n\nR\u003dacleung\nDELTA\u003d28  (28 added, 0 deleted, 0 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d636002\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@506 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
    "repoName": "tmp/Closure_91_buggy/.git"
  },
  "commitBeforeFixing": {
    "sha": "8eee751ff9f460c4a769d598c65b1cd643dabc7b",
    "branchName": "HEAD",
    "fullMessage": "\nuse the greatest subtype operator to determine missing properties.\nthis catches some weird edge cases that become much more common\nwhen we start collapsing the type set.\n\nR\u003djohnlenz\nDELTA\u003d22  (21 added, 0 deleted, 1 changed)\n\n\nRevision created by MOE tool push_codebase.\nMOE_MIGRATION\u003d634022\n\n\ngit-svn-id: https://closure-compiler.googlecode.com/svn/trunk@505 b0f006be-c8cd-11de-a2e8-8d36a3108c74\n",
    "repoName": "tmp/Closure_91_buggy/.git"
  }
}