cd /home/liumengjiao/Desktop/CI/Benchmark/../bugs/Compress_3_fix && timeout 300000 gen_tests.pl -g evosuite -p Compress -v 3f -n 3 -o /home/liumengjiao/Desktop/CI/Evosuite/Compress_3/ -b 300 >> evosuite-report-clz/test_gen_fix.log 2>&1

--------------------------------------------------------------------------------
                     Defects4j Execution Environment 
--------------------------------------------------------------------------------
PWD.........................../home/liumengjiao/Desktop/CI/bugs/Compress_3_fix
SHELL........................./bin/bash
TZ............................America/Los_Angeles
JAVA_HOME...................../usr/local/lib/jdk1.8.0_351
Java Exec...................../usr/local/lib/jdk1.8.0_351/bin/java
Java Exec Resolved............/usr/local/lib/jdk1.8.0_351/bin/java
Java Version:
  java version "1.8.0_351"
  Java(TM) SE Runtime Environment (build 1.8.0_351-b10)
  Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)
Git version...................git version 2.34.1
SVN version...................1.14.1
Perl version..................v5.34.0
--------------------------------------------------------------------------------
Checking out d170f34f to /tmp/gen_tests.pl_529192_1695210369............... OK
Executed command: git clone /home/liumengjiao/Desktop/defects4j/project_repos/commons-compress.git /tmp/gen_tests.pl_529192_1695210369 2>&1 && cd /tmp/gen_tests.pl_529192_1695210369 && git checkout d170f34fa65e19b604f5a9e04e6ed5f81d35658c 2>&1
Cloning into '/tmp/gen_tests.pl_529192_1695210369'...
done.
Note: switching to 'd170f34fa65e19b604f5a9e04e6ed5f81d35658c'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at d170f34f COMPRESS-64: finish() does not close archive entries by default any longer
Init local repository...................................................... OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369 && git init 2>&1 && git config user.name defects4j 2>&1 && git config user.email defects4j@localhost 2>&1 && git config core.autocrlf false 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_529192_1695210369/.git/
Tag post-fix revision...................................................... OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369 && git init 2>&1 && echo ".svn" > .gitignore && git add -A 2>&1 && git commit -a -m D4J_Compress_3_POST_FIX_REVISION 2>&1 && git tag D4J_Compress_3_POST_FIX_REVISION 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_529192_1695210369/.git/
[detached HEAD 012f5393] D4J_Compress_3_POST_FIX_REVISION
 2 files changed, 4 insertions(+)
 create mode 100644 .defects4j.config
 create mode 100644 .gitignore
Copy generated Ant build file.............................................. OK
Executed command: cp -r /home/liumengjiao/Desktop/defects4j/framework/projects/Compress/build_files/d170f34fa65e19b604f5a9e04e6ed5f81d35658c/* /tmp/gen_tests.pl_529192_1695210369
Run post-checkout hook..................................................... OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369 && git add -A 2>&1 && git commit -a -m "D4J_Compress_3_POST_FIX_COMPILABLE" 2>&1 && git tag D4J_Compress_3_POST_FIX_COMPILABLE 2>&1
[detached HEAD 6d835ccb] D4J_Compress_3_POST_FIX_COMPILABLE
 3 files changed, 320 insertions(+)
 create mode 100644 build.xml
 create mode 100644 maven-build.properties
 create mode 100644 maven-build.xml
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Compress/failing_tests/d170f34fa65e19b604f5a9e04e6ed5f81d35658c /tmp/gen_tests.pl_529192_1695210369/src/test/java
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Compress/dependent_tests /tmp/gen_tests.pl_529192_1695210369/src/test/java
Initialize fixed program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369 && git add -A 2>&1 && git commit -a -m "D4J_Compress_3_FIXED_VERSION" 2>&1 && git tag D4J_Compress_3_FIXED_VERSION 2>&1
[detached HEAD 32b957e5] D4J_Compress_3_FIXED_VERSION
 2 files changed, 347 insertions(+)
 create mode 100644 defects4j.build.properties
 create mode 100644 src/test/java/org/apache/commons/compress/AbstractTestCase.java.bak
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369; git apply -p1 /home/liumengjiao/Desktop/defects4j/framework/projects/Compress/patches/3.src.patch 2>&1
Initialize buggy program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369 && git add -A 2>&1 && git commit -a -m "D4J_Compress_3_BUGGY_VERSION" 2>&1 && git tag D4J_Compress_3_BUGGY_VERSION 2>&1
[detached HEAD a6b27111] D4J_Compress_3_BUGGY_VERSION
 2 files changed, 1 insertion(+), 7 deletions(-)
Diff d170f34f:ddbd61f0..................................................... OK
Executed command: git --git-dir=/home/liumengjiao/Desktop/defects4j/project_repos/commons-compress.git diff --no-ext-diff --binary d170f34fa65e19b604f5a9e04e6ed5f81d35658c ddbd61f0e75b7d98873b9a9bf6398218edcfd17b 
diff --git a/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java
index 1d6e78ea..2cad89d7 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java
@@ -74,9 +74,6 @@ public abstract class ArchiveOutputStream extends OutputStream {
     /**
      * Finishes the addition of entries to this stream, without closing it.
      * Additional data can be written, if the format supports it.
-     * 
-     * The finish() method throws an Exception if the user forgets to close the entry
-     * .
      * @throws IOException
      */
     public abstract void finish() throws IOException;
diff --git a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
index de1a87c5..8a48da57 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
@@ -153,6 +153,7 @@ public class ArArchiveOutputStream extends ArchiveOutputStream {
     }
 
     public void close() throws IOException {
+        closeArchiveEntry();
         out.close();
         prevEntry = null;
     }
@@ -166,8 +167,6 @@ public class ArArchiveOutputStream extends ArchiveOutputStream {
      * @see org.apache.commons.compress.archivers.ArchiveOutputStream#finish()
      */
     public void finish() throws IOException {
-        if(haveUnclosedEntry) {
-            throw new IOException("This archives contains unclosed entries.");
-        }
+        // Nothing to do
     }
 }
diff --git a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
index 3641ab69..b9b1eadd 100644
--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
@@ -315,7 +315,7 @@ public class CpioArchiveOutputStream extends ArchiveOutputStream implements
             return;
         }
         if (this.entry != null) {
-            throw new IOException("This archives contains unclosed entries.");
+            closeArchiveEntry();
         }
         this.entry = new CpioArchiveEntry(this.entryFormat);
         this.entry.setName(CPIO_TRAILER);
diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
index 2dc3b26f..1d9e5c5e 100644
--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
@@ -51,9 +51,6 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
 
     private boolean closed = false;
 
-    /* Indicates if putArchiveEntry has been called without closeArchiveEntry */
-    private boolean haveUnclosedEntry = false;
-    
     private final OutputStream out;
 
     /**
@@ -110,9 +107,6 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
      * @throws IOException on error
      */
     public void finish() throws IOException {
-        if(haveUnclosedEntry) {
-            throw new IOException("This archives contains unclosed entries.");
-        }
         writeEOFRecord();
         writeEOFRecord();
     }
@@ -188,7 +182,6 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
             currSize = entry.getSize();
         }
         currName = entry.getName();
-        haveUnclosedEntry = true;
     }
 
     /**
@@ -219,7 +212,6 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
                                   + "' before the '" + currSize
                                   + "' bytes specified in the header were written");
         }
-        haveUnclosedEntry = false;
     }
 
     /**
diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
index 645d3af4..cb8a2036 100644
--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
@@ -328,14 +328,13 @@ public class ZipArchiveOutputStream extends ArchiveOutputStream {
         fallbackToUTF8 = b;
     }
 
-    /* (non-Javadoc)
-     * @see org.apache.commons.compress.archivers.ArchiveOutputStream#finish()
+    /**
+     * Finishs writing the contents and closes this as well as the
+     * underlying stream.
+     * @throws IOException on error
      */
     public void finish() throws IOException {
-        if(entry != null) {
-            throw new IOException("This archives contains unclosed entries.");
-        }
-        
+        closeArchiveEntry();
         cdOffset = written;
         for (Iterator i = entries.iterator(); i.hasNext(); ) {
             writeCentralFileHeader((ZipArchiveEntry) i.next());
diff --git a/src/test/java/org/apache/commons/compress/IOMethodsTest.java b/src/test/java/org/apache/commons/compress/IOMethodsTest.java
index eabf80d1..2dce20f9 100644
--- a/src/test/java/org/apache/commons/compress/IOMethodsTest.java
+++ b/src/test/java/org/apache/commons/compress/IOMethodsTest.java
@@ -104,20 +104,14 @@ public class IOMethodsTest extends AbstractTestCase {
         for (int i=0; i<byteTest.length; i++){
             aos1.write(byteTest[i]);            
         }
-        aos1.closeArchiveEntry();
         aos1.close();
-
         aos2.write(byteTest);
-        aos2.closeArchiveEntry();
         aos2.close();
-        
         aos3.write(byteTest, 0, byteTest.length);
-        aos3.closeArchiveEntry();
         aos3.close();
         assertEquals("out1!=out2",out1.toString(),out2.toString());
         assertEquals("out1!=out3",out1.toString(),out3.toString());
     }
-    
     private void compareReads(String archiverName) throws Exception {
         OutputStream out1 = new ByteArrayOutputStream();
         OutputStream out2 = new ByteArrayOutputStream();
diff --git a/src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java b/src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java
deleted file mode 100644
index 7a273baa..00000000
--- a/src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java
+++ /dev/null
@@ -1,73 +0,0 @@
-package org.apache.commons.compress.archivers;
-
-import java.io.ByteArrayOutputStream;
-import java.io.IOException;
-import java.io.OutputStream;
-
-import org.apache.commons.compress.AbstractTestCase;
-import org.apache.commons.compress.archivers.ar.ArArchiveEntry;
-import org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;
-import org.apache.commons.compress.archivers.jar.JarArchiveEntry;
-import org.apache.commons.compress.archivers.tar.TarArchiveEntry;
-import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
-
-public class ArchiveOutputStreamTest extends AbstractTestCase {
-
-    protected void setUp() throws Exception {
-        super.setUp();
-    }
-
-    protected void tearDown() throws Exception {
-        super.tearDown();
-    }
-
-    public void testFinish() throws Exception {
-        OutputStream out1 = new ByteArrayOutputStream();
-        
-        ArchiveOutputStream aos1 = factory.createArchiveOutputStream("zip", out1);
-        aos1.putArchiveEntry(new ZipArchiveEntry("dummy"));
-        try {
-            aos1.finish();
-            fail("After putArchive should follow closeArchive");
-        } catch (IOException io) {
-            // Exception expected
-        }
-        
-        aos1 = factory.createArchiveOutputStream("jar", out1);
-        aos1.putArchiveEntry(new JarArchiveEntry("dummy"));
-        try {
-            aos1.finish();
-            fail("After putArchive should follow closeArchive");
-        } catch (IOException io) {
-            // Exception expected
-        }
-        
-        aos1 = factory.createArchiveOutputStream("ar", out1);
-        aos1.putArchiveEntry(new ArArchiveEntry("dummy", 100));
-        try {
-            aos1.finish();
-            fail("After putArchive should follow closeArchive");
-        } catch (IOException io) {
-            // Exception expected
-        }
-        
-        aos1 = factory.createArchiveOutputStream("cpio", out1);
-        aos1.putArchiveEntry(new CpioArchiveEntry("dummy"));
-        try {
-            aos1.finish();
-            fail("After putArchive should follow closeArchive");
-        } catch (IOException io) {
-            // Exception expected
-        }
-        
-        aos1 = factory.createArchiveOutputStream("tar", out1);
-        aos1.putArchiveEntry(new TarArchiveEntry("dummy"));
-        try {
-            aos1.finish();
-            fail("After putArchive should follow closeArchive");
-        } catch (IOException io) {
-            // Exception expected
-        }
-    }
-
-}
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369; git apply -p1 /tmp/gen_tests.pl_529192_1695210369/.defects4j.diff 2>&1
Tag pre-fix revision....................................................... OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369 && git add -A 2>&1 && git commit -a -m "D4J_Compress_3_PRE_FIX_REVISION" 2>&1 && git tag D4J_Compress_3_PRE_FIX_REVISION 2>&1
[detached HEAD 2a1dc1db] D4J_Compress_3_PRE_FIX_REVISION
 7 files changed, 8 insertions(+), 100 deletions(-)
 delete mode 100644 src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java
Check out program version: Compress-3f..................................... OK
Executed command: cd /tmp/gen_tests.pl_529192_1695210369 && git checkout D4J_Compress_3_FIXED_VERSION 2>&1
Previous HEAD position was 2a1dc1db D4J_Compress_3_PRE_FIX_REVISION
HEAD is now at 32b957e5 D4J_Compress_3_FIXED_VERSION
Running ant (compile)...................................................... OK
Executed command:  cd /tmp/gen_tests.pl_529192_1695210369 && /home/liumengjiao/Desktop/defects4j/major/bin/ant -f /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/home/liumengjiao/Desktop/defects4j -Dd4j.dir.projects=/home/liumengjiao/Desktop/defects4j/framework/projects -Dbasedir=/tmp/gen_tests.pl_529192_1695210369 -Dbuild.compiler=javac1.7  compile 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml

test-offline:

get-deps:

commons-compress-from-maven.compile:
    [mkdir] Created dir: /tmp/gen_tests.pl_529192_1695210369/target/classes
    [javac] /tmp/gen_tests.pl_529192_1695210369/maven-build.xml:74: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 61 source files to /tmp/gen_tests.pl_529192_1695210369/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/cert/Certificate.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/jar/Attributes.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/jar/JarEntry.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipEntry.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipConstants.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PushbackInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/CRC32.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/DataFormatException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/Inflater.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/ByteBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/RandomAccessFile.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/Deflater.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/UnsupportedEncodingException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/InstantiationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/CharBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/Charset.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/CharsetEncoder.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/CoderResult.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/CodingErrorAction.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/UnsupportedCharsetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Enumeration.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/InflaterInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/GZIPInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/GZIPOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/cert/Certificate.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/jar/Attributes.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/jar/JarEntry.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipEntry.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipConstants.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PushbackInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/CRC32.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/DataFormatException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/Inflater.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/ByteBuffer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/RandomAccessFile.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/Deflater.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/UnsupportedEncodingException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] 100 warnings
    [mkdir] Created dir: /tmp/gen_tests.pl_529192_1695210369/target/classes/META-INF
     [copy] Copying 2 files to /tmp/gen_tests.pl_529192_1695210369/target/classes/META-INF

compile:

BUILD SUCCESSFUL
Total time: 0 seconds
Creating temporary output directory........................................ OK
Executed command: mkdir -p /tmp/gen_tests.pl_529192_1695210369/evosuite
Generating (regression) tests with: evosuite............................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/bin/evosuite.sh

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class org.apache.commons.compress.archivers.tar.TarArchiveOutputStream     -projectCP /tmp/gen_tests.pl_529192_1695210369/target/classes     -seed 3003     -Dsearch_budget=150     -Dassertion_timeout=150     -Dtest_dir=/tmp/gen_tests.pl_529192_1695210369/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: org.apache.commons.compress.archivers.tar.TarArchiveOutputStream
* Starting Client-0
* Connecting to master process on port 7208
* Analyzing classpath: 
  - /tmp/gen_tests.pl_529192_1695210369/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.compress.archivers.tar.TarArchiveOutputStream
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 37
* Using seed 3003
* Starting evolution
* Initial Number of Goals in DynaMOSA = 21 / 37
* Search finished after 151s and 2748 generations, 2211954 statements, best individual has fitness: 1.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 37
* Number of covered goals: 36
* Generated 10 tests with total length 55
* Resulting test suite's coverage: 97%
* Generating assertions
* Resulting test suite's mutation score: 27%
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 378
* Writing tests to file
* Writing JUnit test case 'TarArchiveOutputStream_ESTest' to /tmp/gen_tests.pl_529192_1695210369/evosuite
* Done!

* Computation finished
OK
Creating test suite archive................................................ OK
Executed command: tar -cjf /tmp/gen_tests.pl_529192_1695210369/Compress-3f-evosuite.3.tar.bz2 -C /tmp/gen_tests.pl_529192_1695210369/evosuite/ .
Creating output directory.................................................. OK
Executed command: mkdir -p /home/liumengjiao/Desktop/CI/Evosuite/Compress_3//Compress/evosuite/3
Moving test suite archive to /home/liumengjiao/Desktop/CI/Evosuite/Compress OK
Executed command: mv /tmp/gen_tests.pl_529192_1695210369/Compress-3f-evosuite.3.tar.bz2 /home/liumengjiao/Desktop/CI/Evosuite/Compress_3//Compress/evosuite/3
