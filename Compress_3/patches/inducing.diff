diff --git a/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java
index 1729c80..2cad89d 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java
@@ -27,9 +27,24 @@
  * {@link #write(byte[], int, int)} method to improve performance.
  * They should also override {@link #close()} to ensure that any necessary
  * trailers are added.
+ * 
+ * <p>
+ * The normal sequence of calls for working with ArchiveOutputStreams is:
+ * + create ArchiveOutputStream object
+ * + write SFX header (optional, Zip only)
+ * + repeat as needed:
+ *      - putArchiveEntry() (writes entry header)
+ *      - write() (writes entry data)
+ *      - closeArchiveEntry() (closes entry)
+ * + finish() (ends the addition of entries)
+ * + write additional data if format supports it (optional)
+ * + close()
+ * </p>
+ * 
  * <p>
  * Example usage:<br/>
  * TBA
+ * </p>
  */
 public abstract class ArchiveOutputStream extends OutputStream {
     
@@ -55,6 +70,13 @@
      * @throws IOException
      */
     public abstract void closeArchiveEntry() throws IOException;
+    
+    /**
+     * Finishes the addition of entries to this stream, without closing it.
+     * Additional data can be written, if the format supports it.
+     * @throws IOException
+     */
+    public abstract void finish() throws IOException;
 
     /**
      * Create an archive entry using the inputFile and entryName provided.
diff --git a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
index ee7ecee..8a48da5 100644
--- a/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
+++ b/src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
@@ -163,4 +163,10 @@
         return new ArArchiveEntry(inputFile, entryName);
     }
 
+    /* (non-Javadoc)
+     * @see org.apache.commons.compress.archivers.ArchiveOutputStream#finish()
+     */
+    public void finish() throws IOException {
+        // Nothing to do
+    }
 }
