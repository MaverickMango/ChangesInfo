{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "timeoutSecond": 300,
  "proj": "Cli",
  "id": "29",
  "workingDir": "../bugs/Cli_29_buggy",
  "inducingCommit": "c0d5c79f572fc44c527e842f94bbbe9e4b12701d",
  "originalCommit": "326ac6df53e07b7090164c6b5d19db7554ec8d60",
  "bug_name": "Cli_29",
  "derive": "defects4j",
  "original_fixing_commit": "20002f7f4e971349a1c95dd3b05846c5b824b65c",
  "buildFiles_changed": true,
  "inducing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/cli/Parser.java",
        "src/java/org/apache/commons/cli/Parser.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "processArgs"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "processArgs"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "2",
            "3",
            "4",
            "75",
            "380"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "2",
            "3",
            "4",
            "75",
            "378",
            "381"
          ],
          "num": 6
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/cli/Parser.java b/src/java/org/apache/commons/cli/Parser.java\nindex e518014..fd55684 100644\n--- a/src/java/org/apache/commons/cli/Parser.java\n+++ b/src/java/org/apache/commons/cli/Parser.java\n@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.11 2002/12/09 23:47:25 jkeyes Exp $\n- * $Revision: 1.11 $\n- * $Date: 2002/12/09 23:47:25 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Parser.java,v 1.12 2003/01/17 20:00:14 jkeyes Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2003/01/17 20:00:14 $\n  *\n  * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  *\n@@ -72,7 +72,7 @@\n  *\n  * @author John Keyes (john at integralsource.com)\n  * @see Parser\n- * @version $Revision: 1.11 $\n+ * @version $Revision: 1.12 $\n  */\n public abstract class Parser implements CommandLineParser {\n \n@@ -375,9 +375,10 @@\n             // found a value\n             else\n             {\n+\n                 try\n                 {\n-                    opt.addValue(str);\n+                    opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n                 }\n                 catch (RuntimeException exp)\n                 {\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "METHOD_INVOCATION_ARGUMENTS [12485,12524]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "MethodInvocation [12485,12524]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "METHOD_INVOCATION_RECEIVER [12485,12489]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: stripLeadingAndTrailingQuotes [12490,12519]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/cli/Util.java",
        "src/java/org/apache/commons/cli/Util.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "stripLeadingHyphens"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "stripLeadingAndTrailingQuotes",
            "stripLeadingHyphens"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "2",
            "3",
            "4",
            "76",
            "77",
            "91"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "2",
            "3",
            "4",
            "76",
            "91",
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "num": 24
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/cli/Util.java b/src/java/org/apache/commons/cli/Util.java\nindex 1e04149..7f5944e 100644\n--- a/src/java/org/apache/commons/cli/Util.java\n+++ b/src/java/org/apache/commons/cli/Util.java\n@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Util.java,v 1.2 2002/12/09 23:47:25 jkeyes Exp $\n- * $Revision: 1.2 $\n- * $Date: 2002/12/09 23:47:25 $\n+ * $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//cli/src/java/org/apache/commons/cli/Util.java,v 1.3 2003/01/17 20:00:14 jkeyes Exp $\n+ * $Revision: 1.3 $\n+ * $Date: 2003/01/17 20:00:14 $\n  *\n  * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  *\n@@ -73,8 +73,7 @@\n      *\n      * @param str The string from which the hyphens should be removed.\n      *\n-     * @return the hyphens from the begining of \u003ccode\u003estr\u003c/code\u003e and\n-     * return the new String.\n+     * @return the new String.\n      */\n     static String stripLeadingHyphens(String str)\n     {\n@@ -89,4 +88,24 @@\n \n         return str;\n     }\n+\n+    /**\n+     * \u003cp\u003eRemove the leading and trailing quotes from \u003ccode\u003estr\u003c/code\u003e,\n+     * e.g. if str is \u0027\"one two\"\u0027, then \u0027one two\u0027 is returned.\u003c/p\u003e\n+     *\n+     * @param str The string from which the leading and trailing quotes\n+     * should be removed.\n+     *\n+     * @return The string without the leading and trailing quotes.\n+     */\n+    static String stripLeadingAndTrailingQuotes(String str)\n+    {\n+        if (str.startsWith(\"\\\"\")) {\n+            str \u003d str.substring(1, str.length());\n+        }\n+        if (str.endsWith(\"\\\"\")) {\n+            str \u003d str.substring(0, str.length()-1);\n+        }\n+        return str;\n+    }\n }\n\\ No newline at end of file\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodDeclaration [3600,4213]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "TextElement: return the new String. [3335,3357]",
          "to": ""
        }
      ]
    }
  ],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "stripLeadingAndTrailingQuotes"
      ],
      "num": 1
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.cli.UtilTest",
      "test_function": "testStripLeadingAndTrailingQuotes",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfoo \"bar[\"]\u003e but was:\u003cfoo \"bar[]\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/cli/Util.java",
        "src/java/org/apache/commons/cli/Util.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "stripLeadingAndTrailingQuotes"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "stripLeadingAndTrailingQuotes"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "103",
            "104",
            "105",
            "106",
            "107"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "103",
            "104",
            "105"
          ],
          "num": 3
        }
      ],
      "diff": "diff -u -r data/changesInfo//Cli_29/properties/modified_classes/inducing/src/java/org/apache/commons/cli/Util.java data/changesInfo//Cli_29/cleaned/fixing/src/java/org/apache/commons/cli/Util.java\n--- data/changesInfo//Cli_29/properties/modified_classes/inducing/src/java/org/apache/commons/cli/Util.java\t2023-08-25 14:18:23.687437028 +0800\n+++ data/changesInfo//Cli_29/cleaned/fixing/src/java/org/apache/commons/cli/Util.java\t2023-08-22 15:12:44.667188117 +0800\n@@ -100,11 +100,9 @@\n      */\n     static String stripLeadingAndTrailingQuotes(String str)\n     {\n-        if (str.startsWith(\"\\\"\")) {\n-            str \u003d str.substring(1, str.length());\n-        }\n-        if (str.endsWith(\"\\\"\")) {\n-            str \u003d str.substring(0, str.length()-1);\n+        int length \u003d str.length();\n+        if (length \u003e 1 \u0026\u0026 str.startsWith(\"\\\"\") \u0026\u0026 str.endsWith(\"\\\"\") \u0026\u0026 str.substring(1, length-1).indexOf(\u0027\"\u0027) \u003d\u003d -1) {\n+            str \u003d str.substring(1, length-1);\n         }\n         return str;\n     }\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "VariableDeclarationStatement [4004,4030]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "PrimitiveType: int [4004,4007]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "VariableDeclarationFragment [4008,4029]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [4043,4148]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: length [4008,4014]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [4043,4099]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [4100,4102]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [4103,4148]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [4043,4077]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [4078,4080]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodInvocation [4081,4099]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [4043,4053]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [4054,4056]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "NumberLiteral: 1 [4184,4185]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [4187,4195]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: - [4193,4194]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_RECEIVER [4067,4070]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [4067,4079]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [4104,4122]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: str [4138,4141]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ASSIGNMENT_OPERATOR: \u003d [4142,4143]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_RECEIVER [4144,4147]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: substring [4148,4157]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 0 [4158,4159]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: - [4173,4174]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 1 [4174,4175]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [4161,4175]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [4158,4175]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [4144,4176]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Assignment [4138,4176]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ExpressionStatement [4138,4177]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [4124,4187]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [4100,4187]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}