Only in data/changesInfo//Math_42/properties/modified_classes/inducing/src: main
diff -u -r data/changesInfo//Math_42/properties/modified_classes/inducing/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java data/changesInfo//Math_42/cleaned/inducing/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
--- data/changesInfo//Math_42/properties/modified_classes/inducing/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java	2023-12-27 22:47:04.336751232 -0800
+++ data/changesInfo//Math_42/cleaned/inducing/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java	2023-06-20 07:33:06.451077422 -0700
@@ -27,11 +27,30 @@
 import org.apache.commons.math.optimization.GoalType;
 import org.apache.commons.math.optimization.OptimizationException;
 import org.apache.commons.math.optimization.RealPointValuePair;
+import org.apache.commons.math.util.MathUtils;
+import org.junit.Assert;
 import org.junit.Test;
 
 public class SimplexSolverTest {
 
     @Test
+    public void testMath713NegativeVariable() {
+        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 1.0}, 0.0d);
+        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
+        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));
+
+        double epsilon = 1e-6;
+        SimplexSolver solver = new SimplexSolver();
+        try {
+            RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
+            Assert.assertTrue(MathUtils.compareTo(solution.getPoint()[0], 0.0d, epsilon) >= 0);
+            Assert.assertTrue(MathUtils.compareTo(solution.getPoint()[1], 0.0d, epsilon) >= 0);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    @Test
     public void testMath272() throws OptimizationException {
         LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
         Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
