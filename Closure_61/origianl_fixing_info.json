{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "/home/liumengjiao/Desktop/CI/Benchmark/data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest::testCall1,com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest::testCall2,com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest::testRemoveUselessOps",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.NodeUtil",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "61",
  "workingDir": "../bugs/Closure_61_buggy",
  "buggyCommit": "bac71221414f7f42d31d3634c935c2ae1a940376",
  "inducingCommit": "e9a1cc9c431416354dec3dcb393affd7f41c6596",
  "originalCommit": "f5529dd0bde3eab667cec2e80212a69161daaf68",
  "bug_name": "Closure_61",
  "derive": "defects4j",
  "original_fixing_commit": "34e4616a924bf272c076039e143e20f1d792731e",
  "buildFiles_changed": false,
  "regression": true,
  "inducing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/NodeUtil.java",
        "src/com/google/javascript/jscomp/NodeUtil.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:functionCallHasSideEffects:[Node callNode, @Nullable AbstractCompiler compiler]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:functionCallHasSideEffects:[Node callNode, @Nullable AbstractCompiler compiler]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "957",
            "958",
            "959",
            "960",
            "961",
            "962",
            "963",
            "964"
          ],
          "num": 8
        },
        {
          "qualified_names": [
            "956"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex f9ce42e..3634939 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -954,14 +954,6 @@\n         return false;\n       }\n \n-      // Functions in the \"Math\" namespace have no side effects.\n-      if (nameNode.getFirstChild().getType() \u003d\u003d Token.NAME) {\n-        String namespaceName \u003d nameNode.getFirstChild().getString();\n-        if (namespaceName.equals(\"Math\")) {\n-          return false;\n-        }\n-      }\n-\n       if (compiler !\u003d null \u0026\u0026 !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() \u003d\u003d Token.REGEXP\n             \u0026\u0026 REGEXP_METHODS.contains(nameNode.getLastChild().getString())) {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [28822,29032]",
          "to": ""
        }
      ]
    }
  ],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest",
      "test_function": "testCall1",
      "assertion_line": "544",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: \nResult: Math.sin(0)"
    },
    {
      "test_class": "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest",
      "test_function": "testCall2",
      "assertion_line": "548",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: \nResult: Math.sin(0)"
    },
    {
      "test_class": "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest",
      "test_function": "testRemoveUselessOps",
      "assertion_line": "54",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: \nResult: Math.random()"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/NodeUtil.java",
        "src/com/google/javascript/jscomp/NodeUtil.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:functionCallHasSideEffects:[Node callNode, @Nullable AbstractCompiler compiler]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:functionCallHasSideEffects:[Node callNode, @Nullable AbstractCompiler compiler]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "956"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "957",
            "958",
            "959",
            "960",
            "961",
            "962",
            "963",
            "964"
          ],
          "num": 8
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 3634939..f9ce42e 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -954,6 +954,14 @@\n         return false;\n       }\n \n+      // Functions in the \"Math\" namespace have no side effects.\n+      if (nameNode.getFirstChild().getType() \u003d\u003d Token.NAME) {\n+        String namespaceName \u003d nameNode.getFirstChild().getString();\n+        if (namespaceName.equals(\"Math\")) {\n+          return false;\n+        }\n+      }\n+\n       if (compiler !\u003d null \u0026\u0026 !compiler.hasRegExpGlobalReferences()) {\n         if (nameNode.getFirstChild().getType() \u003d\u003d Token.REGEXP\n             \u0026\u0026 REGEXP_METHODS.contains(nameNode.getLastChild().getString())) {\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "IfStatement [28822,29032]"
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "patch_changed_mths": {
    "qualified_names": [
      "com.google.javascript.jscomp.NodeUtil:functionCallHasSideEffects(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/AbstractCompiler;)Z:regression"
    ],
    "num": 1
  }
}