diff --git a/src/java/org/apache/commons/math/stat/Frequency.java b/src/java/org/apache/commons/math/stat/Frequency.java
index 237c2f6..70d622d 100644
--- a/src/java/org/apache/commons/math/stat/Frequency.java
+++ b/src/java/org/apache/commons/math/stat/Frequency.java
@@ -101,13 +101,17 @@
      * </p>
      * 
      * @param v the value to add.
-     * @throws IllegalArgumentException if <code>v</code> is not comparable with previous entries
-     * @throws ClassCastException if <code>v</code> is not Comparable
+     * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
+     *         or is not comparable with previous entries
      * @deprecated use {@link #addValue(Comparable)} instead
      */
     @Deprecated
     public void addValue(Object v) {
-        addValue((Comparable<?>) v);
+        if (v instanceof Comparable<?>){
+            addValue((Comparable<?>) v);            
+        } else {
+            throw new IllegalArgumentException("Object must implement Comparable");
+        }
     }
     
     /**
diff --git a/src/test/org/apache/commons/math/stat/FrequencyTest.java b/src/test/org/apache/commons/math/stat/FrequencyTest.java
index b2e0b3a..dc18d92 100644
--- a/src/test/org/apache/commons/math/stat/FrequencyTest.java
+++ b/src/test/org/apache/commons/math/stat/FrequencyTest.java
@@ -192,16 +192,16 @@
     // Check what happens when non-Comparable objects are added
     public void testAddNonComparable(){
         try {
-            f.addValue(new Object()); // This was OK
-            fail("Expected ClassCastException");
-        } catch (ClassCastException expected) {
+            f.addValue(new Object()); // This was previously OK
+            fail("Expected IllegalArgumentException");
+        } catch (IllegalArgumentException expected) {
         }
         f.clear();
         f.addValue(1);
         try {
             f.addValue(new Object());
-            fail("Expected ClassCastException"); // Previously would have been IllegalArgument
-        } catch (ClassCastException expected) {
+            fail("Expected IllegalArgumentException");
+        } catch (IllegalArgumentException expected) {
         }
     }
 
