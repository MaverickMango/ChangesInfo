===
insert-tree
---
ImportDeclaration [1726,1791]
    QualifiedName: com.google.javascript.jscomp.CompilerOptions.LanguageMode [1733,1790]
to
CompilationUnit [0,23981]
at 16
===
insert-tree
---
MethodDeclaration [24138,24880]
    Modifier: public [24138,24144]
    PrimitiveType: void [24145,24149]
    SimpleName: testObjectLit [24150,24163]
    Block [24166,24880]
        ExpressionStatement [24172,24213]
            MethodInvocation [24172,24212]
                SimpleName: inFunction [24172,24182]
                METHOD_INVOCATION_ARGUMENTS [24183,24211]
                    StringLiteral: "var x = {}; var out = x.a;" [24183,24211]
        ExpressionStatement [24218,24246]
            MethodInvocation [24218,24245]
                SimpleName: verify [24218,24224]
                METHOD_INVOCATION_ARGUMENTS [24225,24244]
                    StringLiteral: "out" [24225,24230]
                    SimpleName: UNKNOWN_TYPE [24232,24244]
        ExpressionStatement [24287,24331]
            MethodInvocation [24287,24330]
                SimpleName: inFunction [24287,24297]
                METHOD_INVOCATION_ARGUMENTS [24298,24329]
                    StringLiteral: "var x = {a:1}; var out = x.a;" [24298,24329]
        ExpressionStatement [24336,24363]
            MethodInvocation [24336,24362]
                SimpleName: verify [24336,24342]
                METHOD_INVOCATION_ARGUMENTS [24343,24361]
                    StringLiteral: "out" [24343,24348]
                    SimpleName: NUMBER_TYPE [24350,24361]
        ExpressionStatement [24369,24430]
            MethodInvocation [24369,24429]
                SimpleName: inFunction [24369,24379]
                METHOD_INVOCATION_ARGUMENTS [24380,24428]
                    StringLiteral: "var x = { get a() {return 1} }; var out = x.a;" [24380,24428]
        ExpressionStatement [24435,24463]
            MethodInvocation [24435,24462]
                SimpleName: verify [24435,24441]
                METHOD_INVOCATION_ARGUMENTS [24442,24461]
                    StringLiteral: "out" [24442,24447]
                    SimpleName: UNKNOWN_TYPE [24449,24461]
        ExpressionStatement [24469,24601]
            MethodInvocation [24469,24600]
                SimpleName: inFunction [24469,24479]
                METHOD_INVOCATION_ARGUMENTS [24489,24599]
                    InfixExpression [24489,24599]
                        StringLiteral: "var x = {" [24489,24500]
                        INFIX_EXPRESSION_OPERATOR: + [24501,24502]
                        StringLiteral: "  /** @return {number} */ get a() {return 1}" [24511,24557]
                        StringLiteral: "};" [24568,24572]
                        StringLiteral: "var out = x.a;" [24583,24599]
        ExpressionStatement [24606,24633]
            MethodInvocation [24606,24632]
                SimpleName: verify [24606,24612]
                METHOD_INVOCATION_ARGUMENTS [24613,24631]
                    StringLiteral: "out" [24613,24618]
                    SimpleName: NUMBER_TYPE [24620,24631]
        ExpressionStatement [24639,24693]
            MethodInvocation [24639,24692]
                SimpleName: inFunction [24639,24649]
                METHOD_INVOCATION_ARGUMENTS [24650,24691]
                    StringLiteral: "var x = { set a(b) {} }; var out = x.a;" [24650,24691]
        ExpressionStatement [24698,24726]
            MethodInvocation [24698,24725]
                SimpleName: verify [24698,24704]
                METHOD_INVOCATION_ARGUMENTS [24705,24724]
                    StringLiteral: "out" [24705,24710]
                    SimpleName: UNKNOWN_TYPE [24712,24724]
        ExpressionStatement [24732,24844]
            MethodInvocation [24732,24843]
                SimpleName: inFunction [24732,24742]
                METHOD_INVOCATION_ARGUMENTS [24743,24842]
                    InfixExpression [24743,24842]
                        StringLiteral: "var x = { " [24743,24755]
                        INFIX_EXPRESSION_OPERATOR: + [24756,24757]
                        StringLiteral: "/** @param {number} b */ set a(b) {} };" [24770,24811]
                        StringLiteral: "var out = x.a;" [24826,24842]
        ExpressionStatement [24849,24876]
            MethodInvocation [24849,24875]
                SimpleName: verify [24849,24855]
                METHOD_INVOCATION_ARGUMENTS [24856,24874]
                    StringLiteral: "out" [24856,24861]
                    SimpleName: NUMBER_TYPE [24863,24874]
to
TypeDeclaration [2167,23980]
at 106
===
insert-node
---
VariableDeclarationStatement [2834,2882]
to
Block [2731,2920]
at 1
===
insert-tree
---
ExpressionStatement [2887,2933]
    Assignment [2887,2932]
        QualifiedName: options.languageIn [2887,2905]
        ASSIGNMENT_OPERATOR: = [2906,2907]
        QualifiedName: LanguageMode.ECMASCRIPT5 [2908,2932]
to
Block [2731,2920]
at 2
===
insert-tree
---
SimpleType [2834,2849]
    SimpleName: CompilerOptions [2834,2849]
to
VariableDeclarationStatement [2834,2882]
at 0
===
insert-node
---
VariableDeclarationFragment [2850,2881]
to
VariableDeclarationStatement [2834,2882]
at 1
===
insert-node
---
SimpleName: options [2850,2857]
to
VariableDeclarationFragment [2850,2881]
at 0
===
move-tree
---
ClassInstanceCreation [2789,2810]
    SimpleType [2793,2808]
        SimpleName: CompilerOptions [2793,2808]
to
VariableDeclarationFragment [2850,2881]
at 1
===
insert-node
---
SimpleName: options [2959,2966]
to
METHOD_INVOCATION_ARGUMENTS [2789,2810]
at 0
