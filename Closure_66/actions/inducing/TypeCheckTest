===
insert-tree
---
MethodDeclaration [22469,22679]
    Modifier: public [22469,22475]
    PrimitiveType: void [22476,22480]
    SimpleName: testQualifiedNameReduction5a [22481,22509]
    SimpleType [22519,22528]
        SimpleName: Exception [22519,22528]
    Block [22529,22679]
        ExpressionStatement [22535,22675]
            MethodInvocation [22535,22674]
                SimpleName: testTypes [22535,22544]
                METHOD_INVOCATION_ARGUMENTS [22545,22673]
                    InfixExpression [22545,22673]
                        StringLiteral: "var x = {/** @type {string} */ a:'b' };\n" [22545,22588]
                        INFIX_EXPRESSION_OPERATOR: + [22589,22590]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [22599,22647]
                        StringLiteral: "return x.a; }" [22658,22673]
to
TypeDeclaration [1127,288387]
at 93
===
insert-tree
---
MethodDeclaration [22683,22967]
    Modifier: public [22683,22689]
    PrimitiveType: void [22690,22694]
    SimpleName: testQualifiedNameReduction5b [22695,22723]
    SimpleType [22733,22742]
        SimpleName: Exception [22733,22742]
    Block [22743,22967]
        ExpressionStatement [22749,22927]
            MethodInvocation [22749,22926]
                SimpleName: testTypes [22749,22758]
                METHOD_INVOCATION_ARGUMENTS [22768,22925]
                    InfixExpression [22768,22925]
                        StringLiteral: "var x = {/** @type {number} */ a:12 };\n" [22768,22810]
                        INFIX_EXPRESSION_OPERATOR: + [22811,22812]
                        StringLiteral: "/** @return {string} */\n" [22821,22848]
                        StringLiteral: "var f = function() {\n" [22859,22883]
                        StringLiteral: "  return x.a;\n" [22894,22911]
                        StringLiteral: "}" [22922,22925]
to
TypeDeclaration [1127,288387]
at 94
===
insert-tree
---
MethodDeclaration [22971,23311]
    Modifier: public [22971,22977]
    PrimitiveType: void [22978,22982]
    SimpleName: testQualifiedNameReduction5c [22983,23011]
    SimpleType [23021,23030]
        SimpleName: Exception [23021,23030]
    Block [23031,23311]
        ExpressionStatement [23037,23307]
            MethodInvocation [23037,23306]
                SimpleName: testTypes [23037,23046]
                METHOD_INVOCATION_ARGUMENTS [23056,23305]
                    InfixExpression [23056,23198]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [23056,23104]
                        INFIX_EXPRESSION_OPERATOR: + [23105,23106]
                        StringLiteral: "var x = {/** @type {number} */ a:0 };\n" [23115,23156]
                        StringLiteral: "return (x.a) ? (x.a) : 'a'; }" [23167,23198]
                    InfixExpression [23208,23305]
                        StringLiteral: "inconsistent return type\n" [23208,23236]
                        INFIX_EXPRESSION_OPERATOR: + [23237,23238]
                        StringLiteral: "found   : (number|string)\n" [23247,23276]
                        StringLiteral: "required: string" [23287,23305]
to
TypeDeclaration [1127,288387]
at 95
===
insert-tree
---
MethodDeclaration [23315,23562]
    Modifier: public [23315,23321]
    PrimitiveType: void [23322,23326]
    SimpleName: testQualifiedNameReduction6 [23327,23354]
    SimpleType [23364,23373]
        SimpleName: Exception [23364,23373]
    Block [23374,23562]
        ExpressionStatement [23380,23558]
            MethodInvocation [23380,23557]
                SimpleName: testTypes [23380,23389]
                METHOD_INVOCATION_ARGUMENTS [23399,23556]
                    InfixExpression [23399,23556]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [23399,23447]
                        INFIX_EXPRESSION_OPERATOR: + [23448,23449]
                        StringLiteral: "var x = {/** @return {string?} */ get a() {return 'a'}};\n" [23458,23518]
                        StringLiteral: "return x.a ? x.a : 'a'; }" [23529,23556]
to
TypeDeclaration [1127,288387]
at 96
===
insert-tree
---
MethodDeclaration [23566,23897]
    Modifier: public [23566,23572]
    PrimitiveType: void [23573,23577]
    SimpleName: testQualifiedNameReduction7 [23578,23605]
    SimpleType [23615,23624]
        SimpleName: Exception [23615,23624]
    Block [23625,23897]
        ExpressionStatement [23631,23893]
            MethodInvocation [23631,23892]
                SimpleName: testTypes [23631,23640]
                METHOD_INVOCATION_ARGUMENTS [23650,23891]
                    InfixExpression [23650,23793]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [23650,23698]
                        INFIX_EXPRESSION_OPERATOR: + [23699,23700]
                        StringLiteral: "var x = {/** @return {number} */ get a() {return 12}};\n" [23709,23767]
                        StringLiteral: "return x.a; }" [23778,23793]
                    InfixExpression [23803,23891]
                        StringLiteral: "inconsistent return type\n" [23803,23831]
                        INFIX_EXPRESSION_OPERATOR: + [23832,23833]
                        StringLiteral: "found   : number\n" [23842,23862]
                        StringLiteral: "required: string" [23873,23891]
to
TypeDeclaration [1127,288387]
at 97
===
insert-tree
---
MethodDeclaration [23901,24172]
    Modifier: public [23901,23907]
    PrimitiveType: void [23908,23912]
    SimpleName: testQualifiedNameReduction7a [23913,23941]
    SimpleType [23951,23960]
        SimpleName: Exception [23951,23960]
    Block [23961,24172]
        ExpressionStatement [24028,24168]
            MethodInvocation [24028,24167]
                SimpleName: testTypes [24028,24037]
                METHOD_INVOCATION_ARGUMENTS [24047,24166]
                    InfixExpression [24047,24166]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [24047,24095]
                        INFIX_EXPRESSION_OPERATOR: + [24096,24097]
                        StringLiteral: "var x = {get a() {return 12}};\n" [24106,24140]
                        StringLiteral: "return x.a; }" [24151,24166]
to
TypeDeclaration [1127,288387]
at 98
===
insert-tree
---
MethodDeclaration [24176,24398]
    Modifier: public [24176,24182]
    PrimitiveType: void [24183,24187]
    SimpleName: testQualifiedNameReduction8 [24188,24215]
    SimpleType [24225,24234]
        SimpleName: Exception [24225,24234]
    Block [24235,24398]
        ExpressionStatement [24241,24394]
            MethodInvocation [24241,24393]
                SimpleName: testTypes [24241,24250]
                METHOD_INVOCATION_ARGUMENTS [24260,24392]
                    InfixExpression [24260,24392]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [24260,24308]
                        INFIX_EXPRESSION_OPERATOR: + [24309,24310]
                        StringLiteral: "var x = {get a() {return 'a'}};\n" [24319,24354]
                        StringLiteral: "return x.a ? x.a : 'a'; }" [24365,24392]
to
TypeDeclaration [1127,288387]
at 99
===
insert-tree
---
MethodDeclaration [24402,24641]
    Modifier: public [24402,24408]
    PrimitiveType: void [24409,24413]
    SimpleName: testQualifiedNameReduction9 [24414,24441]
    SimpleType [24451,24460]
        SimpleName: Exception [24451,24460]
    Block [24461,24641]
        ExpressionStatement [24467,24637]
            MethodInvocation [24467,24636]
                SimpleName: testTypes [24467,24476]
                METHOD_INVOCATION_ARGUMENTS [24486,24635]
                    InfixExpression [24486,24635]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [24486,24534]
                        INFIX_EXPRESSION_OPERATOR: + [24535,24536]
                        StringLiteral: "var x = { /** @param {string} b */ set a(b) {}};\n" [24545,24597]
                        StringLiteral: "return x.a ? x.a : 'a'; }" [24608,24635]
to
TypeDeclaration [1127,288387]
at 100
===
insert-tree
---
MethodDeclaration [24645,25081]
    Modifier: public [24645,24651]
    PrimitiveType: void [24652,24656]
    SimpleName: testQualifiedNameReduction10 [24657,24685]
    SimpleType [24695,24704]
        SimpleName: Exception [24695,24704]
    Block [24705,25081]
        ExpressionStatement [24800,25077]
            MethodInvocation [24800,25076]
                SimpleName: testTypes [24800,24809]
                METHOD_INVOCATION_ARGUMENTS [24819,25075]
                    InfixExpression [24819,24968]
                        StringLiteral: "/** @return {string} */ var f = function() {\n" [24819,24867]
                        INFIX_EXPRESSION_OPERATOR: + [24868,24869]
                        StringLiteral: "var x = { /** @param {number} b */ set a(b) {}};\n" [24878,24930]
                        StringLiteral: "return x.a ? x.a : 'a'; }" [24941,24968]
                    InfixExpression [24978,25075]
                        StringLiteral: "inconsistent return type\n" [24978,25006]
                        INFIX_EXPRESSION_OPERATOR: + [25007,25008]
                        StringLiteral: "found   : (number|string)\n" [25017,25046]
                        StringLiteral: "required: string" [25057,25075]
to
TypeDeclaration [1127,288387]
at 101
===
insert-tree
---
MethodDeclaration [25085,25331]
    Modifier: public [25085,25091]
    PrimitiveType: void [25092,25096]
    SimpleName: testObjLitDef1a [25097,25112]
    SimpleType [25122,25131]
        SimpleName: Exception [25122,25131]
    Block [25132,25331]
        ExpressionStatement [25138,25327]
            MethodInvocation [25138,25326]
                SimpleName: testTypes [25138,25147]
                METHOD_INVOCATION_ARGUMENTS [25157,25325]
                    InfixExpression [25157,25222]
                        StringLiteral: "var x = {/** @type {number} */ a:12 };\n" [25157,25199]
                        INFIX_EXPRESSION_OPERATOR: + [25200,25201]
                        StringLiteral: "x.a = 'a';" [25210,25222]
                    InfixExpression [25232,25325]
                        StringLiteral: "assignment to property a of x\n" [25232,25265]
                        INFIX_EXPRESSION_OPERATOR: + [25266,25267]
                        StringLiteral: "found   : string\n" [25276,25296]
                        StringLiteral: "required: number" [25307,25325]
to
TypeDeclaration [1127,288387]
at 102
===
insert-tree
---
MethodDeclaration [25335,25645]
    Modifier: public [25335,25341]
    PrimitiveType: void [25342,25346]
    SimpleName: testObjLitDef1b [25347,25362]
    SimpleType [25372,25381]
        SimpleName: Exception [25372,25381]
    Block [25382,25645]
        ExpressionStatement [25388,25641]
            MethodInvocation [25388,25640]
                SimpleName: testTypes [25388,25397]
                METHOD_INVOCATION_ARGUMENTS [25407,25639]
                    InfixExpression [25407,25536]
                        StringLiteral: "function f(){" [25407,25422]
                        INFIX_EXPRESSION_OPERATOR: + [25423,25424]
                        StringLiteral: "var x = {/** @type {number} */ a:12 };\n" [25435,25477]
                        StringLiteral: "x.a = 'a';" [25490,25502]
                        StringLiteral: "};\n" [25513,25519]
                        StringLiteral: "f();" [25530,25536]
                    InfixExpression [25546,25639]
                        StringLiteral: "assignment to property a of x\n" [25546,25579]
                        INFIX_EXPRESSION_OPERATOR: + [25580,25581]
                        StringLiteral: "found   : string\n" [25590,25610]
                        StringLiteral: "required: number" [25621,25639]
to
TypeDeclaration [1127,288387]
at 103
===
insert-tree
---
MethodDeclaration [25649,25904]
    Modifier: public [25649,25655]
    PrimitiveType: void [25656,25660]
    SimpleName: testObjLitDef2a [25661,25676]
    SimpleType [25686,25695]
        SimpleName: Exception [25686,25695]
    Block [25696,25904]
        ExpressionStatement [25702,25900]
            MethodInvocation [25702,25899]
                SimpleName: testTypes [25702,25711]
                METHOD_INVOCATION_ARGUMENTS [25721,25898]
                    InfixExpression [25721,25795]
                        StringLiteral: "var x = {/** @param {number} b */ set a(b){} };\n" [25721,25772]
                        INFIX_EXPRESSION_OPERATOR: + [25773,25774]
                        StringLiteral: "x.a = 'a';" [25783,25795]
                    InfixExpression [25805,25898]
                        StringLiteral: "assignment to property a of x\n" [25805,25838]
                        INFIX_EXPRESSION_OPERATOR: + [25839,25840]
                        StringLiteral: "found   : string\n" [25849,25869]
                        StringLiteral: "required: number" [25880,25898]
to
TypeDeclaration [1127,288387]
at 104
===
insert-tree
---
MethodDeclaration [25908,26227]
    Modifier: public [25908,25914]
    PrimitiveType: void [25915,25919]
    SimpleName: testObjLitDef2b [25920,25935]
    SimpleType [25945,25954]
        SimpleName: Exception [25945,25954]
    Block [25955,26227]
        ExpressionStatement [25961,26223]
            MethodInvocation [25961,26222]
                SimpleName: testTypes [25961,25970]
                METHOD_INVOCATION_ARGUMENTS [25980,26221]
                    InfixExpression [25980,26118]
                        StringLiteral: "function f(){" [25980,25995]
                        INFIX_EXPRESSION_OPERATOR: + [25996,25997]
                        StringLiteral: "var x = {/** @param {number} b */ set a(b){} };\n" [26008,26059]
                        StringLiteral: "x.a = 'a';" [26072,26084]
                        StringLiteral: "};\n" [26095,26101]
                        StringLiteral: "f();" [26112,26118]
                    InfixExpression [26128,26221]
                        StringLiteral: "assignment to property a of x\n" [26128,26161]
                        INFIX_EXPRESSION_OPERATOR: + [26162,26163]
                        StringLiteral: "found   : string\n" [26172,26192]
                        StringLiteral: "required: number" [26203,26221]
to
TypeDeclaration [1127,288387]
at 105
===
insert-tree
---
MethodDeclaration [26231,26506]
    Modifier: public [26231,26237]
    PrimitiveType: void [26238,26242]
    SimpleName: testObjLitDef3a [26243,26258]
    SimpleType [26268,26277]
        SimpleName: Exception [26268,26277]
    Block [26278,26506]
        ExpressionStatement [26284,26502]
            MethodInvocation [26284,26501]
                SimpleName: testTypes [26284,26293]
                METHOD_INVOCATION_ARGUMENTS [26303,26500]
                    InfixExpression [26303,26416]
                        StringLiteral: "/** @type {string} */ var y;\n" [26303,26335]
                        INFIX_EXPRESSION_OPERATOR: + [26336,26337]
                        StringLiteral: "var x = {/** @return {number} */ get a(){} };\n" [26346,26395]
                        StringLiteral: "y = x.a;" [26406,26416]
                    InfixExpression [26426,26500]
                        StringLiteral: "assignment\n" [26426,26440]
                        INFIX_EXPRESSION_OPERATOR: + [26441,26442]
                        StringLiteral: "found   : number\n" [26451,26471]
                        StringLiteral: "required: string" [26482,26500]
to
TypeDeclaration [1127,288387]
at 106
===
insert-tree
---
MethodDeclaration [26510,26847]
    Modifier: public [26510,26516]
    PrimitiveType: void [26517,26521]
    SimpleName: testObjLitDef3b [26522,26537]
    SimpleType [26547,26556]
        SimpleName: Exception [26547,26556]
    Block [26557,26847]
        ExpressionStatement [26563,26843]
            MethodInvocation [26563,26842]
                SimpleName: testTypes [26563,26572]
                METHOD_INVOCATION_ARGUMENTS [26580,26841]
                    InfixExpression [26580,26757]
                        StringLiteral: "/** @type {string} */ var y;\n" [26580,26612]
                        INFIX_EXPRESSION_OPERATOR: + [26613,26614]
                        StringLiteral: "function f(){" [26623,26638]
                        StringLiteral: "var x = {/** @return {number} */ get a(){} };\n" [26651,26700]
                        StringLiteral: "y = x.a;" [26713,26723]
                        StringLiteral: "};\n" [26734,26740]
                        StringLiteral: "f();" [26751,26757]
                    InfixExpression [26767,26841]
                        StringLiteral: "assignment\n" [26767,26781]
                        INFIX_EXPRESSION_OPERATOR: + [26782,26783]
                        StringLiteral: "found   : number\n" [26792,26812]
                        StringLiteral: "required: string" [26823,26841]
to
TypeDeclaration [1127,288387]
at 107
===
insert-tree
---
MethodDeclaration [26851,27132]
    Modifier: public [26851,26857]
    PrimitiveType: void [26858,26862]
    SimpleName: testObjLitDef4 [26863,26877]
    SimpleType [26887,26896]
        SimpleName: Exception [26887,26896]
    Block [26897,27132]
        ExpressionStatement [26903,27128]
            MethodInvocation [26903,27127]
                SimpleName: testTypes [26903,26912]
                METHOD_INVOCATION_ARGUMENTS [26922,27126]
                    InfixExpression [26922,26981]
                        StringLiteral: "var x = {" [26922,26933]
                        INFIX_EXPRESSION_OPERATOR: + [26934,26935]
                        StringLiteral: "/** @return {number} */ a:12 };\n" [26946,26981]
                    InfixExpression [26993,27126]
                        StringLiteral: "assignment to property a of {a: function (): number}\n" [26993,27049]
                        INFIX_EXPRESSION_OPERATOR: + [27050,27051]
                        StringLiteral: "found   : number\n" [27062,27082]
                        StringLiteral: "required: function (): number" [27095,27126]
to
TypeDeclaration [1127,288387]
at 108
===
insert-tree
---
MethodDeclaration [27136,27392]
    Modifier: public [27136,27142]
    PrimitiveType: void [27143,27147]
    SimpleName: testObjLitDef5 [27148,27162]
    SimpleType [27172,27181]
        SimpleName: Exception [27172,27181]
    Block [27182,27392]
        ExpressionStatement [27188,27388]
            MethodInvocation [27188,27387]
                SimpleName: testTypes [27188,27197]
                METHOD_INVOCATION_ARGUMENTS [27207,27386]
                    InfixExpression [27207,27270]
                        StringLiteral: "var x = {};\n" [27207,27222]
                        INFIX_EXPRESSION_OPERATOR: + [27223,27224]
                        StringLiteral: "/** @return {number} */ x.a = 12;\n" [27233,27270]
                    InfixExpression [27280,27386]
                        StringLiteral: "assignment to property a of x\n" [27280,27313]
                        INFIX_EXPRESSION_OPERATOR: + [27314,27315]
                        StringLiteral: "found   : number\n" [27324,27344]
                        StringLiteral: "required: function (): number" [27355,27386]
to
TypeDeclaration [1127,288387]
at 109
===
insert-tree
---
MethodDeclaration [197726,198281]
    Modifier: public [197726,197732]
    PrimitiveType: void [197733,197737]
    SimpleName: testCast17 [197738,197748]
    SimpleType [197758,197767]
        SimpleName: Exception [197758,197767]
    Block [197768,198281]
        ExpressionStatement [197844,197961]
            MethodInvocation [197844,197960]
                SimpleName: testTypes [197844,197853]
                METHOD_INVOCATION_ARGUMENTS [197854,197959]
                    InfixExpression [197854,197959]
                        StringLiteral: "/** @constructor */ function Foo() {} \n" [197854,197896]
                        INFIX_EXPRESSION_OPERATOR: + [197897,197898]
                        StringLiteral: "/** @type {Foo} */ var x = /** @type {Foo} */ ({})" [197907,197959]
        ExpressionStatement [197967,198084]
            MethodInvocation [197967,198083]
                SimpleName: testTypes [197967,197976]
                METHOD_INVOCATION_ARGUMENTS [197977,198082]
                    InfixExpression [197977,198082]
                        StringLiteral: "/** @constructor */ function Foo() {} \n" [197977,198019]
                        INFIX_EXPRESSION_OPERATOR: + [198020,198021]
                        StringLiteral: "/** @type {Foo} */ var x = (/** @type {Foo} */ {})" [198030,198082]
        ExpressionStatement [198162,198277]
            MethodInvocation [198162,198276]
                SimpleName: testTypes [198162,198171]
                METHOD_INVOCATION_ARGUMENTS [198172,198275]
                    InfixExpression [198172,198275]
                        StringLiteral: "/** @constructor */ function Foo() {} \n" [198172,198214]
                        INFIX_EXPRESSION_OPERATOR: + [198215,198216]
                        StringLiteral: "/** @type {Foo} */ var x = /** @type {Foo} */ {}" [198225,198275]
to
TypeDeclaration [1127,288387]
at 690
===
insert-node
---
InfixExpression [197444,197592]
to
METHOD_INVOCATION_ARGUMENTS [192510,192615]
at 0
===
insert-tree
---
InfixExpression [197602,197716]
    StringLiteral: "assignment to property foo of (Object|null|number)\n" [197602,197656]
    INFIX_EXPRESSION_OPERATOR: + [197657,197658]
    StringLiteral: "found   : number\n" [197667,197687]
    StringLiteral: "required: string" [197698,197716]
to
METHOD_INVOCATION_ARGUMENTS [192510,192615]
at 1
===
insert-node
---
StringLiteral: "for (var i = 0; i < 10; i++) {" [197444,197476]
to
InfixExpression [197444,197592]
at 0
===
move-tree
---
INFIX_EXPRESSION_OPERATOR: + [192553,192554]
to
InfixExpression [197444,197592]
at 1
===
insert-node
---
StringLiteral: "var x = /** @type {Object|number} */ (" [197489,197529]
to
InfixExpression [197444,197592]
at 2
===
insert-node
---
StringLiteral: "  {/** @type {string} */ foo: 3});" [197542,197578]
to
InfixExpression [197444,197592]
at 3
===
insert-node
---
StringLiteral: "}" [197589,197592]
to
InfixExpression [197444,197592]
at 4
===
delete-node
---
StringLiteral: "/** @constructor */ function Foo() {} \n" [192510,192552]
===
===
delete-node
---
StringLiteral: "/** @type {Foo} */ var x = /** @type {Foo} */ ({})" [192563,192615]
===
===
delete-node
---
InfixExpression [192510,192615]
===
===
delete-tree
---
ExpressionStatement [192623,192740]
    MethodInvocation [192623,192739]
        SimpleName: testTypes [192623,192632]
        METHOD_INVOCATION_ARGUMENTS [192633,192738]
            InfixExpression [192633,192738]
                StringLiteral: "/** @constructor */ function Foo() {} \n" [192633,192675]
                INFIX_EXPRESSION_OPERATOR: + [192676,192677]
                StringLiteral: "/** @type {Foo} */ var x = (/** @type {Foo} */ {})" [192686,192738]
===
delete-tree
---
ExpressionStatement [192818,192933]
    MethodInvocation [192818,192932]
        SimpleName: testTypes [192818,192827]
        METHOD_INVOCATION_ARGUMENTS [192828,192931]
            InfixExpression [192828,192931]
                StringLiteral: "/** @constructor */ function Foo() {} \n" [192828,192870]
                INFIX_EXPRESSION_OPERATOR: + [192871,192872]
                StringLiteral: "/** @type {Foo} */ var x = /** @type {Foo} */ {}" [192881,192931]
