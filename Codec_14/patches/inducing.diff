diff --git a/pom.xml b/pom.xml
index 7143185..537e170 100644
--- a/pom.xml
+++ b/pom.xml
@@ -174,6 +174,13 @@
         <role>Streaming Base64</role>
       </roles>
     </contributor>
+    <contributor>
+      <name>Matthew Pocock</name>
+      <email>turingatemyhamster@gmail.com</email>
+      <roles>
+        <role>Beinder-Morse phonetic matching</role>
+      </roles>
+    </contributor>
   </contributors>
   <!-- Codec should depend on very little -->
   <dependencies>
@@ -202,6 +209,7 @@
   </properties>
   <build>
     <sourceDirectory>src/java</sourceDirectory>
+    <resources><resource><directory>src/resources</directory></resource></resources>
     <testSourceDirectory>src/test</testSourceDirectory>
     <plugins>
       <plugin>
diff --git a/src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java b/src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java
new file mode 100644
index 0000000..1f7db9c
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java
@@ -0,0 +1,114 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import org.apache.commons.codec.EncoderException;
+import org.apache.commons.codec.StringEncoder;
+
+/**
+ * <p>
+ * Encodes strings into their Beider-Morse phonetic encoding.
+ * </p>
+ * <p>
+ * Beider-Morse phonetic encodings are optimised for family names. However, they may be useful for a wide range of words.
+ * </p>
+ * <p>
+ * This encoder is intentionally mutable to allow dynamic configuration through bean properties. As such, it is mutable, and may not be
+ * thread-safe. If you require a guaranteed thread-safe encoding then use {@link PhoneticEngine} directly.
+ * </p>
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public class BeiderMorseEncoder implements StringEncoder {
+    // a cached object
+    private PhoneticEngine engine = new PhoneticEngine(NameType.GENERIC, RuleType.APPROX, true);
+
+    public Object encode(Object source) throws EncoderException {
+        if (!(source instanceof String)) {
+            throw new EncoderException("BeiderMorseEncoder encode parameter is not of type String");
+        }
+        return encode((String) source);
+    }
+
+    public String encode(String source) throws EncoderException {
+        if (source == null) {
+            return null;
+        }
+        return this.engine.encode(source);
+    }
+
+    /**
+     * Gets the name type currently in operation.
+     * 
+     * @return the NameType currently being used
+     */
+    public NameType getNameType() {
+        return this.engine.getNameType();
+    }
+
+    /**
+     * Gets the rule type currently in operation.
+     * 
+     * @return the RuleType currently being used
+     */
+    public RuleType getRuleType() {
+        return this.engine.getRuleType();
+    }
+
+    /**
+     * Discovers if multiple possible encodings are concatenated.
+     * 
+     * @return true if multiple encodings are concatenated, false if just the first one is returned
+     */
+    public boolean isConcat() {
+        return this.engine.isConcat();
+    }
+
+    /**
+     * Sets how multiple possible phonetic encodings are combined.
+     * 
+     * @param concat
+     *            true if multiple encodings are to be combined with a '|', false if just the first one is to be considered
+     */
+    public void setConcat(boolean concat) {
+        this.engine = new PhoneticEngine(this.engine.getNameType(), this.engine.getRuleType(), concat);
+    }
+
+    /**
+     * Sets the type of name. Use {@link NameType#GENERIC} unless you specifically want phoentic encodings optimized for Ashkenazi or
+     * Sephardic Jewish family names.
+     * 
+     * @param nameType
+     *            the NameType in use
+     */
+    public void setNameType(NameType nameType) {
+        this.engine = new PhoneticEngine(nameType, this.engine.getRuleType(), this.engine.isConcat());
+    }
+
+    /**
+     * Sets the rule type to apply. This will widen or narrow the range of phonetic encodings considered.
+     * 
+     * @param ruleType
+     *            {@link RuleType#APPROX} or {@link RuleType#EXACT} for approximate or exact phonetic matches
+     */
+    public void setRuleType(RuleType ruleType) {
+        this.engine = new PhoneticEngine(this.engine.getNameType(), ruleType, this.engine.isConcat());
+    }
+
+}
diff --git a/src/java/org/apache/commons/codec/language/bm/Lang.java b/src/java/org/apache/commons/codec/language/bm/Lang.java
new file mode 100644
index 0000000..c0546a3
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/Lang.java
@@ -0,0 +1,239 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.EnumMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Scanner;
+import java.util.Set;
+import java.util.regex.Pattern;
+
+/**
+ * <p>
+ * Language guessing utility.
+ * </p>
+ * <p>
+ * This class encapsulates rules used to guess the possible languages that a word originates from. This is done by reference to a whole
+ * series of rules distributed in resource files.
+ * </p>
+ * <p>
+ * Instances of this class are typically managed through the static factory method instance(). Unless you are developing your own language
+ * guessing rules, you will not need to interact with this class directly.
+ * </p>
+ * <p>
+ * This class is intended to be immutable and thread-safe.
+ * </p>
+ * <h2>Lang resources</h2
+ * <p>
+ * Language guessing rules are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named
+ * following the pattern: <blockquote>org/apache/commons/codec/language/bm/lang.txt</blockquote> The format of these resources is the
+ * following:
+ * </p>
+ * <ul>
+ * <li><b>Rules:</b> whitespace separated strings. There should be 3 columns to each row, and these will be interpreted as:
+ * <ol>
+ * <li>pattern: a regular expression.</li>
+ * <li>languages: a '+'-separated list of languages.</li>
+ * <li>acceptOnMatch: 'true' or 'false' indicating if a match rules in or rules out the language.</li>
+ * </ol>
+ * </li>
+ * <li><b>End-of-line comments:</b> Any occurance of '//' will cause all text following on that line to be discarded as a comment.</li>
+ * <li><b>Multi-line comments:</b> Any line starting with '/*' will start multi-line commenting mode. This will skip all content until a
+ * line ending in '*' and '/' is found.</li>
+ * <li><b>Blank lines:</b> All blank lines will be skipped.</li>
+ * </ul>
+ * <p/>
+ * Port of lang.php
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public class Lang {
+
+    private static class LangRule {
+        private boolean acceptOnMatch;
+        private Set<String> languages;
+        private Pattern pattern;
+
+        private LangRule(Pattern pattern, Set<String> languages, boolean acceptOnMatch) {
+            this.pattern = pattern;
+            this.languages = languages;
+            this.acceptOnMatch = acceptOnMatch;
+        }
+
+        public boolean matches(String txt) {
+            return this.pattern.matcher(txt).find();
+        }
+    }
+
+    private static final Map<NameType, Lang> Langs = new EnumMap<NameType, Lang>(NameType.class);
+
+    private static final String LANGUAGE_RULES_RN = "org/apache/commons/codec/language/bm/lang.txt";
+
+    static {
+        for (NameType s : NameType.values()) {
+            Langs.put(s, loadFromResource(LANGUAGE_RULES_RN, Languages.instance(s)));
+        }
+    }
+
+    /**
+     * Gets a Lang instance for one of the supported NameTypes.
+     * 
+     * @param nameType
+     *            the NameType to look up
+     * @return a Lang encapsulating the language guessing rules for that name type
+     */
+    public static Lang instance(NameType nameType) {
+        return Langs.get(nameType);
+    }
+
+    /**
+     * <p>
+     * Loads language rules from a resource.
+     * </p>
+     * <p>
+     * In normal use, you will obtain instances of Lang through the {@link #instance(NameType)} method. You will only need to call this
+     * yourself if you are developing custom language mapping rules.
+     * </p>
+     * 
+     * @param languageRulesResourceName
+     *            the fully-qualified resource name to load
+     * @param languages
+     *            the languages that these rules will support
+     * @return a Lang encapsulating the loaded language-guessing rules.
+     */
+    public static Lang loadFromResource(String languageRulesResourceName, Languages languages) {
+        List<LangRule> rules = new ArrayList<LangRule>();
+        InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);
+
+        if (lRulesIS == null) {
+            throw new IllegalStateException("Unable to resolve required resource:" + LANGUAGE_RULES_RN);
+        }
+
+        Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
+        boolean inExtendedComment = false;
+        while (scanner.hasNextLine()) {
+            String rawLine = scanner.nextLine();
+            String line = rawLine;
+
+            if (inExtendedComment) {
+                if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
+                    inExtendedComment = false;
+                } else {
+                    // discard doc comment line
+                }
+            } else {
+                if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
+                    inExtendedComment = true;
+                } else {
+                    // discard comments
+                    int cmtI = line.indexOf(ResourceConstants.CMT);
+                    if (cmtI >= 0) {
+                        // System.err.println("index of comment: " + cmtI);
+                        line = line.substring(0, cmtI);
+                    }
+
+                    // trim leading-trailing whitespace
+                    line = line.trim();
+
+                    if (line.length() == 0)
+                        continue; // empty lines can be safely skipped
+
+                    // split it up
+                    String[] parts = line.split("\\s+");
+                    // System.err.println("part count: " + parts.length);
+
+                    if (parts.length != 3) {
+                        // fixme: we really need to log this somewhere
+                        System.err.println("Warning: malformed line '" + rawLine + "'");
+                        continue;
+                    }
+
+                    Pattern pattern = Pattern.compile(parts[0]);
+                    String[] langs = parts[1].split("\\+");
+                    boolean accept = parts[2].equals("true");
+
+                    rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
+                }
+            }
+        }
+
+        return new Lang(rules, languages);
+    }
+
+    private final Languages languages;
+    private final List<LangRule> rules;
+
+    private Lang(List<LangRule> rules, Languages languages) {
+        this.rules = Collections.unmodifiableList(rules);
+        this.languages = languages;
+    }
+
+    /**
+     * Guesses the language of a word.
+     * 
+     * @param text
+     *            the word
+     * @return the language that the word originates from or {@link Languages#ANY} if there was no unique match
+     */
+    public String guessLanguage(String text) {
+        Set<String> ls = guessLanguages(text);
+        if (ls.size() == 1) {
+            return ls.iterator().next();
+        } else {
+            return Languages.ANY;
+        }
+    }
+
+    /**
+     * Guesses the languages of a word.
+     * 
+     * @param text
+     *            the word
+     * @return a Set of Strings of language names that are potential matches for the word
+     */
+    public Set<String> guessLanguages(String text) {
+        text = text.toLowerCase(); // todo: locale?
+        // System.out.println("Testing text: '" + text + "'");
+
+        Set<String> langs = new HashSet<String>(this.languages.getLanguages());
+        for (LangRule rule : this.rules) {
+            if (rule.matches(text)) {
+                // System.out.println("Rule " + rule.pattern + " matches " + text);
+                if (rule.acceptOnMatch) {
+                    // System.out.println("Retaining " + rule.languages);
+                    langs.retainAll(rule.languages);
+                } else {
+                    // System.out.println("Removing " + rule.languages);
+                    langs.removeAll(rule.languages);
+                }
+                // System.out.println("Current languages: " + langs);
+            } else {
+                // System.out.println("Rule " + rule.pattern + " does not match " + text);
+            }
+        }
+
+        return langs;
+    }
+}
diff --git a/src/java/org/apache/commons/codec/language/bm/Languages.java b/src/java/org/apache/commons/codec/language/bm/Languages.java
new file mode 100644
index 0000000..68968d2
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/Languages.java
@@ -0,0 +1,156 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import java.io.InputStream;
+import java.util.Collections;
+import java.util.EnumMap;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Scanner;
+import java.util.Set;
+
+/**
+ * <p>
+ * Language codes.
+ * </p>
+ * <p>
+ * Language codes are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named following the
+ * pattern:
+ * </p>
+ * <blockquote>org/apache/commons/codec/language/bm/${{@link NameType#getName()} languages.txt</blockquote>
+ * <p>
+ * The format of these resources is the following:
+ * </p>
+ * <ul>
+ * <li><b>Language:</b> a single string containing no whitespace</li>
+ * <li><b>End-of-line comments:</b> Any occurance of '//' will cause all text following on that line to be discarded as a comment.</li>
+ * <li><b>Multi-line comments:</b> Any line starting with '/*' will start multi-line commenting mode. This will skip all content until a
+ * line ending in '*' and '/' is found.</li>
+ * <li><b>Blank lines:</b> All blank lines will be skipped.</li>
+ * </ul>
+ * <p>
+ * Ported from language.php
+ * </p>
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public class Languages {
+
+    public static final String ANY = "any";
+
+    private static final Map<NameType, Languages> LANGUAGES = new EnumMap<NameType, Languages>(NameType.class);
+
+    static {
+        for (NameType s : NameType.values()) {
+            LANGUAGES.put(s, instance(langResourceName(s)));
+        }
+    }
+
+    public static Languages instance(NameType nameType) {
+        return LANGUAGES.get(nameType);
+    }
+
+    public static Languages instance(String languagesResourceName) {
+        // read languages list
+        Set<String> ls = new HashSet<String>();
+        InputStream langIS = Languages.class.getClassLoader().getResourceAsStream(languagesResourceName);
+
+        if (langIS == null) {
+            throw new IllegalArgumentException("Unable to resolve required resource: " + languagesResourceName);
+        }
+
+        Scanner lsScanner = new Scanner(langIS, ResourceConstants.ENCODING);
+        boolean inExtendedComment = false;
+        while (lsScanner.hasNextLine()) {
+            String line = lsScanner.nextLine().trim();
+            if (inExtendedComment) {
+                if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
+                    inExtendedComment = false;
+                } else {
+                    // skip
+                }
+            } else {
+                if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
+                    inExtendedComment = true;
+                } else if (line.length() > 0) {
+                    ls.add(line);
+                } else {
+                    // skip blank lines
+                }
+            }
+        }
+
+        return new Languages(Collections.unmodifiableSet(ls));
+    }
+
+    private static String langResourceName(NameType nameType) {
+        return String.format("org/apache/commons/codec/language/bm/%s_languages.txt", nameType.getName());
+    }
+
+    private final Set<String> languages;
+
+    private Languages(Set<String> languages) {
+        this.languages = languages;
+    }
+
+    public Set<String> getLanguages() {
+        return this.languages;
+    }
+
+    // // The original code mapped sets of languages to unique numerical codes - this doesn't seem to be needed in this impl
+    // public static Languages instance(String languagesResourceName)
+    // {
+    // // read languages list
+    // Map<String, Integer> ls = new HashMap<String, Integer>();
+    // InputStream langIS = Languages.class.getClassLoader().getResourceAsStream(languagesResourceName);
+    //
+    // if(langIS == null)
+    // throw new IllegalArgumentException("Unable to resolve required resource: " + languagesResourceName);
+    //
+    // Scanner lsScanner = new Scanner(langIS);
+    // int i = 0;
+    // while(lsScanner.hasNextLine()) {
+    // String line = lsScanner.nextLine();
+    // i++;
+    // ls.put(line.trim(), i^2);
+    // }
+    //
+    // return new Languages(Collections.unmodifiableSet(ls.keySet()), Collections.unmodifiableMap(ls));
+    // }
+    //
+    // // todo: phoneticutils.php: LanguageIndex, LanguageName, LanguageCode, LanguageIndexFromCode
+    //
+    //
+    // private final Set<String> languages;
+    // private final Map<String, Integer> language_codes;
+    //
+    // private Languages(Set<String> languages, Map<String, Integer> language_codes) {
+    // this.languages = languages;
+    // this.language_codes = language_codes;
+    // }
+    //
+    // public Set<String> getLanguages() {
+    // return languages;
+    // }
+    //
+    // public Map<String, Integer> getLanguage_codes() {
+    // return language_codes;
+    // }
+}
diff --git a/src/java/org/apache/commons/codec/language/bm/NameType.java b/src/java/org/apache/commons/codec/language/bm/NameType.java
new file mode 100644
index 0000000..3b5580b
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/NameType.java
@@ -0,0 +1,48 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+/**
+ * Supported types of names. Unless you are matching particular family names, use {@link #GENERIC}.
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public enum NameType {
+    /** Ashkenazi family names */
+    ASHKENAZI("ash"),
+    /** Generic names and words */
+    GENERIC("gen"),
+    /** Sephardic family names */
+    SEPHARDIC("sep");
+
+    private final String name;
+
+    NameType(String name) {
+        this.name = name;
+    }
+
+    /**
+     * Gets the short version of the name type.
+     * 
+     * @return the NameType short string
+     */
+    public String getName() {
+        return this.name;
+    }
+}
diff --git a/src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java b/src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java
new file mode 100644
index 0000000..94649d2
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java
@@ -0,0 +1,497 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.EnumMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.Set;
+
+/**
+ * <p>
+ * Conversion of words into potential phonetic representations.
+ * </p>
+ * <p>
+ * This is a two-stage process. Firstly, the word is converted into a phonetic representation that takes into account the likely source
+ * language. Next, this phonetic representation is converted into a pan-european 'average' representation, allowing comparison between
+ * different versions of essentially the same word from different languages.
+ * </p>
+ * <p>
+ * This class is intentionally immutable. If you wish to alter the settings for a PhoneticEngine, you must make a new one with the updated
+ * settings. This makes the class thread-safe.
+ * </p>
+ * <p>
+ * Ported from phoneticengine.php
+ * </p>
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public class PhoneticEngine {
+    private static final Map<NameType, Set<String>> namePfxs = new EnumMap<NameType, Set<String>>(NameType.class);
+
+    static {
+        namePfxs.put(NameType.ASHKENAZI,
+                Collections.unmodifiableSet(new HashSet<String>(Arrays.asList("bar", "ben", "da", "de", "van", "von"))));
+        namePfxs.put(NameType.SEPHARDIC, Collections.unmodifiableSet(new HashSet<String>(Arrays.asList("al", "el", "da", "dal", "de",
+                "del", "dela", "de la", "della", "des", "di", "do", "dos", "du", "van", "von"))));
+        namePfxs.put(NameType.GENERIC, Collections.unmodifiableSet(new HashSet<String>(Arrays.asList("da", "dal", "de", "del", "dela",
+                "de la", "della", "des", "di", "do", "dos", "du", "van", "von"))));
+    }
+
+    private final Lang lang;
+
+    private final NameType nameType;
+
+    private final RuleType ruleType;
+
+    private final boolean concat;
+
+    /**
+     * Generates a new, fully-configured phonetic engine.
+     * 
+     * @param nameType
+     *            the type of names it will use
+     * @param ruleType
+     *            the type of rules it will apply
+     * @param concat
+     *            if it will concatenate multiple encodings
+     */
+    public PhoneticEngine(NameType nameType, RuleType ruleType, boolean concat) {
+        if (ruleType == RuleType.RULES) {
+            throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES);
+        }
+        this.nameType = nameType;
+        this.ruleType = ruleType;
+        this.concat = concat;
+        this.lang = Lang.instance(nameType);
+    }
+
+    /**
+     * Gets the Lang language guessing rules being used.
+     * 
+     * @return the Lang in use
+     */
+    public Lang getLang() {
+        return this.lang;
+    }
+
+    /**
+     * Gets the NameType being used.
+     * 
+     * @return the NameType in use
+     */
+    public NameType getNameType() {
+        return this.nameType;
+    }
+
+    /**
+     * Gets the RuleType being used.
+     * 
+     * @return the RuleType in use
+     */
+    public RuleType getRuleType() {
+        return this.ruleType;
+    }
+
+    /**
+     * Gets if multiple phonetic encodings are concatenated or if just the first one is kept.
+     * 
+     * @return true if multiple phonetic encodings are returned, false if just the first is.
+     */
+    public boolean isConcat() {
+        return this.concat;
+    }
+
+    /**
+     * Encodes a string to its phonetic representation.
+     * 
+     * @param input
+     *            the String to encode
+     * @return the encoding of the input
+     */
+    public String encode(String input) {
+        Set<String> languageArg = this.lang.guessLanguages(input);
+        return phoneticUtf8(input, languageArg);
+    }
+
+    /**
+     * Encodes an input string into an output phonetic representation, given a set of possible origin languages.
+     * 
+     * @param input
+     *            String to phoneticise; a String with dashes or spaces separating each word
+     * @param languageArg
+     * @return a phonetic representation of the input; a String containing '-'-separated phonetic representations of the input
+     */
+    public String phoneticUtf8(String input, final Set<String> languageArg) {
+        List<Rule> rules = Rule.instance(this.nameType, RuleType.RULES, languageArg);
+        List<Rule> finalRules1 = Rule.instance(this.nameType, this.ruleType, "common");
+        List<Rule> finalRules2 = Rule.instance(this.nameType, this.ruleType, languageArg);
+
+        // tidy the input
+        // lower case is a locale-dependent operation
+        input = input.toLowerCase(Locale.ENGLISH).replace('-', ' ').trim();
+
+        if (this.nameType == NameType.GENERIC) {
+            for (String l : namePfxs.get(this.nameType)) {
+                // handle generic prefixes
+                if (input.startsWith(l + " ")) {
+                    // check for any prefix in the words list
+                    String remainder = input.substring(l.length() + 1); // input without the prefix
+                    String combined = l + remainder; // input with prefix without space
+                    return encode(remainder) + "-" + encode(combined);
+                }
+                // fixme: this case is invariant on l
+                else if (input.length() >= 2 && input.substring(0, 2).equals("d'")) // check for d'
+                {
+                    String remainder = input.substring(2);
+                    String combined = "d" + remainder;
+                    return encode(remainder) + "-" + encode(combined);
+                }
+            }
+        }
+
+        final List<String> words = Arrays.asList(input.split("\\s+"));
+        final List<String> words2 = new ArrayList<String>();
+
+        switch (this.nameType) {
+        case SEPHARDIC:
+            for (String aWord : words) {
+                String[] parts = aWord.split("'");
+                String lastPart = parts[parts.length - 1];
+                words2.add(lastPart);
+            }
+            words2.removeAll(namePfxs.get(this.nameType));
+            break;
+        case ASHKENAZI:
+            words2.addAll(words);
+            words2.removeAll(namePfxs.get(this.nameType));
+            break;
+        case GENERIC:
+            words2.addAll(words);
+            break;
+        default:
+            throw new IllegalStateException("Unreachable case: " + this.nameType);
+        }
+
+        if (this.concat) {
+            // concat mode enabled
+            input = join(words2, " ");
+        } else if (words2.size() == 1) {
+            // not a multi-word name
+            input = words.iterator().next();
+        } else {
+            // encode each word in a multi-word name separately (normally used for approx matches)
+            StringBuilder result = new StringBuilder();
+            for (String word : words2) {
+                result.append("-").append(encode(word));
+            }
+            // return the result without the leading "-"
+            return result.substring(1);
+        }
+
+        String phonetic = "";
+
+        // loop over each char in the input - we will handle the increment manually
+        for (int i = 0; i < input.length();) {
+            RulesApplication rulesApplication = new RulesApplication(rules, languageArg, input, phonetic, i).invoke();
+            i = rulesApplication.getI();
+            phonetic = rulesApplication.getPhonetic();
+        }
+
+        phonetic = applyFinalRules(phonetic, finalRules1, languageArg, false);
+        phonetic = applyFinalRules(phonetic, finalRules2, languageArg, true);
+
+        return phonetic;
+    }
+
+    private String removeDuplicateAlternates(final String phonetic) {
+        List<String> altArray = splitOnPipe(phonetic);
+
+        String result = "|";
+        for (String alt : altArray) {
+            if (!result.contains("|" + alt + "|")) {
+                result += (alt + "|");
+            }
+        }
+
+        result = result.substring(1, result.length() - 1);
+        return result;
+    }
+
+    private String normalizeLanguageAttributes(String text, final boolean strip) {
+        // this is applied to a single alternative at a time -- not to a parenthisized list
+        // it removes all embedded bracketed attributes, logically-ands them together, and places them at the end.
+
+        // however if strip is true, this can indeed remove embedded bracketed attributes from a parenthesized list
+
+        Set<String> langs = new HashSet<String>();
+
+        int bracketStart;
+        while ((bracketStart = text.indexOf('[')) != -1) {
+            int bracketEnd = text.indexOf(']', bracketStart);
+            if (bracketEnd == -1) {
+                throw new IllegalArgumentException("no closing square bracket in: " + text);
+            }
+
+            String body = text.substring(bracketStart + 1, bracketEnd);
+            langs.addAll(Arrays.asList(body.split("[+]")));
+            text = text.substring(0, bracketStart) + text.substring(bracketEnd + 1);
+        }
+
+        if (langs.isEmpty() || strip) {
+            return text;
+        } else if (langs.contains(Languages.ANY)) {
+            return "[" + Languages.ANY + "]";
+        } else {
+            return text + "[" + (join(langs, "+")) + "]";
+        }
+    }
+
+    private String applyFinalRules(String phonetic, List<Rule> finalRules, Set<String> languageArg, boolean strip) {
+        if (finalRules == null) {
+            throw new NullPointerException("finalRules can not be null");
+        }
+        if (finalRules.isEmpty()) {
+            return phonetic;
+        }
+
+        phonetic = expand(phonetic);
+        // must protect | in [] as split takes a regex, not a string literal
+        List<String> phoneticArray = splitOnPipe(phonetic);
+
+        for (int k = 0; k < phoneticArray.size(); k++) {
+            // log("k: " + k);
+
+            String aPhonetic = phoneticArray.get(k);
+            String phonetic2 = "";
+
+            String phoneticx = normalizeLanguageAttributes(aPhonetic, true);
+            for (int i = 0; i < aPhonetic.length();) {
+                // we will handle the increment manually
+                if (aPhonetic.substring(i, i + 1).equals("[")) {
+                    int attribStart = i;
+                    i++;
+                    while (true) {
+                        i++;
+                        String nextChar = aPhonetic.substring(i, i + 1);
+                        if (nextChar.equals("]")) {
+                            phonetic2 += aPhonetic.substring(attribStart, i);
+                            break;
+                        }
+                    }
+
+                    continue;
+                }
+
+                RulesApplication rulesApplication = new RulesApplication(finalRules, languageArg, phoneticx, phonetic2, i).invoke();
+                boolean found = rulesApplication.isFound();
+                phonetic2 = rulesApplication.getPhonetic();
+
+                if (!found) {
+                    phonetic2 += aPhonetic.substring(i, i + 1);
+                }
+
+                i = rulesApplication.getI();
+            }
+
+            phoneticArray.set(k, expand(phonetic2));
+        }
+
+        phonetic = join(phoneticArray, "|");
+        if (strip) {
+            phonetic = normalizeLanguageAttributes(phonetic, true);
+        }
+        if (!phonetic.contains("|")) {
+            phonetic = "(" + removeDuplicateAlternates(phonetic) + ")";
+        }
+
+        return phonetic;
+    }
+
+    private String expand(String phonetic) {
+        int altStart = phonetic.indexOf('(');
+        if (altStart == -1) {
+            return normalizeLanguageAttributes(phonetic, false);
+        }
+
+        String prefix = phonetic.substring(0, altStart);
+        altStart++;
+        int altEnd = phonetic.indexOf(')');
+        String altString = phonetic.substring(altStart, altEnd);
+        altEnd++;
+        String suffix = phonetic.substring(altEnd);
+        List<String> altArray = splitOnPipe(altString);
+
+        String result = "";
+        for (String alt : altArray) {
+            String alternate = expand(prefix + alt + suffix);
+            if (alternate.length() != 0 && !alternate.equals("[any]")) {
+                if (result.length() > 0) {
+                    result += "|";
+                }
+                result += alternate;
+            }
+        }
+
+        return result;
+    }
+
+    private String applyRuleIfCompatible(String phonetic, String target, Set<String> languageArg) {
+        // tests for compatible language rules
+        // to do so, apply the rule, expand the results, and detect alternatives with incompatible attributes
+        // then drop each alternative that has incompatible attributes and keep those that are compatible
+        // if there are no compatible alternatives left, return false
+        // otherwise return the compatible alternatives
+
+        String candidate = phonetic + target;
+        if (!candidate.contains("[")) {
+            return candidate;
+        }
+
+        candidate = expand(candidate);
+        List<String> candidateArray = splitOnPipe(candidate);
+
+        candidate = "";
+        boolean found = false;
+
+        for (String thisCandidate : candidateArray) {
+            if (!languageArg.contains(Languages.ANY)) {
+                thisCandidate = normalizeLanguageAttributes(thisCandidate + "[" + languageArg + "]", false);
+            }
+
+            if (!thisCandidate.equals("[0]")) {
+                found = true;
+                if (candidate.length() != 0) {
+                    candidate += "|";
+                }
+                candidate += thisCandidate;
+            }
+        }
+
+        if (!found) {
+            return null; // eugh!
+        }
+        if (candidate.contains("|")) {
+            candidate = "(" + candidate + ")";
+        }
+
+        return candidate;
+    }
+
+    private static String join(Iterable<String> strings, String sep) {
+        StringBuilder sb = new StringBuilder();
+        Iterator<String> si = strings.iterator();
+        if (si.hasNext()) {
+            sb.append(si.next());
+        }
+        while (si.hasNext()) {
+            sb.append(sep).append(si.next());
+        }
+
+        return sb.toString();
+    }
+
+    private static List<String> splitOnPipe(String str) {
+        List<String> res = new ArrayList<String>();
+
+        while (true) {
+            int i = str.indexOf('|');
+            if (i < 0) {
+                res.add(str);
+                break;
+            }
+
+            res.add(str.substring(0, i));
+            str = str.substring(i + 1);
+        }
+
+        return res;
+    }
+
+    private class RulesApplication {
+        private final List<Rule> finalRules;
+        private final Set<String> languageArg;
+        private final String input;
+
+        private String phonetic;
+        private int i;
+        private boolean found;
+
+        public RulesApplication(List<Rule> finalRules, Set<String> languageArg, String input, String phonetic, int i) {
+            if (finalRules == null) {
+                throw new NullPointerException("The finalRules argument must not be null");
+            }
+            this.finalRules = finalRules;
+            this.languageArg = languageArg;
+            this.phonetic = phonetic;
+            this.input = input;
+            this.i = i;
+        }
+
+        public String getPhonetic() {
+            return this.phonetic;
+        }
+
+        public int getI() {
+            return this.i;
+        }
+
+        public boolean isFound() {
+            return this.found;
+        }
+
+        public RulesApplication invoke() {
+            this.found = false;
+            int patternLength = 0;
+            RULES: for (Rule rule : this.finalRules) {
+                String pattern = rule.getPattern();
+                patternLength = pattern.length();
+                // log("trying pattern: " + pattern);
+
+                if (!rule.patternAndContextMatches(this.input, this.i) || !rule.languageMatches(this.languageArg)) {
+                    // log("no match");
+                    continue RULES;
+                }
+
+                String candidate = applyRuleIfCompatible(this.phonetic, rule.getPhoneme(), this.languageArg);
+
+                if (candidate == null || candidate.length() == 0) {
+                    // log("no candidate");
+                    continue RULES;
+                }
+                this.phonetic = candidate;
+                this.found = true;
+                break RULES;
+            }
+
+            if (!this.found) {
+                patternLength = 1;
+            }
+
+            this.i += patternLength;
+            return this;
+        }
+    }
+}
diff --git a/src/java/org/apache/commons/codec/language/bm/ResourceConstants.java b/src/java/org/apache/commons/codec/language/bm/ResourceConstants.java
new file mode 100644
index 0000000..c3fb774
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/ResourceConstants.java
@@ -0,0 +1,33 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+/**
+ * Constants used to process resource files.
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+class ResourceConstants {
+
+    static final String CMT = "//";
+    static final String ENCODING = "UTF-8";
+    static final String EXT_CMT_END = "*/";
+    static final String EXT_CMT_START = "/*";
+
+}
diff --git a/src/java/org/apache/commons/codec/language/bm/Rule.java b/src/java/org/apache/commons/codec/language/bm/Rule.java
new file mode 100644
index 0000000..4593065
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/Rule.java
@@ -0,0 +1,385 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.EnumMap;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Scanner;
+import java.util.Set;
+import java.util.regex.Pattern;
+
+/**
+ * <p>
+ * A phoneme rule.
+ * </p>
+ * <p>
+ * Rules have a pattern, left context, right context, output phoneme, set of languages for which they apply and a logical flag indicating if
+ * all lanugages must be in play. A rule matches if:
+ * <ul>
+ * <li>the pattern matches at the current position</li>
+ * <li>the string up until the beginning of the pattern matches the left context</li>
+ * <li>the string from the end of the pattern matches the right context</li>
+ * <li>logical is ALL and all languages are in scope; or</li>
+ * <li>logical is any other value and at least one language is in scope</li>
+ * </ul>
+ * </p>
+ * <p>
+ * Rules are typically generated by parsing rules resources. In normal use, there will be no need for the user to explicitly construct their
+ * own.
+ * </p>
+ * <p>
+ * Rules are immutable and thread-safe.
+ * <h2>Rules resources</h2>
+ * <p>
+ * Rules are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named following the pattern:
+ * <blockquote>org/apache/commons/codec/language/bm/${NameType#getName}_${RuleType#getName}_${language}.txt</blockquote>
+ * </p>
+ * <p>
+ * The format of these resources is the following:
+ * <ul>
+ * <li><b>Rules:</b> whitespace separated, double-quoted strings. There should be 4 columns to each row, and these will be interpreted as:
+ * <ol>
+ * <li>pattern</li>
+ * <li>left context</li>
+ * <li>right context</li>
+ * <li>phoneme</li>
+ * </ol>
+ * </li>
+ * <li><b>End-of-line comments:</b> Any occurance of '//' will cause all text following on that line to be discarded as a comment.</li>
+ * <li><b>Multi-line comments:</b> Any line starting with '/*' will start multi-line commenting mode. This will skip all content until a
+ * line ending in '*' and '/' is found.</li>
+ * <li><b>Blank lines:</b> All blank lines will be skipped.</li>
+ * </ul>
+ * </p>
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public class Rule {
+    private static final String DOUBLE_QUOTE = "\"";
+
+    public static final String ALL = "ALL";
+
+    private static final String HASH_INCLUDE = "#include";
+
+    private static final Map<NameType, Map<RuleType, Map<String, List<Rule>>>> RULES = new EnumMap<NameType, Map<RuleType, Map<String, List<Rule>>>>(
+            NameType.class);
+
+    static {
+        for (NameType s : NameType.values()) {
+            Map<RuleType, Map<String, List<Rule>>> rts = new EnumMap<RuleType, Map<String, List<Rule>>>(RuleType.class);
+
+            for (RuleType rt : RuleType.values()) {
+                Map<String, List<Rule>> rs = new HashMap<String, List<Rule>>();
+
+                Languages ls = Languages.instance(s);
+                for (String l : ls.getLanguages()) {
+                    rs.put(l, parseRules(mkScanner(s, rt, l)));
+                }
+                if (!rt.equals(RuleType.RULES)) {
+                    rs.put("common", parseRules(mkScanner(s, rt, "common")));
+                }
+
+                rts.put(rt, Collections.unmodifiableMap(rs));
+            }
+
+            RULES.put(s, Collections.unmodifiableMap(rts));
+        }
+    }
+
+    /**
+     * Gets rules for a combination of name type, rule type and languages.
+     * 
+     * @param nameType
+     *            the NameType to consider
+     * @param rt
+     *            the RuleType to consider
+     * @param langs
+     *            the set of languages to consider
+     * @return a list of Rules that apply
+     */
+    public static List<Rule> instance(NameType nameType, RuleType rt, Set<String> langs) {
+        if (langs.size() == 1) {
+            return instance(nameType, rt, langs.iterator().next());
+        } else {
+            return instance(nameType, rt, "any");
+        }
+    }
+
+    /**
+     * Gets rules for a combination of name type, rule type and a single language.
+     * 
+     * @param nameType
+     *            the NameType to consider
+     * @param rt
+     *            the RuleType to consider
+     * @param lang
+     *            the language to consider
+     * @return a list rules for a combination of name type, rule type and a single language.
+     */
+    public static List<Rule> instance(NameType nameType, RuleType rt, String lang) {
+        List<Rule> rules = RULES.get(nameType).get(rt).get(lang);
+
+        if (rules == null) {
+            throw new IllegalArgumentException(String.format("No rules found for %s, %s, %s.", nameType.getName(), rt.getName(), lang));
+        }
+
+        return rules;
+    }
+
+    private static Scanner mkScanner(NameType nameType, RuleType rt, String lang) {
+        String resName = String.format("org/apache/commons/codec/language/bm/%s_%s_%s.txt", nameType.getName(), rt.getName(), lang);
+        InputStream rulesIS = Languages.class.getClassLoader().getResourceAsStream(resName);
+
+        if (rulesIS == null) {
+            throw new IllegalArgumentException("Unable to load resource: " + resName);
+        }
+
+        return new Scanner(rulesIS, ResourceConstants.ENCODING);
+    }
+
+    private static Scanner mkScanner(String lang) {
+        String resName = String.format("org/apache/commons/codec/language/bm/%s.txt", lang);
+        InputStream rulesIS = Languages.class.getClassLoader().getResourceAsStream(resName);
+
+        if (rulesIS == null) {
+            throw new IllegalArgumentException("Unable to load resource: " + resName);
+        }
+
+        return new Scanner(rulesIS, ResourceConstants.ENCODING);
+    }
+
+    private static List<Rule> parseRules(Scanner scanner) {
+        List<Rule> lines = new ArrayList<Rule>();
+
+        boolean inMultilineComment = false;
+        while (scanner.hasNextLine()) {
+            String rawLine = scanner.nextLine();
+            String line = rawLine;
+
+            if (inMultilineComment) {
+                if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
+                    inMultilineComment = false;
+                } else {
+                    // skip
+                }
+            } else {
+                if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
+                    inMultilineComment = true;
+                } else {
+                    // discard comments
+                    int cmtI = line.indexOf(ResourceConstants.CMT);
+                    if (cmtI >= 0) {
+                        line = line.substring(0, cmtI);
+                    }
+
+                    // trim leading-trailing whitespace
+                    line = line.trim();
+
+                    if (line.length() == 0)
+                        continue; // empty lines can be safely skipped
+
+                    if (line.startsWith(HASH_INCLUDE)) {
+                        // include statement
+                        String incl = line.substring(HASH_INCLUDE.length()).trim();
+                        if (incl.contains(" ")) {
+                            System.err.println("Warining: malformed import statement: " + rawLine);
+                        } else {
+                            lines.addAll(parseRules(mkScanner(incl)));
+                        }
+                    } else {
+                        // rule
+                        String[] parts = line.split("\\s+");
+                        if (parts.length != 4) {
+                            System.err.println("Warning: malformed rule statement split into " + parts.length + " parts: " + rawLine);
+                        } else {
+                            String pat = stripQuotes(parts[0]);
+                            String lCon = stripQuotes(parts[1]);
+                            String rCon = stripQuotes(parts[2]);
+                            String ph = stripQuotes(parts[3]);
+                            Rule r = new Rule(pat, lCon, rCon, ph, Collections.<String> emptySet(), ""); // guessing last 2 parameters
+                            lines.add(r);
+                        }
+                    }
+                }
+            }
+        }
+
+        return lines;
+    }
+
+    private static String stripQuotes(String str) {
+        if (str.startsWith(DOUBLE_QUOTE)) {
+            str = str.substring(1);
+        }
+
+        if (str.endsWith(DOUBLE_QUOTE)) {
+            str = str.substring(0, str.length() - 1);
+        }
+
+        return str;
+    }
+
+    private Set<String> language;
+
+    private Pattern lContext;
+
+    private String logical;
+
+    private String pattern;
+
+    private String phoneme;
+
+    private Pattern rContext;
+
+    /**
+     * Creates a new rule.
+     * 
+     * @param pattern
+     *            the pattern
+     * @param lContext
+     *            the left context
+     * @param rContext
+     *            the right context
+     * @param phoneme
+     *            the resulting phoneme
+     * @param language
+     *            the required languages
+     * @param logical
+     *            flag to indicate if all or only some languages must be in scope
+     */
+    public Rule(String pattern, String lContext, String rContext, String phoneme, Set<String> language, String logical) {
+        this.pattern = pattern;
+        this.lContext = Pattern.compile(lContext + "$");
+        this.rContext = Pattern.compile("^" + rContext + ".*");
+        this.phoneme = phoneme;
+        this.language = language;
+        this.logical = logical;
+    }
+
+    /**
+     * Gets the languages that must be in scope. Not all rules apply in every language.
+     * 
+     * @return a Set of Strings giving the relevant languages
+     */
+    public Set<String> getLanguage() {
+        return this.language;
+    }
+
+    /**
+     * Gets the left context. This is a regular expression that must match to the left of the pattern.
+     * 
+     * @return the left context Pattern
+     */
+    public Pattern getLContext() {
+        return this.lContext;
+    }
+
+    /**
+     * Gets the logical combinator for the languages. ALL means all languages must be in scope for the rule to apply. Any other value means
+     * that any one language must be in scope for the rule to apply.
+     * 
+     * @return the logical combinator String
+     */
+    public String getLogical() {
+        return this.logical;
+    }
+
+    /**
+     * Gets the pattern. This is a string-literal that must exactly match.
+     * 
+     * @return the pattern
+     */
+    public String getPattern() {
+        return this.pattern;
+    }
+
+    /**
+     * Gets the phoneme. If the rule matches, this is the phoneme associated with the pattern match.
+     * 
+     * @return the phoneme
+     */
+    public String getPhoneme() {
+        return this.phoneme;
+    }
+
+    /**
+     * Gets the right context. This is a regular expression that must match to the right of the pattern.
+     * 
+     * @return the right context Pattern
+     */
+    public Pattern getRContext() {
+        return this.rContext;
+    }
+
+    /**
+     * Decides if the language restriction for this rule applies.
+     * 
+     * @param languageArg
+     *            a Set of Strings giving the names of the languages in scope
+     * @return true if these satistfy the language and logical restrictions on this rule, false otherwise
+     */
+    public boolean languageMatches(Set<String> languageArg) {
+        if (!languageArg.contains(Languages.ANY) && !this.language.isEmpty()) {
+            if (ALL.equals(this.logical) && !languageArg.containsAll(this.language)) {
+                return false;
+            } else {
+                Set<String> isect = new HashSet<String>(languageArg);
+                isect.retainAll(this.language);
+                return !isect.isEmpty();
+            }
+        } else {
+            return true;
+        }
+    }
+
+    /**
+     * Decides if the pattern and context match the input starting at a position.
+     * 
+     * @param input
+     *            the input String
+     * @param i
+     *            the int position within the input
+     * @return true if the pattern and left/right context match, false otherwise
+     */
+    public boolean patternAndContextMatches(String input, int i) {
+        if (i < 0)
+            throw new IndexOutOfBoundsException("Can not match pattern at negative indexes");
+
+        int patternLength = this.pattern.length();
+        int ipl = i + patternLength;
+
+        if (ipl > input.length()) {
+            // not enough room for the pattern to match
+            return false;
+        }
+
+        boolean patternMatches = input.substring(i, ipl).equals(this.pattern);
+        boolean rContextMatches = this.rContext.matcher(input.substring(ipl)).find();
+        boolean lContextMatches = this.lContext.matcher(input.substring(0, i)).find();
+
+        return patternMatches && rContextMatches && lContextMatches;
+    }
+
+}
diff --git a/src/java/org/apache/commons/codec/language/bm/RuleType.java b/src/java/org/apache/commons/codec/language/bm/RuleType.java
new file mode 100644
index 0000000..9479635
--- /dev/null
+++ b/src/java/org/apache/commons/codec/language/bm/RuleType.java
@@ -0,0 +1,40 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+/**
+ * Types of rule.
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public enum RuleType {
+
+    APPROX("approx"), EXACT("exact"), RULES("rules");
+
+    private final String name;
+
+    RuleType(String name) {
+        this.name = name;
+    }
+
+    public String getName() {
+        return this.name;
+    }
+
+}
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_any.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_any.txt
new file mode 100644
index 0000000..3f4f4c9
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_any.txt
@@ -0,0 +1,153 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// CONSTONANTS
+"ph"    ""  ""  "f" // foreign
+"sh"    ""  ""  "S" // foreign
+"kh"    ""  ""  "x" // foreign
+
+"gli"   ""  ""  "(gli|l[italian])"
+"gni"   ""  ""  "(gni|ni[italian+french])"
+"gn"    ""  "[aeou]"    "(n[italian+french]|nj[italian+french]|gn)
+"gh"    ""  ""  "g" // It + translit. from Arabic
+"dh"    ""  ""  "d" // translit. from Arabic
+"bh"    ""  ""  "d" // translit. from Arabic
+"th"    ""  ""  "t" // translit. from Arabic
+"lh"    ""  ""  "l" // Port
+"nh"    ""  ""  "nj" // Port
+
+"ig"    "[aeiou]"   ""  "(ig|tS[spanish])"
+"ix"    "[aeiou]"   ""  "S" // Sp
+"tx"    ""  ""  "tS" // Sp
+"tj"    ""  "$"  "tS" // Sp
+"tj"    ""  ""  "dZ" // Sp
+"tg"    ""  ""  "(tg|dZ[spanish])"
+
+"gi"    ""  "[aeou]"    "dZ" // Italian
+"g" ""  "y" "Z" // French
+"gg"    ""  "[ei]"  "(gZ[portuguese+french]|dZ[italian+spanish]|x[spanish])"
+"g" ""  "[ei]"  "(Z[portuguese+french]|dZ[italian+spanish]|x[spanish])"
+
+"guy"   ""  ""  "gi"
+"gue"   ""  "$" "(k[french]|ge)"
+"gu"    ""  "[ei]"  "(g|gv") // not It
+"gu"    ""  "[ao]"  "gv" // not It
+
+"ñ" ""  ""  "(n|nj)"
+"ny"    ""  ""  "nj"
+
+"sc"    ""  "[ei]"  "(s|S[italian])"
+"sç"    ""  "[aeiou]"   "s" // not It
+"ss"    ""  ""  "s"
+"ç" ""  ""  "s"   // not It
+
+"ch"    ""  "[ei]"  "(k[italian]|S[portuguese+french]|tS[spanish]|dZ[spanish])"
+"ch"    ""  ""  "(S|tS[spanish]|dZ[spanish])"
+
+"ci"    ""  "[aeou]"    "(tS[italian]|si)"
+"cc"	""	"[eiyéèê]"	"(tS[italian]|ks[portuguese+french+spanish])"
+"c"	""	"[eiyéèê]"	"(tS[italian]|s[portuguese+french+spanish])"
+   //array("c"	""	"[aou]"	"(k|C[".($portuguese+$spanish)."])" // "C" means that the actual letter could be "ç" (cedille omitted)
+
+"s"	"^"	""	"s"
+"s"	"[aáuiíoóeéêy]"	"[aáuiíoóeéêy]"	"(s[spanish]|z[portuguese+french+italian])"
+"s"	""	"[dglmnrv]"	"(z|Z[portuguese])"
+
+"z"	""	"$"	"(s|ts[italian]|S[portuguese])" // ts It, s/S/Z Port, s in Sp, z Fr
+"z"	""	"[bdgv]"	"(z|dz[italian]|Z[portuguese])" // dz It, Z/z Port, z Sp & Fr
+"z"	""	"[ptckf]"	"(s|ts[italian]|S[portuguese])" // ts It, s/S/z Port, z/s Sp
+"z"	""	""	"(z|dz[italian]|ts[italian]|s[spanish])" // ts/dz It, z Port & Fr, z/s Sp
+
+"que"	""	"$"	"(k[french]|ke)"
+"qu"	""	"[eiu]"	"k"
+"qu"	""	"[ao]"	"(kv|k)" // k is It
+
+"ex"	""	"[aáuiíoóeéêy]"	"(ez[portuguese]|eS[portuguese]|eks|egz)"
+"ex"	""	"[cs]"	"(e[portuguese]|ek)"
+
+"m"	""	"[cdglnrst]"	"(m|n[portuguese])"
+"m"	""	"[bfpv]"	"(m|n[portuguese+spanish])"
+"m"	""	"$"	"(m|n[portuguese])"
+
+"b"	"^"	""	"(b|V[spanish])"
+"v"	"^"	""	"(v|B[spanish])"
+
+ // VOWELS
+"eau"	""	""	"o" // Fr
+
+"ouh"	""	"[aioe]"	"(v[french]|uh)"
+"uh"	""	"[aioe]"	"(v|uh)"
+"ou"	""	"[aioe]"	"v" // french
+"uo"	""	""	"(vo|o)"
+"u"	""	"[aie]"	"v"
+
+"i"	"[aáuoóeéê]"	""	"j"
+"i"	""	"[aeou]"	"j"
+"y"	"[aáuiíoóeéê]"	""	"j"
+"y"	""	"[aeiíou]"	"j"
+"e"	""	"$"	"(e|E[$french])"
+
+"ão"	""	""	"(au|an)" // Port
+"ãe"	""	""	"(aj|an)" // Port
+"ãi"	""	""	"(aj|an)" // Port
+"õe"	""	""	"(oj|on)" // Port
+"où"	""	""	"u" // Fr
+"ou"	""	""	"(ou|u[french])"
+
+"â"	""	""	"a" // Port & Fr
+"à"	""	""	"a" // Port
+"á"	""	""	"a" // Port & Sp
+"ã"	""	""	"(a|an)" // Port
+"é"	""	""	"e"
+"ê"	""	""	"e" // Port & Fr
+"è"	""	""	"e" // Sp & Fr & It
+"í"	""	""	"i" // Port & Sp
+"î"	""	""	"i" // Fr
+"ô"	""	""	"o" // Port & Fr
+"ó"	""	""	"o" // Port & Sp & It
+"õ"	""	""	"(o|on)" // Port
+"ò"	""	""	"o"  // Sp & It
+"ú"	""	""	"u" // Port & Sp
+"ü"	""	""	"u" // Port & Sp
+
+ // LATIN ALPHABET
+"a"	""	""	"a"
+"b"	""	""	"(b|v[spanish])"
+"c"	""	""	"k"
+"d"	""	""	"d"
+"e"	""	""	"e"
+"f"	""	""	"f"
+"g"	""	""	"g"
+"h"	""	""	"h"
+"i"	""	""	"i"
+"j"	""	""	"(x[spanish]|Z)" // not It
+"k"	""	""	"k"
+"l"	""	""	"l"
+"m"	""	""	"m"
+"n"	""	""	"n"
+"o"	""	""	"o"
+"p"	""	""	"p"
+"q"	""	""	"k"
+"r"	""	""	"r"
+"s"	""	""	"(s|S[portuguese])"
+"t"	""	""	"t"
+"u"	""	""	"u"
+"v"	""	""	"(v|b[spanish])"
+"w"	""	""	"v"    // foreign
+"x"	""	""	"(ks|gz|S[portuguese+spanish])"   // S/ks Port & Sp, gz Sp, It only ks
+"y"	""	""	"i"
+"z"	""	""	"z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_common.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_common.txt
new file mode 100644
index 0000000..db128b6
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_common.txt
@@ -0,0 +1,219 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_approx_common
+
+// REGRESSIVE ASSIMILATION OF CONSONANTS
+"n"	""	"[bp]"	"m" 
+
+// PECULIARITY OF "h" 
+"h"	""	""	"" 
+"H"	""	""	"(x|)" 
+
+// POLISH OGONEK IMPOSSIBLE
+"F", "", "[bdgkpstvzZ]h", "e" 
+"F", "", "[bdgkpstvzZ]x", "e" 
+"B", "", "[bdgkpstvzZ]h", "a" 
+"B", "", "[bdgkpstvzZ]x", "a" 
+
+// "e" and "i" ARE TO BE OMITTED BEFORE (SYLLABIC) n & l: Halperin=Halpern; Frankel = Frankl, Finkelstein = Finklstein
+"e", "[bdfgklmnprsStvzZ]", "[ln]$", ""
+"i", "[bdfgklmnprsStvzZ]", "[ln]$", ""
+"E", "[bdfgklmnprsStvzZ]", "[ln]$", ""
+"I", "[bdfgklmnprsStvzZ]", "[ln]$", ""
+"F", "[bdfgklmnprsStvzZ]", "[ln]$", ""
+"Q", "[bdfgklmnprsStvzZ]", "[ln]$", ""
+"Y", "[bdfgklmnprsStvzZ]", "[ln]$", ""
+
+"e", "[bdfgklmnprsStvzZ]", "[ln][bdfgklmnprsStvzZ]", ""
+"i", "[bdfgklmnprsStvzZ]", "[ln][bdfgklmnprsStvzZ]", ""
+"E", "[bdfgklmnprsStvzZ]", "[ln][bdfgklmnprsStvzZ]", ""
+"I", "[bdfgklmnprsStvzZ]", "[ln][bdfgklmnprsStvzZ]", ""
+"F", "[bdfgklmnprsStvzZ]", "[ln][bdfgklmnprsStvzZ]", ""
+"Q", "[bdfgklmnprsStvzZ]", "[ln][bdfgklmnprsStvzZ]", ""
+"Y", "[bdfgklmnprsStvzZ]", "[ln][bdfgklmnprsStvzZ]", ""
+
+"lEs"	""	""	"(lEs|lz)"  // Applebaum < Appelbaum (English + blend English-something forms as Finklestein)
+"lE"	"[bdfgkmnprStvzZ]"	""	"(lE|l)"  // Applebaum < Appelbaum (English + blend English-something forms as Finklestein)
+
+// SIMPLIFICATION: (TRIPHTHONGS & DIPHTHONGS) -> ONE GENERIC DIPHTHONG "D"
+"aue"	""	""	"D"
+"oue"	""	""	"D"
+    
+"AvE"	""	""	"(D|AvE)"
+"Ave"	""	""	"(D|Ave)"
+"avE"	""	""	"(D|avE)"
+"ave"	""	""	"(D|ave)"
+    
+"OvE"	""	""	"(D|OvE)"
+"Ove"	""	""	"(D|Ove)"
+"ovE"	""	""	"(D|ovE)"
+"ove"	""	""	"(D|ove)"
+    
+"ea"	""	""	"(D|ea)"
+"EA"	""	""	"(D|EA)"
+"Ea"	""	""	"(D|Ea)"
+"eA"	""	""	"(D|eA)"
+             
+"aji"	""	""	"D"
+"ajI"	""	""	"D"
+"aje"	""	""	"D"
+"ajE"	""	""	"D"
+    
+"Aji"	""	""	"D"
+"AjI"	""	""	"D"
+"Aje"	""	""	"D"
+"AjE"	""	""	"D"
+    
+"oji"	""	""	"D"
+"ojI"	""	""	"D"
+"oje"	""	""	"D"
+"ojE"	""	""	"D"
+    
+"Oji"	""	""	"D"
+"OjI"	""	""	"D"
+"Oje"	""	""	"D"
+"OjE"	""	""	"D"
+    
+"eji"	""	""	"D"
+"ejI"	""	""	"D"
+"eje"	""	""	"D"
+"ejE"	""	""	"D"
+    
+"Eji"	""	""	"D"
+"EjI"	""	""	"D"
+"Eje"	""	""	"D"
+"EjE"	""	""	"D"
+    
+"uji"	""	""	"D"
+"ujI"	""	""	"D"
+"uje"	""	""	"D"
+"ujE"	""	""	"D"
+    
+"Uji"	""	""	"D"
+"UjI"	""	""	"D"
+"Uje"	""	""	"D"
+"UjE"	""	""	"D"
+        
+"iji"	""	""	"D"
+"ijI"	""	""	"D"
+"ije"	""	""	"D"
+"ijE"	""	""	"D"
+    
+"Iji"	""	""	"D"
+"IjI"	""	""	"D"
+"Ije"	""	""	"D"
+"IjE"	""	""	"D"
+                         
+"aja"	""	""	"D"
+"ajA"	""	""	"D"
+"ajo"	""	""	"D"
+"ajO"	""	""	"D"
+"aju"	""	""	"D"
+"ajU"	""	""	"D"
+    
+"Aja"	""	""	"D"
+"AjA"	""	""	"D"
+"Ajo"	""	""	"D"
+"AjO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+    
+"oja"	""	""	"D"
+"ojA"	""	""	"D"
+"ojo"	""	""	"D"
+"ojO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+    
+"Oja"	""	""	"D"
+"OjA"	""	""	"D"
+"Ojo"	""	""	"D"
+"OjO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+    
+"eja"	""	""	"D"
+"ejA"	""	""	"D"
+"ejo"	""	""	"D"
+"ejO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+    
+"Eja"	""	""	"D"
+"EjA"	""	""	"D"
+"Ejo"	""	""	"D"
+"EjO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+    
+"uja"	""	""	"D"
+"ujA"	""	""	"D"
+"ujo"	""	""	"D"
+"ujO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+        
+"Uja"	""	""	"D"
+"UjA"	""	""	"D"
+"Ujo"	""	""	"D"
+"UjO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+        
+"ija"	""	""	"D"
+"ijA"	""	""	"D"
+"ijo"	""	""	"D"
+"ijO"	""	""	"D"
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+    
+"Ija"	""	""	"D"
+"IjA"	""	""	"D"
+"Ijo"	""	""	"D"
+"IjO"	""	""	"D"                         
+"Aju"	""	""	"D"
+"AjU"	""	""	"D"
+                         
+"j"	""	""	"i"                         
+                         
+// lander = lender = länder 
+"lYndEr"	""	"$"	"lYnder" 
+"lander"	""	"$"	"lYnder" 
+"lAndEr"	""	"$"	"lYnder" 
+"lAnder"	""	"$"	"lYnder" 
+"landEr"	""	"$"	"lYnder" 
+"lender"	""	"$"	"lYnder" 
+"lEndEr"	""	"$"	"lYnder" 
+"lendEr"	""	"$"	"lYnder" 
+"lEnder"	""	"$"	"lYnder" 
+             
+// CONSONANTS {z & Z; s & S} are approximately interchangeable
+"s", "", "[rmnl]", "z"
+"S", "", "[rmnl]", "z"
+"s", "[rmnl]", "", "z"
+"S", "[rmnl]", "", "z" 
+    
+"dS", "", "$", "S"
+"dZ", "", "$", "S"
+"Z", "", "$", "S"
+"S", "", "$", "(S|s)"
+"z", "", "$", "(S|s)"
+    
+"S", "", "", "s"
+"dZ", "", "", "z"
+"Z", "", "", "z"
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_cyrillic.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_cyrillic.txt
new file mode 100644
index 0000000..4210173
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_cyrillic.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_approx_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_english.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_english.txt
new file mode 100644
index 0000000..84d8174
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_english.txt
@@ -0,0 +1,47 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// VOWELS
+"I" "" "[^aEIeiou]e" "(Q|i|D)" // like in "five"
+"I" "" "$" "i"
+"I" "[aEIeiou]" "" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "" "" "(i|Q)" 
+    
+"lE" "[bdfgkmnprsStvzZ]" "" "(il|li|lY)"  // Applebaum < Appelbaum
+         
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+        
+"E" "D[^aeiEIou]" "" "(i|)" // Weinberg, Shaneberg (shaneberg/shejneberg) --> shejnberg
+"e" "D[^aeiEIou]" "" "(i|)" 
+
+"e" "" "" "i"
+"E" "" "[fklmnprsStv]$" "i"
+"E" "" "ts$" "i"
+"E" "[DaoiEuQY]" "" "i"
+"E" "" "[aoQY]" "i"
+"E" "" "" "(Y|i)"
+      
+"a" "" "" "(a|o)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_french.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_french.txt
new file mode 100644
index 0000000..fa8ee99
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_french.txt
@@ -0,0 +1,40 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"I" "" "$" "i"
+"I" "[aEIeiou]" "" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "" "" "(i|Q)" 
+
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+      
+"a" "" "" "(a|o)" 
+"e" "" "" "i" 
+    
+"E" "" "[fklmnprsStv]$" "i"
+"E" "" "ts$" "i"
+"E" "[aoiuQ]" "" "i"
+"E" "" "[aoQ]" "i"
+"E" "" "" "(Y|i)"
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_german.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_german.txt
new file mode 100644
index 0000000..78cc0f8
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_german.txt
@@ -0,0 +1,72 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"I" "" "$" "i"
+"I" "[aeiAEIOUouQY]" "" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "" "" "(Q|i)" 
+    
+"AU" "" "" "(D|a|u)"
+"aU" "" "" "(D|a|u)"
+"Au" "" "" "(D|a|u)"
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"OU" "" "" "(D|o|u)"
+"oU" "" "" "(D|o|u)"
+"Ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"Ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"Oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+"Ui" "" "" "(D|u|i)"
+        
+"e" "" "" "i" 
+  
+"E" "" "[fklmnprst]$" "i"
+"E" "" "ts$" "i"
+"E" "" "$" "i"
+"E" "[DaoAOUiuQY]" "" "i"
+"E" "" "[aoAOQY]" "i"
+"E" "" "" "(Y|i)" 
+       
+"O" "" "$" "o"
+"O" "" "[fklmnprst]$" "o"
+"O" "" "ts$" "o"
+"O" "[aoAOUeiuQY]" "" "o"
+"O" "" "" "(o|Y)"
+    
+"a" "" "" "(a|o)" 
+  
+"A" "" "$" "(a|o)" 
+"A" "" "[fklmnprst]$" "(a|o)"
+"A" "" "ts$" "(a|o)"
+"A" "[aoeOUiuQY]" "" "(a|o)"
+"A" "" "" "(a|o|Y)" 
+
+"U" "" "$" "u"
+"U" "[DaoiuUQY]" "" "u"
+"U" "" "[^k]$" "u"
+"Uk" "[lr]" "$" "(uk|Qk)"
+"Uk" "" "$" "uk"
+"sUts" "" "$" "(suts|sQts)"
+"Uts" "" "$" "uts"
+"U" "" "" "(u|Q)" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_hebrew.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_hebrew.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_hungarian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_hungarian.txt
new file mode 100644
index 0000000..bb950fb
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_hungarian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_polish.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_polish.txt
new file mode 100644
index 0000000..7f49817
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_polish.txt
@@ -0,0 +1,83 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"aiB" "" "[bp]" "(D|Dm)"
+"oiB" "" "[bp]" "(D|Dm)" 
+"uiB" "" "[bp]" "(D|Dm)" 
+"eiB" "" "[bp]" "(D|Dm)"
+"EiB" "" "[bp]" "(D|Dm)"
+"iiB" "" "[bp]" "(D|Dm)"
+"IiB" "" "[bp]" "(D|Dm)"
+    
+"aiB" "" "[dgkstvz]" "(D|Dn)"
+"oiB" "" "[dgkstvz]" "(D|Dn)" 
+"uiB" "" "[dgkstvz]" "(D|Dn)" 
+"eiB" "" "[dgkstvz]" "(D|Dn)"
+"EiB" "" "[dgkstvz]" "(D|Dn)"
+"iiB" "" "[dgkstvz]" "(D|Dn)"
+"IiB" "" "[dgkstvz]" "(D|Dn)"
+      
+"B" "" "[bp]" "(o|om|im)" 
+"B" "" "[dgkstvz]" "(o|on|in)" 
+"B" "" "" "o"
+    
+"aiF" "" "[bp]" "(D|Dm)"
+"oiF" "" "[bp]" "(D|Dm)" 
+"uiF" "" "[bp]" "(D|Dm)" 
+"eiF" "" "[bp]" "(D|Dm)"
+"EiF" "" "[bp]" "(D|Dm)"
+"iiF" "" "[bp]" "(D|Dm)"
+"IiF" "" "[bp]" "(D|Dm)"
+        
+"aiF" "" "[dgkstvz]" "(D|Dn)"
+"oiF" "" "[dgkstvz]" "(D|Dn)" 
+"uiF" "" "[dgkstvz]" "(D|Dn)" 
+"eiF" "" "[dgkstvz]" "(D|Dn)"
+"EiF" "" "[dgkstvz]" "(D|Dn)"
+"iiF" "" "[dgkstvz]" "(D|Dn)"
+"IiF" "" "[dgkstvz]" "(D|Dn)"
+            
+"F" "" "[bp]" "(i|im|om)"
+"F" "" "[dgkstvz]" "(i|in|on)"
+"F" "" "" "i" 
+    
+"P" "" "" "(o|u)" 
+    
+"I" "" "$" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "[aeiAEBFIou]" "" "i"
+"I" "" "" "(i|Q)" 
+
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+    
+"a" "" "" "(a|o)" 
+"e" "" "" "i" 
+
+"E" "" "[fklmnprst]$" "i"
+"E" "" "ts$" "i"
+"E" "" "$" "i"
+"E" "[DaoiuQ]" "" "i"
+"E" "" "[aoQ]" "i"
+"E" "" "" "(Y|i)" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_romanian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_romanian.txt
new file mode 100644
index 0000000..295debf
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_romanian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_approx_polish
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_russian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_russian.txt
new file mode 100644
index 0000000..46d6a8c
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_russian.txt
@@ -0,0 +1,47 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"I" "" "$" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "[aeiEIou]" "" "i"
+"I" "" "" "(i|Q)" 
+        
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+
+"om" "" "[bp]" "(om|im)" 
+"on" "" "[dgkstvz]" "(on|in)" 
+"em" "" "[bp]" "(im|om)" 
+"en" "" "[dgkstvz]" "(in|on)" 
+"Em" "" "[bp]" "(im|Ym|om)" 
+"En" "" "[dgkstvz]" "(in|Yn|on)" 
+                    
+"a" "" "" "(a|o)" 
+"e" "" "" "i" 
+    
+"E" "" "[fklmnprsStv]$" "i"
+"E" "" "ts$" "i"
+"E" "[DaoiuQ]" "" "i"
+"E" "" "[aoQ]" "i"
+"E" "" "" "(Y|i)" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_approx_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/ash_approx_spanish.txt
new file mode 100644
index 0000000..bb950fb
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_approx_spanish.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_any.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_any.txt
new file mode 100644
index 0000000..e6abc2d
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_any.txt
@@ -0,0 +1,52 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// These rules are applied after the word has been transliterated into the phonetic alphabet
+// These rules are substitution rules within the phonetic character space rather than mapping rules
+
+// format of each entry rule in the table
+//   (pattern, left context, right context, phonetic)
+// where
+//   pattern is a sequence of characters that might appear after a word has been transliterated into phonetic alphabet
+//   left context is the context that precedes the pattern
+//   right context is the context that follows the pattern
+//   phonetic is the result that this rule generates
+//
+// note that both left context and right context can be regular expressions
+// ex: left context of ^ would mean start of word
+//     right context of $ means end of word
+//
+// match occurs if all of the following are true:
+//   portion of word matches the pattern
+//   that portion satisfies the context
+
+// A, E, I, O, P, U should create variants, but a, e, i, o, u should not create any new variant
+// Q = ü ; Y = ä = ö
+
+
+"A" "" "" "a"
+"B" "" "" "a"
+
+"E" "" "" "e"
+"F" "" "" "e"
+
+"I" "" "" "i"
+"O" "" "" "o"
+"P" "" "" "o"
+"U" "" "" "u"
+
+"J" "" "" "l"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_approx_common.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_approx_common.txt
new file mode 100644
index 0000000..0a8d121
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_approx_common.txt
@@ -0,0 +1,82 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Ashkenazic
+    
+"h" "" "$" ""
+// VOICED - UNVOICED CONSONANTS
+"b" "" "[fktSs]" "p"
+"b" "" "p" ""
+"b" "" "$" "p"
+"p" "" "[gdZz]" "b"
+"p" "" "b" ""
+    
+"v" "" "[pktSs]" "f"
+"v" "" "f" ""
+"v" "" "$" "f"
+"f" "" "[bgdZz]" "v"
+"f" "" "v" ""
+    
+"g" "" "[pftSs]" "k"
+"g" "" "k" ""
+"g" "" "$" "k"
+"k" "" "[bdZz]" "g"
+"k" "" "g" ""
+    
+"d" "" "[pfkSs]" "t"
+"d" "" "t" ""
+"d" "" "$" "t"
+"t" "" "[bgZz]" "d"
+"t" "" "d" ""
+
+"s" "" "dZ" ""
+"s" "" "tS" ""
+    
+"z" "" "[pfkSt]" "s"
+"z" "" "[sSzZ]" ""
+"s" "" "[sSzZ]" ""
+"Z" "" "[sSzZ]" ""
+"S" "" "[sSzZ]" ""
+       
+// SIMPLIFICATION OF CONSONANT CLUSTERS
+
+"jnm" "" "" "jm"
+
+// DOUBLE --> SINGLE
+
+"ji" "^" "" "i"
+"jI" "^" "" "I"
+    
+"a" "" "[aAB]" "" 
+"a" "[AB]" "" "" 
+"A" "" "A" ""
+"B" "" "B" ""
+    
+"b" "" "b" ""
+"d" "" "d" ""
+"f" "" "f" ""
+"g" "" "g" ""
+"k" "" "k" ""
+"l" "" "l" ""
+"m" "" "m" ""
+"n" "" "n" ""
+"p" "" "p" ""
+"r" "" "r" ""
+"t" "" "t" ""
+"v" "" "v" ""
+"z" "" "z" ""
+    
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_common.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_common.txt
new file mode 100644
index 0000000..7e6ff95
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_common.txt
@@ -0,0 +1,33 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_approx_common
+
+"H" "" "" "h"
+ 
+// VOICED - UNVOICED CONSONANTS
+
+"s" "[^t]" "[bgZd]" "z"
+"Z" "" "[pfkst]" "S"
+"Z" "" "$" "S"
+"S" "" "[bgzd]" "Z"
+"z" "" "$" "s"
+    
+"ji" "[aAoOeEiIuU]" "" "j"
+"jI" "[aAoOeEiIuU]" "" "j"
+"je" "[aAoOeEiIuU]" "" "j"
+"jE" "[aAoOeEiIuU]" "" "j"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_cyrillic.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_cyrillic.txt
new file mode 100644
index 0000000..d309ead
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_cyrillic.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_english.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_english.txt
new file mode 100644
index 0000000..d309ead
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_english.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_french.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_french.txt
new file mode 100644
index 0000000..d309ead
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_french.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_german.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_german.txt
new file mode 100644
index 0000000..a60f8cc
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_german.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_any
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_hebrew.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_hebrew.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_hungarian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_hungarian.txt
new file mode 100644
index 0000000..d309ead
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_hungarian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_polish.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_polish.txt
new file mode 100644
index 0000000..ba32ce7
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_polish.txt
@@ -0,0 +1,23 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"B" "" "" "a"
+"F" "" "" "e"
+"P" "" "" "o"
+
+"E" "" "" "e"
+"I" "" "" "i"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_romanian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_romanian.txt
new file mode 100644
index 0000000..d309ead
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_romanian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_russian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_russian.txt
new file mode 100644
index 0000000..fc9f14d
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_russian.txt
@@ -0,0 +1,19 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"E" "" "" "e"
+"I "" "" "i"
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_exact_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/ash_exact_spanish.txt
new file mode 100644
index 0000000..d309ead
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_exact_spanish.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_hebrew_common.txt b/src/resources/org/apache/commons/codec/language/bm/ash_hebrew_common.txt
new file mode 100644
index 0000000..b1c6501
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_hebrew_common.txt
@@ -0,0 +1,118 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include ash_exact_approx_common
+
+"ts" "" "" "C" // for not confusion Gutes [=guts] and Guts [=guc]
+"tS" "" "" "C" // same reason
+"S" "" "" "s"
+"p" "" "" "f"   
+"b" "^" "" "b"    
+"b" "" "" "(b|v)"    
+        
+"ja" "" "" "i"
+"jA" "" "" "i"
+"jB" "" "" "i"
+"je" "" "" "i"
+"jE" "" "" "i"
+"jF" "" "" "i"
+"aj" "" "" "i"
+"Aj" "" "" "i"
+"Bj" "" "" "i"
+"Fj" "" "" "i"
+"I" "" "" "i"
+"Q" "" "" "i"
+"j" "" "" "i"
+    
+"a" "^" "" "1"
+"A" "^" "" "1"
+"B" "^" "" "1"
+"e" "^" "" "1"
+"E" "^" "" "1"
+"F" "^" "" "1"
+"Y" "^" "" "1"
+    
+"a" "" "$" "1"
+"A" "" "$" "1"
+"B" "" "$" "1"
+"e" "" "$" "1"
+"E" "" "$" "1"
+"F" "" "$" "1"
+"Y" "" "$" "1"
+        
+"a" "" "" ""
+"A" "" "" ""
+"B" "" "" ""
+"e" "" "" ""
+"E" "" "" ""
+"F" "" "" ""
+"Y" "" "" ""
+   
+"oj" "^" "" "(u|vi)"
+"Oj" "^" "" "(u|vi)"
+"uj" "^" "" "(u|vi)"
+"Uj" "^" "" "(u|vi)" 
+    
+"oj" "" "" "u"
+"Oj" "" "" "u"
+"uj" "" "" "u"
+"Uj" "" "" "u" 
+    
+"ou" "^" "" "(u|v|1)"
+"o" "^" "" "(u|v|1)"
+"O" "^" "" "(u|v|1)"
+"U" "^" "" "(u|v|1)"
+"u" "^" "" "(u|v|1)"
+    
+"o" "" "$" "(u|1)"
+"O" "" "$" "(u|1)"
+"u" "" "$" "(u|1)"
+"U" "" "$" "(u|1)"
+    
+"ou" "" "" "u"
+"o" "" "" "u"
+"O" "" "" "u"
+"U" "" "" "u"
+        
+"VV" "" "" "u" // alef/ayin + vov from ruleshebrew
+"V" "" "" "v" // tsvey-vov from ruleshebrew;; only Ashkenazic
+"L" "^" "" "1" // alef/ayin from ruleshebrew
+"L" "" "$" "1" // alef/ayin from ruleshebrew
+"L" "" "" " " // alef/ayin from ruleshebrew
+"WW" "^" "" "(vi|u)" // vav-yod from ruleshebrew
+"WW" "" "" "u" // vav-yod from ruleshebrew
+"W" "^" "" "(u|v)" // vav from ruleshebrew
+"W" "" "" "u" // vav from ruleshebrew
+    
+    //"g" "" "" "(g|Z)"
+    //"z" "" "" "(z|Z)"
+    //"d" "" "" "(d|dZ)"
+       
+"TB" "" "$" "(t|s)" // tav from ruleshebrew; only Ashkenazic
+"TB" "" "" "t" // tav from ruleshebrew; only Ashkenazic
+"T" "" "" "t"   // tet from ruleshebrew
+    
+   //"k" "" "" "(k|x)"
+   //"x" "" "" "(k|x)"
+"K" "" "" "k" // kof and initial kaf from ruleshebrew
+"X" "" "" "x" // khet and final kaf from ruleshebrew
+    
+"H" "^" "" "(x|1)"
+"H" "" "$" "(x|1)"
+"H" "" "" "(x|)"
+"h" "^" "" "1"
+"h" "" "" ""
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_languages.txt b/src/resources/org/apache/commons/codec/language/bm/ash_languages.txt
new file mode 100644
index 0000000..8c84c51
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_languages.txt
@@ -0,0 +1,28 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+any
+cyrillic
+english
+french
+german
+hebrew
+hungarian
+polish
+romanian
+russian
+spanish
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_any.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_any.txt
new file mode 100644
index 0000000..9960ada
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_any.txt
@@ -0,0 +1,332 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+//ASHKENAZIC
+
+// CONVERTING FEMININE TO MASCULINE
+"yna" "" "$" "(in[russian]|ina)"
+"ina" "" "$" "(in[russian]|ina)"
+"liova" "" "$" "(lof[russian]|lef[russian]|lova)"
+"lova" "" "$" "(lof[russian]|lef[russian]|lova)"
+"ova" "" "$" "(of[russian]|ova)"
+"eva" "" "$" "(ef[russian]|eva)"
+"aia" "" "$" "(aja|i[russian])"
+"aja" "" "$" "(aja|i[russian])"
+"aya" "" "$" "(aja|i[russian])"
+    
+"lowa" "" "$" "(lova|lof[polish]|l[polish]|el[polish])"
+"kowa" "" "$" "(kova|kof[polish]|k[polish]|ek[polish])"
+"owa" "" "$" "(ova|of[polish]|)"
+"lowna" "" "$" "(lovna|levna|l[polish]|el[polish])"
+"kowna" "" "$" "(kovna|k[polish]|ek[polish])"
+"owna" "" "$" "(ovna|[polish])"
+"lówna" "" "$" "(l|el[polish])"  // polish
+"kówna" "" "$" "(k|ek[polish])"  // polish
+"ówna" "" "$" ""   // polish
+    
+"a" "" "$" "(a|i[polish])"
+    
+// CONSONANTS  (integrated: German, Polish, Russian, Romanian and English)
+
+"rh" "^" "" "r"
+"ssch" "" "" "S" 
+"chsch" "" "" "xS" 
+"tsch" "" "" "tS" 
+    
+"sch" "" "[ei]" "(sk[romanian]|S|StS[russian])" // german
+"sch" "" "" "(S|StS[russian])" // german
+            
+"ssh" "" "" "S" 
+    
+"sh" "" "[äöü]" "sh" // german
+"sh" "" "[aeiou]" "(S[russian+english]|sh)"
+"sh" "" "" "S" // russian+english
+    
+"kh" "" "" "(x[russian+english]|kh)"
+    
+"chs" "" "" "(ks[german]|xs|tSs[russian+english])"
+    
+    // French "ch" is currently disabled
+    //array("ch" "" "[ei]" "(x|tS|k[romanian]|S[french])"
+    //array("ch" "" "" "(x|tS[russian+english]|S[french])"
+    
+"ch" "" "[ei]" "(x|k[romanian]|tS[russian+english])"
+"ch" "" "" "(x|tS[russian+english])"
+        
+"ck" "" "" "(k|tsk[polish])"
+        
+"czy" "" "" "tSi"
+"cze" "" "[bcdgkpstwzż]" "(tSe|tSF)"
+"ciewicz" "" "" "(tsevitS|tSevitS)"
+"siewicz" "" "" "(sevitS|SevitS)"
+"ziewicz" "" "" "(zevitS|ZevitS)"
+"riewicz" "" "" "rjevitS" 
+"diewicz" "" "" "djevitS" 
+"tiewicz" "" "" "tjevitS" 
+"iewicz" "" "" "evitS"
+"ewicz" "" "" "evitS"
+"owicz" "" "" "ovitS"
+"icz" "" "" "itS"
+"cz" "" "" "tS" // Polish
+    
+"cia" "" "[bcdgkpstwzż]" "(tSB[polish]|tsB)"
+"cia" "" "" "(tSa[$polish]|tsa)" 
+"cią" "" "[bp]" "(tSom[polish]|tsom)"
+"cią" "" "" "(tSon[polish]|tson)"
+"cię" "" "[bp]" "(tSem[polish]|tsem)"
+"cię" "" "" "(tSen[polish]|tsen)"
+"cie" "" "[bcdgkpstwzż]" "(tSF[polish]|tsF)"
+"cie" "" "" "(tSe[polish]|tse)"
+"cio" "" "" "(tSo[polish]|tso)"
+"ciu" "" "" "(tSu[polish]|tsu)"
+
+"ci" "" "$" "(tsi[polish]|tSi[polish+romanian]|tS[romanian]|si)"
+"ci" "" "" "(tsi[polish]|tSi[polish+romanian]|si)"
+"ce" "" "[bcdgkpstwzż]" "(tsF[polish]|tSe[polish+romanian]|se)"
+"ce" "" "" "(tSe[polish+romanian]|tse[polish]|se)"
+"cy" "" "" "(si|tsi[polish])"
+              
+"ssz" "" "" "S" // Polish
+"sz" "" "" "S" // Polish; actually could also be Hungarian /s/, disabled here 
+    
+"ssp" "" "" "(Sp[german]|sp)"
+"sp" "" "" "(Sp[german]|sp)"
+"sst" "" "" "(St[german]|st)"
+"st" "" "" "(St[german]|st)"
+"ss" "" "" "s" 
+    
+"sia" "" "[bcdgkpstwzż]" "(SB[polish]|sB[polish]|sja)"
+"sia" "" "" "(Sa[polish]|sja)"
+"sią" "" "[bp]" "(Som[polish]|som)"
+"sią" "" "" "(Son[polish]|son)"
+"się" "" "[bp]" "(Sem[polish]|sem)"
+"się" "" "" "(Sen[polish]|sen)"
+"sie" "" "[bcdgkpstwzż]" "(SF[polish]|sF|zi[german])"
+"sie" "" "" "(se|Se[polish]|zi[german])"
+"sio" "" "" "(So[polish]|so)"
+"siu" "" "" "(Su[polish]|sju)"
+"si" "" "" "(Si[polish]|si|zi[german])"
+"s" "" "[aeiouäöë]" "(s|z[german])"
+        
+"gue" "" "" "ge" 
+"gui" "" "" "gi" 
+"guy" "" "" "gi" 
+"gh" "" "[ei]" "(g[romanian]|gh)"
+    
+"gauz" "" "$" "haus" 
+"gaus" "" "$" "haus" 
+"gol'ts" "" "$" "holts" 
+"golts" "" "$" "holts" 
+"gol'tz" "" "$" "holts" 
+"goltz" "" "" "holts" 
+"gol'ts" "^" "" "holts" 
+"golts" "^" "" "holts" 
+"gol'tz" "^" "" "holts" 
+"goltz" "^" "" "holts" 
+"gendler" "" "$" "hendler" 
+"gejmer" "" "$" "hajmer" 
+"gejm" "" "$" "hajm" 
+"geymer" "" "$" "hajmer" 
+"geym" "" "$" "hajm" 
+"geimer" "" "$" "hajmer" 
+"geim" "" "$" "hajm" 
+"gof" "" "$" "hof" 
+    
+"ger" "" "$" "ger" 
+"gen" "" "$" "gen" 
+"gin" "" "$" "gin" 
+    
+"gie" "" "$" "(ge|gi[german]|ji[french])"
+"gie" "" "" "ge" 
+"ge" "[yaeiou]" "" "(gE|xe[spanish]|dZe[english+romanian])"
+"gi" "[yaeiou]" "" "(gI|xi[spanish]|dZi[english+romanian])"
+"ge" "" "" "(gE|dZe[english+romanian]|hE[russian]|xe[spanish])"
+"gi" "" "" "(gI|dZi[english+romanian]|hI[russian]|xi[spanish])"
+"gy" "" "[aeouáéóúüöőű]" "(gi|dj[hungarian])"
+"gy" "" "" "(gi|d[hungarian])"
+"g" "[jyaeiou]" "[aouyei]" "g" 
+"g" "" "[aouei]" "(g|h[russian])"
+              
+"ej" "" "" "(aj|eZ[french+romanian]|ex[spanish])"
+"ej" "" "" "aj"
+    
+"ly" "" "[au]" "l" 
+"li" "" "[au]" "l" 
+"lj" "" "[au]" "l" 
+"lio" "" "" "(lo|le[russian])"
+"lyo" "" "" "(lo|le[russian])"
+"ll" "" "" "(l|J[spanish])"
+  
+"j" "" "[aoeiuy]" "(j|dZ[english]|x[spanish]|Z[french+romanian])"
+"j" "" "" "(j|x[spanish])"
+                       
+"pf" "" "" "(pf|p|f)" 
+"ph" "" "" "(ph|f)"
+    
+"qu" "" "" "(kv[german]|k)"
+        
+"rze" "t" "" "(Se[polish]|re)" // polish
+"rze" "" "" "(rze|rtsE[german]|Ze[polish]|re[polish]|rZe[polish])"
+"rzy" "t" "" "(Si[polish]|ri)" // polish
+"rzy" "" "" "(Zi[polish]|ri[polish]|rZi)"
+"rz" "t" "" "(S[polish]|r)" // polish
+"rz" "" "" "(rz|rts[german]|Z[polish]|r[polish]|rZ[polish])" // polish
+    
+"tz" "" "$" "(ts|tS[english+german])"
+"tz" "^" "" "(ts|tS[english+german])"
+"tz" "" "" "(ts[english+german+russian]|tz)"
+    
+"zh" "" "" "(Z|zh[polish]|tsh[german])"
+        
+"zia" "" "[bcdgkpstwzż]" "(ZB[polish]|zB[polish]|zja)"
+"zia" "" "" "(Za[polish]|zja)"
+"zią" "" "[bp]" "(Zom[polish]|zom)"
+"zią" "" "" "(Zon[polish]|zon)"
+"zię" "" "[bp]" "(Zem[polish]|zem)"
+"zię" "" "" "(Zen[polish]|zen)"
+"zie" "" "[bcdgkpstwzż]" "(ZF[polish]|zF[polish]|ze|tsi[german])"
+"zie" "" "" "(ze|Ze[polish]|tsi[german])"
+"zio" "" "" "(Zo[polish]|zo)"
+"ziu" "" "" "(Zu[polish]|zju)"
+"zi" "" "" "(Zi[polish]|zi|tsi[german])"
+            
+"thal" "" "$" "tal" 
+"th" "^" "" "t" 
+"th" "" "[aeiou]" "(t[german]|th)"
+"th" "" "" "t" // german 
+"vogel" "" "" "(vogel|fogel[german])"
+"v" "^" "" "(v|f[german])"
+        
+"h" "[aeiouyäöü]" "" "" //german
+"h" "" "" "(h|x[".(romanian+polish)."])"
+"h" "^" "" "(h|H[".(english+german)."])" // H can be exact "h" or approximate "kh"
+    
+ // VOWELS  
+"yi" "^" "" "i"
+    
+    //"e" "" "$" "(e|)"  // French & English rule disabled except for final -ine
+"e" "in" "$" "(e|[french])"
+    
+"ii" "" "$" "i" // russian
+"iy" "" "$" "i" // russian
+"yy" "" "$" "i" // russian
+"yi" "" "$" "i" // russian
+"yj" "" "$" "i" // russian
+"ij" "" "$" "i" // russian
+    
+"aue" "" "" "aue" 
+"oue" "" "" "oue" 
+    
+"au" "" "" "(au|o[french])"
+"ou" "" "" "(ou|u[french])"
+        
+"ue" "" "" "(Q|uje[russian])"
+"ae" "" "" "(Y[german]|aje[russian]|ae)"
+"oe" "" "" "(Y[german]|oje[russian]|oe)"
+"ee" "" "" "(i[english]|aje[russian]|e)"
+    
+"ei" "" "" "aj"
+"ey" "" "" "aj"
+"eu" "" "" "(aj[german]|oj[german]|eu)"
+    
+"i" "[aou]" "" "j"
+"y" "[aou]" "" "j"
+    
+"ie" "" "[bcdgkpstwzż]" "(i[german]|e[polish]|ije[russian]|je)"
+"ie" "" "" "(i[german]|e[polish]|ije[russian]|je)"
+"ye" "" "" "(je|ije[russian])"
+         
+"i" "" "[au]" "j"
+"y" "" "[au]" "j"
+"io" "" "" "(jo|e[russian])"
+"yo" "" "" "(jo|e[russian])"
+            
+"ea" "" "" "(ea|ja[romanian])"
+"e" "^" "" "(e|je[russian])"
+"oo" "" "" "(u[english]|o)"
+"uu" "" "" "u" 
+    
+// LANGUAGE SPECIFIC CHARACTERS 
+"ć" "" "" "(tS[polish]|ts)"  // polish
+"ł" "" "" "l"  // polish
+"ń" "" "" "n"  // polish
+"ñ" "" "" "(n|nj[spanish])"
+"ś" "" "" "(S[polish]|s)" // polish
+"ş" "" "" "S"  // romanian
+"ţ" "" "" "ts"  // romanian
+"ż" "" "" "Z"  // polish
+"ź" "" "" "(Z[polish]|z)" // polish
+
+"où" "" "" "u" // french
+    
+"ą" "" "[bp]" "om"  // polish
+"ą" "" "" "on"  // polish
+"ä" "" "" "Y"  // german
+"á" "" "" "a" // hungarian
+"ă" "" "" "(e[romanian]|a)" //romanian
+"à" "" "" "a"  // french
+"â" "" "" "a" //french+romanian
+"é" "" "" "e" 
+"è" "" "" "e" // french
+"ê" "" "" "e" // french
+"ę" "" "[bp]" "em"  // polish
+"ę" "" "" "en"  // polish
+"í" "" "" "i" 
+"î" "" "" "i" 
+"ö" "" "" "Y"
+"ő" "" "" "Y" // hungarian
+"ó" "" "" "(u[polish]|o)"
+"ű" "" "" "Q" 
+"ü" "" "" "Q"
+"ú" "" "" "u" 
+"ű" "" "" "Q" // hungarian
+  
+"ß" "" "" "s"  // german
+"'" "" "" "" 
+"\"" "" "" ""
+       
+"a" "" "[bcdgkpstwzż]" "(A|B[polish])"
+"e" "" "[bcdgkpstwzż]" "(E|F[polish])"
+"o" "" "[bcćdgklłmnńrsśtwzźż]" "(O|P[polish])"
+  
+  // LATIN ALPHABET
+"a" "" "" "A"
+"b" "" "" "b"
+"c" "" "" "(k|ts[polish])"
+"d" "" "" "d"
+"e" "" "" "E"  
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h" 
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "O"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "U"
+"v" "" "" "v"
+"w" "" "" "v" // English disabled
+"x" "" "" "ks" 
+"y" "" "" "i"
+"z" "" "" "(ts[german]|z)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_cyrillic.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_cyrillic.txt
new file mode 100644
index 0000000..d262587
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_cyrillic.txt
@@ -0,0 +1,100 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"ця" "" "" "tsa"
+"цю" "" "" "tsu" 
+"циа" "" "" "tsa" 
+"цие" "" "" "tse" 
+"цио" "" "" "tso"   
+"циу" "" "" "tsu" 
+"сие" "" "" "se" 
+"сио" "" "" "so"   
+"зие" "" "" "ze" 
+"зио" "" "" "zo"   
+        
+"гауз" "" "$" "haus" 
+"гаус" "" "$" "haus" 
+"гольц" "" "$" "holts" 
+"геймер" "" "$" "hajmer" 
+"гейм" "" "$" "hajm" 
+"гоф" "" "$" "hof" 
+"гер" "" "$" "ger" 
+"ген" "" "$" "gen" 
+"гин" "" "$" "gin" 
+"г" "(й|ё|я|ю|ы|а|е|о|и|у)" "(а|е|о|и|у)" "g" 
+"г" "" "(а|е|о|и|у)" "(g|h)" 
+    
+"ля" "" "" "la"   
+"лю" "" "" "lu"   
+"лё" "" "" "(le|lo)"   
+"лио" "" "" "(le|lo)"   
+"ле" "" "" "(lE|lo)"   
+    
+"ийе" "" "" "je" 
+"ие" "" "" "je" 
+"ыйе" "" "" "je" 
+"ые" "" "" "je" 
+"ий" "" "(а|о|у)" "j" 
+"ый" "" "(а|о|у)" "j" 
+    
+"ий" "" "$" "i"
+"ый" "" "$" "i"
+    
+"ё" "" "" "(e|jo)"
+        
+"ей" "^" "" "(jaj|aj)"
+"е" "(а|е|о|у)" "" "je"
+"е" "^" "" "je"
+"эй" "" "" "aj"
+"ей" "" "" "aj"
+        
+"ауе" "" "" "aue"
+"ауэ" "" "" "aue"
+    
+"а" "" "" "a"
+"б" "" "" "b"
+"в" "" "" "v"
+"г" "" "" "g"
+"д" "" "" "d"
+"е" "" "" "E"
+"ж" "" "" "Z"
+"з" "" "" "z"
+"и" "" "" "I"
+"й" "" "" "j"
+"к" "" "" "k"
+"л" "" "" "l"
+"м" "" "" "m"
+"н" "" "" "n"
+"о" "" "" "o"
+"п" "" "" "p"
+"р" "" "" "r"
+"с" "" "с" ""
+"с" "" "" "s"
+"т" "" "" "t"
+"у" "" "" "u"
+"ф" "" "" "f"
+"х" "" "" "x"
+"ц" "" "" "ts"
+"ч" "" "" "tS"
+"ш" "" "" "S"
+"щ" "" "" "StS"
+"ъ" "" "" ""
+"ы" "" "" "I"
+"ь" "" "" ""
+"э" "" "" "E"
+"ю" "" "" "ju"
+"я" "" "" "ja"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_english.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_english.txt
new file mode 100644
index 0000000..f84e53f
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_english.txt
@@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// CONSONANTS
+"tch" "" "" "tS"
+"ch" "" "" "(tS|x)"
+"ck" "" "" "k"
+"cc" "" "[iey]" "ks" // success, accent
+"c" "" "c" ""
+"c" "" "[iey]" "s" // circle 
+"c" "" "" "k" // candy
+"gh" "^" "" "g" // ghost
+"gh" "" "" "(g|f|w)" // burgh | tough | bough
+"gn" "" "" "(gn|n)"
+"g" "" "[iey]" "(g|dZ)" // get, gem, giant, gigabyte
+// "th" "" "" "(6|8|t)"
+"th" "" "" "t"
+"kh" "" "" "x"
+"ph" "" "" "f"
+"sch" "" "" "(S|sk)"
+"sh" "" "" "S"
+"who" "^" "" "hu"
+"wh" "^" "" "w"
+
+"h" "" "$" "" // hard to find an example that isn't in a name
+"h" "" "[^aeiou]" "" // hard to find an example that isn't in a name
+"h" "^" "" "H"
+"h" "" "" "h"
+
+"j" "" "" "dZ"
+"kn" "^" "" "n" // knight
+"mb" "" "$" "m"
+"ng" "" "$" "(N|ng)"
+"pn" "^" "" "(pn|n)"
+"ps" "^" "" "(ps|s)"
+"qu" "" "" "kw"
+"q" "" "" "k"
+"tia" "" "" "(So|Sa)"
+"tio" "" "" "So"
+"wr" "^" "" "r"
+"w" "" "" "(w|v)" // the variant "v" is for spellings coming from German/Polish
+"x" "^" "" "z"
+"x" "" "" "ks"
+
+// VOWELS
+"y" "^" "" "j"
+"y" "^" "[aeiouy]" "j"
+"yi" "^" "" "i"
+"aue" "" "" "aue" 
+"oue" "" "" "(aue|oue)" 
+"ai" "" "" "(aj|e)" // rain | said
+"ay" "" "" "aj" 
+"a" "" "[^aeiou]e" "aj" // plane (actually "ej")
+"a" "" "" "(e|o|a)" // hat | call | part
+"ei" "" "" "(aj|i)" // weigh | receive
+"ey" "" "" "(aj|i)" // hey | barley
+"ear" "" "" "ia" // tear
+"ea" "" "" "(i|e)" // reason | treasure
+"ee" "" "" "i" // between
+"e" "" "[^aeiou]e" "i" // meter
+"e" "" "$" "(|E)" // blame, badge
+"e" "" "" "E" // bed
+"ie" "" "" "i" // believe
+"i" "" "[^aeiou]e" "aj" // five
+"i" "" "" "I" // hit -- Morse disagrees, feels it should go to I
+"oa" "" "" "ou" // toad
+"oi" "" "" "oj" // join
+"oo" "" "" "u" // food
+"ou" "" "" "(u|ou)" // through | tough | could
+"oy" "" "" "oj" // boy
+"o" "" "[^aeiou]e" "ou" // rode
+"o" "" "" "(o|a)" // hot -- Morse disagrees, feels it should go to 9
+"u" "" "[^aeiou]e" "(ju|u)" // cute | flute
+"u" "" "r" "(e|u)" // turn -- Morse disagrees, feels it should go to E
+"u" "" "" "(u|a)" // put
+"y" "" "" "i"
+
+// TRIVIAL
+"b" "" "" "b"
+"d" "" "" "d"
+"f" "" "" "f"
+"g" "" "" "g" 
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"p" "" "" "p"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"v" "" "" "v"
+"z" "" "" "z"
+
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_french.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_french.txt
new file mode 100644
index 0000000..668645f
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_french.txt
@@ -0,0 +1,91 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Ashkenazic
+
+// CONSONANTS
+"kh" "" "" "x" // foreign
+"ph" "" "" "f"
+    
+"ç" "" "" "s"
+"x" "" "" "ks"
+"ch" "" "" "S"
+"c" "" "[eiyéèê]" "s"
+"c" "" "" "k"
+"gn" "" "" "(n|gn)"
+"g" "" "[eiy]" "Z" 
+"gue" "" "$" "k"     
+"gu" "" "[eiy]" "g" 
+   //array("aill" "" "e" "aj" // non Jewish
+   //array("ll" "" "e" "(l|j)" // non Jewish
+"que" "" "$" "k"
+"qu" "" "" "k"
+"q" "" "" "k"
+"s" "[aeiouyéèê]" "[aeiouyéèê]" "z"
+"h" "[bdgt]" "" "" // translit from Arabic
+"h" "" "$" "" // foreign
+"j" "" "" "Z"
+"w" "" "" "v"
+"ouh" "" "[aioe]" "(v|uh)"
+"ou" "" "[aeio]" "v" 
+"uo" "" "" "(vo|o)"
+"u" "" "[aeio]" "v" 
+      
+// VOWELS
+"aue" "" "" "aue" 
+"eau" "" "" "o" 
+  //array("au" "" "" "(o|au)" // non Jewish
+"ai" "" "" "aj" // [e] is non Jewish
+"ay" "" "" "aj" // [e] is non Jewish
+"é" "" "" "e"
+"ê" "" "" "e"
+"è" "" "" "e"
+"à" "" "" "a"
+"â" "" "" "a"
+"où" "" "" "u"
+"ou" "" "" "u"
+"oi" "" "" "oj" // [ua] is non Jewish
+"ei" "" "" "aj" // [e] is non Jewish
+"ey" "" "" "aj" // [e] non Jewish
+    //array("eu" "" "" "(e|o)" // non Jewish
+"y" "[ou]" "" "j"
+"e" "" "$" "(e|)"
+"i" "" "[aou]" "j"
+"y" "" "[aoeu]" "j"
+"y" "" "" "i"
+       
+  // TRIVIAL      
+"a" "" "" "a"
+"b" "" "" "b"
+"d" "" "" "d"
+"e" "" "" "E" // only Ashkenazic
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "I" // only Ashkenazic
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_german.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_german.txt
new file mode 100644
index 0000000..72eef9d
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_german.txt
@@ -0,0 +1,128 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Ashkenazic
+
+// CONSONANTS
+"ziu" "" "" "tsu"   
+"zia" "" "" "tsa"   
+"zio" "" "" "tso"   
+
+"ssch" "" "" "S"
+"chsch" "" "" "xS"
+"ewitsch" "" "$" "evitS"
+"owitsch" "" "$" "ovitS"
+"evitsch" "" "$" "evitS"
+"ovitsch" "" "$" "ovitS"
+"witsch" "" "$" "vitS"
+"vitsch" "" "$" "vitS"
+"sch" "" "" "S"
+
+"chs" "" "" "ks"
+"ch" "" "" "x"
+"ck" "" "" "k"
+"c" "" "[eiy]" "ts"
+        
+"sp" "^" "" "Sp"
+"st" "^" "" "St"
+"ssp" "" "" "(Sp|sp)"
+"sp" "" "" "(Sp|sp)"
+"sst" "" "" "(St|st)"
+"st" "" "" "(St|st)"
+"pf" "" "" "(pf|p|f)"
+"ph" "" "" "(ph|f)"
+"qu" "" "" "kv"
+    
+"ewitz" "" "$" "(evits|evitS)"
+"ewiz" "" "$" "(evits|evitS)"
+"evitz" "" "$" "(evits|evitS)"
+"eviz" "" "$" "(evits|evitS)"
+"owitz" "" "$" "(ovits|ovitS)"
+"owiz" "" "$" "(ovits|ovitS)"
+"ovitz" "" "$" "(ovits|ovitS)"
+"oviz" "" "$" "(ovits|ovitS)"
+"witz" "" "$" "(vits|vitS)"
+"wiz" "" "$" "(vits|vitS)"
+"vitz" "" "$" "(vits|vitS)"
+"viz" "" "$" "(vits|vitS)"
+"tz" "" "" "ts"
+    
+"thal" "" "$" "tal"
+"th" "^" "" "t"
+"th" "" "[äöüaeiou]" "(t|th)"
+"th" "" "" "t"
+"rh" "^" "" "r"
+"h" "[aeiouyäöü]" "" ""
+"h" "^" "" "H"
+    
+"ss" "" "" "s"
+"s" "" "[äöüaeiouy]" "(z|s)"
+"s" "[aeiouyäöüj]" "[aeiouyäöü]" "z"
+"ß" "" "" "s"
+          
+ // VOWELS
+"ij" "" "$" "i"
+"aue" "" "" "aue" 
+"ue" "" "" "Q" 
+"ae" "" "" "Y" 
+"oe" "" "" "Y" 
+"ü" "" "" "Q"
+"ä" "" "" "Y"
+"ö" "" "" "Y"
+"ei" "" "" "aj"
+"ey" "" "" "aj"
+"eu" "" "" "(aj|oj)"
+"i" "[aou]" "" "j"
+"y" "[aou]" "" "j"
+"ie" "" "" "I"
+"i" "" "[aou]" "j"
+"y" "" "[aoeu]" "j"
+        
+ // FOREIGN LETTERs
+"ñ" "" "" "n" 
+"ã" "" "" "a" 
+"ő" "" "" "o" 
+"ű" "" "" "u" 
+"ç" "" "" "s" 
+   
+  // ALPHABET      
+"a" "" "" "A"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "O"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "U"
+"v" "" "" "(f|v)"
+"w" "" "" "v"
+"x" "" "" "ks"
+"y" "" "" "i"   
+"z" "" "" "ts"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_hebrew.txt
new file mode 100644
index 0000000..4c59503
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_hebrew.txt
@@ -0,0 +1,62 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Ashkenazic
+
+"אי" "" "" "i"
+"עי" "" "" "i"
+"עו" "" "" "VV"
+"או" "" "" "VV"
+    
+"ג׳" "" "" "Z"
+"ד׳" "" "" "dZ"
+        
+"א" "" "" "L"
+"ב" "" "" "b"
+"ג" "" "" "g"
+"ד" "" "" "d"
+    
+"ה" "^" "" "1"
+"ה" "" "$" "1"
+"ה" "" "" ""
+    
+"וו" "" "" "V"
+"וי" "" "" "WW"
+"ו" "" "" "W"
+"ז" "" "" "z"
+"ח" "" "" "X"
+"ט" "" "" "T"
+"יי" "" "" "i"
+"י" "" "" "i"
+"ך" "" "" "X"
+"כ" "^" "" "K"
+"כ" "" "" "k"
+"ל" "" "" "l"
+"ם" "" "" "m"
+"מ" "" "" "m"
+"ן" "" "" "n"
+"נ" "" "" "n"
+"ס" "" "" "s"
+"ע" "" "" "L"
+"ף" "" "" "f"
+"פ" "" "" "f"
+"ץ" "" "" "C"
+"צ" "" "" "C"
+"ק" "" "" "K"
+"ר" "" "" "r"
+"ש" "" "" "s"
+"ת" "" "" "TB" // only Ashkenazic
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_hungarian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_hungarian.txt
new file mode 100644
index 0000000..1e6f047
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_hungarian.txt
@@ -0,0 +1,84 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// ASHKENAZIC
+
+// CONSONANTS
+"sz" "" "" "s"
+"zs" "" "" "Z"
+"cs" "" "" "tS"
+           
+"ay" "" "" "(oj|aj)"
+"ai" "" "" "(oj|aj)"
+"aj" "" "" "(oj|aj)"
+    
+"ei" "" "" "aj" // German element
+"ey" "" "" "aj" // German element
+    
+"y" "[áo]" "" "j"
+"i" "[áo]" "" "j"
+"ee" "" "" "(aj|e)" // actually ej
+"ely" "" "" "(aj|eli)" // actually ej
+"ly" "" "" "(j|li)"
+"gy" "" "[aeouáéóúüöőű]" "dj"
+"gy" "" "" "(d|gi)"
+"ny" "" "[aeouáéóúüöőű]" "nj"
+"ny" "" "" "(n|ni)"
+"ty" "" "[aeouáéóúüöőű]" "tj"
+"ty" "" "" "(t|ti)"
+    
+"qu" "" "" "(ku|kv)"
+"h" "" "$" ""
+                  
+// VOWELS
+"á" "" "" "a"
+"é" "" "" "e"
+"í" "" "" "i"
+"ó" "" "" "o"
+"ö" "" "" "Y"
+"ő" "" "" "Y" 
+"ú" "" "" "u"
+"ü" "" "" "Q"
+"ű" "" "" "Q"
+                       
+// LATIN ALPHABET
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "ts" 
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h"
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "(S|s)" 
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v" 
+"w" "" "" "v" 
+"x" "" "" "ks"
+"y" "" "" "i" 
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_polish.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_polish.txt
new file mode 100644
index 0000000..59a87dd
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_polish.txt
@@ -0,0 +1,185 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Ashkenazic
+
+// CONVERTING FEMININE TO MASCULINE
+"ska" "" "$" "ski"   
+"cka" "" "$" "tski"   
+"lowa" "" "$" "(lova|lof|l|el)"   
+"kowa" "" "$" "(kova|kof|k|ek)"   
+"owa" "" "$" "(ova|of|)"  
+"lowna" "" "$" "(lovna|levna|l|el)" 
+"kowna" "" "$" "(kovna|k|ek)"  
+"owna" "" "$" "(ovna|)"   
+"lówna" "" "$" "(l|el)"   
+"kówna" "" "$" "(k|ek)"   
+"ówna" "" "$" ""   
+"a" "" "$" "(a|i)"   
+
+ // CONSONANTS
+"czy" "" "" "tSi"
+"cze" "" "[bcdgkpstwzż]" "(tSe|tSF)"
+"ciewicz" "" "" "(tsevitS|tSevitS)"
+"siewicz" "" "" "(sevitS|SevitS)"
+"ziewicz" "" "" "(zevitS|ZevitS)"
+"riewicz" "" "" "rjevitS" 
+"diewicz" "" "" "djevitS" 
+"tiewicz" "" "" "tjevitS" 
+"iewicz" "" "" "evitS"
+"ewicz" "" "" "evitS"
+"owicz" "" "" "ovitS"
+"icz" "" "" "itS"
+"cz" "" "" "tS"
+"ch" "" "" "x"
+    
+"cia" "" "[bcdgkpstwzż]" "(tSB|tsB)" 
+"cia" "" "" "(tSa|tsa)" 
+"cią" "" "[bp]" "(tSom|tsom)"
+"cią" "" "" "(tSon|tson)"
+"cię" "" "[bp]" "(tSem|tsem)"
+"cię" "" "" "(tSen|tsen)"
+"cie" "" "[bcdgkpstwzż]" "(tSF|tsF)" 
+"cie" "" "" "(tSe|tse)" 
+"cio" "" "" "(tSo|tso)" 
+"ciu" "" "" "(tSu|tsu)" 
+"ci" "" "" "(tSi|tsI)"
+"ć" "" "" "(tS|ts)"
+    
+"ssz" "" "" "S"
+"sz" "" "" "S"
+"sia" "" "[bcdgkpstwzż]" "(SB|sB|sja)" 
+"sia" "" "" "(Sa|sja)" 
+"sią" "" "[bp]" "(Som|som)"
+"sią" "" "" "(Son|son)"
+"się" "" "[bp]" "(Sem|sem)"
+"się" "" "" "(Sen|sen)"
+"sie" "" "[bcdgkpstwzż]" "(SF|sF|se)" 
+"sie" "" "" "(Se|se)" 
+"sio" "" "" "(So|so)" 
+"siu" "" "" "(Su|sju)" 
+"si" "" "" "(Si|sI)"
+"ś" "" "" "(S|s)"
+
+"zia" "" "[bcdgkpstwzż]" "(ZB|zB|zja)" 
+"zia" "" "" "(Za|zja)" 
+"zią" "" "[bp]" "(Zom|zom)"
+"zią" "" "" "(Zon|zon)"
+"zię" "" "[bp]" "(Zem|zem)"
+"zię" "" "" "(Zen|zen)"
+"zie" "" "[bcdgkpstwzż]" "(ZF|zF)"
+"zie" "" "" "(Ze|ze)" 
+"zio" "" "" "(Zo|zo)" 
+"ziu" "" "" "(Zu|zju)" 
+"zi" "" "" "(Zi|zI)"
+    
+"że" "" "[bcdgkpstwzż]" "(Ze|ZF)"
+"że" "" "[bcdgkpstwzż]" "(Ze|ZF|ze|zF)"
+"że" "" "" "Ze"
+"źe" "" "" "(Ze|ze)"
+"ży" "" "" "Zi"
+"źi" "" "" "(Zi|zi)"
+"ż" "" "" "Z"
+"ź" "" "" "(Z|z)"
+    
+"rze" "t" "" "(Se|re)"
+"rze" "" "" "(Ze|re|rZe)"
+"rzy" "t" "" "(Si|ri)"
+"rzy" "" "" "(Zi|ri|rZi)"
+"rz" "t" "" "(S|r)"
+"rz" "" "" "(Z|r|rZ)"
+    
+"lio" "" "" "(lo|le)"
+"ł" "" "" "l"
+"ń" "" "" "n"
+"qu" "" "" "k"
+"s" "" "s" "" 
+    
+ // VOWELS   
+"ó" "" "" "(u|o)"
+"ą" "" "[bp]" "om"
+"ę" "" "[bp]" "em"
+"ą" "" "" "on"
+"ę" "" "" "en"
+   
+"ije" "" "" "je"
+"yje" "" "" "je"
+"iie" "" "" "je"
+"yie" "" "" "je"
+"iye" "" "" "je"
+"yye" "" "" "je"
+   
+"ij" "" "[aou]" "j"
+"yj" "" "[aou]" "j"
+"ii" "" "[aou]" "j"
+"yi" "" "[aou]" "j"
+"iy" "" "[aou]" "j"
+"yy" "" "[aou]" "j"
+   
+"rie" "" "" "rje" 
+"die" "" "" "dje" 
+"tie" "" "" "tje" 
+"ie" "" "[bcdgkpstwzż]" "F" 
+"ie" "" "" "e"
+   
+"aue" "" "" "aue"
+"au" "" "" "au"
+   
+"ei" "" "" "aj"
+"ey" "" "" "aj"
+"ej" "" "" "aj"
+    
+"ai" "" "" "aj"
+"ay" "" "" "aj"
+"aj" "" "" "aj"
+    
+"i" "[ou]" "" "j" 
+"y" "[ou]" "" "j" 
+"i" "" "[aou]" "j"
+"y" "" "[aeou]" "j"
+       
+"a" "" "[bcdgkpstwzż]" "B"
+"e" "" "[bcdgkpstwzż]" "(E|F)" 
+"o" "" "[bcćdgklłmnńrsśtwzźż]" "P" 
+       
+// ALPHABET
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "ts"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "(h|x)"
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"
+"x" "" "" "ks"
+"y" "" "" "I"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_romanian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_romanian.txt
new file mode 100644
index 0000000..f53e262
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_romanian.txt
@@ -0,0 +1,66 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"j" "" "" "Z"
+  
+"ce" "" "" "tSe"
+"ci" "" "" "(tSi|tS)"
+"ch" "" "[ei]" "k"
+"ch" "" "" "x" // foreign
+"c" "" "" "k"
+  
+"gi" "" "" "(dZi|dZ)"
+"g" "" "[ei]" "dZ"
+"gh" "" "" "g"
+  
+"ei" "" "" "aj"
+"i" "[aou]" "" "j"
+"i" "" "[aeou]" "j"
+"ţ" "" "" "ts"
+"ş" "" "" "S"
+"h" "" "" "(x|h)"
+    
+"qu" "" "" "k"    
+"q" "" "" "k"    
+"w" "" "" "v"    
+"x" "" "" "ks"    
+"y" "" "" "i"    
+    
+"î" "" "" "i"
+"ea" "" "" "ja"
+"ă" "" "" "(e|a)"
+"aue" "" "" "aue"
+    
+"a" "" "" "a"
+"b" "" "" "b"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g"
+"i" "" "" "I"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_russian.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_russian.txt
new file mode 100644
index 0000000..817b2c3
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_russian.txt
@@ -0,0 +1,164 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+// CONVERTING FEMININE TO MASCULINE
+"yna" "" "$" "(in|ina)" 
+"ina" "" "$" "(in|ina)" 
+"liova" "" "$" "(lof|lef)" 
+"lova" "" "$" "(lof|lef|lova)" 
+"ova" "" "$" "(of|ova)" 
+"eva" "" "$" "(ef|ova)" 
+"aia" "" "$" "(aja|i)" 
+"aja" "" "$" "(aja|i)" 
+"aya" "" "$" "(aja|i)" 
+
+ //SPECIFIC CONSONANTS
+"tsya" "" "" "tsa" 
+"tsyu" "" "" "tsu" 
+"tsia" "" "" "tsa" 
+"tsie" "" "" "tse" 
+"tsio" "" "" "tso"   
+"tsye" "" "" "tse" 
+"tsyo" "" "" "tso" 
+"tsiu" "" "" "tsu" 
+"sie" "" "" "se" 
+"sio" "" "" "so"   
+"zie" "" "" "ze" 
+"zio" "" "" "zo"   
+"sye" "" "" "se" 
+"syo" "" "" "so"   
+"zye" "" "" "ze" 
+"zyo" "" "" "zo"   
+    
+"gauz" "" "$" "haus" 
+"gaus" "" "$" "haus" 
+"gol'ts" "" "$" "holts" 
+"golts" "" "$" "holts" 
+"gol'tz" "" "$" "holts" 
+"goltz" "" "$" "holts" 
+"gejmer" "" "$" "hajmer" 
+"gejm" "" "$" "hajm" 
+"geimer" "" "$" "hajmer" 
+"geim" "" "$" "hajm" 
+"geymer" "" "$" "hajmer" 
+"geym" "" "$" "hajm" 
+"gendler" "" "$" "hendler" 
+"gof" "" "$" "hof" 
+"gojf" "" "$" "hojf" 
+"goyf" "" "$" "hojf" 
+"goif" "" "$" "hojf" 
+"ger" "" "$" "ger" 
+"gen" "" "$" "gen" 
+"gin" "" "$" "gin" 
+"gg" "" "" "g" 
+"g" "[jaeoiuy]" "[aeoiu]" "g" 
+"g" "" "[aeoiu]" "(g|h)" 
+       
+"kh" "" "" "x"
+"ch" "" "" "(tS|x)" // in DJSRE the rule is simpler:"ch" "" "" "tS");
+"sch" "" "" "(StS|S)"
+"ssh" "" "" "S"
+"sh" "" "" "S"
+"zh" "" "" "Z" 
+"tz" "" "$" "ts" // not in DJSRE
+"tz" "" "" "(ts|tz)" // not in DJSRE
+"c" "" "[iey]" "s" // not in DJSRE
+"c" "" "" "k" // not in DJSRE
+"qu" "" "" "(kv|k)" // not in DJSRE
+"q" "" "" "k" // not in DJSRE
+"s" "" "s" ""
+    
+"w" "" "" "v" // not in DJSRE
+"x" "" "" "ks" // not in DJSRE
+                  
+ //SPECIFIC VOWELS
+"lya" "" "" "la" 
+"lyu" "" "" "lu"  
+"lia" "" "" "la" // not in DJSRE
+"liu" "" "" "lu"  // not in DJSRE
+"lja" "" "" "la" // not in DJSRE
+"lju" "" "" "lu"  // not in DJSRE
+"le" "" "" "(lo|lE)" //not in DJSRE
+"lyo" "" "" "(lo|le)" //not in DJSRE
+"lio" "" "" "(lo|le)" 
+    
+"ije" "" "" "je"
+"ie" "" "" "je"
+"iye" "" "" "je"
+"iie" "" "" "je"
+"yje" "" "" "je"
+"ye" "" "" "je"
+"yye" "" "" "je"
+"yie" "" "" "je"
+    
+"ij" "" "[aou]" "j"
+"iy" "" "[aou]" "j"
+"ii" "" "[aou]" "j"
+"yj" "" "[aou]" "j"
+"yy" "" "[aou]" "j"
+"yi" "" "[aou]" "j"
+        
+"io" "" "" "(jo|e)" 
+"i" "" "[au]" "j" 
+"i" "[aou]" "" "j" // not in DJSRE
+"ei" "" "" "aj" // not in DJSRE
+"ey" "" "" "aj" // not in DJSRE
+"ej" "" "" "aj" 
+"yo" "" "" "(jo|e)" //not in DJSRE
+"y" "" "[au]" "j"
+"y" "[aiou]" "" "j" // not in DJSRE
+    
+"ii" "" "$" "i" // not in DJSRE
+"iy" "" "$" "i" // not in DJSRE
+"yy" "" "$" "i" // not in DJSRE
+"yi" "" "$" "i" // not in DJSRE
+"yj" "" "$" "i"
+"ij" "" "$" "i"
+    
+"e" "^" "" "(je|E)" // in DJSRE the rule is simpler:"e" "^" "" "je");
+"ee" "" "" "(aje|i)" // in DJSRE the rule is simpler:"ee" "" "" "(eje|aje)");
+"e" "[aou]" "" "je" 
+"y" "" "" "I"
+"oo" "" "" "(oo|u)" // not in DJSRE
+"'" "" "" "" 
+"\"" "" "" ""
+    
+"aue" "" "" "aue"
+
+// TRIVIAL 
+"a" "" "" "a"
+"b" "" "" "b"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h" // not in DJSRE
+"i" "" "" "I"
+"j" "" "" "j" 
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/ash_rules_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/ash_rules_spanish.txt
new file mode 100644
index 0000000..03dc04a
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/ash_rules_spanish.txt
@@ -0,0 +1,77 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Ashkenazic = Argentina
+
+// CONSONANTS
+"ñ" "" "" "(n|nj)"
+    
+"ch" "" "" "(tS|dZ)" // dZ is typical for Argentina   
+"h" "[bdgt]" "" "" // translit. from Arabic
+"h" "" "$" "" // foreign
+          
+"j" "" "" "x" 
+"x" "" "" "ks"         
+"ll" "" "" "(l|Z)" // Z is typical for Argentina, only Ashkenazic
+"w" "" "" "v" // foreign words
+        
+"v" "" "" "(b|v)"
+"b" "" "" "(b|v)"
+"m" "" "[bpvf]" "(m|n)"
+    
+"c" "" "[ei]" "s" 
+"c" "" "" "k"
+
+"z" "" "" "(z|s)" // as "c" befoire "e" or "i", in Spain it is like unvoiced English "th"
+        
+"gu" "" "[ei]" "(g|gv)" // "gv" because "u" can actually be "ü"
+"g" "" "[ei]" "(x|g)"  // "g" only for foreign words
+            
+"qu" "" "" "k"
+"q" "" "" "k"
+    
+"uo" "" "" "(vo|o)"    
+"u" "" "[aei]" "v"
+        
+"y" "" "" "(i|j|S|Z)" // S or Z are peculiar to South America; only Ashkenazic
+           
+ // VOWELS
+"ü" "" "" "v"
+"á" "" "" "a"
+"é" "" "" "e"
+"í" "" "" "i"
+"ó" "" "" "o"
+"ú" "" "" "u"
+               
+  // TRIVIAL      
+"a" "" "" "a"
+"d" "" "" "d"
+"e" "" "" "E" // Only Ashkenazic
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h"
+"i" "" "" "I" // Only Ashkenazic
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"    
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_any.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_any.txt
new file mode 100644
index 0000000..6627aac
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_any.txt
@@ -0,0 +1,124 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERIC
+// A, E, I, O, P, U should create variants, but a, e, i, o, u should not create any new variant
+// Q = ü ; Y = ä = ö
+// EE = final "e" (english or french)
+
+// VOWELS
+    // "ALL" DIPHTHONGS are interchangeable BETWEEN THEM and with monophthongs of which they are composed ("D" means "diphthong")
+    //  {a,o} are totally interchangeable if non-stressed; in German "a/o" can actually be from "ä/ö" (that are equivalent to "e")
+    //  {i,e} are interchangeable if non-stressed, while in German "u" can actually be from "ü" (that is equivalent to "i")
+
+"mb" "" "" "(mb|b[greeklatin])"
+"mp" "" "" "(mp|b[greeklatin])"
+"ng" "" "" "(ng|g[greeklatin])"
+
+"B" "" "" "(b|v[spanish])"
+"V" "" "" "(v|b[spanish])"
+    
+    // French word-final and word-part-final letters
+"t" "" "$" "(t|[french])"
+"g" "n" "$" "(g|[french])"
+"k" "n" "$" "(k|[french])"
+"p" "" "$" "(p|[french])"
+"r" "[Ee]" "$" "(r|[french])"
+"s" "" "$" "(s|[french])"
+"t" "[aeiouAEIOU]" "[^aeiouAEIOU]" "(t|[french])" // Petitjean
+"s" "[aeiouAEIOU]" "[^aeiouAEIOU]" "(s|[french])" // Groslot, Grosleau
+    //array("p" "[aeiouAEIOU]" "[^aeiouAEIOU]" "(p|[$french])" 
+    
+"I" "[aeiouAEIBFOUQY]" "" "i"
+"I" "" "[^aeiouAEBFIOU]e" "(Q[german]|i|D[english])"  // "line"
+"I" "" "$" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk[german])"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts[german])"
+"Its" "" "$" "its"
+"I" "" "" "(Q[german]|i)"
+   
+"lEE" "[bdfgkmnprsStvzZ]" "" "(li|il[english])"  // Apple = Appel
+"rEE" "[bdfgkmnprsStvzZ]" "" "(ri|ir[english])"
+"lE" "[bdfgkmnprsStvzZ]" "" "(li|il[english]|lY[german])"  // Applebaum < Appelbaum
+"rE" "[bdfgkmnprsStvzZ]" "" "(ri|ir[english]|rY[german])"
+    
+"ea" "" "" "(D|a|i)"
+    
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"eu" "" "" "(D|e|u)"
+    
+"ai" "" "" "(D|a|i)"
+"Ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"Oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+"Ui" "" "" "(D|u|i)"
+"ei" "" "" "(D|i)"
+"Ei" "" "" "(D|i)"
+    
+"iA" "" "$" "(ia|io)" 
+"iA" "" "" "(ia|io|iY[german])"
+"A" "" "[^aeiouAEBFIOU]e" "(a|o|Y[german]|D[english])" // "plane"
+    
+    
+"E" "i[^aeiouAEIOU]" "" "(i|Y[german]|[english])" // Wineberg (vineberg/vajneberg) --> vajnberg
+"E" "a[^aeiouAEIOU]" "" "(i|Y[german]|[english])" //  Shaneberg (shaneberg/shejneberg) --> shejnberg
+    
+"E" "" "[fklmnprst]$" "i"
+"E" "" "ts$" "i"
+"E" "" "$" "i"
+"E" "[DaoiuAOIUQY]" "" "i"
+"E" "" "[aoAOQY]" "i"
+"E" "" "" "(i|Y[$german])"
+        
+"P" "" "" "(o|u)" 
+    
+"O" "" "[fklmnprstv]$" "o"
+"O" "" "ts$" "o"
+"O" "" "$" "o"
+"O" "[oeiuQY]" "" "o"
+"O" "" "" "(o|Y[$german])"
+"O" "" "" "o"
+    
+"A" "" "[fklmnprst]$" "(a|o)"
+"A" "" "ts$" "(a|o)"
+"A" "" "$" "(a|o)"
+"A" "[oeiuQY]" "" "(a|o)"
+"A" "" "" "(a|o|Y[$german])"
+"A" "" "" "(a|o)"
+
+"U" "" "$" "u"
+"U" "[DoiuQY]" "" "u"
+"U" "" "[^k]$" "u"
+"Uk" "[lr]" "$" "(uk|Qk[german])"
+"Uk" "" "$" "uk"
+"sUts" "" "$" "(suts|sQts[german])"
+"Uts" "" "$" "uts"
+"U" "" "" "(u|Q[german])"
+"U" "" "" "u"
+
+"e" "" "[fklmnprstv]$" "i"
+"e" "" "ts$" "i"
+"e" "" "$" "i"
+"e" "[DaoiuAOIUQY]" "" "i"
+"e" "" "[aoAOQY]" "i"
+"e" "" "" "(i|Y[german])"
+        
+"a" "" "" "(a|o)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_arabic.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_arabic.txt
new file mode 100644
index 0000000..a8cad65
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_arabic.txt
@@ -0,0 +1,23 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"j1" "" "" "(ja|je|jo|ju|j)"
+"1" "" "" "(a|e|i|o|u|)"
+"u" "" "" "(o|u)"
+"i" "" "" "(i|e)"
+"p" "" "$" "p"
+"p" "" "" "(p|b)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_common.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_common.txt
new file mode 100644
index 0000000..fa0096a
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_common.txt
@@ -0,0 +1,223 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERIC
+
+#include gen_exact_approx_common
+
+// DUTCH 
+"van" "^" "[bp]" "(vam|)" 
+"van" "^" "" "(van|)" 
+
+// REGRESSIVE ASSIMILATION OF CONSONANTS
+"n" "" "[bp]" "m" 
+        
+// PECULIARITY OF "h" 
+"h" "" "" "" 
+"H" "" "" "(x|)" 
+
+// "e" and "i" ARE TO BE OMITTED BEFORE (SYLLABIC) n & l: Halperin=Halpern; Frankel = Frankl, Finkelstein = Finklstein
+// but Andersen & Anderson should match
+"sen" "[rmnl]" "$" "(zn|zon)"
+"sen" "" "$" "(sn|son)"
+"sEn" "[rmnl]" "$" "(zn|zon)"
+"sEn" "" "$" "(sn|son)"
+            
+"e" "[bdfgklmnprsStvzZ]" "[ln]$" ""
+"i" "[bdfgklmnprsStvzZ]" "[ln]$" ""
+"E" "[bdfgklmnprsStvzZ]" "[ln]$" ""
+"I" "[bdfgklmnprsStvzZ]" "[ln]$" ""
+"Q" "[bdfgklmnprsStvzZ]" "[ln]$" ""
+"Y" "[bdfgklmnprsStvzZ]" "[ln]$" ""
+
+"e" "[bdfgklmnprsStvzZ]" "[ln][bdfgklmnprsStvzZ]" ""
+"i" "[bdfgklmnprsStvzZ]" "[ln][bdfgklmnprsStvzZ]" ""
+"E" "[bdfgklmnprsStvzZ]" "[ln][bdfgklmnprsStvzZ]" ""
+"I" "[bdfgklmnprsStvzZ]" "[ln][bdfgklmnprsStvzZ]" ""
+"Q" "[bdfgklmnprsStvzZ]" "[ln][bdfgklmnprsStvzZ]" ""
+"Y" "[bdfgklmnprsStvzZ]" "[ln][bdfgklmnprsStvzZ]" ""
+
+"lEs" "" "" "(lEs|lz)"  // Applebaum < Appelbaum (English + blend English-something forms as Finklestein)
+"lE" "[bdfgkmnprStvzZ]" "" "(lE|l)"  // Applebaum < Appelbaum (English + blend English-something forms as Finklestein)
+
+// SIMPLIFICATION: (TRIPHTHONGS & DIPHTHONGS) -> ONE GENERIC DIPHTHONG "D"
+"aue" "" "" "D"
+"oue" "" "" "D"
+    
+"AvE" "" "" "(D|AvE)"
+"Ave" "" "" "(D|Ave)"
+"avE" "" "" "(D|avE)"
+"ave" "" "" "(D|ave)"
+    
+"OvE" "" "" "(D|OvE)"
+"Ove" "" "" "(D|Ove)"
+"ovE" "" "" "(D|ovE)"
+"ove" "" "" "(D|ove)"
+    
+"ea" "" "" "(D|ea)"
+"EA" "" "" "(D|EA)"
+"Ea" "" "" "(D|Ea)"
+"eA" "" "" "(D|eA)"
+             
+"aji" "" "" "D"
+"ajI" "" "" "D"
+"aje" "" "" "D"
+"ajE" "" "" "D"
+    
+"Aji" "" "" "D"
+"AjI" "" "" "D"
+"Aje" "" "" "D"
+"AjE" "" "" "D"
+    
+"oji" "" "" "D"
+"ojI" "" "" "D"
+"oje" "" "" "D"
+"ojE" "" "" "D"
+    
+"Oji" "" "" "D"
+"OjI" "" "" "D"
+"Oje" "" "" "D"
+"OjE" "" "" "D"
+    
+"eji" "" "" "D"
+"ejI" "" "" "D"
+"eje" "" "" "D"
+"ejE" "" "" "D"
+    
+"Eji" "" "" "D"
+"EjI" "" "" "D"
+"Eje" "" "" "D"
+"EjE" "" "" "D"
+    
+"uji" "" "" "D"
+"ujI" "" "" "D"
+"uje" "" "" "D"
+"ujE" "" "" "D"
+    
+"Uji" "" "" "D"
+"UjI" "" "" "D"
+"Uje" "" "" "D"
+"UjE" "" "" "D"
+        
+"iji" "" "" "D"
+"ijI" "" "" "D"
+"ije" "" "" "D"
+"ijE" "" "" "D"
+    
+"Iji" "" "" "D"
+"IjI" "" "" "D"
+"Ije" "" "" "D"
+"IjE" "" "" "D"
+                         
+"aja" "" "" "D"
+"ajA" "" "" "D"
+"ajo" "" "" "D"
+"ajO" "" "" "D"
+"aju" "" "" "D"
+"ajU" "" "" "D"
+    
+"Aja" "" "" "D"
+"AjA" "" "" "D"
+"Ajo" "" "" "D"
+"AjO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+    
+"oja" "" "" "D"
+"ojA" "" "" "D"
+"ojo" "" "" "D"
+"ojO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+    
+"Oja" "" "" "D"
+"OjA" "" "" "D"
+"Ojo" "" "" "D"
+"OjO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+    
+"eja" "" "" "D"
+"ejA" "" "" "D"
+"ejo" "" "" "D"
+"ejO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+    
+"Eja" "" "" "D"
+"EjA" "" "" "D"
+"Ejo" "" "" "D"
+"EjO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+    
+"uja" "" "" "D"
+"ujA" "" "" "D"
+"ujo" "" "" "D"
+"ujO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+        
+"Uja" "" "" "D"
+"UjA" "" "" "D"
+"Ujo" "" "" "D"
+"UjO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+        
+"ija" "" "" "D"
+"ijA" "" "" "D"
+"ijo" "" "" "D"
+"ijO" "" "" "D"
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+    
+"Ija" "" "" "D"
+"IjA" "" "" "D"
+"Ijo" "" "" "D"
+"IjO" "" "" "D"                         
+"Aju" "" "" "D"
+"AjU" "" "" "D"
+                         
+"j" "" "" "i"                         
+                         
+// lander = lender = länder 
+"lYndEr" "" "$" "lYnder" 
+"lander" "" "$" "lYnder" 
+"lAndEr" "" "$" "lYnder" 
+"lAnder" "" "$" "lYnder" 
+"landEr" "" "$" "lYnder" 
+"lender" "" "$" "lYnder" 
+"lEndEr" "" "$" "lYnder" 
+"lendEr" "" "$" "lYnder" 
+"lEnder" "" "$" "lYnder" 
+             
+// CONSONANTS {z & Z; s & S} are approximately interchangeable
+"s" "" "[rmnl]" "z"
+"S" "" "[rmnl]" "z"
+"s" "[rmnl]" "" "z"
+"S" "[rmnl]" "" "z" 
+    
+"dS" "" "$" "S"
+"dZ" "" "$" "S"
+"Z" "" "$" "S"
+"S" "" "$" "(S|s)"
+"z" "" "$" "(S|s)"
+    
+"S" "" "" "s"
+"dZ" "" "" "z"
+"Z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_cyrillic.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_cyrillic.txt
new file mode 100644
index 0000000..d470aa8
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_cyrillic.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_czech.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_czech.txt
new file mode 100644
index 0000000..b542861
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_czech.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_dutch.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_dutch.txt
new file mode 100644
index 0000000..b542861
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_dutch.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_english.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_english.txt
new file mode 100644
index 0000000..84d8174
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_english.txt
@@ -0,0 +1,47 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// VOWELS
+"I" "" "[^aEIeiou]e" "(Q|i|D)" // like in "five"
+"I" "" "$" "i"
+"I" "[aEIeiou]" "" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "" "" "(i|Q)" 
+    
+"lE" "[bdfgkmnprsStvzZ]" "" "(il|li|lY)"  // Applebaum < Appelbaum
+         
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+        
+"E" "D[^aeiEIou]" "" "(i|)" // Weinberg, Shaneberg (shaneberg/shejneberg) --> shejnberg
+"e" "D[^aeiEIou]" "" "(i|)" 
+
+"e" "" "" "i"
+"E" "" "[fklmnprsStv]$" "i"
+"E" "" "ts$" "i"
+"E" "[DaoiEuQY]" "" "i"
+"E" "" "[aoQY]" "i"
+"E" "" "" "(Y|i)"
+      
+"a" "" "" "(a|o)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_french.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_french.txt
new file mode 100644
index 0000000..93a4980
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_french.txt
@@ -0,0 +1,25 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+
+"a" "" "" "(a|o)"
+"e" "" "" "i"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_german.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_german.txt
new file mode 100644
index 0000000..14a5db7
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_german.txt
@@ -0,0 +1,73 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+"I" "" "$" "i"
+"I" "[aeiAEIOUouQY]" "" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "" "" "(Q|i)" 
+    
+"AU" "" "" "(D|a|u)"
+"aU" "" "" "(D|a|u)"
+"Au" "" "" "(D|a|u)"
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"OU" "" "" "(D|o|u)"
+"oU" "" "" "(D|o|u)"
+"Ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"Ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"Oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+"Ui" "" "" "(D|u|i)"
+        
+"e" "" "" "i" 
+  
+"E" "" "[fklmnprst]$" "i"
+"E" "" "ts$" "i"
+"E" "" "$" "i"
+"E" "[DaoAOUiuQY]" "" "i"
+"E" "" "[aoAOQY]" "i"
+"E" "" "" "(Y|i)" 
+       
+"O" "" "$" "o"
+"O" "" "[fklmnprst]$" "o"
+"O" "" "ts$" "o"
+"O" "[aoAOUeiuQY]" "" "o"
+"O" "" "" "(o|Y)"
+    
+"a" "" "" "(a|o)" 
+  
+"A" "" "$" "(a|o)" 
+"A" "" "[fklmnprst]$" "(a|o)"
+"A" "" "ts$" "(a|o)"
+"A" "[aoeOUiuQY]" "" "(a|o)"
+"A" "" "" "(a|o|Y)" 
+
+"U" "" "$" "u"
+"U" "[DaoiuUQY]" "" "u"
+"U" "" "[^k]$" "u"
+"Uk" "[lr]" "$" "(uk|Qk)"
+"Uk" "" "$" "uk"
+"sUts" "" "$" "(suts|sQts)"
+"Uts" "" "$" "uts"
+"U" "" "" "(u|Q)" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_greek.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_greek.txt
new file mode 100644
index 0000000..b542861
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_greek.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_greeklatin.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_greeklatin.txt
new file mode 100644
index 0000000..e492b97
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_greeklatin.txt
@@ -0,0 +1,20 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
+
+"N" "" "" ""
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_hebrew.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_hebrew.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_hungarian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_hungarian.txt
new file mode 100644
index 0000000..46ebf29
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_hungarian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_italian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_italian.txt
new file mode 100644
index 0000000..46ebf29
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_italian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_polish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_polish.txt
new file mode 100644
index 0000000..ce577af
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_polish.txt
@@ -0,0 +1,84 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+"aiB" "" "[bp]" "(D|Dm)"
+"oiB" "" "[bp]" "(D|Dm)" 
+"uiB" "" "[bp]" "(D|Dm)" 
+"eiB" "" "[bp]" "(D|Dm)"
+"EiB" "" "[bp]" "(D|Dm)"
+"iiB" "" "[bp]" "(D|Dm)"
+"IiB" "" "[bp]" "(D|Dm)"
+
+"aiB" "" "[dgkstvz]" "(D|Dn)"
+"oiB" "" "[dgkstvz]" "(D|Dn)" 
+"uiB" "" "[dgkstvz]" "(D|Dn)" 
+"eiB" "" "[dgkstvz]" "(D|Dn)"
+"EiB" "" "[dgkstvz]" "(D|Dn)"
+"iiB" "" "[dgkstvz]" "(D|Dn)"
+"IiB" "" "[dgkstvz]" "(D|Dn)"
+
+"B" "" "[bp]" "(o|om|im)" 
+"B" "" "[dgkstvz]" "(o|on|in)" 
+"B" "" "" "o"
+
+"aiF" "" "[bp]" "(D|Dm)"
+"oiF" "" "[bp]" "(D|Dm)" 
+"uiF" "" "[bp]" "(D|Dm)" 
+"eiF" "" "[bp]" "(D|Dm)"
+"EiF" "" "[bp]" "(D|Dm)"
+"iiF" "" "[bp]" "(D|Dm)"
+"IiF" "" "[bp]" "(D|Dm)"
+
+"aiF" "" "[dgkstvz]" "(D|Dn)"
+"oiF" "" "[dgkstvz]" "(D|Dn)" 
+"uiF" "" "[dgkstvz]" "(D|Dn)" 
+"eiF" "" "[dgkstvz]" "(D|Dn)"
+"EiF" "" "[dgkstvz]" "(D|Dn)"
+"iiF" "" "[dgkstvz]" "(D|Dn)"
+"IiF" "" "[dgkstvz]" "(D|Dn)"
+
+"F" "" "[bp]" "(i|im|om)"
+"F" "" "[dgkstvz]" "(i|in|on)"
+"F" "" "" "i" 
+
+"P" "" "" "(o|u)" 
+
+"I" "" "$" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "[aeiAEBFIou]" "" "i"
+"I" "" "" "(i|Q)" 
+
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+
+"a" "" "" "(a|o)" 
+"e" "" "" "i" 
+
+"E" "" "[fklmnprst]$" "i"
+"E" "" "ts$" "i"
+"E" "" "$" "i"
+"E" "[DaoiuQ]" "" "i"
+"E" "" "[aoQ]" "i"
+"E" "" "" "(Y|i)" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_portuguese.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_portuguese.txt
new file mode 100644
index 0000000..b542861
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_portuguese.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_romanian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_romanian.txt
new file mode 100644
index 0000000..f5c5894
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_romanian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_polish
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_russian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_russian.txt
new file mode 100644
index 0000000..9138487
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_russian.txt
@@ -0,0 +1,48 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// VOWELS
+"I" "" "$" "i"
+"I" "" "[^k]$" "i"
+"Ik" "[lr]" "$" "(ik|Qk)"
+"Ik" "" "$" "ik"
+"sIts" "" "$" "(sits|sQts)"
+"Its" "" "$" "its"
+"I" "[aeiEIou]" "" "i"
+"I" "" "" "(i|Q)" 
+        
+"au" "" "" "(D|a|u)"
+"ou" "" "" "(D|o|u)"
+"ai" "" "" "(D|a|i)"
+"oi" "" "" "(D|o|i)"
+"ui" "" "" "(D|u|i)"
+
+"om" "" "[bp]" "(om|im)" 
+"on" "" "[dgkstvz]" "(on|in)" 
+"em" "" "[bp]" "(im|om)" 
+"en" "" "[dgkstvz]" "(in|on)" 
+"Em" "" "[bp]" "(im|Ym|om)" 
+"En" "" "[dgkstvz]" "(in|Yn|on)" 
+                    
+"a" "" "" "(a|o)" 
+"e" "" "" "i" 
+    
+"E" "" "[fklmnprsStv]$" "i"
+"E" "" "ts$" "i"
+"E" "[DaoiuQ]" "" "i"
+"E" "" "[aoQ]" "i"
+"E" "" "" "(Y|i)" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_spanish.txt
new file mode 100644
index 0000000..fb3e661
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_spanish.txt
@@ -0,0 +1,21 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
+
+"B" "" "" "(b|v)"
+"V" "" "" "(b|v)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_approx_turkish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_approx_turkish.txt
new file mode 100644
index 0000000..b542861
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_approx_turkish.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_any.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_any.txt
new file mode 100644
index 0000000..28fafb9
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_any.txt
@@ -0,0 +1,33 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERAL
+   // A, E, I, O, P, U should create variants, 
+   // EE = final "e" (english & french)
+   // V, B from Spanish
+   // but a, e, i, o, u should not create any new variant
+"EE" "" "$" "e"
+    
+"A" "" "" "a"
+"E" "" "" "e"
+"I" "" "" "i"
+"O" "" "" "o"
+"P" "" "" "o"
+"U" "" "" "u"
+    
+"B" "" "" "b"
+"V" "" "" "v"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_approx_common.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_approx_common.txt
new file mode 100644
index 0000000..1093912
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_approx_common.txt
@@ -0,0 +1,79 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERAL
+"h" "" "$" ""
+
+// VOICED - UNVOICED CONSONANTS
+"b" "" "[fktSs]" "p"
+"b" "" "p" ""
+"b" "" "$" "p"
+"p" "" "[vgdZz]" "b" // Ashk: "v" excluded (everythere)
+"p" "" "b" ""
+    
+"v" "" "[pktSs]" "f"
+"v" "" "f" ""
+"v" "" "$" "f"
+"f" "" "[vbgdZz]" "v"
+"f" "" "v" ""
+    
+"g" "" "[pftSs]" "k"
+"g" "" "k" ""
+"g" "" "$" "k"
+"k" "" "[vbdZz]" "g"
+"k" "" "g" ""
+    
+"d" "" "[pfkSs]" "t"
+"d" "" "t" ""
+"d" "" "$" "t"
+"t" "" "[vbgZz]" "d"
+"t" "" "d" ""
+    
+"s" "" "dZ" ""
+"s" "" "tS" ""
+    
+"z" "" "[pfkSt]" "s"
+"z" "" "[sSzZ]" ""
+"s" "" "[sSzZ]" ""
+"Z" "" "[sSzZ]" ""
+"S" "" "[sSzZ]" ""
+       
+// SIMPLIFICATION OF CONSONANT CLUSTERS
+"jnm" "" "" "jm"
+
+// DOUBLE --> SINGLE
+"ji" "^" "" "i"
+"jI" "^" "" "I"
+        
+"a" "" "[aA]" "" 
+"a" "A" "" "" 
+"A" "" "A" ""
+       
+"b" "" "b" ""
+"d" "" "d" ""
+"f" "" "f" ""
+"g" "" "g" ""
+"j" "" "j" ""
+"k" "" "k" ""
+"l" "" "l" ""
+"m" "" "m" ""
+"n" "" "n" ""
+"p" "" "p" ""
+"r" "" "r" ""
+"t" "" "t" ""
+"v" "" "v" ""
+"z" "" "z" ""
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_arabic.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_arabic.txt
new file mode 100644
index 0000000..4f2ead1
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_arabic.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"l" "" "" ""
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_common.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_common.txt
new file mode 100644
index 0000000..742fc71
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_common.txt
@@ -0,0 +1,32 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_exact_approx_common
+
+"H" "" "" ""
+ 
+// VOICED - UNVOICED CONSONANTS
+"s" "[^t]" "[bgZd]" "z"
+"Z" "" "[pfkst]" "S"
+"Z" "" "$" "S"
+"S" "" "[bgzd]" "Z"
+"z" "" "$" "s"
+    
+"ji" "[aAoOeEiIuU]" "" "j"
+"jI" "[aAoOeEiIuU]" "" "j"
+"je" "[aAoOeEiIuU]" "" "j"
+"jE" "[aAoOeEiIuU]" "" "j"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_cyrillic.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_cyrillic.txt
new file mode 100644
index 0000000..474f61b
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_cyrillic.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_czech.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_czech.txt
new file mode 100644
index 0000000..474f61b
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_czech.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_dutch.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_dutch.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_dutch.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_english.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_english.txt
new file mode 100644
index 0000000..474f61b
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_english.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_exact_russian
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_french.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_french.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_french.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_german.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_german.txt
new file mode 100644
index 0000000..7a648f2
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_german.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_exact_any
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_greek.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_greek.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_greek.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_greeklatin.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_greeklatin.txt
new file mode 100644
index 0000000..325ff34
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_greeklatin.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"N" "" "" "n"
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_hebrew.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_hebrew.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_hungarian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_hungarian.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_hungarian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_italian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_italian.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_italian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_polish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_polish.txt
new file mode 100644
index 0000000..babed2a
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_polish.txt
@@ -0,0 +1,23 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"B" "" "" "a"
+"F" "" "" "e"
+"P" "" "" "o"
+
+"E" "" "" "e"
+"I" "" "" "i"
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_portuguese.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_portuguese.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_portuguese.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_romanian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_romanian.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_romanian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_russian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_russian.txt
new file mode 100644
index 0000000..0a016e0
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_russian.txt
@@ -0,0 +1,19 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"E" "" "" "e"
+"I" "" "" "i"
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_spanish.txt
new file mode 100644
index 0000000..e555114
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_spanish.txt
@@ -0,0 +1,19 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"B" "" "" "b"
+"V" "" "" "v"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_exact_turkish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_exact_turkish.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_exact_turkish.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_hebrew_common.txt b/src/resources/org/apache/commons/codec/language/bm/gen_hebrew_common.txt
new file mode 100644
index 0000000..2ae2d9d
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_hebrew_common.txt
@@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include gen_exact_approx_common
+
+"ts" "" "" "C" // for not confusion Gutes [=guts] and Guts [=guc]
+"tS" "" "" "C" // same reason
+"S" "" "" "s"
+"p" "" "" "f"   
+"b" "^" "" "b"    
+"b" "" "" "(b|v)"    
+        
+"ja" "" "" "i"
+"jA" "" "" "i"  
+"je" "" "" "i"
+"jE" "" "" "i"
+"aj" "" "" "i"
+"Aj" "" "" "i"
+"I" "" "" "i"
+"j" "" "" "i"
+    
+"a" "^" "" "1"
+"A" "^" "" "1"
+"e" "^" "" "1"
+"E" "^" "" "1"
+"Y" "^" "" "1"
+    
+"a" "" "$" "1"
+"A" "" "$" "1"
+"e" "" "$" "1"
+"E" "" "$" "1"
+"Y" "" "$" "1"
+    
+"a" "" "" ""
+"A" "" "" ""
+"e" "" "" ""
+"E" "" "" ""
+"Y" "" "" ""
+    
+"oj" "^" "" "(u|vi)"
+"Oj" "^" "" "(u|vi)"
+"uj" "^" "" "(u|vi)"
+"Uj" "^" "" "(u|vi)" 
+    
+"oj" "" "" "u"
+"Oj" "" "" "u"
+"uj" "" "" "u"
+"Uj" "" "" "u" 
+    
+"ou" "^" "" "(u|v|1)"
+"o" "^" "" "(u|v|1)"
+"O" "^" "" "(u|v|1)"
+"U" "^" "" "(u|v|1)"
+"u" "^" "" "(u|v|1)"
+    
+"o" "" "$" "(u|1)"
+"O" "" "$" "(u|1)"
+"u" "" "$" "(u|1)"
+"U" "" "$" "(u|1)"
+    
+"ou" "" "" "u"
+"o" "" "" "u"
+"O" "" "" "u"
+"U" "" "" "u"
+        
+"VV" "" "" "u" // alef/ayin + vov from ruleshebrew
+"V" "" "" "v" // tsvey-vov from ruleshebrew;; only Ashkenazic
+"L" "^" "" "1" // alef/ayin from  ruleshebrew
+"L" "" "$" "1" // alef/ayin from  ruleshebrew
+"L" "" "" " " // alef/ayin from  ruleshebrew
+"WW" "^" "" "(vi|u)" // vav-yod from  ruleshebrew
+"WW" "" "" "u" // vav-yod from  ruleshebrew
+"W" "^" "" "(u|v)" // vav from  ruleshebrew
+"W" "" "" "u" // vav from  ruleshebrew
+    
+    //"g" "" "" "(g|Z)"
+    //"z" "" "" "(z|Z)"
+    //"d" "" "" "(d|dZ)"
+   
+"TB" "" "$" "(t|s)" // tav from ruleshebrew; only Ashkenazic
+"TB" "" "" "t" // tav from ruleshebrew; only Ashkenazic    
+"T" "" "" "t"   // tet from  ruleshebrew
+    
+   //"k" "" "" "(k|x)"
+   //"x" "" "" "(k|x)"
+"K" "" "" "k" // kof and initial kaf from ruleshebrew
+"X" "" "" "x" // khet and final kaf from ruleshebrew
+    
+"H" "^" "" "(x|1)"
+"H" "" "$" "(x|1)"
+"H" "" "" "(x|)"
+"h" "^" "" "1"
+"h" "" "" ""
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_languages.txt b/src/resources/org/apache/commons/codec/language/bm/gen_languages.txt
new file mode 100644
index 0000000..50f1118
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_languages.txt
@@ -0,0 +1,36 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+any
+arabic
+cyrillic
+czech
+dutch
+english
+french
+german
+greek
+greeklatin
+hebrew
+hungarian
+italian
+polish
+portuguese
+romanian
+russian
+spanish
+turkish
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_any.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_any.txt
new file mode 100644
index 0000000..bc2e2f4
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_any.txt
@@ -0,0 +1,367 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+  // format of each entry rule in the table
+  //   (pattern, left context, right context, phonetic)
+  // where
+  //   pattern is a sequence of characters that might appear in the word to be transliterated
+  //   left context is the context that precedes the pattern
+  //   right context is the context that follows the pattern
+  //   phonetic is the result that this rule generates
+  //
+  // note that both left context and right context can be regular expressions
+  // ex: left context of ^ would mean start of word
+  //     left context of [aeiouy] means following a vowel
+  //     right context of [^aeiouy] means preceding a consonant
+  //     right context of e$ means preceding a final e
+
+//GENERIC
+
+// CONVERTING FEMININE TO MASCULINE
+"yna" "" "$" "(in[russian]|ina)" 
+"ina" "" "$" "(in[russian]|ina)" 
+"liova" "" "$" "(lova|lof[russian]|lef[russian])"
+"lova" "" "$" "(lova|lof[russian]|lef[russian]|l[czech]|el[czech])"   
+"kova" "" "$" "(kova|kof[russian]|k[czech]|ek[czech])"   
+"ova" "" "$" "(ova|of[russian]|[czech])"   
+"ová" "" "$" "(ova|[czech])"   
+"eva" "" "$" "(eva|ef[russian])"   
+"aia" "" "$" "(aja|i[russian])"
+"aja" "" "$" "(aja|i[russian])" 
+"aya" "" "$" "(aja|i[russian])" 
+    
+"lowa" "" "$" "(lova|lof[polish]|l[polish]|el[polish])"   
+"kowa" "" "$" "(kova|kof[polish]|k[polish]|ek[polish])"   
+"owa" "" "$" "(ova|of[polish]|)"   
+"lowna" "" "$" "(lovna|levna|l[polish]|el[polish])" 
+"kowna" "" "$" "(kovna|k[polish]|ek[polish])"  
+"owna" "" "$" "(ovna|[polish])"  
+"lówna" "" "$" "(l|el)"  // polish
+"kówna" "" "$" "(k|ek)"  // polish
+"ówna" "" "$" ""         // polish
+"á" "" "$" "(a|i[czech])" 
+"a" "" "$" "(a|i[polish+czech])" 
+    
+// CONSONANTS
+"pf" "" "" "(pf|p|f)" 
+"que" "" "$" "(k[french]|ke|kve)"
+"qu" "" "" "(kv|k)" 
+ 
+"m" "" "[bfpv]" "(m|n)" 
+"m" "[aeiouy]" "[aeiouy]" "m"  
+"m" "[aeiouy]" "" "(m|n[french+portuguese])"  // nasal
+ 
+"ly" "" "[au]" "l" 
+"li" "" "[au]" "l" 
+"lio" "" "" "(lo|le[russian])" 
+"lyo" "" "" "(lo|le[russian])" 
+  //array("ll" "" "" "(l|J[spanish])"  // Disabled Argentinian rule
+"lt" "u" "$" "(lt|[french])" 
+    
+"v" "^" "" "(v|f[german]|b[spanish])" 
+
+"ex" "" "[aáuiíoóeéêy]" "(ez[portuguese]|eS[portuguese]|eks|egz)" 
+"ex" "" "[cs]" "(e[portuguese]|ek)" 
+"x" "u" "$" "(ks|[french])" 
+   
+"ck" "" "" "(k|tsk[polish+czech])"
+"cz" "" "" "(tS|tsz[czech])" // Polish
+   
+    //Proceccing of "h" in various combinations         
+"rh" "^" "" "r"
+"dh" "^" "" "d"
+"bh" "^" "" "b"
+     
+"ph" "" "" "(ph|f)"
+"kh" "" "" "(x[russian+english]|kh)"  
+  
+"lh" "" "" "(lh|l[portuguese])" 
+"nh" "" "" "(nh|nj[portuguese])" 
+        
+"ssch" "" "" "S"      // german
+"chsch" "" "" "xS"    // german
+"tsch" "" "" "tS"     // german 
+    
+    ///"desch" "^" "" "deS" 
+    ///"desh" "^" "" "(dES|de[french])" 
+    ///"des" "^" "[^aeiouy]" "(dEs|de[french])" 
+    
+"sch" "[aeiouy]" "[ei]" "(S|StS[russian]|sk[romanian+italian])" 
+"sch" "[aeiouy]" "" "(S|StS[russian])" 
+"sch" "" "[ei]" "(sk[romanian+italian]|S|StS[russian])"
+"sch" "" "" "(S|StS[russian])"
+"ssh" "" "" "S" 
+    
+"sh" "" "[äöü]" "sh"      // german 
+"sh" "" "[aeiou]" "(S[russian+english]|sh)"
+"sh" "" "" "S" 
+ 
+"zh" "" "" "(Z[english+russian]|zh|tsh[german])" 
+    
+"chs" "" "" "(ks[german]|xs|tSs[russian+english])" 
+"ch" "" "[ei]" "(x|tS[spanish+english+russian]|k[romanian+italian]|S[portuguese+french])" 
+"ch" "" "" "(x|tS[spanish+english+russian]|S[portuguese+french])"  
+ 
+"th" "^" "" "t"     // english+german+greeklatin
+"th" "" "[äöüaeiou]" "(t[english+german+greeklatin]|th)"
+"th" "" "" "t"  // english+german+greeklatin
+   
+"gh" "" "[ei]" "(g[romanian+italian+greeklatin]|gh)" 
+          
+"ouh" "" "[aioe]" "(v[french]|uh)"
+"uh" "" "[aioe]" "(v|uh)" 
+"h" "" "$" "" 
+"h" "[aeiouyäöü]" "" ""  // german
+"h" "^" "" "(h|x[romanian+greeklatin]|H[english+romanian+polish+french+portuguese+italian+spanish])" 
+         
+    //Processing of "ci" "ce" & "cy"
+"cia" "" "" "(tSa[polish]|tsa)"  // Polish
+"cią" "" "[bp]" "(tSom|tsom)"     // Polish
+"cią" "" "" "(tSon[polish]|tson)" // Polish
+"cię" "" "[bp]" "(tSem[polish]|tsem)" // Polish
+"cię" "" "" "(tSen[polish]|tsen)" // Polish
+"cie" "" "" "(tSe[polish]|tse)"  // Polish
+"cio" "" "" "(tSo[polish]|tso)"  // Polish
+"ciu" "" "" "(tSu[polish]|tsu)" // Polish
+
+"sci" "" "$" "(Si[italian]|stsi[polish+czech]|dZi[turkish]|tSi[polish+romanian]|tS[romanian]|si)" 
+"sc" "" "[ei]" "(S[italian]|sts[polish+czech]|dZ[turkish]|tS[polish+romanian]|s)" 
+"ci" "" "$" "(tsi[polish+czech]|dZi[turkish]|tSi[polish+romanian]|tS[romanian]|si)" 
+"cy" "" "" "(si|tsi[polish])" 
+"c" "" "[ei]" "(ts[polish+czech]|dZ[turkish]|tS[polish+romanian]|k[greeklatin]|s)" 
+      
+    //Processing of "s"      
+"sç" "" "[aeiou]" "(s|stS[turkish])"
+"ssz" "" "" "S" // polish
+"sz" "^" "" "(S|s[hungarian])" // polish
+"sz" "" "$" "(S|s[hungarian])" // polish
+"sz" "" "" "(S|s[hungarian]|sts[german])" // polish
+"ssp" "" "" "(Sp[german]|sp)"
+"sp" "" "" "(Sp[german]|sp)"
+"sst" "" "" "(St[german]|st)"
+"st" "" "" "(St[german]|st)" 
+"ss" "" "" "s"
+"sj" "^" "" "S" // dutch
+"sj" "" "$" "S" // dutch
+"sj" "" "" "(sj|S[dutch]|sx[spanish]|sZ[romanian+turkish])" 
+  
+"sia" "" "" "(Sa[polish]|sa[polish]|sja)" 
+"sią" "" "[bp]" "(Som[polish]|som)" // polish
+"sią" "" "" "(Son[polish]|son)" // polish
+"się" "" "[bp]" "(Sem[polish]|sem)" // polish
+"się" "" "" "(Sen[polish]|sen)" // polish
+"sie" "" "" "(se|sje|Se[polish]|zi[german])" 
+    
+"sio" "" "" "(So[polish]|so)" 
+"siu" "" "" "(Su[polish]|sju)" 
+     
+"si" "[äöëaáuiíoóeéêy]" "" "(Si[polish]|si|zi[portuguese+french+italian+german])"
+"si" "" "" "(Si[polish]|si|zi[german])"
+"s" "[aáuiíoóeéêy]" "[aáuíoóeéêy]" "(s|z[portuguese+french+italian+german])" 
+"s" "" "[aeouäöë]" "(s|z[german])"
+"s" "[aeiouy]" "[dglmnrv]" "(s|z|Z[portuguese]|[french])" // Groslot
+"s" "" "[dglmnrv]" "(s|z|Z[portuguese])" 
+                 
+    //Processing of "g"   
+"gue" "" "$" "(k[french]|gve)"  // portuguese+spanish
+"gu" "" "[ei]" "(g[french]|gv[portuguese+spanish])" // portuguese+spanish
+"gu" "" "[ao]" "gv"     // portuguese+spanish
+"guy" "" "" "gi"  // french
+    
+"gli" "" "" "(glI|l[italian])" 
+"gni" "" "" "(gnI|ni[italian+french)])"
+"gn" "" "[aeou]" "(n[italian+french)]|nj[italian+french]|gn)" 
+    
+"ggie" "" "" "(je[greeklatin]|dZe)" // dZ is Italian
+"ggi" "" "[aou]" "(j[greeklatin]|dZ)" // dZ is Italian
+        
+"ggi" "[yaeiou]" "[aou]" "(gI|dZ[italian]|j[greeklatin])"  
+"gge" "[yaeiou]" "" "(gE|xe[spanish]|gZe[portuguese+french]|dZe[english+romanian+italian+spanish]|je[greeklatin])" 
+"ggi" "[yaeiou]" "" "(gI|xi[spanish]|gZi[portuguese+french]|dZi[english+romanian+italian+spanish]|i[greeklatin])" 
+"ggi" "" "[aou]" "(gI|dZ[italian]|j[greeklatin])" 
+    
+"gie" "" "$" "(ge|gi[german]|ji[french]|dZe[italian])" 
+"gie" "" "" "(ge|gi[german]|dZe[italian]|je[greeklatin])" 
+"gi" "" "[aou]" "(i[greeklatin]|dZ)" // dZ is Italian
+        
+"ge" "[yaeiou]" "" "(gE|xe[spanish]|Ze[portuguese+french]|dZe[english+romanian+italian+spanish])" 
+"gi" "[yaeiou]" "" "(gI|xi[spanish]|Zi[portuguese+french]|dZi[english+romanian+italian+spanish])" 
+"ge" "" "" "(gE|xe[spanish]|hE[russian]|je[greeklatin]|Ze[portuguese+french]|dZe[english+romanian+italian+spanish])" 
+"gi" "" "" "(gI|xi[spanish]|hI[russian]|i[greeklatin]|Zi[portuguese+french]|dZi[english+romanian+italian+spanish])" 
+"gy" "" "[aeouáéóúüöőű]" "(gi|dj[hungarian])"
+"gy" "" "" "(gi|d[hungarian])" 
+"g" "[yaeiou]" "[aouyei]" "g" 
+"g" "" "[aouei]" "(g|h[russian])" 
+    
+    //Processing of "j"        
+"ij" "" "" "(i|ej[dutch]|ix[spanish]|iZ[french+romanian+turkish+portuguese])" 
+"j" "" "[aoeiuy]" "(j|dZ[english]|x[spanish]|Z[french+romanian+turkish+portuguese])" 
+         
+    //Processing of "z"    
+"rz" "t" "" "(S[polish]|r)" // polish
+"rz" "" "" "(rz|rts[german]|Z[polish]|r[polish]|rZ[polish])" 
+        
+"tz" "" "$" "(ts|tS[english+german])" 
+"tz" "^" "" "(ts[english+german+russian]|tS[english+german])" 
+"tz" "" "" "(ts[english+german+russian]|tz)" 
+    
+"zia" "" "[bcdgkpstwzż]" "(Za[polish]|za[polish]|zja)" 
+"zia" "" "" "(Za[polish]|zja)" 
+"zią" "" "[bp]" "(Zom[polish]|zom)"  // polish
+"zią" "" "" "(Zon[polish]|zon)" // polish
+"zię" "" "[bp]" "(Zem[polish]|zem)" // polish
+"zię" "" "" "(Zen[polish]|zen)" // polish
+"zie" "" "[bcdgkpstwzż]" "(Ze[polish]|ze[polish]|ze|tsi[german])" 
+"zie" "" "" "(ze|Ze[polish]|tsi[german])" 
+"zio" "" "" "(Zo[polish]|zo)" 
+"ziu" "" "" "(Zu[polish]|zju)" 
+"zi" "" "" "(Zi[polish]|zi|tsi[german]|dzi[italian]|tsi[italian]|si[spanish])" 
+
+"z" "" "$" "(s|ts[german]|ts[italian]|S[portuguese])" // ts It, s/S/Z Port, s in Sp, z Fr
+"z" "" "[bdgv]" "(z|dz[italian]|Z[portuguese])" // dz It, Z/z Port, z Sp & Fr
+"z" "" "[ptckf]" "(s|ts[italian]|S[portuguese])" // ts It, s/S/z Port, z/s Sp
+              
+ // VOWELS  
+"aue" "" "" "aue" 
+"oue" "" "" "(oue|ve[french])" 
+"eau" "" "" "o" // French
+        
+"ae" "" "" "(Y[german]|aje[russian]|ae)" 
+"ai" "" "" "aj" 
+"au" "" "" "(au|o[french])" 
+"ay" "" "" "aj" 
+"ão" "" "" "(au|an)" // Port
+"ãe" "" "" "(aj|an)" // Port
+"ãi" "" "" "(aj|an)" // Port
+"ea" "" "" "(ea|ja[romanian])"
+"ee" "" "" "(i[english]|aje[russian]|e)" 
+"ei" "" "" "(aj|ej)"
+"eu" "" "" "(eu|Yj[german]|ej[german]|oj[german]|Y[dutch])"
+"ey" "" "" "(aj|ej)"
+"ia" "" "" "ja" 
+"ie" "" "" "(i[german]|e[polish]|ije[russian]|Q[dutch]|je)" 
+"ii" "" "$" "i" // russian
+"io" "" "" "(jo|e[russian])"
+"iu" "" "" "ju" 
+"iy" "" "$" "i" // russian
+"oe" "" "" "(Y[german]|oje[russian]|u[dutch]|oe)" 
+"oi" "" "" "oj" 
+"oo" "" "" "(u[english]|o)" 
+"ou" "" "" "(ou|u[french+greeklatin]|au[dutch])" 
+"où" "" "" "u" // french
+"oy" "" "" "oj" 
+"õe" "" "" "(oj|on)" // Port
+"ua" "" "" "va"
+"ue" "" "" "(Q[german]|uje[russian]|ve)" 
+"ui" "" "" "(uj|vi|Y[dutch])" 
+"uu" "" "" "(u|Q[dutch])" 
+"uo" "" "" "(vo|o)"
+"uy" "" "" "uj" 
+"ya" "" "" "ja" 
+"ye" "" "" "(je|ije[russian])"
+"yi" "^" "" "i"
+"yi" "" "$" "i" // russian
+"yo" "" "" "(jo|e[russian])"
+"yu" "" "" "ju" 
+"yy" "" "$" "i" // russian
+    
+"i" "[áóéê]" "" "j"
+"y" "[áóéê]" "" "j"
+         
+"e" "^" "" "(e|je[russian])" 
+"e" "" "$" "(e|EE[english+french])" 
+            
+// LANGUAGE SPECIFIC CHARACTERS 
+"ą" "" "[bp]" "om" // polish
+"ą" "" "" "on"  // polish
+"ä" "" "" "Y" 
+"á" "" "" "a" // Port & Sp
+"à" "" "" "a" 
+"â" "" "" "a" 
+"ã" "" "" "(a|an)" // Port
+"ă" "" "" "(e[romanian]|a)" // romanian
+"č" "" "" "tS" // czech
+"ć" "" "" "(tS[polish]|ts)"  // polish
+"ç" "" "" "(s|tS[turkish])"
+"ď" "" "" "(d|dj[czech])"
+"ę" "" "[bp]" "em" // polish
+"ę" "" "" "en" // polish
+"é" "" "" "e" 
+"è" "" "" "e" 
+"ê" "" "" "e" 
+"ě" "" "" "(e|je[czech])" 
+"ğ" "" "" "" // turkish
+"í" "" "" "i" 
+"î" "" "" "i" 
+"ı" "" "" "(i|e[turkish]|[turkish])" 
+"ł" "" "" "l" 
+"ń" "" "" "(n|nj[polish])" // polish
+"ñ" "" "" "(n|nj[spanish])" 
+"ó" "" "" "(u[polish]|o)"  
+"ô" "" "" "o" // Port & Fr
+"õ" "" "" "(o|on[portuguese]|Y[hungarian])" 
+"ò" "" "" "o"  // Sp & It
+"ö" "" "" "Y"
+"ř" "" "" "(r|rZ[czech])"
+"ś" "" "" "(S[polish]|s)" 
+"ş" "" "" "S" // romanian+turkish
+"š" "" "" "S" // czech
+"ţ" "" "" "ts"  // romanian
+"ť" "" "" "(t|tj[czech])"
+"ű" "" "" "Q" // hungarian
+"ü" "" "" "(Q|u[portuguese+spanish])"
+"ú" "" "" "u" 
+"ů" "" "" "u" // czech
+"ù" "" "" "u" // french
+"ý" "" "" "i"  // czech
+"ż" "" "" "Z" // polish
+"ź" "" "" "(Z[polish]|z)" 
+   
+"ß" "" "" "s" // german
+"'" "" "" "" // russian
+"\"" "" "" "" // russian
+ 
+"o" "" "[bcćdgklłmnńrsśtwzźż]" "(O|P[polish])"    
+    
+ // LATIN ALPHABET
+"a" "" "" "A"
+"b" "" "" "B" 
+"c" "" "" "(k|ts[polish+czech]|dZ[turkish])" 
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+   //array("g" "" "" "(g|x[dutch])" // Dutch sound disabled
+"g" "" "" "g"
+"h" "" "" "(h|x[romanian]|H[french+portuguese+italian+spanish])" 
+"i" "" "" "I"
+"j" "" "" "(j|x[spanish]|Z[french+romanian+turkish+portuguese])" 
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "O"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "(s|S[portuguese])" 
+"t" "" "" "t"
+"u" "" "" "U"
+"v" "" "" "V" 
+"w" "" "" "(v|w[english+dutch])"     
+"x" "" "" "(ks|gz|S[portuguese+spanish])"   // S/ks Port & Sp, gz Sp, It only ks
+"y" "" "" "i"
+"z" "" "" "(z|ts[german]|dz[italian]|ts[italian]|s[spanish])" // ts/dz It, z Port & Fr, z/s Sp
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_arabic.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_arabic.txt
new file mode 100644
index 0000000..00f85e8
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_arabic.txt
@@ -0,0 +1,74 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+"ا" "" "" "a" // alif isol & init 
+                
+"ب" "" "" "b1" // ba' isol
+        
+"ت" "" "" "t1" // ta' isol
+        
+"ث" "" "" "t1" // tha' isol
+
+"ج" "" "" "(dZ1|Z1)" // jim isol
+        
+"ح" "" "" "(h1|1)" // h.a' isol
+    
+"خ" "" "" "x1" // kha' isol
+    
+"د" "" "" "d1" // dal isol & init
+           
+"ذ" "" "" "d1" // dhal isol & init
+        
+"ر" "" "" "r1" // dhal isol & init
+    
+"ز" "" "" "z1" // za' isol & init
+        
+"س" "" "" "s1" // sin isol
+    
+"ش" "" "" "S1" // shin isol
+    
+"ص" "" "" "s1" // s.ad isol
+    
+"ض" "" "" "d1" // d.ad isol
+        
+"ط" "" "" "t1" // t.a' isol
+        
+"ظ" "" "" "z1" // z.a' isol
+        
+"ع" "" "" "(h1|1)" // ayin isol 
+    
+"غ" "" "" "g1" // ghayin isol
+    
+"ف" "" "" "f1" // fa' isol
+    
+"ق" "" "" "k1" // qaf isol
+    
+"ك" "" "" "k1" // kaf isol
+    
+"ل" "" "" "l1" // lam isol
+    
+"م" "" "" "m1" // mim isol
+    
+"ن" "" "" "n1" // nun isol
+    
+"ه" "" "" "(h1|1)" // h isol
+        
+"و" "" "" "(u|v1)" // waw, isol + init
+               
+    
+"ي‎" "" "" "(i|j1)" // ya' isol
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_cyrillic.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_cyrillic.txt
new file mode 100644
index 0000000..6237de4
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_cyrillic.txt
@@ -0,0 +1,99 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERAL
+"ця" "" "" "tsa"
+"цю" "" "" "tsu"
+"циа" "" "" "tsa"
+"цие" "" "" "tse"
+"цио" "" "" "tso"
+"циу" "" "" "tsu"
+"сие" "" "" "se"
+"сио" "" "" "so"
+"зие" "" "" "ze"
+"зио" "" "" "zo"
+"с" "" "с" ""
+
+"гауз" "" "$" "haus"
+"гаус" "" "$" "haus"
+"гольц" "" "$" "holts"
+"геймер" "" "$" "(hejmer|hajmer)"
+"гейм" "" "$" "(hejm|hajm)"
+"гоф" "" "$" "hof"
+"гер" "" "$" "ger"
+"ген" "" "$" "gen"
+"гин" "" "$" "gin"
+"г" "(й|ё|я|ю|ы|а|е|о|и|у)" "(а|е|о|и|у)" "g"
+"г" "" "(а|е|о|и|у)" "(g|h)"
+
+"ля" "" "" "la"
+"лю" "" "" "lu"
+"лё" "" "" "(le|lo)"
+"лио" "" "" "(le|lo)"
+"ле" "" "" "(lE|lo)"
+
+"ийе" "" "" "je"
+"ие" "" "" "je"
+"ыйе" "" "" "je"
+"ые" "" "" "je"
+"ий" "" "(а|о|у)" "j"
+"ый" "" "(а|о|у)" "j"
+"ий" "" "$" "i"
+"ый" "" "$" "i"
+
+"ей" "^" "" "(jej|ej)"
+"е" "(а|е|о|у)" "" "je"
+"е" "^" "" "je"
+"эй" "" "" "ej"
+"ей" "" "" "ej"
+
+"ауе" "" "" "aue"
+"ауэ" "" "" "aue"
+
+"а" "" "" "a"
+"б" "" "" "b"
+"в" "" "" "v"
+"г" "" "" "g"
+"д" "" "" "d"
+"е" "" "" "E"
+"ё" "" "" "(e|jo)"
+"ж" "" "" "Z"
+"з" "" "" "z"
+"и" "" "" "I"
+"й" "" "" "j"
+"к" "" "" "k"
+"л" "" "" "l"
+"м" "" "" "m"
+"н" "" "" "n"
+"о" "" "" "o"
+"п" "" "" "p"
+"р" "" "" "r"
+"с" "" "" "s"
+"т" "" "" "t"
+"у" "" "" "u"
+"ф" "" "" "f"
+"х" "" "" "x"
+"ц" "" "" "ts"
+"ч" "" "" "tS"
+"ш" "" "" "S"
+"щ" "" "" "StS"
+"ъ" "" "" ""
+"ы" "" "" "I"
+"ь" "" "" ""
+"э" "" "" "E"
+"ю" "" "" "ju"
+"я" "" "" "ja"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_czech.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_czech.txt
new file mode 100644
index 0000000..bc7a79c
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_czech.txt
@@ -0,0 +1,67 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"ch" "" "" "x"
+"qu" "" "" "(k|kv)"    
+"aue" "" "" "aue"
+"ei" "" "" "(ej|aj)"
+"i" "[aou]" "" "j"
+"i" "" "[aeou]" "j"
+
+"č" "" "" "tS"
+"š" "" "" "S"
+"ň" "" "" "n"
+"ť" "" "" "(t|tj)"
+"ď" "" "" "(d|dj)"
+"ř" "" "" "(r|rZ)"
+
+"á" "" "" "a"
+"é" "" "" "e"
+"í" "" "" "i"
+"ó" "" "" "o"
+"ú" "" "" "u"
+"ý" "" "" "i"
+"ě" "" "" "(e|je)"
+"ů" "" "" "u"
+
+// LATIN ALPHABET
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "ts"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "(h|g)"
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "(k|kv)"    
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"    
+"x" "" "" "ks"    
+"y" "" "" "i"
+"z" "" "" "z" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_dutch.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_dutch.txt
new file mode 100644
index 0000000..2a69a96
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_dutch.txt
@@ -0,0 +1,78 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// CONSONANTS
+"ssj" "" "" "S"
+"sj" "" "" "S"
+"ch" "" "" "x"
+"c" "" "[eiy]" "ts"   
+"ck" "" "" "k"     // German
+"pf" "" "" "(pf|p|f)" // German
+"ph" "" "" "(ph|f)"
+"qu" "" "" "kv"
+"th" "^" "" "t" // German
+"th" "" "[äöüaeiou]" "(t|th)" // German
+"th" "" "" "t" // German
+"ss" "" "" "s"
+"h" "[aeiouy]" "" ""
+
+// VOWELS
+"aue" "" "" "aue" 
+"ou" "" "" "au" 
+"ie" "" "" "(Q|i)" 
+"uu" "" "" "(Q|u)"   
+"ee" "" "" "e"   
+"eu" "" "" "(Y|Yj)" // Dutch Y  
+"aa" "" "" "a"   
+"oo" "" "" "o"   
+"oe" "" "" "u"   
+"ij" "" "" "ej"
+"ui" "" "" "(Y|uj)"
+"ei" "" "" "(ej|aj)" // Dutch ej
+
+"i" "" "[aou]" "j"
+"y" "" "[aeou]" "j"
+"i" "[aou]" "" "j"
+"y" "[aeou]" "" "j"
+
+// LATIN ALPHABET     
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "(g|x)"
+"h" "" "" "h"
+"i" "" "" "(i|Q)"   
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "(u|Q)"   
+"v" "" "" "v"
+"w" "" "" "(w|v)"
+"x" "" "" "ks"
+"y" "" "" "i"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_english.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_english.txt
new file mode 100644
index 0000000..db9ccec
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_english.txt
@@ -0,0 +1,113 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERAL
+
+// CONSONANTS
+"�" "" "" "" // O�Neill
+"'" "" "" "" // O�Neill
+"mc" "^" "" "mak" // McDonald
+"tz" "" "" "ts" // Fitzgerald
+"tch" "" "" "tS"
+"ch" "" "" "(tS|x)"
+"ck" "" "" "k"
+"cc" "" "[iey]" "ks" // success, accent
+"c" "" "c" ""
+"c" "" "[iey]" "s" // circle 
+
+"gh" "^" "" "g" // ghost
+"gh" "" "" "(g|f|w)" // burgh | tough | bough
+"gn" "" "" "(gn|n)"
+"g" "" "[iey]" "(g|dZ)" // get, gem, giant, gigabyte
+// "th" "" "" "(6|8|t)"
+"th" "" "" "t"
+"kh" "" "" "x"
+"ph" "" "" "f"
+"sch" "" "" "(S|sk)"
+"sh" "" "" "S"
+"who" "^" "" "hu"
+"wh" "^" "" "w"
+
+"h" "" "$" "" // hard to find an example that isn't in a name
+"h" "" "[^aeiou]" "" // hard to find an example that isn't in a name
+"h" "^" "" "H"
+
+"kn" "^" "" "n" // knight
+"mb" "" "$" "m"
+"ng" "" "$" "(N|ng)"
+"pn" "^" "" "(pn|n)"
+"ps" "^" "" "(ps|s)"
+"qu" "" "" "kw"
+"tia" "" "" "(So|Sa)"
+"tio" "" "" "So"
+"wr" "^" "" "r"
+"x" "^" "" "z"
+
+// VOWELS
+"y" "^" "" "j"
+"y" "^" "[aeiouy]" "j"
+"yi" "^" "" "i"
+"aue" "" "" "aue" 
+"oue" "" "" "(aue|oue)" 
+"ai" "" "" "(aj|ej|e)" // rain | said
+"ay" "" "" "(aj|ej)" 
+"a" "" "[^aeiou]e" "ej" // plane 
+"ei" "" "" "(ej|aj|i)" // weigh | receive
+"ey" "" "" "(ej|aj|i)" // hey | barley
+"ear" "" "" "ia" // tear
+"ea" "" "" "(i|e)" // reason | treasure
+"ee" "" "" "i" // between
+"e" "" "[^aeiou]e" "i" // meter
+"e" "" "$" "(|E)" // blame, badge
+"ie" "" "" "i" // believe
+"i" "" "[^aeiou]e" "aj" // five
+"oa" "" "" "ou" // toad
+"oi" "" "" "oj" // join
+"oo" "" "" "u" // food
+"ou" "" "" "(u|ou)" // through | tough | could
+"oy" "" "" "oj" // boy
+"o" "" "[^aeiou]e" "ou" // rode
+"u" "" "[^aeiou]e" "(ju|u)" // cute | flute
+"u" "" "r" "(e|u)" // turn -- Morse disagrees, feels it should go to E
+
+// LATIN ALPHABET
+"a" "" "" "(e|o|a)" // hat | call | part
+"b" "" "" "b"
+"c" "" "" "k" // candy
+"d" "" "" "d"
+"e" "" "" "E" // bed
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h"    
+"i" "" "" "I" 
+"j" "" "" "dZ"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "(o|a)" // hot 
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "(u|a)" // put
+"v" "" "" "v"
+"w" "" "" "(w|v)" // the variant "v" is for spellings coming from German/Polish
+"x" "" "" "ks"
+"y" "" "" "i"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_french.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_french.txt
new file mode 100644
index 0000000..e67a0ec
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_french.txt
@@ -0,0 +1,114 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERAL
+
+// CONSONANTS
+"lt" "u" "$" "(lt|)" // Renault
+"c" "n" "$" "(k|)" // Tronc
+//"f" "" "" "(f|)" // Clef
+"d" "" "$" "(t|)" // Durand
+"g" "n" "$" "(k|)" // Gang
+"p" "" "$" "(p|)" // Trop, Champ
+"r" "e" "$" "(r|)" // Barbier
+"t" "" "$" "(t|)" // Murat, Constant
+"z" "" "$" "(s|)" 
+
+"ds" "" "$" "(ds|)" 
+"ps" "" "$" "(ps|)" // Champs
+"rs" "e" "$" "(rs|)" 
+"ts" "" "$" "(ts|)" 
+"s" "" "$" "(s|)" // Denis
+
+"x" "u" "$" "(ks|)" // Arnoux
+
+"s" "[aeéèêiou]" "[^aeéèêiou]" "(s|)" // Deschamps, Malesherbes, Groslot
+"t" "[aeéèêiou]" "[^aeéèêiou]" "(t|)" // Petitjean
+
+"kh" "" "" "x" // foreign
+"ph" "" "" "f"
+
+"ç" "" "" "s"
+"x" "" "" "ks"
+"ch" "" "" "S"
+"c" "" "[eiyéèê]" "s"
+
+"gn" "" "" "(n|gn)"
+"g" "" "[eiy]" "Z" 
+"gue" "" "$" "k"     
+"gu" "" "[eiy]" "g" 
+"aill" "" "e" "aj" // non Jewish
+"ll" "" "e" "(l|j)" // non Jewish
+"que" "" "$" "k"
+"qu" "" "" "k"
+"s" "[aeiouyéèê]" "[aeiouyéèê]" "z"
+"h" "[bdgt]" "" "" // translit from Arabic
+
+"m" "[aeiouy]" "[aeiouy]" "m"  
+"m" "[aeiouy]" "" "(m|n)"  // nasal
+
+"ou" "" "[aeio]" "v" 
+"u" "" "[aeio]" "v" 
+
+// VOWELS
+"aue" "" "" "aue" 
+"eau" "" "" "o" 
+"au" "" "" "(o|au)" // non Jewish
+"ai" "" "" "(e|aj)" // [e] is non Jewish
+"ay" "" "" "(e|aj)" // [e] is non Jewish
+"é" "" "" "e"
+"ê" "" "" "e"
+"è" "" "" "e"
+"à" "" "" "a"
+"â" "" "" "a"
+"où" "" "" "u"
+"ou" "" "" "u"
+"oi" "" "" "(oj|va)" // [va] (actually "ua") is non Jewish
+"ei" "" "" "(aj|ej|e)" // [e] is non Jewish
+"ey" "" "" "(aj|ej|e)" // [e] non Jewish
+"eu" "" "" "(ej|Y)" // non Jewish
+"y" "[ou]" "" "j"
+"e" "" "$" "(e|)"
+"i" "" "[aou]" "j"
+"y" "" "[aoeu]" "j"
+
+// LATIN ALPHABET      
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "e" 
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "i" 
+"j" "" "" "Z"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "(u|Q)"
+"v" "" "" "v"
+"w" "" "" "v"
+"y" "" "" "i"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_german.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_german.txt
new file mode 100644
index 0000000..1e79c35
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_german.txt
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERIC
+
+// CONSONANTS
+"ewitsch" "" "$" "evitS"
+"owitsch" "" "$" "ovitS"
+"evitsch" "" "$" "evitS"
+"ovitsch" "" "$" "ovitS"
+"witsch" "" "$" "vitS"
+"vitsch" "" "$" "vitS"
+"ssch" "" "" "S"
+"chsch" "" "" "xS"
+"sch" "" "" "S"
+
+"ziu" "" "" "tsu"
+"zia" "" "" "tsa"
+"zio" "" "" "tso"
+
+"chs" "" "" "ks"
+"ch" "" "" "x"
+"ck" "" "" "k"
+"c" "" "[eiy]" "ts"
+
+"sp" "^" "" "Sp"
+"st" "^" "" "St"
+"ssp" "" "" "(Sp|sp)"
+"sp" "" "" "(Sp|sp)"
+"sst" "" "" "(St|st)"
+"st" "" "" "(St|st)"
+"pf" "" "" "(pf|p|f)"
+"ph" "" "" "(ph|f)"
+"qu" "" "" "kv"
+
+"ewitz" "" "$" "(evits|evitS)"
+"ewiz" "" "$" "(evits|evitS)"
+"evitz" "" "$" "(evits|evitS)"
+"eviz" "" "$" "(evits|evitS)"
+"owitz" "" "$" "(ovits|ovitS)"
+"owiz" "" "$" "(ovits|ovitS)"
+"ovitz" "" "$" "(ovits|ovitS)"
+"oviz" "" "$" "(ovits|ovitS)"
+"witz" "" "$" "(vits|vitS)"
+"wiz" "" "$" "(vits|vitS)"
+"vitz" "" "$" "(vits|vitS)"
+"viz" "" "$" "(vits|vitS)"
+"tz" "" "" "ts"
+
+"thal" "" "$" "tal"
+"th" "^" "" "t"
+"th" "" "[äöüaeiou]" "(t|th)"
+"th" "" "" "t"
+"rh" "^" "" "r"
+"h" "[aeiouyäöü]" "" ""
+"h" "^" "" "H"
+
+"ss" "" "" "s"
+"s" "" "[äöüaeiouy]" "(z|s)"
+"s" "[aeiouyäöüj]" "[aeiouyäöü]" "z"
+"ß" "" "" "s"
+
+
+// VOWELS
+"ij" "" "$" "i"
+"aue" "" "" "aue"
+"ue" "" "" "Q"
+"ae" "" "" "Y"
+"oe" "" "" "Y"
+"ü" "" "" "Q"
+"ä" "" "" "Y"
+"ö" "" "" "Y"
+"ei" "" "" "(aj|ej)"
+"ey" "" "" "(aj|ej)"
+"eu" "" "" "(Yj|ej|aj|oj)"
+"i" "[aou]" "" "j"
+"y" "[aou]" "" "j"
+"ie" "" "" "I"
+"i" "" "[aou]" "j"
+"y" "" "[aoeu]" "j"
+
+// FOREIGN LETTERs
+"ñ" "" "" "n"
+"ã" "" "" "a"
+"ő" "" "" "o"
+"ű" "" "" "u"
+"ç" "" "" "s"
+
+// LATIN ALPHABET
+"a" "" "" "A"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "O"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "U"
+"v" "" "" "(f|v)"
+"w" "" "" "v"
+"x" "" "" "ks"
+"y" "" "" "i"
+"z" "" "" "ts"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_greek.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_greek.txt
new file mode 100644
index 0000000..f396a65
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_greek.txt
@@ -0,0 +1,97 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"αυ" "" "$" "af"  // "av" before vowels and voiced consonants, "af" elsewhere
+"αυ" "" "(κ|π|σ|τ|φ|θ|χ|ψ)" "af" 
+"αυ" "" "" "av" 
+"ευ" "" "$" "ef" // "ev" before vowels and voiced consonants, "ef" elsewhere
+"ευ" "" "(κ|π|σ|τ|φ|θ|χ|ψ)" "ef" 
+"ευ" "" "" "ev" 
+"ηυ" "" "$" "if" // "iv" before vowels and voiced consonants, "if" elsewhere
+"ηυ" "" "(κ|π|σ|τ|φ|θ|χ|ψ)" "if" 
+"ηυ" "" "" "iv" 
+"ου" "" "" "u"  // [u:]
+
+"αι" "" "" "aj"  // modern [e]
+"ει" "" "" "ej" // modern [i]
+"οι" "" "" "oj" // modern [i]
+"ωι" "" "" "oj" 
+"ηι" "" "" "ej" 
+"υι" "" "" "i" // modern Greek "i"
+
+"γγ" "(ε|ι|η|α|ο|ω|υ)" "(ε|ι|η)" "(nj|j)"
+"γγ" "" "(ε|ι|η)" "j"
+"γγ" "(ε|ι|η|α|ο|ω|υ)" "" "(ng|g)"
+"γγ" "" "" "g" 
+"γκ" "^" "" "g"
+"γκ" "(ε|ι|η|α|ο|ω|υ)" "(ε|ι|η)" "(nj|j)"
+"γκ" "" "(ε|ι|η)" "j"
+"γκ" "(ε|ι|η|α|ο|ω|υ)" "" "(ng|g)"
+"γκ" "" "" "g" 
+"γι" "" "(α|ο|ω|υ)" "j"
+"γι" "" "" "(gi|i)"
+"γε" "" "(α|ο|ω|υ)" "j"
+"γε" "" "" "(ge|je)"
+
+"κζ" "" "" "gz"
+"τζ" "" "" "dz"
+"σ" "" "(β|γ|δ|μ|ν|ρ)" "z"
+
+"μβ" "" "" "(mb|b)"
+"μπ" "^" "" "b"
+"μπ" "(ε|ι|η|α|ο|ω|υ)" "" "mb"
+"μπ" "" "" "b" // after any consonant
+"ντ" "^" "" "d"
+"ντ" "(ε|ι|η|α|ο|ω|υ)" "" "(nd|nt)" // Greek is "nd" 
+"ντ" "" "" "(nt|d)" // Greek is "d" after any consonant
+
+"ά" "" "" "a"
+"έ" "" "" "e"
+"ή" "" "" "(i|e)" 
+"ί" "" "" "i"   
+"ό" "" "" "o"
+"ύ" "" "" "(Q|i|u)"
+"ώ" "" "" "o"
+"ΰ" "" "" "(Q|i|u)"
+"ϋ" "" "" "(Q|i|u)"
+"ϊ" "" "" "j"
+
+"α" "" "" "a"
+"β" "" "" "(v|b)" // modern "v", old "b"
+"γ" "" "" "g" 
+"δ" "" "" "d"    // modern like "th" in English "them", old "d"
+"ε" "" "" "e"
+"ζ" "" "" "z"
+"η" "" "" "(i|e)" // modern "i", old "e:"
+"ι" "" "" "i"
+"κ" "" "" "k"
+"λ" "" "" "l"
+"μ" "" "" "m"
+"ν" "" "" "n"
+"ξ" "" "" "ks"
+"ο" "" "" "o"
+"π" "" "" "p"
+"ρ" "" "" "r"
+"σ" "" "" "s"
+"ς" "" "" "s"
+"τ" "" "" "t" 
+"υ" "" "" "(Q|i|u)" // modern "i", old like German "ü"
+"φ" "" "" "f" 
+"θ" "" "" "t" // old greek like "th" in English "theme"
+"χ" "" "" "x"
+"ψ" "" "" "ps"
+"ω" "" "" "o"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_greeklatin.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_greeklatin.txt
new file mode 100644
index 0000000..43ec3f5
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_greeklatin.txt
@@ -0,0 +1,118 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"au" "" "$" "af"
+"au" "" "[kpstfh]" "af"
+"au" "" "" "av"
+"eu" "" "$" "ef"
+"eu" "" "[kpstfh]" "ef"
+"eu" "" "" "ev"
+"ou" "" "" "u"
+
+"gge" "[aeiouy]" "" "(nje|je)" // aggelopoulos
+"ggi" "[aeiouy]" "[aou]" "(nj|j)" 
+"ggi" "[aeiouy]" "" "(ni|i)" 
+"gge" "" "" "je"
+"ggi" "" "" "i"
+"gg" "[aeiouy]" "" "(ng|g)"
+"gg" "" "" "g" 
+"gk" "^" "" "g"
+"gke" "[aeiouy]" "" "(nje|je)"
+"gki" "[aeiouy]" "" "(ni|i)"
+"gke" "" "" "je"
+"gki" "" "" "i"
+"gk" "[aeiouy]" "" "(ng|g)"
+"gk" "" "" "g" 
+"nghi" "" "[aouy]" "Nj"
+"nghi" "" "" "(Ngi|Ni)" 
+"nghe" "" "[aouy]" "Nj"
+"nghe" "" "" "(Nje|Nge)" 
+"ghi" "" "[aouy]" "j"
+"ghi" "" "" "(gi|i)" 
+"ghe" "" "[aouy]" "j"
+"ghe" "" "" "(je|ge)" 
+"ngh" "" "" "Ng"
+"gh" "" "" "g"
+"ngi" "" "[aouy]" "Nj" 
+"ngi" "" "" "(Ngi|Ni)" 
+"nge" "" "[aouy]" "Nj" 
+"nge" "" "" "(Nje|Nge)" 
+"gi" "" "[aouy]" "j" 
+"gi" "" "" "(gi|i)" // what about Pantazis = Pantagis ???
+"ge" "" "[aouy]" "j" 
+"ge" "" "" "(je|ge)" 
+"ng" "" "" "Ng" // fragakis = fraggakis = frangakis; angel = agel = aggel 
+
+"i" "" "[aeou]" "j"
+"i" "[aeou]" "" "j"  
+"y" "" "[aeou]" "j"
+"y" "[aeou]" "" "j"  
+"yi" "" "[aeou]" "j"
+"yi" "" "" "i"
+
+"ch" "" "" "x"
+"kh" "" "" "x"
+"dh" "" "" "d"  // actually as "th" in English "that"
+"dj" "" "" "dZ" // Turkish words
+"ph" "" "" "f"
+"th" "" "" "t"
+"kz" "" "" "gz"
+"tz" "" "" "dz" 
+"s" "" "[bgdmnr]" "z"
+
+"mb" "" "" "(mb|b)" // Liberis = Limperis = Limberis
+"mp" "^" "" "b"
+"mp" "[aeiouy]" "" "mp"
+"mp" "" "" "b"
+"nt" "^" "" "d"
+"nt" "[aeiouy]" "" "(nd|nt)" // Greek "nd"
+"nt" "" "" "(nt|d)" // Greek "d" after any consonant
+
+"á" "" "" "a"  
+"é" "" "" "e"  
+"í" "" "" "i"  
+"ó" "" "" "o"  
+"óu" "" "" "u"  
+"ú" "" "" "u" 
+"ý" "" "" "(i|Q|u)" // [ü]
+
+"a" "" "" "a"
+"b" "" "" "(b|v)" // beta: modern "v", old "b"
+"c" "" "" "k"
+"d" "" "" "d"    // modern like "th" in English "them", old "d"
+"e" "" "" "e"
+"f" "" "" "f" 
+"g" "" "" "g" 
+"h" "" "" "x"
+"i" "" "" "i"
+"j" "" "" "(j|Z)" // Panajotti = Panaiotti; Louijos = Louizos; Pantajis = Pantazis = Pantagis
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"ο" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k" // foreign
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t" 
+"u" "" "" "u" 
+"v" "" "" "v" 
+"w" "" "" "v" // foreign
+"x" "" "" "ks"
+"y" "" "" "(i|Q|u)" // [ü] 
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_hebrew.txt
new file mode 100644
index 0000000..7e039d5
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_hebrew.txt
@@ -0,0 +1,62 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// General = Ashkenazic
+
+"אי" "" "" "i"
+"עי" "" "" "i"
+"עו" "" "" "VV"
+"או" "" "" "VV"
+
+"ג׳" "" "" "Z"
+"ד׳" "" "" "dZ"
+
+"א" "" "" "L"
+"ב" "" "" "b"
+"ג" "" "" "g"
+"ד" "" "" "d"
+
+"ה" "^" "" "1"
+"ה" "" "$" "1"
+"ה" "" "" ""
+
+"וו" "" "" "V"
+"וי" "" "" "WW"
+"ו" "" "" "W"
+"ז" "" "" "z"
+"ח" "" "" "X"
+"ט" "" "" "T"
+"יי" "" "" "i"
+"י" "" "" "i"
+"ך" "" "" "X"
+"כ" "^" "" "K"
+"כ" "" "" "k"
+"ל" "" "" "l"
+"ם" "" "" "m"
+"מ" "" "" "m"
+"ן" "" "" "n"
+"נ" "" "" "n"
+"ס" "" "" "s"
+"ע" "" "" "L"
+"ף" "" "" "f"
+"פ" "" "" "f"
+"ץ" "" "" "C"
+"צ" "" "" "C"
+"ק" "" "" "K"
+"ר" "" "" "r"
+"ש" "" "" "s"
+"ת" "" "" "TB" // only Ashkenazic
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_hungarian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_hungarian.txt
new file mode 100644
index 0000000..615d26a
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_hungarian.txt
@@ -0,0 +1,83 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERAL
+
+// CONSONANTS
+"sz" "" "" "s"
+"zs" "" "" "Z"
+"cs" "" "" "tS"
+
+"ay" "" "" "(oj|aj)"
+"ai" "" "" "(oj|aj)"
+"aj" "" "" "(oj|aj)"
+
+"ei" "" "" "(aj|ej)" // German element
+"ey" "" "" "(aj|ej)" // German element
+
+"y" "[áo]" "" "j"
+"i" "[áo]" "" "j"
+"ee" "" "" "(ej|e)" 
+"ely" "" "" "(ej|eli)"
+"ly" "" "" "(j|li)"
+"gy" "" "[aeouáéóúüöőű]" "dj"
+"gy" "" "" "(d|gi)"
+"ny" "" "[aeouáéóúüöőű]" "nj"
+"ny" "" "" "(n|ni)"
+"ty" "" "[aeouáéóúüöőű]" "tj"
+"ty" "" "" "(t|ti)"
+"qu" "" "" "(ku|kv)"
+"h" "" "$" ""
+
+// SPECIAL VOWELS
+"á" "" "" "a"
+"é" "" "" "e"
+"í" "" "" "i"
+"ó" "" "" "o"
+"ú" "" "" "u"
+"ö" "" "" "Y"
+"ő" "" "" "Y" 
+"ü" "" "" "Q"
+"ű" "" "" "Q"
+
+// LATIN ALPHABET      
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "ts" 
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h"
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "(S|s)" 
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v" 
+"w" "" "" "v" 
+"x" "" "" "ks"
+"y" "" "" "i" 
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_italian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_italian.txt
new file mode 100644
index 0000000..8775edd
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_italian.txt
@@ -0,0 +1,77 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"kh" "" "" "x" // foreign
+
+"gli" "" "" "(l|gli)"
+"gn" "" "[aeou]" "(n|nj|gn)"
+"gni" "" "" "(ni|gni)"
+
+"gi" "" "[aeou]" "dZ"
+"gg" "" "[ei]" "dZ"
+"g" "" "[ei]" "dZ"
+"h" "[bdgt]" "" "g" // gh is It; others from Arabic translit
+"h" "" "$" "" // foreign
+
+"ci" "" "[aeou]" "tS"
+"ch" "" "[ei]" "k"
+"sc" "" "[ei]" "S" 
+"cc" "" "[ei]" "tS"
+"c" "" "[ei]" "tS"
+"s" "[aeiou]" "[aeiou]" "z"
+
+"i" "[aeou]" "" "j"
+"i" "" "[aeou]" "j"
+"y" "[aeou]" "" "j" // foreign
+"y" "" "[aeou]" "j" // foreign
+
+"qu" "" "" "k"    
+"uo" "" "" "(vo|o)"
+"u" "" "[aei]" "v" 
+
+"�" "" "" "e" 
+"�" "" "" "e" 
+"�" "" "" "o"  
+"�" "" "" "o" 
+
+// LATIN ALPHABET    
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "i"
+"j" "" "" "(Z|dZ|j)" // foreign
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"    
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"    // foreign
+"x" "" "" "ks"    // foreign
+"y" "" "" "i"    // foreign
+"z" "" "" "(ts|dz)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_polish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_polish.txt
new file mode 100644
index 0000000..dd72f6a
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_polish.txt
@@ -0,0 +1,185 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERIC
+
+// CONVERTING FEMININE TO MASCULINE
+"ska" "" "$" "ski"   
+"cka" "" "$" "tski"   
+"lowa" "" "$" "(lova|lof|l|el)"   
+"kowa" "" "$" "(kova|kof|k|ek)"   
+"owa" "" "$" "(ova|of|)"  
+"lowna" "" "$" "(lovna|levna|l|el)" 
+"kowna" "" "$" "(kovna|k|ek)"  
+"owna" "" "$" "(ovna|)"   
+"lówna" "" "$" "(l|el)"   
+"kówna" "" "$" "(k|ek)"   
+"ówna" "" "$" ""   
+"a" "" "$" "(a|i)"   
+
+// CONSONANTS
+"czy" "" "" "tSi"
+"cze" "" "[bcdgkpstwzż]" "(tSe|tSF)"
+"ciewicz" "" "" "(tsevitS|tSevitS)"
+"siewicz" "" "" "(sevitS|SevitS)"
+"ziewicz" "" "" "(zevitS|ZevitS)"
+"riewicz" "" "" "rjevitS" 
+"diewicz" "" "" "djevitS" 
+"tiewicz" "" "" "tjevitS" 
+"iewicz" "" "" "evitS"
+"ewicz" "" "" "evitS"
+"owicz" "" "" "ovitS"
+"icz" "" "" "itS"
+"cz" "" "" "tS"
+"ch" "" "" "x"
+
+"cia" "" "[bcdgkpstwzż]" "(tSB|tsB)"
+"cia" "" "" "(tSa|tsa)" 
+"cią" "" "[bp]" "(tSom|tsom)"
+"cią" "" "" "(tSon|tson)"
+"cię" "" "[bp]" "(tSem|tsem)"
+"cię" "" "" "(tSen|tsen)"
+"cie" "" "[bcdgkpstwzż]" "(tSF|tsF)" 
+"cie" "" "" "(tSe|tse)" 
+"cio" "" "" "(tSo|tso)" 
+"ciu" "" "" "(tSu|tsu)" 
+"ci" "" "" "(tSi|tsI)"
+"ć" "" "" "(tS|ts)"
+
+"ssz" "" "" "S"
+"sz" "" "" "S"
+"sia" "" "[bcdgkpstwzż]" "(SB|sB|sja)" 
+"sia" "" "" "(Sa|sja)" 
+"sią" "" "[bp]" "(Som|som)"
+"sią" "" "" "(Son|son)"
+"się" "" "[bp]" "(Sem|sem)"
+"się" "" "" "(Sen|sen)"
+"sie" "" "[bcdgkpstwzż]" "(SF|sF|se)" 
+"sie" "" "" "(Se|se)" 
+"sio" "" "" "(So|so)" 
+"siu" "" "" "(Su|sju)" 
+"si" "" "" "(Si|sI)"
+"ś" "" "" "(S|s)"
+
+"zia" "" "[bcdgkpstwzż]" "(ZB|zB|zja)" 
+"zia" "" "" "(Za|zja)" 
+"zią" "" "[bp]" "(Zom|zom)"
+"zią" "" "" "(Zon|zon)"
+"zię" "" "[bp]" "(Zem|zem)"
+"zię" "" "" "(Zen|zen)"
+"zie" "" "[bcdgkpstwzż]" "(ZF|zF)" 
+"zie" "" "" "(Ze|ze)" 
+"zio" "" "" "(Zo|zo)" 
+"ziu" "" "" "(Zu|zju)" 
+"zi" "" "" "(Zi|zI)"
+
+"że" "" "[bcdgkpstwzż]" "(Ze|ZF)"
+"że" "" "[bcdgkpstwzż]" "(Ze|ZF|ze|zF)"
+"że" "" "" "Ze"
+"źe" "" "" "(Ze|ze)"
+"ży" "" "" "Zi"
+"źi" "" "" "(Zi|zi)"
+"ż" "" "" "Z"
+"ź" "" "" "(Z|z)"
+
+"rze" "t" "" "(Se|re)"
+"rze" "" "" "(Ze|re|rZe)"
+"rzy" "t" "" "(Si|ri)"
+"rzy" "" "" "(Zi|ri|rZi)"
+"rz" "t" "" "(S|r)"
+"rz" "" "" "(Z|r|rZ)"
+
+"lio" "" "" "(lo|le)"
+"ł" "" "" "l"
+"ń" "" "" "n"
+"qu" "" "" "k"
+"s" "" "s" "" 
+
+// VOWELS   
+"ó" "" "" "(u|o)"
+"ą" "" "[bp]" "om"
+"ę" "" "[bp]" "em"
+"ą" "" "" "on"
+"ę" "" "" "en"
+
+"ije" "" "" "je"
+"yje" "" "" "je"
+"iie" "" "" "je"
+"yie" "" "" "je"
+"iye" "" "" "je"
+"yye" "" "" "je"
+
+"ij" "" "[aou]" "j"
+"yj" "" "[aou]" "j"
+"ii" "" "[aou]" "j"
+"yi" "" "[aou]" "j"
+"iy" "" "[aou]" "j"
+"yy" "" "[aou]" "j"
+
+"rie" "" "" "rje" 
+"die" "" "" "dje" 
+"tie" "" "" "tje" 
+"ie" "" "[bcdgkpstwzż]" "F" 
+"ie" "" "" "e"
+
+"aue" "" "" "aue"
+"au" "" "" "au"
+
+"ei" "" "" "aj"
+"ey" "" "" "aj"
+"ej" "" "" "aj"
+
+"ai" "" "" "aj"
+"ay" "" "" "aj"
+"aj" "" "" "aj"
+
+"i" "[aeou]" "" "j" 
+"y" "[aeou]" "" "j" 
+"i" "" "[aou]" "j"
+"y" "" "[aeou]" "j"
+
+"a" "" "[bcdgkpstwzż]" "B" 
+"e" "" "[bcdgkpstwzż]" "(E|F)" 
+"o" "" "[bcćdgklłmnńrsśtwzźż]" "P" 
+
+// LATIN ALPHABET
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "ts"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "(h|x)"
+"i" "" "" "I"
+"j" "" "" "j"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"
+"x" "" "" "ks"
+"y" "" "" "I"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_portuguese.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_portuguese.txt
new file mode 100644
index 0000000..10dbc2e
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_portuguese.txt
@@ -0,0 +1,105 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"kh" "" "" "x" // foreign
+"ch" "" "" "S"
+"ss" "" "" "s"
+"sc" "" "[ei]" "s"
+"sç" "" "[aou]" "s"
+"ç" "" "" "s"
+"c" "" "[ei]" "s"
+//  "c" "" "[aou]" "(k|C)"
+
+"s" "^" "" "s"
+"s" "[aáuiíoóeéêy]" "[aáuiíoóeéêy]" "z"
+"s" "" "[dglmnrv]" "(Z|S)" // Z is Brazil
+
+"z" "" "$" "(Z|s|S)" // s and S in Brazil
+"z" "" "[bdgv]" "(Z|z)" // Z in Brazil
+"z" "" "[ptckf]" "(s|S|z)" // s and S in Brazil
+
+"gu" "" "[eiu]" "g"    
+"gu" "" "[ao]" "gv"    
+"g" "" "[ei]" "Z"
+"qu" "" "[eiu]" "k"    
+"qu" "" "[ao]" "kv"    
+
+"uo" "" "" "(vo|o|u)"
+"u" "" "[aei]" "v" 
+
+"lh" "" "" "l"
+"nh" "" "" "nj"
+"h" "[bdgt]" "" "" // translit. from Arabic
+"h" "" "$" "" // foreign
+
+"ex" "" "[aáuiíoóeéêy]" "(ez|eS|eks)" // ez in Brazil
+"ex" "" "[cs]" "e" 
+
+"y" "[aáuiíoóeéê]" "" "j"
+"y" "" "[aeiíou]" "j"
+"m" "" "[bcdfglnprstv]" "(m|n)" // maybe to add a rule for m/n before a consonant that disappears [preceeding vowel becomes nasalized]
+"m" "" "$" "(m|n)" // maybe to add a rule for final m/n that disappears [preceeding vowel becomes nasalized]
+
+"ão" "" "" "(au|an|on)"
+"ãe" "" "" "(aj|an)"
+"ãi" "" "" "(aj|an)"
+"õe" "" "" "(oj|on)"
+"i" "[aáuoóeéê]" "" "j"
+"i" "" "[aeou]" "j"
+
+"â" "" "" "a"
+"à" "" "" "a"
+"á" "" "" "a"
+"ã" "" "" "(a|an|on)"
+"é" "" "" "e"
+"ê" "" "" "e"
+"í" "" "" "i"
+"ô" "" "" "o"
+"ó" "" "" "o"
+"õ" "" "" "(o|on)"
+"ú" "" "" "u"
+"ü" "" "" "u"
+
+"aue" "" "" "aue"
+
+// LATIN ALPHABET
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "(e|i)"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "i"
+"j" "" "" "Z" 
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "(o|u)"
+"p" "" "" "p"
+"q" "" "" "k"    
+"r" "" "" "r"
+"s" "" "" "S"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"    
+"x" "" "" "(S|ks)"   
+"y" "" "" "i"   
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_romanian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_romanian.txt
new file mode 100644
index 0000000..a6d0aac
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_romanian.txt
@@ -0,0 +1,64 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"ce" "" "" "tSe"
+"ci" "" "" "(tSi|tS)"
+"ch" "" "[ei]" "k"
+"ch" "" "" "x" // foreign
+
+"gi" "" "" "(dZi|dZ)"
+"g" "" "[ei]" "dZ"
+"gh" "" "" "g"
+
+"i" "[aeou]" "" "j"
+"i" "" "[aeou]" "j"
+"ţ" "" "" "ts"
+"ş" "" "" "S"
+"qu" "" "" "k"    
+
+"î" "" "" "i"
+"ea" "" "" "ja"
+"ă" "" "" "(e|a)"
+"aue" "" "" "aue"
+
+// LATIN ALPHABET
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "(x|h)"
+"i" "" "" "I"
+"j" "" "" "Z"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"    
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"    
+"x" "" "" "ks"    
+"y" "" "" "i"    
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_russian.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_russian.txt
new file mode 100644
index 0000000..310be84
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_russian.txt
@@ -0,0 +1,142 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+//GENERAL// CONVERTING FEMININE TO MASCULINE
+"yna" "" "$" "(in|ina)" 
+"ina" "" "$" "(in|ina)" 
+"liova" "" "$" "(lof|lef)" 
+"lova" "" "$" "(lof|lef|lova)" 
+"ova" "" "$" "(of|ova)" 
+"eva" "" "$" "(ef|ova)" 
+"aia" "" "$" "(aja|i)" 
+"aja" "" "$" "(aja|i)" 
+"aya" "" "$" "(aja|i)" 
+
+//SPECIAL CONSONANTS
+"tsya" "" "" "tsa" 
+"tsyu" "" "" "tsu" 
+"tsia" "" "" "tsa" 
+"tsie" "" "" "tse" 
+"tsio" "" "" "tso"   
+"tsye" "" "" "tse" 
+"tsyo" "" "" "tso" 
+"tsiu" "" "" "tsu" 
+"sie" "" "" "se" 
+"sio" "" "" "so"   
+"zie" "" "" "ze" 
+"zio" "" "" "zo"   
+"sye" "" "" "se" 
+"syo" "" "" "so"   
+"zye" "" "" "ze" 
+"zyo" "" "" "zo"   
+
+"ger" "" "$" "ger" 
+"gen" "" "$" "gen" 
+"gin" "" "$" "gin" 
+"gg" "" "" "g" 
+"g" "[jaeoiuy]" "[aeoiu]" "g" 
+"g" "" "[aeoiu]" "(g|h)" 
+
+"kh" "" "" "x"
+"ch" "" "" "(tS|x)" 
+"sch" "" "" "(StS|S)"
+"ssh" "" "" "S"
+"sh" "" "" "S"
+"zh" "" "" "Z" 
+"tz" "" "$" "ts" 
+"tz" "" "" "(ts|tz)" 
+"c" "" "[iey]" "s" 
+"qu" "" "" "(kv|k)" 
+"s" "" "s" ""
+
+//SPECIAL VOWELS
+"lya" "" "" "la" 
+"lyu" "" "" "lu"  
+"lia" "" "" "la" // not in DJSRE
+"liu" "" "" "lu"  // not in DJSRE
+"lja" "" "" "la" // not in DJSRE
+"lju" "" "" "lu"  // not in DJSRE
+"le" "" "" "(lo|lE)" //not in DJSRE
+"lyo" "" "" "(lo|le)" //not in DJSRE
+"lio" "" "" "(lo|le)" 
+
+"ije" "" "" "je"
+"ie" "" "" "je"
+"iye" "" "" "je"
+"iie" "" "" "je"
+"yje" "" "" "je"
+"ye" "" "" "je"
+"yye" "" "" "je"
+"yie" "" "" "je"
+
+"ij" "" "[aou]" "j"
+"iy" "" "[aou]" "j"
+"ii" "" "[aou]" "j"
+"yj" "" "[aou]" "j"
+"yy" "" "[aou]" "j"
+"yi" "" "[aou]" "j"
+
+"io" "" "" "(jo|e)" 
+"i" "" "[au]" "j" 
+"i" "[aeou]" "" "j" 
+"yo" "" "" "(jo|e)" 
+"y" "" "[au]" "j"
+"y" "[aeiou]" "" "j" 
+
+"ii" "" "$" "i" 
+"iy" "" "$" "i" 
+"yy" "" "$" "i" 
+"yi" "" "$" "i" 
+"yj" "" "$" "i"
+"ij" "" "$" "i"
+
+"e" "^" "" "(je|E)" 
+"ee" "" "" "(aje|i)" 
+"e" "[aou]" "" "je" 
+"oo" "" "" "(oo|u)" 
+"'" "" "" "" 
+"\"" "" "" ""
+
+"aue" "" "" "aue"
+
+// LATIN ALPHABET 
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k" 
+"d" "" "" "d"
+"e" "" "" "E"
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h" 
+"i" "" "" "I"
+"j" "" "" "j" 
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k" 
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v" 
+"x" "" "" "ks" 
+"y" "" "" "I"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_spanish.txt
new file mode 100644
index 0000000..3ba2695
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_spanish.txt
@@ -0,0 +1,85 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// GENERAL
+
+// Includes both Spanish (Castillian) & Catalan
+
+// CONSONANTS
+"ñ" "" "" "(n|nj)"
+"ny" "" "" "nj" // Catalan
+"ç" "" "" "s" // Catalan
+
+"ig" "[aeiou]" "" "(tS|ig)" // tS is Catalan
+"ix" "[aeiou]" "" "S" // Catalan
+"tx" "" "" "tS" // Catalan
+"tj" "" "$" "tS" // Catalan
+"tj" "" "" "dZ" // Catalan
+"tg" "" "" "(tg|dZ)" // dZ is Catalan
+"ch" "" "" "(tS|dZ)" // dZ is typical for Argentina
+"bh" "" "" "b" // translit. from Arabic
+"h" "[dgt]" "" "" // translit. from Arabic
+"h" "" "$" "" // foreign
+//"ll" "" "" "(l|Z)" // Z is typical for Argentina, only Ashkenazic
+"m" "" "[bpvf]" "(m|n)"
+"c" "" "[ei]" "s" 
+//  "c" "" "[aou]" "(k|C)"
+"gu" "" "[ei]" "(g|gv)" // "gv" because "u" can actually be "ü"
+"g" "" "[ei]" "(x|g|dZ)"  // "g" only for foreign words; dZ is Catalan
+"qu" "" "" "k"
+
+"uo" "" "" "(vo|o)"    
+"u" "" "[aei]" "v"
+
+// SPECIAL VOWELS
+"ü" "" "" "v"
+"á" "" "" "a"
+"é" "" "" "e"
+"í" "" "" "i"
+"ó" "" "" "o"
+"ú" "" "" "u"
+"à" "" "" "a"  // Catalan
+"è" "" "" "e" // Catalan
+"ò" "" "" "o"  // Catalan
+
+// LATIN ALPHABET      
+"a" "" "" "a"
+"b" "" "" "B"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h"
+"i" "" "" "i"
+"j" "" "" "(x|Z)" // Z is Catalan
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "V"
+"w" "" "" "v" // foreign words
+"x" "" "" "(ks|gz|S)" // ks is Spanish, all are Catalan
+"y" "" "" "(i|j)"
+"z" "" "" "(z|s)" // as "c" befoire "e" or "i", in Spain it is like unvoiced English "th"
diff --git a/src/resources/org/apache/commons/codec/language/bm/gen_rules_turkish.txt b/src/resources/org/apache/commons/codec/language/bm/gen_rules_turkish.txt
new file mode 100644
index 0000000..c639a13
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/gen_rules_turkish.txt
@@ -0,0 +1,50 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"ç" "" "" "tS"
+"ğ" "" "" "" // to show that previous vowel is long
+"ş" "" "" "S"
+"ü" "" "" "Q"
+"ö" "" "" "Y"
+"ı" "" "" "(e|i|)" // as "e" in English "label"
+
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "dZ"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "i"
+"j" "" "" "Z"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k" // foreign words
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v" // foreign words
+"x" "" "" "ks" // foreign words
+"y" "" "" "j"
+"z" "" "" "z" 
diff --git a/src/resources/org/apache/commons/codec/language/bm/lang.txt b/src/resources/org/apache/commons/codec/language/bm/lang.txt
new file mode 100644
index 0000000..99742b1
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/lang.txt
@@ -0,0 +1,293 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// 1. following are rules to accept the language
+// 1.1 Special letter combinations
+^o’ english true
+^o' english true
+^mc english true
+^fitz english true
+ceau french+romanian true
+eau$ french true // mp: I've added this
+eaux$ french true // mp: I've added this
+ault$ french true
+oult$ french true
+eux$ french true
+eix$ french true
+glou$ greeklatin true
+uu dutch true
+tx spanish true
+witz german true
+tz$ german+russian+english true
+^tz russian+english true
+poulos$ greeklatin true
+pulos$ greeklatin true
+iou greeklatin true
+sj$ dutch true
+^sj dutch true
+güe spanish true
+güi spanish true
+ghe romanian+greeklatin true
+ghi romanian+greeklatin true
+escu$ romanian true
+esco$ romanian true
+vici$ romanian true
+schi$ romanian true
+ii$ russian true
+iy$ russian true
+yy$ russian true
+yi$ russian true
+^rz polish true
+rz$ polish+german true
+[bcdfgklmnpstwz]rz polish true
+rz[bcdfghklmnpstw] polish true
+etti$ italian true
+eti$ italian true
+ati$ italian true
+ato$ italian true
+[aoei]no$ italian true
+[aoei]ni$ italian true
+esi$ italian true
+oli$ italian true
+field$ english true
+cki$ polish true
+ska$ polish true
+cka$ polish true
+ae german+russian+english true
+oe german+french+russian+english+dutch true
+th$ german+english true
+^th german+english+greeklatin true
+mann german true
+cz polish true
+cy polish+greeklatin true
+niew polish true
+stein german true
+heim$ german true
+heimer$ german true
+thal german true
+zweig german true
+[aeou]h german true
+äh german true
+öh german true
+üh german true
+[ln]h[ao]$ portuguese true
+[ln]h[aou] portuguese+french+german+dutch+czech+spanish+turkish true
+chsch german true
+tsch german true
+sch$ german+russian true
+^sch german+russian true
+ck$ german+english true
+c$ polish+romanian+hungarian+czech+turkish true
+sz polish+hungarian true
+cs$ hungarian true
+^cs hungarian true
+dzs hungarian true
+zs$ hungarian true
+^zs hungarian true
+^wl polish true
+^wr polish+english+german+dutch true
+
+gy$ hungarian true
+gy[aeou] hungarian true
+gy hungarian+russian+french+greeklatin true
+guy french true
+gu[ei] spanish+french+portuguese true
+gu[ao] spanish+portuguese true
+gi[aou] italian+greeklatin true
+
+ly hungarian+russian+polish+greeklatin true
+ny hungarian+russian+polish+spanish+greeklatin true
+ty hungarian+russian+polish+greeklatin true
+
+// 1.2 special characters
+ć polish true
+ç french+spanish+portuguese+turkish true
+č czech true
+ď czech true
+ğ turkish true
+ł polish true
+ń polish true
+ñ spanish true
+ň czech true
+ř czech true
+ś polish true
+ş romanian+turkish true
+š czech true
+ţ romanian true
+ť czech true
+ź polish true
+ż polish true
+
+ß german true
+
+ä german true
+á hungarian+spanish+portuguese+czech+greeklatin true
+â romanian+french+portuguese true
+ă romanian true
+ą polish true
+à portuguese true
+ã portuguese true
+ę polish true
+é french+hungarian+czech+greeklatin true
+è french+spanish+italian true
+ê french true
+ě czech true
+ê french+portuguese true
+í hungarian+spanish+portuguese+czech+greeklatin true
+î romanian+french true
+ı turkish true
+ó polish+hungarian+spanish+italian+portuguese+czech+greeklatin true
+ö german+hungarian+turkish true
+ô french+portuguese true
+õ portuguese+hungarian true
+ò italian+spanish true
+ű hungarian true
+ú hungarian+spanish+portuguese+czech+greeklatin true
+ü german+hungarian+spanish+portuguese+turkish true
+ù french true
+ů czech true
+ý czech+greeklatin true
+
+// Every Cyrillic word has at least one Cyrillic vowel (аёеоиуыэюя)
+а cyrillic true
+ё cyrillic true
+о cyrillic true
+е cyrillic true
+и cyrillic true
+у cyrillic true
+ы cyrillic true
+э cyrillic true
+ю cyrillic true
+я cyrillic true
+
+// Every Greek word has at least one Greek vowel
+α greek true
+ε greek true
+η greek true
+ι greek true
+ο greek true
+υ greek true
+ω greek true
+
+// Arabic (only initial)
+ا arabic true // alif (isol + init)   
+ب arabic true // ba' 
+ت arabic true // ta' 
+ث arabic true // tha'
+ج arabic true // jim
+ح arabic true // h.a' 
+خ' arabic true // kha' 
+د arabic true // dal (isol + init)
+ذ arabic true // dhal (isol + init)
+ر arabic true // ra' (isol + init)
+ز arabic true // za' (isol + init)
+س arabic true // sin 
+ش arabic true // shin 
+ص arabic true // s.ad 
+ض arabic true // d.ad 
+ط arabic true // t.a' 
+ظ arabic true // z.a' 
+ع arabic true // 'ayn
+غ arabic true // ghayn 
+ف arabic true // fa' 
+ق arabic true // qaf 
+ك arabic true // kaf  
+ل arabic true // lam 
+م arabic true // mim 
+ن arabic true // nun 
+ه arabic true // ha' 
+و arabic true // waw (isol + init)
+ي arabic true // ya' 
+    
+آ arabic true // alif madda  
+إ arabic true // alif + diacritic  
+أ arabic true // alif + hamza
+ؤ arabic true //  waw + hamza
+ئ arabic true //  ya' + hamza
+
+
+// Hebrew
+א hebrew true
+ב hebrew true
+ג hebrew true
+ד hebrew true
+ה hebrew true
+ו hebrew true
+ז hebrew true
+ח hebrew true
+ט hebrew true
+י hebrew true
+כ hebrew true
+ל hebrew true
+מ hebrew true
+נ hebrew true
+ס hebrew true
+ע hebrew true
+פ hebrew true
+צ hebrew true
+ק hebrew true
+ר hebrew true
+ש hebrew true
+ת hebrew true
+
+// 2. following are rules to reject the language
+
+// Every Latin character word has at least one Latin vowel
+a cyrillic+hebrew+greek+arabic false
+o cyrillic+hebrew+greek+arabic false
+e cyrillic+hebrew+greek+arabic false
+i cyrillic+hebrew+greek+arabic false
+y cyrillic+hebrew+greek+arabic+romanian+dutch false
+u cyrillic+hebrew+greek+arabic false
+
+j italian false
+j[^aoeiuy] french+spanish+portuguese+greeklatin false
+g czech false
+k romanian+spanish+portuguese+french+italian false
+q hungarian+polish+russian+romanian+czech+dutch+turkish+greeklatin false
+v polish false
+w french+romanian+spanish+hungarian+russian+czech+turkish+greeklatin false
+x czech+hungarian+dutch+turkish false // polish excluded from the list
+
+dj spanish+turkish false
+v[^aoeiu] german false // in german, "v" can be found before a vowel only
+y[^aoeiu] german false  // in german, "y" usually appears only in the last position; sometimes before a vowel
+c[^aohk] german false
+dzi german+english+french+turkish false
+ou german false
+a[eiou] turkish false // no diphthongs in Turkish
+ö[eaio] turkish false
+ü[eaio] turkish false
+e[aiou] turkish false
+i[aeou] turkish false
+o[aieu] turkish false
+u[aieo] turkish false
+aj german+english+french+dutch false
+ej german+english+french+dutch false
+oj german+english+french+dutch false
+uj german+english+french+dutch false
+eu russian+polish false
+ky polish false
+kie french+spanish+greeklatin false
+gie portuguese+romanian+spanish+greeklatin false
+ch[aou] italian false
+ch turkish false
+son$ german false
+sc[ei] french false
+sch hungarian+polish+french+spanish false
+^h russian false
+etti$ greeklatin false
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_approx_any.txt b/src/resources/org/apache/commons/codec/language/bm/sep_approx_any.txt
new file mode 100644
index 0000000..390419e
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_approx_any.txt
@@ -0,0 +1,20 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// SEPHARDIC
+
+"E" "" "" ""
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_approx_common.txt b/src/resources/org/apache/commons/codec/language/bm/sep_approx_common.txt
new file mode 100644
index 0000000..e744d32
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_approx_common.txt
@@ -0,0 +1,115 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include sep_exact_approx_common
+
+"bens" "^" "" "(binz|s)" 
+"benS" "^" "" "(binz|s)" 
+"ben" "^" "" "(bin|)" 
+
+"abens" "^" "" "(abinz|binz|s)" 
+"abenS" "^" "" "(abinz|binz|s)" 
+"aben" "^" "" "(abin|bin|)"
+
+"els" "^" "" "(ilz|alz|s)" 
+"elS" "^" "" "(ilz|alz|s)" 
+"el" "^" "" "(il|al|)" 
+"als" "^" "" "(alz|s)" 
+"alS" "^" "" "(alz|s)" 
+"al" "^" "" "(al|)" 
+
+//"dels" "^" "" "(dilz|s)" 
+//"delS" "^" "" "(dilz|s)" 
+"del" "^" "" "(dil|)" 
+"dela" "^" "" "(dila|)" 
+//"delo" "^" "" "(dila|)" 
+"da" "^" "" "(da|)" 
+"de" "^" "" "(di|)" 
+//"des" "^" "" "(dis|dAs|)" 
+//"di" "^" "" "(di|)" 
+//"dos" "^" "" "(das|dus|)" 
+
+"oa" "" "" "(va|a|D)"
+"oe" "" "" "(vi|D)"
+"ae" "" "" "D"
+
+/// "s" "" "$" "(s|)" // Attia(s)
+/// "C" "" "" "s"  // "c" could actually be "�"
+
+"n" "" "[bp]" "m"
+
+"h" "" "" "(|h|f)" // sound "h" (absent) can be expressed via /x/, Cojab in Spanish = Kohab ; Hakim = Fakim
+"x" "" "" "h"
+
+// DIPHTHONGS ARE APPROXIMATELY equivalent
+"aja" "^" "" "(Da|ia)"                         
+"aje" "^" "" "(Di|Da|i|ia)"                         
+"aji" "^" "" "(Di|i)"                         
+"ajo" "^" "" "(Du|Da|iu|ia)"                         
+"aju" "^" "" "(Du|iu)"                         
+
+"aj" "" "" "D"                         
+"ej" "" "" "D"                         
+"oj" "" "" "D"                         
+"uj" "" "" "D"                         
+"au" "" "" "D"                         
+"eu" "" "" "D"                         
+"ou" "" "" "D"                         
+
+"a" "^" "" "(a|)"  // Arabic
+
+"ja" "^" "" "ia"                         
+"je" "^" "" "i"                         
+"jo" "^" "" "(iu|ia)"                         
+"ju" "^" "" "iu"                         
+
+"ja" "" "" "a"                         
+"je" "" "" "i"                         
+"ji" "" "" "i"                         
+"jo" "" "" "u"                         
+"ju" "" "" "u"                         
+
+"j" "" "" "i"                         
+
+// CONSONANTS {z & Z & dZ; s & S} are approximately interchangeable
+"s" "" "[rmnl]" "z"
+"S" "" "[rmnl]" "z"
+"s" "[rmnl]" "" "z"
+"S" "[rmnl]" "" "z" 
+
+"dS" "" "$" "S"
+"dZ" "" "$" "S"
+"Z" "" "$" "S"
+"S" "" "$" "(S|s)"
+"z" "" "$" "(S|s)"
+
+"S" "" "" "s"
+"dZ" "" "" "z"
+"Z" "" "" "z"
+
+"i" "" "$" "(i|)" // often in Arabic
+"e" "" "" "i"
+
+"o" "" "$" "(a|u)"
+"o" "" "" "u"
+
+// special character to deal correctly in Hebrew match
+"B" "" "" "b" 
+"V" "" "" "v" 
+
+// Arabic
+"p" "^" "" "b"
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_approx_french.txt b/src/resources/org/apache/commons/codec/language/bm/sep_approx_french.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_approx_french.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_approx_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/sep_approx_hebrew.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_approx_hebrew.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_approx_italian.txt b/src/resources/org/apache/commons/codec/language/bm/sep_approx_italian.txt
new file mode 100644
index 0000000..58fe459
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_approx_italian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include sep_approx_french
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_approx_portuguese.txt b/src/resources/org/apache/commons/codec/language/bm/sep_approx_portuguese.txt
new file mode 100644
index 0000000..4bca846
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_approx_portuguese.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include sep_approx_french
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_approx_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/sep_approx_spanish.txt
new file mode 100644
index 0000000..4bca846
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_approx_spanish.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include sep_approx_french
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_any.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_any.txt
new file mode 100644
index 0000000..d4bf51e
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_any.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"E" "" "" "e"
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_approx_common.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_approx_common.txt
new file mode 100644
index 0000000..1f4e864
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_approx_common.txt
@@ -0,0 +1,79 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Sephardic
+
+"h" "" "$" ""
+
+// VOICED - UNVOICED CONSONANTS
+"b" "" "[fktSs]" "p"
+"b" "" "p" ""
+"b" "" "$" "p"
+"p" "" "[vgdZz]" "b"
+"p" "" "b" ""
+
+"v" "" "[pktSs]" "f"
+"v" "" "f" ""
+"v" "" "$" "f"
+"f" "" "[vbgdZz]" "v"
+"f" "" "v" ""
+
+"g" "" "[pftSs]" "k"
+"g" "" "k" ""
+"g" "" "$" "k"
+"k" "" "[vbdZz]" "g"
+"k" "" "g" ""
+
+"d" "" "[pfkSs]" "t"
+"d" "" "t" ""
+"d" "" "$" "t"
+"t" "" "[vbgZz]" "d"
+"t" "" "d" ""
+
+"s" "" "dZ" ""
+"s" "" "tS" ""
+
+"z" "" "[pfkSt]" "s"
+"z" "" "[sSzZ]" ""
+"s" "" "[sSzZ]" ""
+"Z" "" "[sSzZ]" ""
+"S" "" "[sSzZ]" ""
+
+// SIMPLIFICATION OF CONSONANT CLUSTERS
+"nm" "" "" "m"
+
+// DOUBLE --> SINGLE
+"ji" "^" "" "i"
+
+"a" "" "a" ""
+"b" "" "b" ""
+"d" "" "d" ""
+"e" "" "e" ""
+"f" "" "f" ""
+"g" "" "g" ""
+"i" "" "i" ""
+"k" "" "k" ""
+"l" "" "l" ""
+"m" "" "m" ""
+"n" "" "n" ""
+"o" "" "o" ""
+"p" "" "p" ""
+"r" "" "r" ""
+"t" "" "t" ""
+"u" "" "u" ""
+"v" "" "v" ""
+"z" "" "z" ""
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_common.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_common.txt
new file mode 100644
index 0000000..b97c589
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_common.txt
@@ -0,0 +1,32 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include sep_exact_approx_common
+
+"h" "" "" ""
+//"C" "" "" "k"  // c that can actually be �
+
+// VOICED - UNVOICED CONSONANTS
+"s" "[^t]" "[bgZd]" "z"
+"Z" "" "[pfkst]" "S"
+"Z" "" "$" "S"
+"S" "" "[bgzd]" "Z"
+"z" "" "$" "s"
+
+//special character to deal correctly in Hebrew match
+"B" "" "" "b"
+"V" "" "" "v"
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_french.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_french.txt
new file mode 100644
index 0000000..ea75dc4
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_french.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Sephadic
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_hebrew.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_hebrew.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_italian.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_italian.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_italian.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_portuguese.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_portuguese.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_portuguese.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_exact_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/sep_exact_spanish.txt
new file mode 100644
index 0000000..0990004
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_exact_spanish.txt
@@ -0,0 +1,18 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// empty
\ No newline at end of file
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_hebrew_common.txt b/src/resources/org/apache/commons/codec/language/bm/sep_hebrew_common.txt
new file mode 100644
index 0000000..00357f9
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_hebrew_common.txt
@@ -0,0 +1,86 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include sep_exact_approx_common
+
+"E" "" "" ""  // final French "e": only in Sephardic
+
+"ts" "" "" "C" // for not confusion Gutes [=guts] and Guts [=guc]
+"tS" "" "" "C" // same reason
+"S" "" "" "s"
+"p" "" "" "f"   
+"b" "^" "" "b"    
+"b" "" "" "(b|v)"    
+
+"ja" "" "" "i"
+"je" "" "" "i"
+"aj" "" "" "i"
+"j" "" "" "i"
+
+"a" "^" "" "1"
+"e" "^" "" "1"
+"a" "" "$" "1"
+"e" "" "$" "1"
+
+"a" "" "" ""
+"e" "" "" ""
+
+"oj" "^" "" "(u|vi)"
+"uj" "^" "" "(u|vi)"
+
+"oj" "" "" "u"
+"uj" "" "" "u"
+
+"ou" "^" "" "(u|v|1)"
+"o" "^" "" "(u|v|1)"
+"u" "^" "" "(u|v|1)"
+
+"o" "" "$" "(u|1)"
+"u" "" "$" "(u|1)"
+
+"ou" "" "" "u"
+"o" "" "" "u"
+
+"VV" "" "" "u" // alef/ayin + vov from ruleshebrew
+"L" "^" "" "1" // alef/ayin from  ruleshebrew
+"L" "" "$" "1" // alef/ayin from  ruleshebrew
+"L" "" "" " " // alef/ayin from  ruleshebrew
+"WW" "^" "" "(vi|u)" // vav-yod from  ruleshebrew
+"WW" "" "" "u" // vav-yod from  ruleshebrew
+"W" "^" "" "(u|v)" // vav from  ruleshebrew
+"W" "" "" "u" // vav from  ruleshebrew
+
+// "g" "" "" "(g|Z)"
+// "z" "" "" "(z|Z)"
+// "d" "" "" "(d|dZ)"
+
+"T" "" "" "t"   // tet from  ruleshebrew
+
+// "k" "" "" "(k|x)"
+// "x" "" "" "(k|x)"
+"K" "" "" "k" // kof and initial kaf from ruleshebrew
+"X" "" "" "x" // khet and final kaf from ruleshebrew
+
+// special for Spanish initial B/V
+"B" "" "" "v"
+"V" "" "" "b"
+
+"H" "^" "" "(x|1)"
+"H" "" "$" "(x|1)"
+"H" "" "" "(x|)"
+"h" "^" "" "1"
+"h" "" "" ""
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_languages.txt b/src/resources/org/apache/commons/codec/language/bm/sep_languages.txt
new file mode 100644
index 0000000..9a1935a
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_languages.txt
@@ -0,0 +1,23 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+any
+french
+hebrew
+italian
+portuguese
+spanish
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_rules_any.txt b/src/resources/org/apache/commons/codec/language/bm/sep_rules_any.txt
new file mode 100644
index 0000000..fc08b5a
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_rules_any.txt
@@ -0,0 +1,155 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// SEPHARDIC: INCORPORATES Portuguese + Italian + Spanish(+Catalan) + French
+
+// CONSONANTS
+"ph" "" "" "f" // foreign
+"sh" "" "" "S" // foreign
+"kh" "" "" "x" // foreign
+
+"gli" "" "" "(gli|l[italian])" 
+"gni" "" "" "(gni|ni[italian+french])"
+"gn" "" "[aeou]" "(n[italian+french]|nj[italian+french]|gn)" 
+"gh" "" "" "g" // It + translit. from Arabic
+"dh" "" "" "d" // translit. from Arabic
+"bh" "" "" "b" // translit. from Arabic
+"th" "" "" "t" // translit. from Arabic
+"lh" "" "" "l" // Port
+"nh" "" "" "nj" // Port
+
+"ig" "[aeiou]" "" "(ig|tS[spanish])"
+"ix" "[aeiou]" "" "S" // Sp
+"tx" "" "" "tS" // Sp
+"tj" "" "$" "tS" // Sp
+"tj" "" "" "dZ" // Sp
+"tg" "" "" "(tg|dZ[spanish])"
+
+"gi" "" "[aeou]" "dZ" // italian
+"g" "" "y" "Z" // french
+"gg" "" "[ei]" "(gZ[portuguese+french]|dZ[italian+spanish]|x[spanish])" 
+"g" "" "[ei]" "(Z[portuguese+french]|dZ[italian+spanish]|x[spanish])" 
+
+"guy" "" "" "gi"     
+"gue" "" "$" "(k[french]|ge)"
+"gu" "" "[ei]" "(g|gv)"     // not It
+"gu" "" "[ao]" "gv"  // not It  
+
+"ñ" "" "" "(n|nj)" 
+"ny" "" "" "nj" 
+
+"sc" "" "[ei]" "(s|S[italian])" 
+"sç" "" "[aeiou]" "s" // not It
+"ss" "" "" "s"
+"ç" "" "" "s"   // not It
+
+"ch" "" "[ei]" "(k[italian]|S[portuguese+french]|tS[spanish]|dZ[spanish])" 
+"ch" "" "" "(S|tS[spanish]|dZ[spanish])" 
+
+"ci" "" "[aeou]" "(tS[italian]|si)" 
+"cc" "" "[eiyéèê]" "(tS[italian]|ks[portuguese+french+spanish])" 
+"c" "" "[eiyéèê]" "(tS[italian]|s[portuguese+french+spanish])" 
+//"c" "" "[aou]" "(k|C[portuguese+spanish])" // "C" means that the actual letter could be "ç" (cedille omitted)
+
+"s" "^" "" "s"
+"s" "[aáuiíoóeéêy]" "[aáuiíoóeéêy]" "(s[spanish]|z[portuguese+french+italian])" 
+"s" "" "[dglmnrv]" "(z|Z[portuguese])" 
+
+"z" "" "$" "(s|ts[italian]|S[portuguese])" // ts It, s/S/Z Port, s in Sp, z Fr
+"z" "" "[bdgv]" "(z|dz[italian]|Z[portuguese])" // dz It, Z/z Port, z Sp & Fr
+"z" "" "[ptckf]" "(s|ts[italian]|S[portuguese])" // ts It, s/S/z Port, z/s Sp
+"z" "" "" "(z|dz[italian]|ts[italian]|s[spanish])" // ts/dz It, z Port & Fr, z/s Sp
+
+"que" "" "$" "(k[french]|ke)"
+"qu" "" "[eiu]" "k"    
+"qu" "" "[ao]" "(kv|k)" // k is It   
+
+"ex" "" "[aáuiíoóeéêy]" "(ez[portuguese]|eS[portuguese]|eks|egz)" 
+"ex" "" "[cs]" "(e[portuguese]|ek)" 
+
+"m" "" "[cdglnrst]" "(m|n[portuguese])" 
+"m" "" "[bfpv]" "(m|n[portuguese+spanish])" 
+"m" "" "$" "(m|n[portuguese])" 
+
+"b" "^" "" "(b|V[spanish])" 
+"v" "^" "" "(v|B[spanish])" 
+
+// VOWELS   
+"eau" "" "" "o" // Fr
+
+"ouh" "" "[aioe]" "(v[french]|uh)"
+"uh" "" "[aioe]" "(v|uh)"
+"ou" "" "[aioe]" "v" // french
+"uo" "" "" "(vo|o)"
+"u" "" "[aie]" "v"
+
+"i" "[aáuoóeéê]" "" "j"
+"i" "" "[aeou]" "j"
+"y" "[aáuiíoóeéê]" "" "j"
+"y" "" "[aeiíou]" "j"
+"e" "" "$" "(e|E[french])"
+
+"ão" "" "" "(au|an)" // Port
+"ãe" "" "" "(aj|an)" // Port
+"ãi" "" "" "(aj|an)" // Port
+"õe" "" "" "(oj|on)" // Port
+"où" "" "" "u" // Fr
+"ou" "" "" "(ou|u[french])" 
+
+"â" "" "" "a" // Port & Fr
+"à" "" "" "a" // Port 
+"á" "" "" "a" // Port & Sp
+"ã" "" "" "(a|an)" // Port
+"é" "" "" "e" 
+"ê" "" "" "e" // Port & Fr
+"è" "" "" "e" // Sp & Fr & It
+"í" "" "" "i" // Port & Sp
+"î" "" "" "i" // Fr
+"ô" "" "" "o" // Port & Fr
+"ó" "" "" "o" // Port & Sp & It
+"õ" "" "" "(o|on)" // Port
+"ò" "" "" "o"  // Sp & It
+"ú" "" "" "u" // Port & Sp
+"ü" "" "" "u" // Port & Sp
+
+// LATIN ALPHABET     
+"a" "" "" "a"
+"b" "" "" "(b|v[spanish])" 
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h" 
+"i" "" "" "i"
+"j" "" "" "(x[spanish]|Z)" // not It
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"    
+"r" "" "" "r"
+"s" "" "" "(s|S[portuguese])" 
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "(v|b[spanish])" 
+"w" "" "" "v"    // foreign
+"x" "" "" "(ks|gz|S[portuguese+spanish])"   // S/ks Port & Sp, gz Sp, It only ks
+"y" "" "" "i"   
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_rules_french.txt b/src/resources/org/apache/commons/codec/language/bm/sep_rules_french.txt
new file mode 100644
index 0000000..de636f8
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_rules_french.txt
@@ -0,0 +1,91 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Sephardic
+
+// CONSONANTS
+"kh" "" "" "x" // foreign
+"ph" "" "" "f"
+
+"ç" "" "" "s"
+"x" "" "" "ks"
+"ch" "" "" "S"
+"c" "" "[eiyéèê]" "s"
+"c" "" "" "k"
+"gn" "" "" "(n|gn)"
+"g" "" "[eiy]" "Z" 
+"gue" "" "$" "k"     
+"gu" "" "[eiy]" "g" 
+//"aill" "" "e" "aj" // non Jewish
+//"ll" "" "e" "(l|j)" // non Jewish
+"que" "" "$" "k"
+"qu" "" "" "k"
+"q" "" "" "k"
+"s" "[aeiouyéèê]" "[aeiouyéèê]" "z"
+"h" "[bdgt]" "" "" // translit from Arabic
+"h" "" "$" "" // foreign
+"j" "" "" "Z"
+"w" "" "" "v"
+"ouh" "" "[aioe]" "(v|uh)"
+"ou" "" "[aeio]" "v" 
+"uo" "" "" "(vo|o)"
+"u" "" "[aeio]" "v" 
+
+// VOWELS
+"aue" "" "" "aue" 
+"eau" "" "" "o" 
+//"au" "" "" "(o|au)" // non Jewish
+"ai" "" "" "aj" // [e] is non Jewish
+"ay" "" "" "aj" // [e] is non Jewish
+"é" "" "" "e"
+"ê" "" "" "e"
+"è" "" "" "e"
+"à" "" "" "a"
+"â" "" "" "a"
+"où" "" "" "u"
+"ou" "" "" "u"
+"oi" "" "" "oj" // [ua] is non Jewish
+"ei" "" "" "ej" // [e] is non Jewish, in Ashk should be aj
+"ey" "" "" "ej" // [e] non Jewish, in Ashk should be aj
+//"eu" "" "" "(e|o)" // non Jewish
+"y" "[ou]" "" "j"
+"e" "" "$" "(e|)"
+"i" "" "[aou]" "j"
+"y" "" "[aoeu]" "j"
+"y" "" "" "i"
+
+// TRIVIAL      
+"a" "" "" "a"
+"b" "" "" "b"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "i"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_rules_hebrew.txt b/src/resources/org/apache/commons/codec/language/bm/sep_rules_hebrew.txt
new file mode 100644
index 0000000..91cf5ba
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_rules_hebrew.txt
@@ -0,0 +1,62 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// Sephardic
+
+"אי" "" "" "i"
+"עי" "" "" "i"
+"עו" "" "" "VV"
+"או" "" "" "VV"
+
+"ג׳" "" "" "Z"
+"ד׳" "" "" "dZ"
+
+"א" "" "" "L"
+"ב" "" "" "b"
+"ג" "" "" "g"
+"ד" "" "" "d"
+
+"ה" "^" "" "1"
+"ה" "" "$" "1"
+"ה" "" "" ""
+
+"וו" "" "" "V" 
+"וי" "" "" "WW"
+"ו" "" "" "W"
+"ז" "" "" "z"
+"ח" "" "" "X"
+"ט" "" "" "T"
+"יי" "" "" "i"
+"י" "" "" "i"
+"ך" "" "" "X"
+"כ" "^" "" "K"
+"כ" "" "" "k"
+"ל" "" "" "l"
+"ם" "" "" "m"
+"מ" "" "" "m"
+"ן" "" "" "n"
+"נ" "" "" "n"
+"ס" "" "" "s"
+"ע" "" "" "L"
+"ף" "" "" "f"
+"פ" "" "" "f"
+"ץ" "" "" "C"
+"צ" "" "" "C"
+"ק" "" "" "K"
+"ר" "" "" "r"
+"ש" "" "" "s"
+"ת" "" "" "T"   // Special for Sephardim
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_rules_italian.txt b/src/resources/org/apache/commons/codec/language/bm/sep_rules_italian.txt
new file mode 100644
index 0000000..76cf14b
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_rules_italian.txt
@@ -0,0 +1,76 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"kh" "" "" "x" // foreign
+
+"gli" "" "" "(l|gli)"
+"gn" "" "[aeou]" "(n|nj|gn)"
+"gni" "" "" "(ni|gni)"
+
+"gi" "" "[aeou]" "dZ"
+"gg" "" "[ei]" "dZ"
+"g" "" "[ei]" "dZ"
+"h" "[bdgt]" "" "g" // gh is It; others from Arabic translit
+
+"ci" "" "[aeou]" "tS"
+"ch" "" "[ei]" "k"
+"sc" "" "[ei]" "S" 
+"cc" "" "[ei]" "tS"
+"c" "" "[ei]" "tS"
+"s" "[aeiou]" "[aeiou]" "z"
+
+"i" "[aeou]" "" "j"
+"i" "" "[aeou]" "j"
+"y" "[aeou]" "" "j" // foreign
+"y" "" "[aeou]" "j" // foreign
+
+"qu" "" "" "k"    
+"uo" "" "" "(vo|o)"
+"u" "" "[aei]" "v" 
+
+"�" "" "" "e" 
+"�" "" "" "e" 
+"�" "" "" "o"  
+"�" "" "" "o" 
+
+// LATIN ALPHABET    
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "i"
+"j" "" "" "(Z|dZ|j)" // foreign
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"q" "" "" "k"    
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"    // foreign
+"x" "" "" "ks"    // foreign
+"y" "" "" "i"    // foreign
+"z" "" "" "(ts|dz)"
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_rules_portuguese.txt b/src/resources/org/apache/commons/codec/language/bm/sep_rules_portuguese.txt
new file mode 100644
index 0000000..02d7e78
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_rules_portuguese.txt
@@ -0,0 +1,104 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+"kh" "" "" "x" // foreign
+"ch" "" "" "S"
+"ss" "" "" "s"
+"sc" "" "[ei]" "s"
+"sç" "" "[aou]" "s"
+"ç" "" "" "s"
+"c" "" "[ei]" "s"
+//  "c" "" "[aou]" "(k|C)"
+
+"s" "^" "" "s"
+"s" "[aáuiíoóeéêy]" "[aáuiíoóeéêy]" "z"
+"s" "" "[dglmnrv]" "(Z|S)" // Z is Brazil
+
+"z" "" "$" "(Z|s|S)" // s and S in Brazil
+"z" "" "[bdgv]" "(Z|z)" // Z in Brazil
+"z" "" "[ptckf]" "(s|S|z)" // s and S in Brazil
+
+"gu" "" "[eiu]" "g"    
+"gu" "" "[ao]" "gv"    
+"g" "" "[ei]" "Z"
+"qu" "" "[eiu]" "k"    
+"qu" "" "[ao]" "kv"    
+
+"uo" "" "" "(vo|o|u)"
+"u" "" "[aei]" "v" 
+
+"lh" "" "" "l"
+"nh" "" "" "nj"
+"h" "[bdgt]" "" "" // translit. from Arabic
+
+"ex" "" "[aáuiíoóeéêy]" "(ez|eS|eks)" // ez in Brazil
+"ex" "" "[cs]" "e" 
+
+"y" "[aáuiíoóeéê]" "" "j"
+"y" "" "[aeiíou]" "j"
+"m" "" "[bcdfglnprstv]" "(m|n)" // maybe to add a rule for m/n before a consonant that disappears [preceeding vowel becomes nasalized]
+"m" "" "$" "(m|n)" // maybe to add a rule for final m/n that disappears [preceeding vowel becomes nasalized]
+
+"ão" "" "" "(au|an|on)"
+"ãe" "" "" "(aj|an)"
+"ãi" "" "" "(aj|an)"
+"õe" "" "" "(oj|on)"
+"i" "[aáuoóeéê]" "" "j"
+"i" "" "[aeou]" "j"
+
+"â" "" "" "a"
+"à" "" "" "a"
+"á" "" "" "a"
+"ã" "" "" "(a|an|on)"
+"é" "" "" "e"
+"ê" "" "" "e"
+"í" "" "" "i"
+"ô" "" "" "o"
+"ó" "" "" "o"
+"õ" "" "" "(o|on)"
+"ú" "" "" "u"
+"ü" "" "" "u"
+
+"aue" "" "" "aue"
+
+// LATIN ALPHABET
+"a" "" "" "a"
+"b" "" "" "b"
+"c" "" "" "k"
+"d" "" "" "d"
+"e" "" "" "(e|i)"
+"f" "" "" "f"
+"g" "" "" "g"
+"h" "" "" "h"
+"i" "" "" "i"
+"j" "" "" "Z" 
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "(o|u)"
+"p" "" "" "p"
+"q" "" "" "k"    
+"r" "" "" "r"
+"s" "" "" "S"
+"t" "" "" "t"
+"u" "" "" "u"
+"v" "" "" "v"
+"w" "" "" "v"    
+"x" "" "" "(S|ks)"   
+"y" "" "" "i"   
+"z" "" "" "z"
diff --git a/src/resources/org/apache/commons/codec/language/bm/sep_rules_spanish.txt b/src/resources/org/apache/commons/codec/language/bm/sep_rules_spanish.txt
new file mode 100644
index 0000000..b900e7e
--- /dev/null
+++ b/src/resources/org/apache/commons/codec/language/bm/sep_rules_spanish.txt
@@ -0,0 +1,95 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+//Sephardic
+
+// Includes both Spanish (Castillian) & Catalan
+
+// CONSONANTS
+"ñ" "" "" "(n|nj)"
+"ny" "" "" "nj" // Catalan
+"ç" "" "" "s" // Catalan
+
+"ig" "[aeiou]" "" "(tS|ig)" // tS is Catalan
+"ix" "[aeiou]" "" "S" // Catalan
+"tx" "" "" "tS" // Catalan
+"tj" "" "$" "tS" // Catalan
+"tj" "" "" "dZ" // Catalan
+"tg" "" "" "(tg|dZ)" // dZ is Catalan
+"ch" "" "" "(tS|dZ)" // dZ is typical for Argentina
+"bh" "" "" "b" // translit. from Arabic
+"h" "[dgt]" "" "" // translit. from Arabic
+
+"j" "" "" "(x|Z)" // Z is Catalan
+"x" "" "" "(ks|gz|S)" // ks is Spanish, all are Catalan
+
+//"ll" "" "" "(l|Z)" // Z is typical for Argentina, only Ashkenazic
+"w" "" "" "v" // foreign words
+
+"v" "^" "" "(B|v)"
+"b" "^" "" "(b|V)"
+"v" "" "" "(b|v)"
+"b" "" "" "(b|v)"
+"m" "" "[bpvf]" "(m|n)"
+
+"c" "" "[ei]" "s" 
+//  "c" "" "[aou]" "(k|C)"
+"c" "" "" "k"
+
+"z" "" "" "(z|s)" // as "c" befoire "e" or "i", in Spain it is like unvoiced English "th"
+
+"gu" "" "[ei]" "(g|gv)" // "gv" because "u" can actually be "ü"
+"g" "" "[ei]" "(x|g|dZ)"  // "g" only for foreign words; dZ is Catalan
+
+"qu" "" "" "k"
+"q" "" "" "k"
+
+"uo" "" "" "(vo|o)"    
+"u" "" "[aei]" "v"
+
+//  "y" "" "" "(i|j|S|Z)" // S or Z are peculiar to South America; only Ashkenazic
+"y" "" "" "(i|j)"
+
+// VOWELS
+"ü" "" "" "v"
+"á" "" "" "a"
+"é" "" "" "e"
+"í" "" "" "i"
+"ó" "" "" "o"
+"ú" "" "" "u"
+"à" "" "" "a"  // Catalan
+"è" "" "" "e" // Catalan
+"ò" "" "" "o"  // Catalan
+
+// TRIVIAL      
+"a" "" "" "a"
+"d" "" "" "d"
+"e" "" "" "e"
+"f" "" "" "f"
+"g" "" "" "g" 
+"h" "" "" "h"
+"i" "" "" "i"
+"k" "" "" "k"
+"l" "" "" "l"
+"m" "" "" "m"
+"n" "" "" "n"
+"o" "" "" "o"
+"p" "" "" "p"
+"r" "" "" "r"
+"s" "" "" "s"
+"t" "" "" "t"
+"u" "" "" "u"
diff --git a/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java b/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java
new file mode 100644
index 0000000..a75d516
--- /dev/null
+++ b/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java
@@ -0,0 +1,87 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import static org.junit.Assert.assertEquals;
+
+import java.util.Collections;
+
+import org.apache.commons.codec.StringEncoder;
+import org.apache.commons.codec.StringEncoderAbstractTest;
+import org.junit.Test;
+
+/**
+ * Tests BeiderMorseEncoder.
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+public class BeiderMorseEncoderTest extends StringEncoderAbstractTest {
+    @Override
+    protected StringEncoder createStringEncoder() {
+        return new BeiderMorseEncoder();
+    }
+
+    @Test(expected = IllegalStateException.class)
+    public void invalidLangResourceShouldRaiseException() {
+        Lang.loadFromResource("thisIsAMadeUpResourceName", Languages.instance(NameType.GENERIC));
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void invalidLangShouldRaiseException() {
+        Rule.instance(NameType.GENERIC, RuleType.APPROX, "noSuchLanguage");
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void invalidLanguageResourceShouldRaiseException() {
+        Languages.instance("thereIsNoSuchLanguage");
+    }
+
+    @Test(expected = IndexOutOfBoundsException.class)
+    public void negativeIndexForRuleMatchShouldRaiseException() {
+        Rule r = new Rule("a", "", "", "", Collections.<String> emptySet(), "bob");
+        r.patternAndContextMatches("bob", -1);
+    }
+
+    @Test
+    public void setConcat() {
+        BeiderMorseEncoder bmpm = new BeiderMorseEncoder();
+        bmpm.setConcat(false);
+        assertEquals("Should be able to set concat to false", false, bmpm.isConcat());
+    }
+
+    @Test
+    public void setNameTypeAsh() {
+        BeiderMorseEncoder bmpm = new BeiderMorseEncoder();
+        bmpm.setNameType(NameType.ASHKENAZI);
+        assertEquals("Name type should have been set to ash", NameType.ASHKENAZI, bmpm.getNameType());
+    }
+
+    @Test
+    public void setRuleTypeExact() {
+        BeiderMorseEncoder bmpm = new BeiderMorseEncoder();
+        bmpm.setRuleType(RuleType.EXACT);
+        assertEquals("Rule type should have been set to exact", RuleType.EXACT, bmpm.getRuleType());
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void setRuleTypeToRulesShouldRaiseException() {
+        BeiderMorseEncoder bmpm = new BeiderMorseEncoder();
+        bmpm.setRuleType(RuleType.RULES);
+    }
+}
diff --git a/src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java b/src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java
new file mode 100644
index 0000000..b6ae5c9
--- /dev/null
+++ b/src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java
@@ -0,0 +1,83 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+
+import java.util.Arrays;
+import java.util.List;
+import java.util.Set;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.junit.runners.Parameterized;
+
+/**
+ * Tests guessLanguages API.
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+@RunWith(Parameterized.class)
+public class LanguageGuessingTest {
+
+    private static String EXACT = "exact";
+    private static String ONE_OF = "one of";
+
+    @Parameterized.Parameters
+    public static List<Object[]> data() {
+        return Arrays.asList(new Object[][] {
+                { "Renault", "french", EXACT },
+                { "Mickiewicz", "polish", EXACT },
+                { "Thompson", "english", ONE_OF }, // this also hits german and greeklatin
+                { "Nuñez", "spanish", EXACT }, { "Carvalho", "portuguese", EXACT }, { "Čapek", "czech", EXACT },
+                { "Sjneijder", "dutch", EXACT }, { "Klausewitz", "german", EXACT }, { "Küçük", "turkish", EXACT },
+                { "Giacometti", "italian", EXACT }, { "Nagy", "hungarian", EXACT }, { "Ceauşescu", "romanian", EXACT },
+                { "Angelopoulos", "greeklatin", EXACT }, { "Αγγελόπουλος", "greek", EXACT }, { "Пушкин", "cyrillic", EXACT },
+                { "כהן", "hebrew", EXACT } });
+    }
+
+    private final String exactness;
+
+    private final Lang lang = Lang.instance(NameType.GENERIC);
+    private final String language;
+    private final String name;
+
+    public LanguageGuessingTest(String name, String language, String exactness) {
+        this.name = name;
+        this.language = language;
+        this.exactness = exactness;
+    }
+
+    @Test
+    public void testLanguageGuessing() {
+        Set<String> guesses = this.lang.guessLanguages(this.name);
+        String guess = this.lang.guessLanguage(this.name);
+
+        assertTrue("language predicted for name '" + this.name + "' is wrong: " + guesses + " should contain '" + this.language + "'",
+                guesses.contains(this.language));
+
+        if (this.exactness.equals(EXACT)) {
+            assertEquals("language predicted for name '" + this.name + "' is wrong", this.language, guess);
+        } else {
+            // System.out.println("warning: test case that maps to multiple languages: '" +
+            // name + "':" + language + " ~> " + guesses);
+        }
+    }
+}
diff --git a/src/test/org/apache/commons/codec/language/bm/PhoneticTest.java b/src/test/org/apache/commons/codec/language/bm/PhoneticTest.java
new file mode 100644
index 0000000..47ce4a2
--- /dev/null
+++ b/src/test/org/apache/commons/codec/language/bm/PhoneticTest.java
@@ -0,0 +1,76 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import static org.junit.Assert.assertEquals;
+
+import java.util.Arrays;
+import java.util.List;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.junit.runners.Parameterized;
+
+/**
+ * Tests PhoneticEngine.
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+@RunWith(Parameterized.class)
+public class PhoneticTest {
+
+    @Parameterized.Parameters
+    public static List<Object[]> data() {
+        return Arrays
+                .asList(new Object[] { "Renault", "rinolt|rino|rinDlt|rinalt|rinult|rinD|rina|rinu", NameType.GENERIC, RuleType.APPROX,
+                        true },
+                        new Object[] { "Renault", "rYnDlt|rYnalt|rYnult|rinDlt|rinalt|rinult", NameType.ASHKENAZI, RuleType.APPROX, true },
+                        new Object[] { "Renault", "(rinDlt)", NameType.SEPHARDIC, RuleType.APPROX, true },
+                        new Object[] { "SntJohn-Smith", "(sntjonsmit)", NameType.GENERIC, RuleType.EXACT, true },
+                        new Object[] { "d'ortley", "ortlaj|ortlej|ortlaj|ortlej-dortlaj|dortlej|dortlaj|dortlej", NameType.GENERIC,
+                                RuleType.EXACT, true },
+                        new Object[] {
+                                "van helsing",
+                                "helSink|helsink|helzink|xelSink|xelsink|xelzink|HelSink|Helsink|Helzink-vanhelSink|vanhelsink|vanhelzink|vanjelSink|vanjelsink|vanjelzink|fanhelSink|fanhelsink|fanhelzink|fanjelSink|fanjelsink|fanjelzink|banhelSink|banhelsink|banhelzink|banjelSink|banjelsink|banjelzink",
+                                NameType.GENERIC, RuleType.EXACT, false });
+    }
+
+    private final boolean concat;
+    private final String name;
+    private final NameType nameType;
+    private final String phoneticExpected;
+    private final RuleType ruleType;
+
+    public PhoneticTest(String name, String phoneticExpected, NameType nameType, RuleType ruleType, boolean concat) {
+        this.name = name;
+        this.phoneticExpected = phoneticExpected;
+        this.nameType = nameType;
+        this.ruleType = ruleType;
+        this.concat = concat;
+    }
+
+    @Test(timeout = 10000L)
+    public void testPhonetic() {
+        PhoneticEngine engine = new PhoneticEngine(this.nameType, this.ruleType, this.concat);
+
+        String phoneticActual = engine.encode(this.name);
+
+        assertEquals("phoneme incorrect", this.phoneticExpected, phoneticActual);
+    }
+}
diff --git a/src/test/org/apache/commons/codec/language/bm/RuleTest.java b/src/test/org/apache/commons/codec/language/bm/RuleTest.java
new file mode 100644
index 0000000..efaeafc
--- /dev/null
+++ b/src/test/org/apache/commons/codec/language/bm/RuleTest.java
@@ -0,0 +1,68 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.commons.codec.language.bm;
+
+import static org.junit.Assert.assertEquals;
+
+import java.util.Arrays;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.junit.runners.Parameterized;
+
+/**
+ * Tests Rule.
+ * 
+ * @author Apache Software Foundation
+ * @since 2.0
+ */
+@RunWith(Parameterized.class)
+public class RuleTest {
+
+    @Parameterized.Parameters
+    public static List<Object[]> data() {
+        return Arrays.asList(
+                new Object[] { "matching language sets with ALL",
+                        new Rule("e", "", "", "o", new HashSet<String>(Arrays.asList("english", "french")), Rule.ALL),
+                        new HashSet<String>(Arrays.asList("english", "french")), true },
+                new Object[] { "non-matching language sets with ALL",
+                        new Rule("e", "", "", "o", new HashSet<String>(Arrays.asList("english", "french")), Rule.ALL),
+                        new HashSet<String>(Arrays.asList("english")), false });
+    }
+
+    private final String caseName;
+    private final boolean expected;
+    private final Set<String> langs;
+    private final Rule rule;
+
+    public RuleTest(String caseName, Rule rule, Set<String> langs, boolean expected) {
+        this.caseName = caseName;
+        this.rule = rule;
+        this.langs = langs;
+        this.expected = expected;
+    }
+
+    @Test
+    public void rule() {
+        assertEquals(this.caseName, this.expected, this.rule.languageMatches(this.langs));
+    }
+
+}
