===
insert-tree
---
ImportDeclaration [876,928]
    QualifiedName: org.apache.commons.math.ConvergenceException [883,927]
to
CompilationUnit [0,5964]
at 2
===
move-tree
---
MethodDeclaration [2074,2872]
    Javadoc [2074,2680]
        TagElement [2085,2119]
            TextElement: Find a zero in the given interval. [2085,2119]
        TagElement [2135,2178]
            SimpleName: min [2142,2145]
            TextElement:  the lower bound for the interval [2145,2178]
        TagElement [2186,2229]
            SimpleName: max [2193,2196]
            TextElement:  the upper bound for the interval [2196,2229]
        TagElement [2237,2284]
            SimpleName: initial [2244,2251]
            TextElement:  the start value to use (ignored) [2251,2284]
        TagElement [2292,2336]
            TextElement:  the value where the function is zero [2299,2336]
        TagElement [2344,2425]
            SimpleName: MaxIterationsExceededException [2352,2382]
            TextElement:  if the maximum iteration count is exceeded [2382,2425]
        TagElement [2433,2519]
            SimpleName: FunctionEvaluationException [2441,2468]
            TextElement:  if an error occurs evaluating the [2468,2502]
            TextElement: function  [2510,2519]
        TagElement [2527,2672]
            SimpleName: IllegalArgumentException [2535,2559]
            TextElement:  if min is not less than max or the [2559,2594]
            TextElement: signs of the values of the function at the endpoints are not opposites [2602,2672]
    Modifier: public [2685,2691]
    PrimitiveType: double [2692,2698]
    SimpleName: solve [2699,2704]
    SingleVariableDeclaration [2705,2715]
        PrimitiveType: double [2705,2711]
        SimpleName: min [2712,2715]
    SingleVariableDeclaration [2717,2727]
        PrimitiveType: double [2717,2723]
        SimpleName: max [2724,2727]
    SingleVariableDeclaration [2729,2743]
        PrimitiveType: double [2729,2735]
        SimpleName: initial [2736,2743]
    SimpleType [2760,2790]
        SimpleName: MaxIterationsExceededException [2760,2790]
    SimpleType [2792,2819]
        SimpleName: FunctionEvaluationException [2792,2819]
    Block [2820,2872]
        ReturnStatement [2843,2866]
            MethodInvocation [2850,2865]
                SimpleName: solve [2850,2855]
                METHOD_INVOCATION_ARGUMENTS [2856,2864]
                    SimpleName: min [2856,2859]
                    SimpleName: max [2861,2864]
to
TypeDeclaration [1001,5963]
at 9
===
insert-tree
---
MethodDeclaration [2400,2498]
    Javadoc [2400,2438]
        TagElement [2411,2430]
            TextElement: Construct a solver. [2411,2430]
    Modifier: public [2443,2449]
    SimpleName: SecantSolver [2450,2462]
    Block [2465,2498]
        SuperConstructorInvocation [2475,2492]
            NumberLiteral: 100 [2481,2484]
            NumberLiteral: 1E-6 [2486,2490]
to
TypeDeclaration [1001,5963]
at 8
===
insert-node
---
MethodDeclaration [2955,3855]
to
TypeDeclaration [1001,5963]
at 11
===
insert-node
---
MethodDeclaration [3865,7048]
to
TypeDeclaration [1001,5963]
at 12
===
insert-node
---
Javadoc [1938,2291]
to
MethodDeclaration [1885,2068]
at 0
===
insert-tree
---
MarkerAnnotation [2296,2307]
    SimpleName: Deprecated [2297,2307]
to
MethodDeclaration [1885,2068]
at 1
===
insert-tree
---
Javadoc [2504,2524]
    TagElement [2508,2522]
        TagElement [2508,2521]
        TextElement:   [2521,2522]
to
MethodDeclaration [2882,5960]
at 0
===
insert-tree
---
MarkerAnnotation [2529,2540]
    SimpleName: Deprecated [2530,2540]
to
MethodDeclaration [2882,5960]
at 1
===
insert-tree
---
SimpleType [2616,2636]
    SimpleName: ConvergenceException [2616,2636]
to
MethodDeclaration [2882,5960]
at 8
===
insert-tree
---
Javadoc [2714,2734]
    TagElement [2718,2732]
        TagElement [2718,2731]
        TextElement:   [2731,2732]
to
MethodDeclaration [2074,2872]
at 0
===
insert-tree
---
MarkerAnnotation [2739,2750]
    SimpleName: Deprecated [2740,2750]
to
MethodDeclaration [2074,2872]
at 1
===
insert-tree
---
SimpleType [2848,2868]
    SimpleName: ConvergenceException [2848,2868]
to
MethodDeclaration [2074,2872]
at 9
===
insert-tree
---
Javadoc [2955,3599]
    TagElement [2966,3000]
        TextElement: Find a zero in the given interval. [2966,3000]
    TagElement [3016,3046]
        SimpleName: f [3023,3024]
        TextElement:  the function to solve [3024,3046]
    TagElement [3054,3097]
        SimpleName: min [3061,3064]
        TextElement:  the lower bound for the interval [3064,3097]
    TagElement [3105,3148]
        SimpleName: max [3112,3115]
        TextElement:  the upper bound for the interval [3115,3148]
    TagElement [3156,3203]
        SimpleName: initial [3163,3170]
        TextElement:  the start value to use (ignored) [3170,3203]
    TagElement [3211,3255]
        TextElement:  the value where the function is zero [3218,3255]
    TagElement [3263,3344]
        SimpleName: MaxIterationsExceededException [3271,3301]
        TextElement:  if the maximum iteration count is exceeded [3301,3344]
    TagElement [3352,3438]
        SimpleName: FunctionEvaluationException [3360,3387]
        TextElement:  if an error occurs evaluating the [3387,3421]
        TextElement: function  [3429,3438]
    TagElement [3446,3591]
        SimpleName: IllegalArgumentException [3454,3478]
        TextElement:  if min is not less than max or the [3478,3513]
        TextElement: signs of the values of the function at the endpoints are not opposites [3521,3591]
to
MethodDeclaration [2955,3855]
at 0
===
insert-node
---
Modifier: public [3604,3610]
to
MethodDeclaration [2955,3855]
at 1
===
insert-node
---
PrimitiveType: double [3611,3617]
to
MethodDeclaration [2955,3855]
at 2
===
insert-node
---
SimpleName: solve [3618,3623]
to
MethodDeclaration [2955,3855]
at 3
===
insert-tree
---
SingleVariableDeclaration [3624,3654]
    Modifier: final [3624,3629]
    SimpleType [3630,3652]
        SimpleName: UnivariateRealFunction [3630,3652]
    SimpleName: f [3653,3654]
to
MethodDeclaration [2955,3855]
at 4
===
insert-tree
---
SingleVariableDeclaration [3680,3696]
    Modifier: final [3680,3685]
    PrimitiveType: double [3686,3692]
    SimpleName: min [3693,3696]
to
MethodDeclaration [2955,3855]
at 5
===
insert-tree
---
SingleVariableDeclaration [3698,3714]
    Modifier: final [3698,3703]
    PrimitiveType: double [3704,3710]
    SimpleName: max [3711,3714]
to
MethodDeclaration [2955,3855]
at 6
===
insert-tree
---
SingleVariableDeclaration [3716,3736]
    Modifier: final [3716,3721]
    PrimitiveType: double [3722,3728]
    SimpleName: initial [3729,3736]
to
MethodDeclaration [2955,3855]
at 7
===
insert-tree
---
SimpleType [3753,3783]
    SimpleName: MaxIterationsExceededException [3753,3783]
to
MethodDeclaration [2955,3855]
at 8
===
insert-tree
---
SimpleType [3785,3812]
    SimpleName: FunctionEvaluationException [3785,3812]
to
MethodDeclaration [2955,3855]
at 9
===
insert-node
---
Block [3813,3855]
to
MethodDeclaration [2955,3855]
at 10
===
insert-tree
---
Javadoc [3865,4449]
    TagElement [3876,3910]
        TextElement: Find a zero in the given interval. [3876,3910]
    TagElement [3918,3948]
        SimpleName: f [3925,3926]
        TextElement:  the function to solve [3926,3948]
    TagElement [3956,4000]
        SimpleName: min [3963,3966]
        TextElement:  the lower bound for the interval. [3966,4000]
    TagElement [4008,4052]
        SimpleName: max [4015,4018]
        TextElement:  the upper bound for the interval. [4018,4052]
    TagElement [4060,4104]
        TextElement:  the value where the function is zero [4067,4104]
    TagElement [4112,4194]
        SimpleName: MaxIterationsExceededException [4120,4150]
        TextElement:   if the maximum iteration count is exceeded [4150,4194]
    TagElement [4202,4288]
        SimpleName: FunctionEvaluationException [4210,4237]
        TextElement:  if an error occurs evaluating the [4237,4271]
        TextElement: function  [4279,4288]
    TagElement [4296,4441]
        SimpleName: IllegalArgumentException [4304,4328]
        TextElement:  if min is not less than max or the [4328,4363]
        TextElement: signs of the values of the function at the endpoints are not opposites [4371,4441]
to
MethodDeclaration [3865,7048]
at 0
===
insert-node
---
Modifier: public [4454,4460]
to
MethodDeclaration [3865,7048]
at 1
===
insert-node
---
PrimitiveType: double [4461,4467]
to
MethodDeclaration [3865,7048]
at 2
===
insert-node
---
SimpleName: solve [4468,4473]
to
MethodDeclaration [3865,7048]
at 3
===
insert-tree
---
SingleVariableDeclaration [4474,4504]
    Modifier: final [4474,4479]
    SimpleType [4480,4502]
        SimpleName: UnivariateRealFunction [4480,4502]
    SimpleName: f [4503,4504]
to
MethodDeclaration [3865,7048]
at 4
===
insert-tree
---
SingleVariableDeclaration [4530,4546]
    Modifier: final [4530,4535]
    PrimitiveType: double [4536,4542]
    SimpleName: min [4543,4546]
to
MethodDeclaration [3865,7048]
at 5
===
insert-tree
---
SingleVariableDeclaration [4548,4564]
    Modifier: final [4548,4553]
    PrimitiveType: double [4554,4560]
    SimpleName: max [4561,4564]
to
MethodDeclaration [3865,7048]
at 6
===
insert-tree
---
SimpleType [4581,4611]
    SimpleName: MaxIterationsExceededException [4581,4611]
to
MethodDeclaration [3865,7048]
at 7
===
insert-tree
---
SimpleType [4613,4640]
    SimpleName: FunctionEvaluationException [4613,4640]
to
MethodDeclaration [3865,7048]
at 8
===
insert-node
---
Block [4641,7048]
to
MethodDeclaration [3865,7048]
at 9
===
update-node
---
NumberLiteral: 1984971194738974867L [1858,1878]
replace 1984971194738974867L by 2477470651270304246L
===
move-tree
---
TagElement [1896,1938]
    TextElement: Construct a solver for the given function. [1896,1938]
to
Javadoc [1938,2291]
at 0
===
move-tree
---
TagElement [1946,1973]
    SimpleName: f [1953,1954]
    TextElement:  function to solve. [1954,1973]
to
Javadoc [1938,2291]
at 1
===
insert-tree
---
TagElement [2034,2283]
    TextElement:  as of 2.0 the function to solve is passed as an argument [2045,2102]
    TextElement: to the  [2110,2117]
    TagElement [2117,2171]
        MethodRef [2124,2170]
            SimpleName: solve [2125,2130]
            MethodRefParameter [2131,2153]
                SimpleType [2131,2153]
                    SimpleName: UnivariateRealFunction [2131,2153]
            MethodRefParameter [2155,2161]
                PrimitiveType: double [2155,2161]
            MethodRefParameter [2163,2169]
                PrimitiveType: double [2163,2169]
    TextElement:  or [2171,2174]
    TagElement [2182,2268]
        MethodRef [2189,2267]
            SimpleName: UnivariateRealSolverImpl [2189,2213]
            SimpleName: solve [2214,2219]
            MethodRefParameter [2220,2242]
                SimpleType [2220,2242]
                    SimpleName: UnivariateRealFunction [2220,2242]
            MethodRefParameter [2244,2250]
                PrimitiveType: double [2244,2250]
            MethodRefParameter [2252,2258]
                PrimitiveType: double [2252,2258]
            MethodRefParameter [2260,2266]
                PrimitiveType: double [2260,2266]
    TextElement: method. [2276,2283]
to
Javadoc [1938,2291]
at 2
===
insert-node
---
Modifier: final [2565,2570]
to
SingleVariableDeclaration [3453,3463]
at 0
===
insert-node
---
Modifier: final [2583,2588]
to
SingleVariableDeclaration [3465,3475]
at 0
===
insert-tree
---
ReturnStatement [2676,2702]
    MethodInvocation [2683,2701]
        SimpleName: solve [2683,2688]
        METHOD_INVOCATION_ARGUMENTS [2689,2700]
            SimpleName: f [2689,2690]
            SimpleName: min [2692,2695]
            SimpleName: max [2697,2700]
to
Block [3553,5960]
at 0
===
insert-node
---
Modifier: final [2775,2780]
to
SingleVariableDeclaration [2705,2715]
at 0
===
insert-node
---
Modifier: final [2793,2798]
to
SingleVariableDeclaration [2717,2727]
at 0
===
insert-node
---
Modifier: final [2811,2816]
to
SingleVariableDeclaration [2729,2743]
at 0
===
insert-tree
---
ReturnStatement [2908,2943]
    MethodInvocation [2915,2942]
        SimpleName: solve [2915,2920]
        METHOD_INVOCATION_ARGUMENTS [2921,2941]
            SimpleName: f [2921,2922]
            SimpleName: min [2924,2927]
            SimpleName: max [2929,2932]
            SimpleName: initial [2934,2941]
to
Block [2820,2872]
at 0
===
move-tree
---
ReturnStatement [2843,2866]
    MethodInvocation [2850,2865]
        SimpleName: solve [2850,2855]
        METHOD_INVOCATION_ARGUMENTS [2856,2864]
            SimpleName: min [2856,2859]
            SimpleName: max [2861,2864]
to
Block [3813,3855]
at 0
===
move-tree
---
ExpressionStatement [3572,3586]
    MethodInvocation [3572,3585]
        SimpleName: clearResult [3572,3583]
to
Block [4641,7048]
at 0
===
move-tree
---
ExpressionStatement [3595,3620]
    MethodInvocation [3595,3619]
        SimpleName: verifyInterval [3595,3609]
        METHOD_INVOCATION_ARGUMENTS [3610,3618]
            SimpleName: min [3610,3613]
            SimpleName: max [3615,3618]
to
Block [4641,7048]
at 1
===
move-tree
---
VariableDeclarationStatement [3927,3943]
    PrimitiveType: double [3927,3933]
    VariableDeclarationFragment [3934,3942]
        SimpleName: x0 [3934,3936]
        SimpleName: min [3939,3942]
to
Block [4641,7048]
at 2
===
move-tree
---
VariableDeclarationStatement [3952,3968]
    PrimitiveType: double [3952,3958]
    VariableDeclarationFragment [3959,3967]
        SimpleName: x1 [3959,3961]
        SimpleName: max [3964,3967]
to
Block [4641,7048]
at 3
===
move-tree
---
VariableDeclarationStatement [3977,4001]
    PrimitiveType: double [3977,3983]
    VariableDeclarationFragment [3984,4000]
        SimpleName: y0 [3984,3986]
        MethodInvocation [3989,4000]
            METHOD_INVOCATION_RECEIVER [3989,3990]
                SimpleName: f [3989,3990]
            SimpleName: value [3991,3996]
            METHOD_INVOCATION_ARGUMENTS [3997,3999]
                SimpleName: x0 [3997,3999]
to
Block [4641,7048]
at 4
===
move-tree
---
VariableDeclarationStatement [4010,4034]
    PrimitiveType: double [4010,4016]
    VariableDeclarationFragment [4017,4033]
        SimpleName: y1 [4017,4019]
        MethodInvocation [4022,4033]
            METHOD_INVOCATION_RECEIVER [4022,4023]
                SimpleName: f [4022,4023]
            SimpleName: value [4024,4029]
            METHOD_INVOCATION_ARGUMENTS [4030,4032]
                SimpleName: x1 [4030,4032]
to
Block [4641,7048]
at 5
===
move-tree
---
IfStatement [4081,4361]
    InfixExpression [4085,4097]
        InfixExpression [4085,4092]
            SimpleName: y0 [4085,4087]
            INFIX_EXPRESSION_OPERATOR: * [4088,4089]
            SimpleName: y1 [4090,4092]
        INFIX_EXPRESSION_OPERATOR: >= [4093,4095]
        NumberLiteral: 0 [4096,4097]
    Block [4099,4361]
        ThrowStatement [4113,4344]
            ClassInstanceCreation [4119,4343]
                SimpleType [4123,4147]
                    SimpleName: IllegalArgumentException [4123,4147]
                InfixExpression [4161,4342]
                    InfixExpression [4161,4259]
                        StringLiteral: "Function values at endpoints do not have different signs." [4161,4220]
                        INFIX_EXPRESSION_OPERATOR: + [4221,4222]
                        StringLiteral: "  Endpoints: [" [4243,4259]
                    INFIX_EXPRESSION_OPERATOR: + [4260,4261]
                    SimpleName: min [4262,4265]
                    StringLiteral: "," [4268,4271]
                    SimpleName: max [4274,4277]
                    StringLiteral: "]" [4280,4283]
                    StringLiteral: "  Values: [" [4307,4320]
                    SimpleName: y0 [4323,4325]
                    StringLiteral: "," [4328,4331]
                    SimpleName: y1 [4334,4336]
                    StringLiteral: "]" [4339,4342]
to
Block [4641,7048]
at 6
===
move-tree
---
VariableDeclarationStatement [4379,4394]
    PrimitiveType: double [4379,4385]
    VariableDeclarationFragment [4386,4393]
        SimpleName: x2 [4386,4388]
        SimpleName: x0 [4391,4393]
to
Block [4641,7048]
at 7
===
move-tree
---
VariableDeclarationStatement [4403,4418]
    PrimitiveType: double [4403,4409]
    VariableDeclarationFragment [4410,4417]
        SimpleName: y2 [4410,4412]
        SimpleName: y0 [4415,4417]
to
Block [4641,7048]
at 8
===
move-tree
---
VariableDeclarationStatement [4427,4453]
    PrimitiveType: double [4427,4433]
    VariableDeclarationFragment [4434,4452]
        SimpleName: oldDelta [4434,4442]
        InfixExpression [4445,4452]
            SimpleName: x2 [4445,4447]
            INFIX_EXPRESSION_OPERATOR: - [4448,4449]
            SimpleName: x1 [4450,4452]
to
Block [4641,7048]
at 9
===
move-tree
---
VariableDeclarationStatement [4462,4472]
    PrimitiveType: int [4462,4465]
    VariableDeclarationFragment [4466,4471]
        SimpleName: i [4466,4467]
        NumberLiteral: 0 [4470,4471]
to
Block [4641,7048]
at 10
===
move-tree
---
WhileStatement [4481,5881]
    InfixExpression [4488,4513]
        SimpleName: i [4488,4489]
        INFIX_EXPRESSION_OPERATOR: < [4490,4491]
        SimpleName: maximalIterationCount [4492,4513]
    Block [4515,5881]
        IfStatement [4529,4727]
            InfixExpression [4533,4560]
                MethodInvocation [4533,4545]
                    METHOD_INVOCATION_RECEIVER [4533,4537]
                        SimpleName: Math [4533,4537]
                    SimpleName: abs [4538,4541]
                    METHOD_INVOCATION_ARGUMENTS [4542,4544]
                        SimpleName: y2 [4542,4544]
                INFIX_EXPRESSION_OPERATOR: < [4546,4547]
                MethodInvocation [4548,4560]
                    METHOD_INVOCATION_RECEIVER [4548,4552]
                        SimpleName: Math [4548,4552]
                    SimpleName: abs [4553,4556]
                    METHOD_INVOCATION_ARGUMENTS [4557,4559]
                        SimpleName: y1 [4557,4559]
            Block [4562,4727]
                ExpressionStatement [4580,4588]
                    Assignment [4580,4587]
                        SimpleName: x0 [4580,4582]
                        ASSIGNMENT_OPERATOR: = [4583,4584]
                        SimpleName: x1 [4585,4587]
                ExpressionStatement [4605,4613]
                    Assignment [4605,4612]
                        SimpleName: x1 [4605,4607]
                        ASSIGNMENT_OPERATOR: = [4608,4609]
                        SimpleName: x2 [4610,4612]
                ExpressionStatement [4630,4638]
                    Assignment [4630,4637]
                        SimpleName: x2 [4630,4632]
                        ASSIGNMENT_OPERATOR: = [4633,4634]
                        SimpleName: x0 [4635,4637]
                ExpressionStatement [4655,4663]
                    Assignment [4655,4662]
                        SimpleName: y0 [4655,4657]
                        ASSIGNMENT_OPERATOR: = [4658,4659]
                        SimpleName: y1 [4660,4662]
                ExpressionStatement [4680,4688]
                    Assignment [4680,4687]
                        SimpleName: y1 [4680,4682]
                        ASSIGNMENT_OPERATOR: = [4683,4684]
                        SimpleName: y2 [4685,4687]
                ExpressionStatement [4705,4713]
                    Assignment [4705,4712]
                        SimpleName: y2 [4705,4707]
                        ASSIGNMENT_OPERATOR: = [4708,4709]
                        SimpleName: y0 [4710,4712]
        IfStatement [4740,4863]
            InfixExpression [4744,4781]
                MethodInvocation [4744,4756]
                    METHOD_INVOCATION_RECEIVER [4744,4748]
                        SimpleName: Math [4744,4748]
                    SimpleName: abs [4749,4752]
                    METHOD_INVOCATION_ARGUMENTS [4753,4755]
                        SimpleName: y1 [4753,4755]
                INFIX_EXPRESSION_OPERATOR: <= [4757,4759]
                SimpleName: functionValueAccuracy [4760,4781]
            Block [4783,4863]
                ExpressionStatement [4801,4818]
                    MethodInvocation [4801,4817]
                        SimpleName: setResult [4801,4810]
                        METHOD_INVOCATION_ARGUMENTS [4811,4816]
                            SimpleName: x1 [4811,4813]
                            SimpleName: i [4815,4816]
                ReturnStatement [4835,4849]
                    SimpleName: result [4842,4848]
        IfStatement [4876,5058]
            InfixExpression [4880,4976]
                MethodInvocation [4880,4898]
                    METHOD_INVOCATION_RECEIVER [4880,4884]
                        SimpleName: Math [4880,4884]
                    SimpleName: abs [4885,4888]
                    METHOD_INVOCATION_ARGUMENTS [4889,4897]
                        SimpleName: oldDelta [4889,4897]
                INFIX_EXPRESSION_OPERATOR: < [4899,4900]
                MethodInvocation [4917,4976]
                    METHOD_INVOCATION_RECEIVER [4917,4921]
                        SimpleName: Math [4917,4921]
                    SimpleName: max [4922,4925]
                    METHOD_INVOCATION_ARGUMENTS [4926,4975]
                        InfixExpression [4926,4957]
                            SimpleName: relativeAccuracy [4926,4942]
                            INFIX_EXPRESSION_OPERATOR: * [4943,4944]
                            MethodInvocation [4945,4957]
                                METHOD_INVOCATION_RECEIVER [4945,4949]
                                    SimpleName: Math [4945,4949]
                                SimpleName: abs [4950,4953]
                                METHOD_INVOCATION_ARGUMENTS [4954,4956]
                                    SimpleName: x1 [4954,4956]
                        SimpleName: absoluteAccuracy [4959,4975]
            Block [4978,5058]
                ExpressionStatement [4996,5013]
                    MethodInvocation [4996,5012]
                        SimpleName: setResult [4996,5005]
                        METHOD_INVOCATION_ARGUMENTS [5006,5011]
                            SimpleName: x1 [5006,5008]
                            SimpleName: i [5010,5011]
                ReturnStatement [5030,5044]
                    SimpleName: result [5037,5043]
        VariableDeclarationStatement [5071,5084]
            PrimitiveType: double [5071,5077]
            VariableDeclarationFragment [5078,5083]
                SimpleName: delta [5078,5083]
        IfStatement [5097,5554]
            InfixExpression [5101,5128]
                MethodInvocation [5101,5113]
                    METHOD_INVOCATION_RECEIVER [5101,5105]
                        SimpleName: Math [5101,5105]
                    SimpleName: abs [5106,5109]
                    METHOD_INVOCATION_ARGUMENTS [5110,5112]
                        SimpleName: y1 [5110,5112]
                INFIX_EXPRESSION_OPERATOR: > [5114,5115]
                MethodInvocation [5116,5128]
                    METHOD_INVOCATION_RECEIVER [5116,5120]
                        SimpleName: Math [5116,5120]
                    SimpleName: abs [5121,5124]
                    METHOD_INVOCATION_ARGUMENTS [5125,5127]
                        SimpleName: y0 [5125,5127]
            Block [5130,5265]
                ExpressionStatement [5228,5251]
                    Assignment [5228,5250]
                        SimpleName: delta [5228,5233]
                        ASSIGNMENT_OPERATOR: = [5234,5235]
                        InfixExpression [5236,5250]
                            NumberLiteral: 0.5 [5236,5239]
                            INFIX_EXPRESSION_OPERATOR: * [5240,5241]
                            SimpleName: oldDelta [5242,5250]
            Block [5271,5554]
                ExpressionStatement [5289,5323]
                    Assignment [5289,5322]
                        SimpleName: delta [5289,5294]
                        ASSIGNMENT_OPERATOR: = [5295,5296]
                        InfixExpression [5297,5322]
                            ParenthesizedExpression [5297,5306]
                                InfixExpression [5298,5305]
                                    SimpleName: x0 [5298,5300]
                                    INFIX_EXPRESSION_OPERATOR: - [5301,5302]
                                    SimpleName: x1 [5303,5305]
                            INFIX_EXPRESSION_OPERATOR: / [5307,5308]
                            ParenthesizedExpression [5309,5322]
                                InfixExpression [5310,5321]
                                    NumberLiteral: 1 [5310,5311]
                                    INFIX_EXPRESSION_OPERATOR: - [5312,5313]
                                    InfixExpression [5314,5321]
                                        SimpleName: y0 [5314,5316]
                                        INFIX_EXPRESSION_OPERATOR: / [5317,5318]
                                        SimpleName: y1 [5319,5321]
                IfStatement [5340,5540]
                    InfixExpression [5344,5364]
                        InfixExpression [5344,5360]
                            SimpleName: delta [5344,5349]
                            INFIX_EXPRESSION_OPERATOR: / [5350,5351]
                            SimpleName: oldDelta [5352,5360]
                        INFIX_EXPRESSION_OPERATOR: > [5361,5362]
                        NumberLiteral: 1 [5363,5364]
                    Block [5366,5540]
                        ExpressionStatement [5499,5522]
                            Assignment [5499,5521]
                                SimpleName: delta [5499,5504]
                                ASSIGNMENT_OPERATOR: = [5505,5506]
                                InfixExpression [5507,5521]
                                    NumberLiteral: 0.5 [5507,5510]
                                    INFIX_EXPRESSION_OPERATOR: * [5511,5512]
                                    SimpleName: oldDelta [5513,5521]
        ExpressionStatement [5567,5575]
            Assignment [5567,5574]
                SimpleName: x0 [5567,5569]
                ASSIGNMENT_OPERATOR: = [5570,5571]
                SimpleName: x1 [5572,5574]
        ExpressionStatement [5588,5596]
            Assignment [5588,5595]
                SimpleName: y0 [5588,5590]
                ASSIGNMENT_OPERATOR: = [5591,5592]
                SimpleName: y1 [5593,5595]
        ExpressionStatement [5609,5625]
            Assignment [5609,5624]
                SimpleName: x1 [5609,5611]
                ASSIGNMENT_OPERATOR: = [5612,5613]
                InfixExpression [5614,5624]
                    SimpleName: x1 [5614,5616]
                    INFIX_EXPRESSION_OPERATOR: + [5617,5618]
                    SimpleName: delta [5619,5624]
        ExpressionStatement [5638,5655]
            Assignment [5638,5654]
                SimpleName: y1 [5638,5640]
                ASSIGNMENT_OPERATOR: = [5641,5642]
                MethodInvocation [5643,5654]
                    METHOD_INVOCATION_RECEIVER [5643,5644]
                        SimpleName: f [5643,5644]
                    SimpleName: value [5645,5650]
                    METHOD_INVOCATION_ARGUMENTS [5651,5653]
                        SimpleName: x1 [5651,5653]
        IfStatement [5668,5822]
            InfixExpression [5672,5692]
                ParenthesizedExpression [5672,5680]
                    InfixExpression [5673,5679]
                        SimpleName: y1 [5673,5675]
                        INFIX_EXPRESSION_OPERATOR: > [5676,5677]
                        NumberLiteral: 0 [5678,5679]
                INFIX_EXPRESSION_OPERATOR: == [5681,5683]
                ParenthesizedExpression [5684,5692]
                    InfixExpression [5685,5691]
                        SimpleName: y2 [5685,5687]
                        INFIX_EXPRESSION_OPERATOR: > [5688,5689]
                        NumberLiteral: 0 [5690,5691]
            Block [5694,5822]
                ExpressionStatement [5775,5783]
                    Assignment [5775,5782]
                        SimpleName: x2 [5775,5777]
                        ASSIGNMENT_OPERATOR: = [5778,5779]
                        SimpleName: x0 [5780,5782]
                ExpressionStatement [5800,5808]
                    Assignment [5800,5807]
                        SimpleName: y2 [5800,5802]
                        ASSIGNMENT_OPERATOR: = [5803,5804]
                        SimpleName: y0 [5805,5807]
        ExpressionStatement [5835,5854]
            Assignment [5835,5853]
                SimpleName: oldDelta [5835,5843]
                ASSIGNMENT_OPERATOR: = [5844,5845]
                InfixExpression [5846,5853]
                    SimpleName: x2 [5846,5848]
                    INFIX_EXPRESSION_OPERATOR: - [5849,5850]
                    SimpleName: x1 [5851,5853]
        ExpressionStatement [5867,5871]
            PostfixExpression [5867,5870]
                SimpleName: i [5867,5868]
                POSTFIX_EXPRESSION_OPERATOR: ++ [5868,5870]
to
Block [4641,7048]
at 11
===
move-tree
---
ThrowStatement [5890,5954]
    ClassInstanceCreation [5896,5953]
        SimpleType [5900,5930]
            SimpleName: MaxIterationsExceededException [5900,5930]
        SimpleName: maximalIterationCount [5931,5952]
to
Block [4641,7048]
at 12
===
insert-node
---
SimpleName: f [3836,3837]
to
METHOD_INVOCATION_ARGUMENTS [2856,2864]
at 0
===
delete-node
---
Javadoc [1885,1981]
===
===
delete-tree
---
Javadoc [2882,3428]
    TagElement [2893,2927]
        TextElement: Find a zero in the given interval. [2893,2927]
    TagElement [2935,2979]
        SimpleName: min [2942,2945]
        TextElement:  the lower bound for the interval. [2945,2979]
    TagElement [2987,3031]
        SimpleName: max [2994,2997]
        TextElement:  the upper bound for the interval. [2997,3031]
    TagElement [3039,3083]
        TextElement:  the value where the function is zero [3046,3083]
    TagElement [3091,3173]
        SimpleName: MaxIterationsExceededException [3099,3129]
        TextElement:   if the maximum iteration count is exceeded [3129,3173]
    TagElement [3181,3267]
        SimpleName: FunctionEvaluationException [3189,3216]
        TextElement:  if an error occurs evaluating the [3216,3250]
        TextElement: function  [3258,3267]
    TagElement [3275,3420]
        SimpleName: IllegalArgumentException [3283,3307]
        TextElement:  if min is not less than max or the [3307,3342]
        TextElement: signs of the values of the function at the endpoints are not opposites [3350,3420]
===
delete-tree
---
SimpleType [3484,3514]
    SimpleName: MaxIterationsExceededException [3484,3514]
===
delete-tree
---
Javadoc [2074,2680]
    TagElement [2085,2119]
        TextElement: Find a zero in the given interval. [2085,2119]
    TagElement [2135,2178]
        SimpleName: min [2142,2145]
        TextElement:  the lower bound for the interval [2145,2178]
    TagElement [2186,2229]
        SimpleName: max [2193,2196]
        TextElement:  the upper bound for the interval [2196,2229]
    TagElement [2237,2284]
        SimpleName: initial [2244,2251]
        TextElement:  the start value to use (ignored) [2251,2284]
    TagElement [2292,2336]
        TextElement:  the value where the function is zero [2299,2336]
    TagElement [2344,2425]
        SimpleName: MaxIterationsExceededException [2352,2382]
        TextElement:  if the maximum iteration count is exceeded [2382,2425]
    TagElement [2433,2519]
        SimpleName: FunctionEvaluationException [2441,2468]
        TextElement:  if an error occurs evaluating the [2468,2502]
        TextElement: function  [2510,2519]
    TagElement [2527,2672]
        SimpleName: IllegalArgumentException [2535,2559]
        TextElement:  if min is not less than max or the [2559,2594]
        TextElement: signs of the values of the function at the endpoints are not opposites [2602,2672]
===
delete-tree
---
SimpleType [2760,2790]
    SimpleName: MaxIterationsExceededException [2760,2790]
