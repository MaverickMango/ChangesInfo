===
insert-tree
---
ImportDeclaration [907,959]
    QualifiedName: org.apache.commons.math.MathRuntimeException [914,958]
to
CompilationUnit [0,4318]
at 3
===
insert-tree
---
MethodDeclaration [1948,2046]
    Javadoc [1948,1986]
        TagElement [1959,1978]
            TextElement: Construct a solver. [1959,1978]
    Modifier: public [1991,1997]
    SimpleName: NewtonSolver [1998,2010]
    Block [2013,2046]
        SuperConstructorInvocation [2023,2040]
            NumberLiteral: 100 [2029,2032]
            NumberLiteral: 1E-6 [2034,2038]
to
TypeDeclaration [1000,4317]
at 8
===
insert-node
---
MethodDeclaration [2540,3338]
to
TypeDeclaration [1000,4317]
at 11
===
insert-node
---
MethodDeclaration [3344,5172]
to
TypeDeclaration [1000,4317]
at 12
===
insert-node
---
Javadoc [1472,1825]
to
MethodDeclaration [1566,1800]
at 0
===
insert-tree
---
MarkerAnnotation [1830,1841]
    SimpleName: Deprecated [1831,1841]
to
MethodDeclaration [1566,1800]
at 1
===
insert-tree
---
Javadoc [2052,2072]
    TagElement [2056,2070]
        TagElement [2056,2069]
        TextElement:   [2069,2070]
to
MethodDeclaration [1806,2534]
at 0
===
insert-tree
---
MarkerAnnotation [2077,2088]
    SimpleName: Deprecated [2078,2088]
to
MethodDeclaration [1806,2534]
at 1
===
insert-tree
---
Javadoc [2282,2302]
    TagElement [2286,2300]
        TagElement [2286,2299]
        TextElement:   [2299,2300]
to
MethodDeclaration [2540,3825]
at 0
===
insert-tree
---
MarkerAnnotation [2307,2318]
    SimpleName: Deprecated [2308,2318]
to
MethodDeclaration [2540,3825]
at 1
===
insert-tree
---
Javadoc [2540,3057]
    TagElement [2551,2622]
        TextElement: Find a zero near the midpoint of <code>min</code> and <code>max</code>. [2551,2622]
    TagElement [2638,2681]
        SimpleName: min [2645,2648]
        TextElement:  the lower bound for the interval [2648,2681]
    TagElement [2689,2732]
        SimpleName: max [2696,2699]
        TextElement:  the upper bound for the interval [2699,2732]
    TagElement [2740,2784]
        TextElement:  the value where the function is zero [2747,2784]
    TagElement [2792,2874]
        SimpleName: MaxIterationsExceededException [2800,2830]
        TextElement:  if the maximum iteration count is exceeded  [2830,2874]
    TagElement [2882,2981]
        SimpleName: FunctionEvaluationException [2890,2917]
        TextElement:  if an error occurs evaluating the [2917,2951]
        TextElement: function or derivative [2959,2981]
    TagElement [2989,3049]
        SimpleName: IllegalArgumentException [2997,3021]
        TextElement:  if min is not less than max [3021,3049]
to
MethodDeclaration [2540,3338]
at 0
===
insert-node
---
Modifier: public [3062,3068]
to
MethodDeclaration [2540,3338]
at 1
===
insert-node
---
PrimitiveType: double [3069,3075]
to
MethodDeclaration [2540,3338]
at 2
===
insert-node
---
SimpleName: solve [3076,3081]
to
MethodDeclaration [2540,3338]
at 3
===
insert-tree
---
SingleVariableDeclaration [3082,3112]
    Modifier: final [3082,3087]
    SimpleType [3088,3110]
        SimpleName: UnivariateRealFunction [3088,3110]
    SimpleName: f [3111,3112]
to
MethodDeclaration [2540,3338]
at 4
===
insert-tree
---
SingleVariableDeclaration [3138,3154]
    Modifier: final [3138,3143]
    PrimitiveType: double [3144,3150]
    SimpleName: min [3151,3154]
to
MethodDeclaration [2540,3338]
at 5
===
insert-tree
---
SingleVariableDeclaration [3156,3172]
    Modifier: final [3156,3161]
    PrimitiveType: double [3162,3168]
    SimpleName: max [3169,3172]
to
MethodDeclaration [2540,3338]
at 6
===
insert-tree
---
SimpleType [3189,3219]
    SimpleName: MaxIterationsExceededException [3189,3219]
to
MethodDeclaration [2540,3338]
at 7
===
insert-tree
---
SimpleType [3221,3248]
    SimpleName: FunctionEvaluationException [3221,3248]
to
MethodDeclaration [2540,3338]
at 8
===
insert-node
---
Block [3250,3338]
to
MethodDeclaration [2540,3338]
at 9
===
insert-tree
---
Javadoc [3344,4010]
    TagElement [3355,3406]
        TextElement: Find a zero near the value <code>startValue</code>. [3355,3406]
    TagElement [3422,3476]
        SimpleName: min [3429,3432]
        TextElement:  the lower bound for the interval (ignored). [3432,3476]
    TagElement [3484,3538]
        SimpleName: max [3491,3494]
        TextElement:  the upper bound for the interval (ignored). [3494,3538]
    TagElement [3546,3587]
        SimpleName: startValue [3553,3563]
        TextElement:  the start value to use. [3563,3587]
    TagElement [3595,3639]
        TextElement:  the value where the function is zero [3602,3639]
    TagElement [3647,3729]
        SimpleName: MaxIterationsExceededException [3655,3685]
        TextElement:  if the maximum iteration count is exceeded  [3685,3729]
    TagElement [3737,3836]
        SimpleName: FunctionEvaluationException [3745,3772]
        TextElement:  if an error occurs evaluating the [3772,3806]
        TextElement: function or derivative [3814,3836]
    TagElement [3844,4002]
        SimpleName: IllegalArgumentException [3852,3876]
        TextElement:  if startValue is not between min and max or [3876,3920]
        TextElement: if function is not a  [3928,3949]
        TagElement [3949,3993]
            SimpleName: DifferentiableUnivariateRealFunction [3956,3992]
        TextElement:  instance [3993,4002]
to
MethodDeclaration [3344,5172]
at 0
===
insert-node
---
Modifier: public [4015,4021]
to
MethodDeclaration [3344,5172]
at 1
===
insert-node
---
PrimitiveType: double [4022,4028]
to
MethodDeclaration [3344,5172]
at 2
===
insert-node
---
SimpleName: solve [4029,4034]
to
MethodDeclaration [3344,5172]
at 3
===
insert-tree
---
SingleVariableDeclaration [4035,4065]
    Modifier: final [4035,4040]
    SimpleType [4041,4063]
        SimpleName: UnivariateRealFunction [4041,4063]
    SimpleName: f [4064,4065]
to
MethodDeclaration [3344,5172]
at 4
===
insert-tree
---
SingleVariableDeclaration [4091,4107]
    Modifier: final [4091,4096]
    PrimitiveType: double [4097,4103]
    SimpleName: min [4104,4107]
to
MethodDeclaration [3344,5172]
at 5
===
insert-tree
---
SingleVariableDeclaration [4109,4125]
    Modifier: final [4109,4114]
    PrimitiveType: double [4115,4121]
    SimpleName: max [4122,4125]
to
MethodDeclaration [3344,5172]
at 6
===
insert-tree
---
SingleVariableDeclaration [4127,4150]
    Modifier: final [4127,4132]
    PrimitiveType: double [4133,4139]
    SimpleName: startValue [4140,4150]
to
MethodDeclaration [3344,5172]
at 7
===
insert-tree
---
SimpleType [4167,4197]
    SimpleName: MaxIterationsExceededException [4167,4197]
to
MethodDeclaration [3344,5172]
at 8
===
insert-tree
---
SimpleType [4199,4226]
    SimpleName: FunctionEvaluationException [4199,4226]
to
MethodDeclaration [3344,5172]
at 9
===
insert-node
---
Block [4227,5172]
to
MethodDeclaration [3344,5172]
at 10
===
update-node
---
NumberLiteral: 2067325783137941016L [1421,1441]
replace 2067325783137941016L by 7579593514004764309L
===
move-tree
---
TagElement [1577,1619]
    TextElement: Construct a solver for the given function. [1577,1619]
to
Javadoc [1472,1825]
at 0
===
move-tree
---
TagElement [1627,1654]
    SimpleName: f [1634,1635]
    TextElement:  function to solve. [1635,1654]
to
Javadoc [1472,1825]
at 1
===
insert-tree
---
TagElement [1568,1817]
    TextElement:  as of 2.0 the function to solve is passed as an argument [1579,1636]
    TextElement: to the  [1644,1651]
    TagElement [1651,1705]
        MethodRef [1658,1704]
            SimpleName: solve [1659,1664]
            MethodRefParameter [1665,1687]
                SimpleType [1665,1687]
                    SimpleName: UnivariateRealFunction [1665,1687]
            MethodRefParameter [1689,1695]
                PrimitiveType: double [1689,1695]
            MethodRefParameter [1697,1703]
                PrimitiveType: double [1697,1703]
    TextElement:  or [1705,1708]
    TagElement [1716,1802]
        MethodRef [1723,1801]
            SimpleName: UnivariateRealSolverImpl [1723,1747]
            SimpleName: solve [1748,1753]
            MethodRefParameter [1754,1776]
                SimpleType [1754,1776]
                    SimpleName: UnivariateRealFunction [1754,1776]
            MethodRefParameter [1778,1784]
                PrimitiveType: double [1778,1784]
            MethodRefParameter [1786,1792]
                PrimitiveType: double [1786,1792]
            MethodRefParameter [1794,1800]
                PrimitiveType: double [1794,1800]
    TextElement: method. [1810,1817]
to
Javadoc [1472,1825]
at 2
===
insert-node
---
Modifier: final [2113,2118]
to
SingleVariableDeclaration [2348,2358]
at 0
===
insert-node
---
Modifier: final [2131,2136]
to
SingleVariableDeclaration [2360,2370]
at 0
===
insert-tree
---
ReturnStatement [2244,2270]
    MethodInvocation [2251,2269]
        SimpleName: solve [2251,2256]
        METHOD_INVOCATION_ARGUMENTS [2257,2268]
            SimpleName: f [2257,2258]
            SimpleName: min [2260,2263]
            SimpleName: max [2265,2268]
to
Block [2449,2534]
at 0
===
insert-node
---
Modifier: final [2343,2348]
to
SingleVariableDeclaration [3146,3156]
at 0
===
insert-node
---
Modifier: final [2361,2366]
to
SingleVariableDeclaration [3158,3168]
at 0
===
insert-node
---
Modifier: final [2379,2384]
to
SingleVariableDeclaration [3170,3187]
at 0
===
insert-tree
---
ReturnStatement [2490,2528]
    MethodInvocation [2497,2527]
        SimpleName: solve [2497,2502]
        METHOD_INVOCATION_ARGUMENTS [2503,2526]
            SimpleName: f [2503,2504]
            SimpleName: min [2506,2509]
            SimpleName: max [2511,2514]
            SimpleName: startValue [2516,2526]
to
Block [3264,3825]
at 0
===
move-tree
---
ReturnStatement [2459,2528]
    MethodInvocation [2466,2527]
        SimpleName: solve [2466,2471]
        METHOD_INVOCATION_ARGUMENTS [2472,2526]
            SimpleName: min [2472,2475]
            SimpleName: max [2477,2480]
            MethodInvocation [2482,2526]
                METHOD_INVOCATION_RECEIVER [2482,2507]
                    SimpleName: UnivariateRealSolverUtils [2482,2507]
                SimpleName: midpoint [2508,2516]
                METHOD_INVOCATION_ARGUMENTS [2517,2525]
                    SimpleName: min [2517,2520]
                    SimpleName: max [2522,2525]
to
Block [3250,3338]
at 0
===
insert-node
---
TryStatement [4238,5166]
to
Block [4227,5172]
at 0
===
insert-node
---
Block [4242,4942]
to
TryStatement [4238,5166]
at 0
===
insert-tree
---
CatchClause [4943,5166]
    SingleVariableDeclaration [4950,4972]
        SimpleType [4950,4968]
            SimpleName: ClassCastException [4950,4968]
        SimpleName: cce [4969,4972]
    Block [4974,5166]
        ThrowStatement [4988,5156]
            MethodInvocation [4994,5155]
                METHOD_INVOCATION_RECEIVER [4994,5014]
                    SimpleName: MathRuntimeException [4994,5014]
                SimpleName: createIllegalArgumentException [5015,5045]
                METHOD_INVOCATION_ARGUMENTS [5046,5154]
                    StringLiteral: "function is not differentiable" [5046,5078]
                    NullLiteral [5150,5154]
to
TryStatement [4238,5166]
at 1
===
insert-tree
---
VariableDeclarationStatement [4257,4371]
    Modifier: final [4257,4262]
    SimpleType [4263,4285]
        SimpleName: UnivariateRealFunction [4263,4285]
    VariableDeclarationFragment [4286,4370]
        SimpleName: derivative [4286,4296]
        MethodInvocation [4315,4370]
            METHOD_INVOCATION_RECEIVER [4315,4357]
                ParenthesizedExpression [4315,4357]
                    CastExpression [4316,4356]
                        SimpleType [4317,4353]
                            SimpleName: DifferentiableUnivariateRealFunction [4317,4353]
                        SimpleName: f [4355,4356]
            SimpleName: derivative [4358,4368]
to
Block [4242,4942]
at 0
===
move-tree
---
ExpressionStatement [3283,3297]
    MethodInvocation [3283,3296]
        SimpleName: clearResult [3283,3294]
to
Block [4242,4942]
at 1
===
move-tree
---
ExpressionStatement [3306,3343]
    MethodInvocation [3306,3342]
        SimpleName: verifySequence [3306,3320]
        METHOD_INVOCATION_ARGUMENTS [3321,3341]
            SimpleName: min [3321,3324]
            SimpleName: startValue [3326,3336]
            SimpleName: max [3338,3341]
to
Block [4242,4942]
at 2
===
move-tree
---
VariableDeclarationStatement [3353,3376]
    PrimitiveType: double [3353,3359]
    VariableDeclarationFragment [3360,3375]
        SimpleName: x0 [3360,3362]
        SimpleName: startValue [3365,3375]
to
Block [4242,4942]
at 3
===
move-tree
---
VariableDeclarationStatement [3385,3395]
    PrimitiveType: double [3385,3391]
    VariableDeclarationFragment [3392,3394]
        SimpleName: x1 [3392,3394]
to
Block [4242,4942]
at 4
===
move-tree
---
VariableDeclarationStatement [3413,3423]
    PrimitiveType: int [3413,3416]
    VariableDeclarationFragment [3417,3422]
        SimpleName: i [3417,3418]
        NumberLiteral: 0 [3421,3422]
to
Block [4242,4942]
at 5
===
move-tree
---
WhileStatement [3432,3737]
    InfixExpression [3439,3464]
        SimpleName: i [3439,3440]
        INFIX_EXPRESSION_OPERATOR: < [3441,3442]
        SimpleName: maximalIterationCount [3443,3464]
    Block [3466,3737]
        ExpressionStatement [3480,3527]
            Assignment [3480,3526]
                SimpleName: x1 [3480,3482]
                ASSIGNMENT_OPERATOR: = [3483,3484]
                InfixExpression [3485,3526]
                    SimpleName: x0 [3485,3487]
                    INFIX_EXPRESSION_OPERATOR: - [3488,3489]
                    ParenthesizedExpression [3490,3526]
                        InfixExpression [3491,3525]
                            MethodInvocation [3491,3502]
                                METHOD_INVOCATION_RECEIVER [3491,3492]
                                    SimpleName: f [3491,3492]
                                SimpleName: value [3493,3498]
                                METHOD_INVOCATION_ARGUMENTS [3499,3501]
                                    SimpleName: x0 [3499,3501]
                            INFIX_EXPRESSION_OPERATOR: / [3503,3504]
                            MethodInvocation [3505,3525]
                                METHOD_INVOCATION_RECEIVER [3505,3515]
                                    SimpleName: derivative [3505,3515]
                                SimpleName: value [3516,3521]
                                METHOD_INVOCATION_ARGUMENTS [3522,3524]
                                    SimpleName: x0 [3522,3524]
        IfStatement [3540,3676]
            InfixExpression [3544,3581]
                MethodInvocation [3544,3561]
                    METHOD_INVOCATION_RECEIVER [3544,3548]
                        SimpleName: Math [3544,3548]
                    SimpleName: abs [3549,3552]
                    METHOD_INVOCATION_ARGUMENTS [3553,3560]
                        InfixExpression [3553,3560]
                            SimpleName: x1 [3553,3555]
                            INFIX_EXPRESSION_OPERATOR: - [3556,3557]
                            SimpleName: x0 [3558,3560]
                INFIX_EXPRESSION_OPERATOR: <= [3562,3564]
                SimpleName: absoluteAccuracy [3565,3581]
            Block [3583,3676]
                ExpressionStatement [3618,3635]
                    MethodInvocation [3618,3634]
                        SimpleName: setResult [3618,3627]
                        METHOD_INVOCATION_ARGUMENTS [3628,3633]
                            SimpleName: x1 [3628,3630]
                            SimpleName: i [3632,3633]
                ReturnStatement [3652,3662]
                    SimpleName: x1 [3659,3661]
        ExpressionStatement [3702,3710]
            Assignment [3702,3709]
                SimpleName: x0 [3702,3704]
                ASSIGNMENT_OPERATOR: = [3705,3706]
                SimpleName: x1 [3707,3709]
        ExpressionStatement [3723,3727]
            PrefixExpression [3723,3726]
                PREFIX_EXPRESSION_OPERATOR: ++ [3723,3725]
                SimpleName: i [3725,3726]
to
Block [4242,4942]
at 6
===
move-tree
---
ThrowStatement [3755,3819]
    ClassInstanceCreation [3761,3818]
        SimpleType [3765,3795]
            SimpleName: MaxIterationsExceededException [3765,3795]
        SimpleName: maximalIterationCount [3796,3817]
to
Block [4242,4942]
at 7
===
insert-node
---
SimpleName: f [3273,3274]
to
METHOD_INVOCATION_ARGUMENTS [2472,2526]
at 0
===
delete-tree
---
ImportDeclaration [847,874]
    QualifiedName: java.io.IOException [854,873]
===
delete-tree
---
FieldDeclaration [1448,1556]
    Javadoc [1448,1499]
        TagElement [1452,1497]
            TextElement: The first derivative of the target function.  [1452,1497]
    Modifier: private [1504,1511]
    Modifier: transient [1512,1521]
    SimpleType [1522,1544]
        SimpleName: UnivariateRealFunction [1522,1544]
    VariableDeclarationFragment [1545,1555]
        SimpleName: derivative [1545,1555]
===
delete-node
---
Javadoc [1566,1662]
===
===
delete-tree
---
ExpressionStatement [1766,1794]
    Assignment [1766,1793]
        SimpleName: derivative [1766,1776]
        ASSIGNMENT_OPERATOR: = [1777,1778]
        MethodInvocation [1779,1793]
            METHOD_INVOCATION_RECEIVER [1779,1780]
                SimpleName: f [1779,1780]
            SimpleName: derivative [1781,1791]
===
delete-tree
---
Javadoc [1806,2323]
    TagElement [1817,1888]
        TextElement: Find a zero near the midpoint of <code>min</code> and <code>max</code>. [1817,1888]
    TagElement [1904,1947]
        SimpleName: min [1911,1914]
        TextElement:  the lower bound for the interval [1914,1947]
    TagElement [1955,1998]
        SimpleName: max [1962,1965]
        TextElement:  the upper bound for the interval [1965,1998]
    TagElement [2006,2050]
        TextElement:  the value where the function is zero [2013,2050]
    TagElement [2058,2140]
        SimpleName: MaxIterationsExceededException [2066,2096]
        TextElement:  if the maximum iteration count is exceeded  [2096,2140]
    TagElement [2148,2247]
        SimpleName: FunctionEvaluationException [2156,2183]
        TextElement:  if an error occurs evaluating the [2183,2217]
        TextElement: function or derivative [2225,2247]
    TagElement [2255,2315]
        SimpleName: IllegalArgumentException [2263,2287]
        TextElement:  if min is not less than max [2287,2315]
===
delete-tree
---
Javadoc [2540,3121]
    TagElement [2551,2602]
        TextElement: Find a zero near the value <code>startValue</code>. [2551,2602]
    TagElement [2618,2672]
        SimpleName: min [2625,2628]
        TextElement:  the lower bound for the interval (ignored). [2628,2672]
    TagElement [2680,2734]
        SimpleName: max [2687,2690]
        TextElement:  the upper bound for the interval (ignored). [2690,2734]
    TagElement [2742,2783]
        SimpleName: startValue [2749,2759]
        TextElement:  the start value to use. [2759,2783]
    TagElement [2791,2835]
        TextElement:  the value where the function is zero [2798,2835]
    TagElement [2843,2925]
        SimpleName: MaxIterationsExceededException [2851,2881]
        TextElement:  if the maximum iteration count is exceeded  [2881,2925]
    TagElement [2933,3032]
        SimpleName: FunctionEvaluationException [2941,2968]
        TextElement:  if an error occurs evaluating the [2968,3002]
        TextElement: function or derivative [3010,3032]
    TagElement [3040,3113]
        SimpleName: IllegalArgumentException [3048,3072]
        TextElement:  if startValue is not between min and max [3072,3113]
===
delete-tree
---
MethodDeclaration [3835,4311]
    Javadoc [3835,4088]
        TagElement [3846,3909]
            TextElement: Custom deserialization to initialize transient deriviate field. [3846,3909]
        TagElement [3925,3965]
            SimpleName: in [3932,3934]
            TextElement:  serialized object input stream [3934,3965]
        TagElement [3973,4012]
            SimpleName: IOException [3981,3992]
            TextElement:  if IO error occurs  [3992,4012]
        TagElement [4020,4080]
            SimpleName: ClassNotFoundException [4028,4050]
            TextElement:  if instantiation error occurs [4050,4080]
    Modifier: private [4093,4100]
    PrimitiveType: void [4101,4105]
    SimpleName: readObject [4106,4116]
    SingleVariableDeclaration [4117,4145]
        SimpleType [4117,4142]
            QualifiedName: java.io.ObjectInputStream [4117,4142]
        SimpleName: in [4143,4145]
    SimpleType [4158,4169]
        SimpleName: IOException [4158,4169]
    SimpleType [4171,4193]
        SimpleName: ClassNotFoundException [4171,4193]
    Block [4194,4311]
        ExpressionStatement [4204,4227]
            MethodInvocation [4204,4226]
                METHOD_INVOCATION_RECEIVER [4204,4206]
                    SimpleName: in [4204,4206]
                SimpleName: defaultReadObject [4207,4224]
        ExpressionStatement [4236,4305]
            Assignment [4236,4304]
                SimpleName: derivative [4236,4246]
                ASSIGNMENT_OPERATOR: = [4247,4248]
                MethodInvocation [4249,4304]
                    METHOD_INVOCATION_RECEIVER [4249,4291]
                        ParenthesizedExpression [4249,4291]
                            CastExpression [4250,4290]
                                SimpleType [4251,4287]
                                    SimpleName: DifferentiableUnivariateRealFunction [4251,4287]
                                SimpleName: f [4289,4290]
                    SimpleName: derivative [4292,4302]
