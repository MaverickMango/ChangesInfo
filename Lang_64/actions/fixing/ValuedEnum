===
insert-tree
---
ImportDeclaration [664,715]
    QualifiedName: java.lang.reflect.InvocationTargetException [671,714]
to
CompilationUnit [0,6571]
at 1
===
insert-tree
---
ImportDeclaration [716,748]
    QualifiedName: java.lang.reflect.Method [723,747]
to
CompilationUnit [0,6571]
at 2
===
insert-tree
---
MethodDeclaration [6731,7486]
    Javadoc [6731,6890]
        TagElement [6742,6791]
            TextElement: <p>Use reflection to return an objects value.</p> [6742,6791]
        TagElement [6806,6857]
            SimpleName: other [6813,6818]
            TextElement:   the object to determine the value for [6818,6857]
        TagElement [6865,6882]
            TextElement:  the value [6872,6882]
    Modifier: private [6895,6902]
    PrimitiveType: int [6903,6906]
    SimpleName: getValueInOtherClassLoader [6907,6933]
    SingleVariableDeclaration [6934,6946]
        SimpleType [6934,6940]
            SimpleName: Object [6934,6940]
        SimpleName: other [6941,6946]
    Block [6948,7486]
        TryStatement [6958,7413]
            Block [6962,7144]
                VariableDeclarationStatement [6976,7034]
                    SimpleType [6976,6982]
                        SimpleName: Method [6976,6982]
                    VariableDeclarationFragment [6983,7033]
                        SimpleName: mth [6983,6986]
                        MethodInvocation [6989,7033]
                            METHOD_INVOCATION_RECEIVER [6989,7005]
                                MethodInvocation [6989,7005]
                                    METHOD_INVOCATION_RECEIVER [6989,6994]
                                        SimpleName: other [6989,6994]
                                    SimpleName: getClass [6995,7003]
                            SimpleName: getMethod [7006,7015]
                            METHOD_INVOCATION_ARGUMENTS [7016,7032]
                                StringLiteral: "getValue" [7016,7026]
                                NullLiteral [7028,7032]
                VariableDeclarationStatement [7047,7097]
                    SimpleType [7047,7054]
                        SimpleName: Integer [7047,7054]
                    VariableDeclarationFragment [7055,7096]
                        SimpleName: value [7055,7060]
                        CastExpression [7063,7096]
                            SimpleType [7064,7071]
                                SimpleName: Integer [7064,7071]
                            MethodInvocation [7073,7096]
                                METHOD_INVOCATION_RECEIVER [7073,7076]
                                    SimpleName: mth [7073,7076]
                                SimpleName: invoke [7077,7083]
                                METHOD_INVOCATION_ARGUMENTS [7084,7095]
                                    SimpleName: other [7084,7089]
                                    NullLiteral [7091,7095]
                ReturnStatement [7110,7134]
                    MethodInvocation [7117,7133]
                        METHOD_INVOCATION_RECEIVER [7117,7122]
                            SimpleName: value [7117,7122]
                        SimpleName: intValue [7123,7131]
            CatchClause [7145,7232]
                SingleVariableDeclaration [7152,7175]
                    SimpleType [7152,7173]
                        SimpleName: NoSuchMethodException [7152,7173]
                    SimpleName: e [7174,7175]
                Block [7177,7232]
            CatchClause [7233,7321]
                SingleVariableDeclaration [7240,7264]
                    SimpleType [7240,7262]
                        SimpleName: IllegalAccessException [7240,7262]
                    SimpleName: e [7263,7264]
                Block [7266,7321]
            CatchClause [7322,7413]
                SingleVariableDeclaration [7329,7356]
                    SimpleType [7329,7354]
                        SimpleName: InvocationTargetException [7329,7354]
                    SimpleName: e [7355,7356]
                Block [7358,7413]
        ThrowStatement [7422,7480]
            ClassInstanceCreation [7428,7479]
                SimpleType [7432,7453]
                    SimpleName: IllegalStateException [7432,7453]
                StringLiteral: "This should not happen" [7454,7478]
to
TypeDeclaration [759,6570]
at 12
===
insert-tree
---
IfStatement [6248,6300]
    InfixExpression [6252,6265]
        SimpleName: other [6252,6257]
        INFIX_EXPRESSION_OPERATOR: == [6258,6260]
        ThisExpression [6261,6265]
    Block [6267,6300]
        ReturnStatement [6281,6290]
            NumberLiteral: 0 [6288,6289]
to
Block [5957,6017]
at 0
===
insert-tree
---
IfStatement [6309,6666]
    InfixExpression [6313,6348]
        MethodInvocation [6313,6329]
            METHOD_INVOCATION_RECEIVER [6313,6318]
                SimpleName: other [6313,6318]
            SimpleName: getClass [6319,6327]
        INFIX_EXPRESSION_OPERATOR: != [6330,6332]
        MethodInvocation [6333,6348]
            METHOD_INVOCATION_RECEIVER [6333,6337]
                ThisExpression [6333,6337]
            SimpleName: getClass [6338,6346]
    Block [6350,6666]
        IfStatement [6364,6512]
            MethodInvocation [6368,6428]
                METHOD_INVOCATION_RECEIVER [6368,6394]
                    MethodInvocation [6368,6394]
                        METHOD_INVOCATION_RECEIVER [6368,6384]
                            MethodInvocation [6368,6384]
                                METHOD_INVOCATION_RECEIVER [6368,6373]
                                    SimpleName: other [6368,6373]
                                SimpleName: getClass [6374,6382]
                        SimpleName: getName [6385,6392]
                SimpleName: equals [6395,6401]
                METHOD_INVOCATION_ARGUMENTS [6402,6427]
                    MethodInvocation [6402,6427]
                        METHOD_INVOCATION_RECEIVER [6402,6417]
                            MethodInvocation [6402,6417]
                                METHOD_INVOCATION_RECEIVER [6402,6406]
                                    ThisExpression [6402,6406]
                                SimpleName: getClass [6407,6415]
                        SimpleName: getName [6418,6425]
            Block [6430,6512]
                ReturnStatement [6448,6498]
                    InfixExpression [6455,6497]
                        SimpleName: iValue [6455,6461]
                        INFIX_EXPRESSION_OPERATOR: - [6462,6463]
                        MethodInvocation [6464,6497]
                            SimpleName: getValueInOtherClassLoader [6464,6490]
                            METHOD_INVOCATION_ARGUMENTS [6491,6496]
                                SimpleName: other [6491,6496]
        ThrowStatement [6525,6656]
            ClassInstanceCreation [6531,6655]
                SimpleType [6535,6553]
                    SimpleName: ClassCastException [6535,6553]
                InfixExpression [6575,6654]
                    StringLiteral: "Different enum class '" [6575,6599]
                    INFIX_EXPRESSION_OPERATOR: + [6600,6601]
                    MethodInvocation [6602,6648]
                        METHOD_INVOCATION_RECEIVER [6602,6612]
                            SimpleName: ClassUtils [6602,6612]
                        SimpleName: getShortClassName [6613,6630]
                        METHOD_INVOCATION_ARGUMENTS [6631,6647]
                            MethodInvocation [6631,6647]
                                METHOD_INVOCATION_RECEIVER [6631,6636]
                                    SimpleName: other [6631,6636]
                                SimpleName: getClass [6637,6645]
                    StringLiteral: "'" [6651,6654]
to
Block [5957,6017]
at 1
===
insert-node
---
TextElement: <p>NOTE: From v2.2 the enums must be of the same type. [5650,5704]
to
TagElement [5415,5550]
at 3
===
insert-node
---
TextElement: If the parameter is in a different class loader than this instance, [5712,5779]
to
TagElement [5415,5550]
at 4
===
insert-node
---
TextElement: reflection is used to compare the values.</p> [5787,5832]
to
TagElement [5415,5550]
at 5
