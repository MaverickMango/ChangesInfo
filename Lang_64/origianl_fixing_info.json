{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "/home/liumengjiao/Desktop/CI/Benchmark/data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.lang.enums.ValuedEnumTest::testCompareTo_otherEnumType",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.lang.enums.ValuedEnum",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Lang",
  "id": "64",
  "workingDir": "../bugs/Lang_64_buggy",
  "buggyCommit": "df1653a8490feba4a21ad8aade5c960b402c3c7a",
  "inducingCommit": "d17bffa174a507998e343b60a5e8852821f36412",
  "originalCommit": "f6fc11ac6a3aed39f51ac1d4362c20ee39c6f5ef",
  "bug_name": "Lang_64",
  "derive": "defects4j",
  "original_fixing_commit": "8de71ae52958ae70fe651b7327319c9beecd9b84",
  "buildFiles_changed": false,
  "regression": false,
  "inducing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/lang/enum/Enum.java",
        "src/java/org/apache/commons/lang/enum/Enum.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "232"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "227",
            "228",
            "229",
            "230",
            "231",
            "237"
          ],
          "num": 6
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/lang/enum/Enum.java b/src/java/org/apache/commons/lang/enum/Enum.java\nindex 2cc3fd5..d14ca78 100644\n--- a/src/java/org/apache/commons/lang/enum/Enum.java\n+++ b/src/java/org/apache/commons/lang/enum/Enum.java\n@@ -224,12 +224,17 @@\n  * \n  * \u003cp\u003eFor more details, see the \u0027Nested\u0027 test cases.\n  * \n+ * @deprecated Replaced by {@link org.apache.commons.lang.enums.Enum org.apache.commons.lang.enums.Enum} \n+ *          and will be removed in version 3.0. All classes in this package are deprecated and repackaged to \n+ *          \u003ca href\u003d\"../enums/package-summary.html\"\u003eorg.apache.commons.lang.enums\u003c/a\u003e since \u003ccode\u003eenum\u003c/code\u003e \n+ *          is a Java 1.5 keyword. \n+ * @see org.apache.commons.lang.enums.Enum\n  * @author Apache Avalon project\n  * @author Stephen Colebourne\n  * @author Chris Webb\n  * @author Mike Bowler\n  * @since 1.0\n- * @version $Id: Enum.java,v 1.27 2004/02/18 22:53:51 ggregory Exp $\n+ * @version $Id: Enum.java,v 1.28 2004/02/23 04:34:20 ggregory Exp $\n  */\n public abstract class Enum implements Comparable, Serializable {\n \n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "TagElement [7652,8011]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "TagElement [8015,8054]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/lang/enum/EnumUtils.java",
        "src/java/org/apache/commons/lang/enum/EnumUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "30"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "35"
          ],
          "num": 6
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/lang/enum/EnumUtils.java b/src/java/org/apache/commons/lang/enum/EnumUtils.java\nindex ce466db..79660d6 100644\n--- a/src/java/org/apache/commons/lang/enum/EnumUtils.java\n+++ b/src/java/org/apache/commons/lang/enum/EnumUtils.java\n@@ -22,12 +22,17 @@\n /**\n  * \u003cp\u003eUtility class for accessing and manipulating {@link Enum}s.\u003c/p\u003e\n  *\n+ * @deprecated Replaced by {@link org.apache.commons.lang.enums.EnumUtils org.apache.commons.lang.enums.EnumUtils} \n+ *          and will be removed in version 3.0. All classes in this package are deprecated and repackaged to \n+ *          \u003ca href\u003d\"../enums/package-summary.html\"\u003eorg.apache.commons.lang.enums\u003c/a\u003e since \u003ccode\u003eenum\u003c/code\u003e \n+ *          is a Java 1.5 keyword. \n+ * @see org.apache.commons.lang.enums.EnumUtils\n  * @see Enum\n  * @see ValuedEnum\n  * @author Stephen Colebourne\n  * @author Gary Gregory\n  * @since 1.0\n- * @version $Id: EnumUtils.java,v 1.11 2004/02/18 22:53:51 ggregory Exp $\n+ * @version $Id: EnumUtils.java,v 1.12 2004/02/23 04:34:20 ggregory Exp $\n  */\n public class EnumUtils {\n \n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "TagElement [816,1185]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "TagElement [1189,1233]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
        "src/java/org/apache/commons/lang/enum/ValuedEnum.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "98"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "95",
            "96",
            "97",
            "98",
            "99",
            "103"
          ],
          "num": 6
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/lang/enum/ValuedEnum.java b/src/java/org/apache/commons/lang/enum/ValuedEnum.java\nindex 8456552..5ca6929 100644\n--- a/src/java/org/apache/commons/lang/enum/ValuedEnum.java\n+++ b/src/java/org/apache/commons/lang/enum/ValuedEnum.java\n@@ -92,10 +92,15 @@\n  * Unfortunately, Java restrictions require these to be coded as shown in each subclass.\n  * An alternative choice is to use the {@link EnumUtils} class.\u003c/p\u003e\n  *\n+ * @deprecated Replaced by {@link org.apache.commons.lang.enums.ValuedEnum org.apache.commons.lang.enums.ValuedEnum}\n+ *          and will be removed in version 3.0. All classes in this package are deprecated and repackaged to \n+ *          \u003ca href\u003d\"../enums/package-summary.html\"\u003eorg.apache.commons.lang.enums\u003c/a\u003e since \u003ccode\u003eenum\u003c/code\u003e \n+ *          is a Java 1.5 keyword. \n+ * @see org.apache.commons.lang.enums.ValuedEnum\n  * @author Apache Avalon project\n  * @author Stephen Colebourne\n  * @since 1.0\n- * @version $Id: ValuedEnum.java,v 1.15 2004/02/18 22:53:51 ggregory Exp $\n+ * @version $Id: ValuedEnum.java,v 1.16 2004/02/23 04:34:20 ggregory Exp $\n  */\n public abstract class ValuedEnum extends Enum {\n     \n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "TagElement [3365,3735]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "TagElement [3739,3784]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [
        "src/java/org/apache/commons/lang/enums/Enum.java",
        "src/java/org/apache/commons/lang/enums/EnumUtils.java",
        "src/java/org/apache/commons/lang/enums/ValuedEnum.java"
      ],
      "num": 3
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.lang.enums.ValuedEnumTest",
      "test_function": "testCompareTo_otherEnumType",
      "assertion_line": "108",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/lang/enums/ValuedEnum.java",
        "src/java/org/apache/commons/lang/enums/ValuedEnum.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.lang.enums.ValuedEnum:compareTo:[Object other]:int"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.lang.enums.ValuedEnum:compareTo:[Object other]:int",
            "org.apache.commons.lang.enums.ValuedEnum:getValueInOtherClassLoader:[Object other]:int",
            "org.apache.commons.lang.enums.ValuedEnum:toString:[]:String"
          ],
          "num": 3
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "2",
            "17",
            "168",
            "176"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "2",
            "18",
            "19",
            "170",
            "171",
            "172",
            "173",
            "174",
            "183",
            "184",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217"
          ],
          "num": 39
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/lang/enums/ValuedEnum.java b/src/java/org/apache/commons/lang/enums/ValuedEnum.java\nindex bbd018c..419a0ea 100644\n--- a/src/java/org/apache/commons/lang/enums/ValuedEnum.java\n+++ b/src/java/org/apache/commons/lang/enums/ValuedEnum.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2002-2005 The Apache Software Foundation.\n+ * Copyright 2002-2006 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -15,6 +15,8 @@\n  */\n package org.apache.commons.lang.enums;\n \n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n import java.util.Iterator;\n import java.util.List;\n \n@@ -165,7 +167,11 @@\n      *\n      * \u003cp\u003eThe default ordering is numeric by value, but this\n      * can be overridden by subclasses.\u003c/p\u003e\n-     * \n+     *\n+     * \u003cp\u003eNOTE: From v2.2 the enums must be of the same type.\n+     * If the parameter is in a different class loader than this instance,\n+     * reflection is used to compare the values.\u003c/p\u003e\n+     *\n      * @see java.lang.Comparable#compareTo(Object)\n      * @param other  the other object to compare to\n      * @return -ve if this is less than the other object, +ve if greater than,\n@@ -174,10 +180,41 @@\n      * @throws NullPointerException if other is \u003ccode\u003enull\u003c/code\u003e\n      */\n     public int compareTo(Object other) {\n+        if (other \u003d\u003d this) {\n+            return 0;\n+        }\n+        if (other.getClass() !\u003d this.getClass()) {\n+            if (other.getClass().getName().equals(this.getClass().getName())) {\n+                return iValue - getValueInOtherClassLoader(other);\n+            }\n+            throw new ClassCastException(\n+                    \"Different enum class \u0027\" + ClassUtils.getShortClassName(other.getClass()) + \"\u0027\");\n+        }\n         return iValue - ((ValuedEnum) other).iValue;\n     }\n \n     /**\n+     * \u003cp\u003eUse reflection to return an objects value.\u003c/p\u003e\n+     *\n+     * @param other  the object to determine the value for\n+     * @return the value\n+     */\n+    private int getValueInOtherClassLoader(Object other) {\n+        try {\n+            Method mth \u003d other.getClass().getMethod(\"getValue\", null);\n+            Integer value \u003d (Integer) mth.invoke(other, null);\n+            return value.intValue();\n+        } catch (NoSuchMethodException e) {\n+            // ignore - should never happen\n+        } catch (IllegalAccessException e) {\n+            // ignore - should never happen\n+        } catch (InvocationTargetException e) {\n+            // ignore - should never happen\n+        }\n+        throw new IllegalStateException(\"This should not happen\");\n+    }\n+\n+    /**\n      * \u003cp\u003eHuman readable description of this \u003ccode\u003eEnum\u003c/code\u003e item.\u003c/p\u003e\n      *\n      * @return String in the form \u003ccode\u003etype[name\u003dvalue]\u003c/code\u003e, for example:\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ImportDeclaration [664,715]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ImportDeclaration [716,748]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodDeclaration [6731,7486]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "IfStatement [6248,6300]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "IfStatement [6309,6666]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "TextElement: \u003cp\u003eNOTE: From v2.2 the enums must be of the same type. [5650,5704]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "TextElement: If the parameter is in a different class loader than this instance, [5712,5779]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "TextElement: reflection is used to compare the values.\u003c/p\u003e [5787,5832]"
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "org.apache.commons.lang.enums.ValuedEnum:getValueInOtherClassLoader:[Object other]:int",
        "org.apache.commons.lang.enums.ValuedEnum:toString:[]:String"
      ],
      "num": 2
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "patch_changed_mths": {
    "qualified_names": [],
    "num": 0
  }
}