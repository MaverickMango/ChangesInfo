cd /home/liumengjiao/Desktop/CI/Benchmark/../bugs/Lang_64_fix && timeout 300000 gen_tests.pl -g evosuite -p Lang -v 64f -n 3 -o /home/liumengjiao/Desktop/CI/Evosuite/Lang_64/ -b 300 >> evosuite-report-clz/test_gen_fix.log 2>&1

--------------------------------------------------------------------------------
                     Defects4j Execution Environment 
--------------------------------------------------------------------------------
PWD.........................../home/liumengjiao/Desktop/CI/bugs/Lang_64_fix
SHELL........................./bin/bash
TZ............................America/Los_Angeles
JAVA_HOME...................../usr/local/lib/jdk1.8.0_351
Java Exec...................../usr/local/lib/jdk1.8.0_351/bin/java
Java Exec Resolved............/usr/local/lib/jdk1.8.0_351/bin/java
Java Version:
  java version "1.8.0_351"
  Java(TM) SE Runtime Environment (build 1.8.0_351-b10)
  Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)
Git version...................git version 2.34.1
SVN version...................1.14.1
Perl version..................v5.34.0
--------------------------------------------------------------------------------
Checking out 8de71ae5 to /tmp/gen_tests.pl_560586_1695216603............... OK
Executed command: git clone /home/liumengjiao/Desktop/defects4j/project_repos/commons-lang.git /tmp/gen_tests.pl_560586_1695216603 2>&1 && cd /tmp/gen_tests.pl_560586_1695216603 && git checkout 8de71ae52958ae70fe651b7327319c9beecd9b84 2>&1
Cloning into '/tmp/gen_tests.pl_560586_1695216603'...
done.
Note: switching to '8de71ae52958ae70fe651b7327319c9beecd9b84'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 8de71ae5 LANG-259 - Fix compareTo to check the type is the same
Init local repository...................................................... OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603 && git init 2>&1 && git config user.name defects4j 2>&1 && git config user.email defects4j@localhost 2>&1 && git config core.autocrlf false 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_560586_1695216603/.git/
Tag post-fix revision...................................................... OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603 && git init 2>&1 && echo ".svn" > .gitignore && git add -A 2>&1 && git commit -a -m D4J_Lang_64_POST_FIX_REVISION 2>&1 && git tag D4J_Lang_64_POST_FIX_REVISION 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_560586_1695216603/.git/
[detached HEAD e05e5d37] D4J_Lang_64_POST_FIX_REVISION
 2 files changed, 4 insertions(+)
 create mode 100644 .defects4j.config
 create mode 100644 .gitignore
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Lang/failing_tests/8de71ae52958ae70fe651b7327319c9beecd9b84 /tmp/gen_tests.pl_560586_1695216603/src/test
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Lang/dependent_tests /tmp/gen_tests.pl_560586_1695216603/src/test
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Lang/random_tests /tmp/gen_tests.pl_560586_1695216603/src/test
Initialize fixed program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603 && git add -A 2>&1 && git commit -a -m "D4J_Lang_64_FIXED_VERSION" 2>&1 && git tag D4J_Lang_64_FIXED_VERSION 2>&1
[detached HEAD 400c296b] D4J_Lang_64_FIXED_VERSION
 20 files changed, 5430 insertions(+), 267 deletions(-)
 create mode 100644 defects4j.build.properties
 create mode 100644 src/test/org/apache/commons/lang/CharUtilsPerfTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/EntitiesPerformanceTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/LocaleUtilsTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/RandomStringUtilsTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/enum/EnumTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/enums/EnumTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/time/DateUtilsTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java.bak
 create mode 100644 src/test/org/apache/commons/lang/time/FastDateFormatTest.java.bak
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603; git apply -p1 /home/liumengjiao/Desktop/defects4j/framework/projects/Lang/patches/64.src.patch 2>&1
Initialize buggy program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603 && git add -A 2>&1 && git commit -a -m "D4J_Lang_64_BUGGY_VERSION" 2>&1 && git tag D4J_Lang_64_BUGGY_VERSION 2>&1
[detached HEAD 807438ca] D4J_Lang_64_BUGGY_VERSION
 2 files changed, 1 insertion(+), 22 deletions(-)
Diff 8de71ae5:df1653a8..................................................... OK
Executed command: git --git-dir=/home/liumengjiao/Desktop/defects4j/project_repos/commons-lang.git diff --no-ext-diff --binary 8de71ae52958ae70fe651b7327319c9beecd9b84 df1653a8490feba4a21ad8aade5c960b402c3c7a 
diff --git a/src/java/org/apache/commons/lang/enums/ValuedEnum.java b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
index 419a0eaa..bbd018c4 100644
--- a/src/java/org/apache/commons/lang/enums/ValuedEnum.java
+++ b/src/java/org/apache/commons/lang/enums/ValuedEnum.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2002-2006 The Apache Software Foundation.
+ * Copyright 2002-2005 The Apache Software Foundation.
  * 
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -15,8 +15,6 @@
  */
 package org.apache.commons.lang.enums;
 
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
 import java.util.Iterator;
 import java.util.List;
 
@@ -167,11 +165,7 @@ public abstract class ValuedEnum extends Enum {
      *
      * <p>The default ordering is numeric by value, but this
      * can be overridden by subclasses.</p>
-     *
-     * <p>NOTE: From v2.2 the enums must be of the same type.
-     * If the parameter is in a different class loader than this instance,
-     * reflection is used to compare the values.</p>
-     *
+     * 
      * @see java.lang.Comparable#compareTo(Object)
      * @param other  the other object to compare to
      * @return -ve if this is less than the other object, +ve if greater than,
@@ -180,40 +174,9 @@ public abstract class ValuedEnum extends Enum {
      * @throws NullPointerException if other is <code>null</code>
      */
     public int compareTo(Object other) {
-        if (other == this) {
-            return 0;
-        }
-        if (other.getClass() != this.getClass()) {
-            if (other.getClass().getName().equals(this.getClass().getName())) {
-                return iValue - getValueInOtherClassLoader(other);
-            }
-            throw new ClassCastException(
-                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
-        }
         return iValue - ((ValuedEnum) other).iValue;
     }
 
-    /**
-     * <p>Use reflection to return an objects value.</p>
-     *
-     * @param other  the object to determine the value for
-     * @return the value
-     */
-    private int getValueInOtherClassLoader(Object other) {
-        try {
-            Method mth = other.getClass().getMethod("getValue", null);
-            Integer value = (Integer) mth.invoke(other, null);
-            return value.intValue();
-        } catch (NoSuchMethodException e) {
-            // ignore - should never happen
-        } catch (IllegalAccessException e) {
-            // ignore - should never happen
-        } catch (InvocationTargetException e) {
-            // ignore - should never happen
-        }
-        throw new IllegalStateException("This should not happen");
-    }
-
     /**
      * <p>Human readable description of this <code>Enum</code> item.</p>
      *
diff --git a/src/test/org/apache/commons/lang/enums/EnumEqualsTest.java b/src/test/org/apache/commons/lang/enums/EnumEqualsTest.java
index ceacf102..9cd2f5d1 100644
--- a/src/test/org/apache/commons/lang/enums/EnumEqualsTest.java
+++ b/src/test/org/apache/commons/lang/enums/EnumEqualsTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2004-2006 The Apache Software Foundation.
+ * Copyright 2004-2005 The Apache Software Foundation.
  * 
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -15,8 +15,6 @@
  */
 package org.apache.commons.lang.enums;
 
-import java.net.URLClassLoader;
-
 import junit.framework.Test;
 import junit.framework.TestCase;
 import junit.framework.TestSuite;
@@ -90,34 +88,6 @@ public final class EnumEqualsTest extends TestCase {
         assertEquals(false, CarColorEnum.RED.equals(new TotallyUnrelatedClass("some")));
     }
 
-    public void testEquals_classloader_equal() throws Exception {
-        ClassLoader cl = ColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("BLUE").get(null);
-            assertEquals(true, blue1.equals(blue2));
-        }
-    }
-
-    public void testEquals_classloader_different() throws Exception {
-        ClassLoader cl = ColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("RED").get(null);
-            assertEquals(false, blue1.equals(blue2));
-        }
-    }
-
     //-----------------------------------------------------------------------
     public void testCompareTo() {
         try {
diff --git a/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java b/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java
index 8ceea27c..579bb585 100644
--- a/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java
+++ b/src/test/org/apache/commons/lang/enums/ValuedEnumTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2002-2006 The Apache Software Foundation.
+ * Copyright 2002-2005 The Apache Software Foundation.
  * 
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -15,7 +15,6 @@
  */
 package org.apache.commons.lang.enums;
 
-import java.net.URLClassLoader;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -65,103 +64,11 @@ public final class ValuedEnumTest extends TestCase {
         assertTrue(ValuedColorEnum.BLUE.compareTo(ValuedColorEnum.RED) > 0);
     }
 
-    public void testCompareTo_classloader_equal() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("BLUE").get(null);
-            assertTrue(((Comparable) blue1).compareTo(blue2) == 0);
-        }
-    }
-
-    public void testCompareTo_classloader_different() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("RED").get(null);
-            assertTrue(((Comparable) blue1).compareTo(blue2) != 0);
-        }
-    }
-
-    public void testCompareTo_nonEnumType() {
-        try {
-            ValuedColorEnum.BLUE.compareTo(new TotallyUnrelatedClass(ValuedColorEnum.BLUE.getValue()));
-            fail();
-        } catch (ClassCastException ex) {
-            // expected
-        }
-    }
-
-    public void testCompareTo_otherEnumType() {
-        try {
-            ValuedColorEnum.BLUE.compareTo(ValuedLanguageEnum.ENGLISH);
-            fail();
-        } catch (ClassCastException ex) {
-            // expected
-        }
-    }
-
-    public void testCompareTo_otherType() {
-        try {
-            ValuedColorEnum.BLUE.compareTo("Blue");
-            fail();
-        } catch (ClassCastException ex) {
-            // expected
-        }
-    }
-
-    public void testCompareTo_null() {
-        try {
-            ValuedColorEnum.BLUE.compareTo(null);
-            fail();
-        } catch (NullPointerException ex) {
-            // expected
-        }
-    }
-
     public void testEquals() {
         assertSame(ValuedColorEnum.RED, ValuedColorEnum.RED);
         assertSame(ValuedColorEnum.getEnum("Red"), ValuedColorEnum.RED);
     }
 
-    public void testEquals_classloader_equal() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("BLUE").get(null);
-            assertEquals(true, blue1.equals(blue2));
-        }
-    }
-
-    public void testEquals_classloader_different() throws Exception {
-        ClassLoader cl = ValuedColorEnum.class.getClassLoader();
-        if (cl instanceof URLClassLoader) {
-            URLClassLoader urlCL = (URLClassLoader) cl;
-            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);
-            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);
-            Class otherEnumClass1 = urlCL1.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Class otherEnumClass2 = urlCL2.loadClass("org.apache.commons.lang.enums.ValuedColorEnum");
-            Object blue1 = otherEnumClass1.getDeclaredField("BLUE").get(null);
-            Object blue2 = otherEnumClass2.getDeclaredField("RED").get(null);
-            assertEquals(false, blue1.equals(blue2));
-        }
-    }
-
     public void testToString() {
         String toString = ValuedColorEnum.RED.toString();
         assertEquals("ValuedColorEnum[Red=1]", toString);
@@ -225,17 +132,4 @@ public final class ValuedEnumTest extends TestCase {
         assertSame(ValuedColorEnum.BLUE, SerializationUtils.clone(ValuedColorEnum.BLUE));
     }
 
-    //-----------------------------------------------------------------------s
-    static class TotallyUnrelatedClass {
-        private final int value;
-
-        public TotallyUnrelatedClass(final int value) {
-            this.value = value;
-        }
-
-        public int getValue() {
-            return value;
-        }
-    }
-
 }
diff --git a/src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java b/src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java
deleted file mode 100644
index edfb37fa..00000000
--- a/src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright 2006 The Apache Software Foundation.
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.commons.lang.enums;
-
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Language enumeration.
- *
- * @author <a href="mailto:scolebourne@joda.org">Stephen Colebourne</a>
- * @version $Id: ValuedColorEnum.java 161244 2005-04-14 06:16:36Z ggregory $
- */
-public final class ValuedLanguageEnum extends ValuedEnum {
-    public static final ValuedLanguageEnum ENGLISH = new ValuedLanguageEnum("English", 1);
-    public static final ValuedLanguageEnum FRENCH = new ValuedLanguageEnum("French", 2);
-    public static final ValuedLanguageEnum GERMAN = new ValuedLanguageEnum("German", 3);
-
-    private ValuedLanguageEnum(String color, int value) {
-        super(color, value);
-    }
-
-    public static ValuedLanguageEnum getEnum(String color) {
-        return (ValuedLanguageEnum) getEnum(ValuedLanguageEnum.class, color);
-    }
-
-    public static ValuedLanguageEnum getEnum(int value) {
-        return (ValuedLanguageEnum) getEnum(ValuedLanguageEnum.class, value);
-    }
-
-    public static Map getEnumMap() {
-        return getEnumMap(ValuedLanguageEnum.class);
-    }
-
-    public static List getEnumList() {
-        return getEnumList(ValuedLanguageEnum.class);
-    }
-
-    public static Iterator iterator() {
-        return iterator(ValuedLanguageEnum.class);
-    }
-}
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603; git apply -p1 /tmp/gen_tests.pl_560586_1695216603/.defects4j.diff 2>&1
/tmp/gen_tests.pl_560586_1695216603/.defects4j.diff:30: trailing whitespace.
     * 
warning: 1 line adds whitespace errors.
Tag pre-fix revision....................................................... OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603 && git add -A 2>&1 && git commit -a -m "D4J_Lang_64_PRE_FIX_REVISION" 2>&1 && git tag D4J_Lang_64_PRE_FIX_REVISION 2>&1
[detached HEAD b54aafce] D4J_Lang_64_PRE_FIX_REVISION
 4 files changed, 4 insertions(+), 233 deletions(-)
 delete mode 100644 src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java
Check out program version: Lang-64f........................................ OK
Executed command: cd /tmp/gen_tests.pl_560586_1695216603 && git checkout D4J_Lang_64_FIXED_VERSION 2>&1
Previous HEAD position was b54aafce D4J_Lang_64_PRE_FIX_REVISION
HEAD is now at 400c296b D4J_Lang_64_FIXED_VERSION
Running ant (compile)...................................................... OK
Executed command:  cd /tmp/gen_tests.pl_560586_1695216603 && /home/liumengjiao/Desktop/defects4j/major/bin/ant -f /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/home/liumengjiao/Desktop/defects4j -Dd4j.dir.projects=/home/liumengjiao/Desktop/defects4j/framework/projects -Dbasedir=/tmp/gen_tests.pl_560586_1695216603 -Dbuild.compiler=javac1.7  compile 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml

init:
     [echo] -------- commons-lang 2.2-dev --------

prepare:
    [mkdir] Created dir: /tmp/gen_tests.pl_560586_1695216603/target
    [mkdir] Created dir: /tmp/gen_tests.pl_560586_1695216603/target/classes
    [mkdir] Created dir: /tmp/gen_tests.pl_560586_1695216603/target/conf
    [mkdir] Created dir: /tmp/gen_tests.pl_560586_1695216603/target/tests

static:
     [copy] Copying 1 file to /tmp/gen_tests.pl_560586_1695216603/target/conf

compile:
    [javac] /tmp/gen_tests.pl_560586_1695216603/build.xml:58: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 77 source files to /tmp/gen_tests.pl_560586_1695216603/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.3
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:62: warning: unmappable character for encoding UTF8
    [javac]         {"copy", "169"}, // � - copyright sign
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:67: warning: unmappable character for encoding UTF8
    [javac]         {"reg", "174"}, // � - registered trademark sign
    [javac]                            ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:85: warning: unmappable character for encoding UTF8
    [javac]         {"Agrave", "192"}, // � - uppercase A, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:86: warning: unmappable character for encoding UTF8
    [javac]         {"Aacute", "193"}, // � - uppercase A, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:87: warning: unmappable character for encoding UTF8
    [javac]         {"Acirc", "194"}, // � - uppercase A, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:88: warning: unmappable character for encoding UTF8
    [javac]         {"Atilde", "195"}, // � - uppercase A, tilde
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:89: warning: unmappable character for encoding UTF8
    [javac]         {"Auml", "196"}, // � - uppercase A, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:90: warning: unmappable character for encoding UTF8
    [javac]         {"Aring", "197"}, // � - uppercase A, ring
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:91: warning: unmappable character for encoding UTF8
    [javac]         {"AElig", "198"}, // � - uppercase AE
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:92: warning: unmappable character for encoding UTF8
    [javac]         {"Ccedil", "199"}, // � - uppercase C, cedilla
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:93: warning: unmappable character for encoding UTF8
    [javac]         {"Egrave", "200"}, // � - uppercase E, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:94: warning: unmappable character for encoding UTF8
    [javac]         {"Eacute", "201"}, // � - uppercase E, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:95: warning: unmappable character for encoding UTF8
    [javac]         {"Ecirc", "202"}, // � - uppercase E, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:96: warning: unmappable character for encoding UTF8
    [javac]         {"Euml", "203"}, // � - uppercase E, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:97: warning: unmappable character for encoding UTF8
    [javac]         {"Igrave", "204"}, // � - uppercase I, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:98: warning: unmappable character for encoding UTF8
    [javac]         {"Iacute", "205"}, // � - uppercase I, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:99: warning: unmappable character for encoding UTF8
    [javac]         {"Icirc", "206"}, // � - uppercase I, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:100: warning: unmappable character for encoding UTF8
    [javac]         {"Iuml", "207"}, // � - uppercase I, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:101: warning: unmappable character for encoding UTF8
    [javac]         {"ETH", "208"}, // � - uppercase Eth, Icelandic
    [javac]                            ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:102: warning: unmappable character for encoding UTF8
    [javac]         {"Ntilde", "209"}, // � - uppercase N, tilde
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:103: warning: unmappable character for encoding UTF8
    [javac]         {"Ograve", "210"}, // � - uppercase O, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:104: warning: unmappable character for encoding UTF8
    [javac]         {"Oacute", "211"}, // � - uppercase O, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:105: warning: unmappable character for encoding UTF8
    [javac]         {"Ocirc", "212"}, // � - uppercase O, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:106: warning: unmappable character for encoding UTF8
    [javac]         {"Otilde", "213"}, // � - uppercase O, tilde
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:107: warning: unmappable character for encoding UTF8
    [javac]         {"Ouml", "214"}, // � - uppercase O, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:109: warning: unmappable character for encoding UTF8
    [javac]         {"Oslash", "216"}, // � - uppercase O, slash
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:110: warning: unmappable character for encoding UTF8
    [javac]         {"Ugrave", "217"}, // � - uppercase U, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:111: warning: unmappable character for encoding UTF8
    [javac]         {"Uacute", "218"}, // � - uppercase U, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:112: warning: unmappable character for encoding UTF8
    [javac]         {"Ucirc", "219"}, // � - uppercase U, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:113: warning: unmappable character for encoding UTF8
    [javac]         {"Uuml", "220"}, // � - uppercase U, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:114: warning: unmappable character for encoding UTF8
    [javac]         {"Yacute", "221"}, // � - uppercase Y, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:115: warning: unmappable character for encoding UTF8
    [javac]         {"THORN", "222"}, // � - uppercase THORN, Icelandic
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:116: warning: unmappable character for encoding UTF8
    [javac]         {"szlig", "223"}, // � - lowercase sharps, German
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:117: warning: unmappable character for encoding UTF8
    [javac]         {"agrave", "224"}, // � - lowercase a, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:118: warning: unmappable character for encoding UTF8
    [javac]         {"aacute", "225"}, // � - lowercase a, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:119: warning: unmappable character for encoding UTF8
    [javac]         {"acirc", "226"}, // � - lowercase a, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:120: warning: unmappable character for encoding UTF8
    [javac]         {"atilde", "227"}, // � - lowercase a, tilde
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:121: warning: unmappable character for encoding UTF8
    [javac]         {"auml", "228"}, // � - lowercase a, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:122: warning: unmappable character for encoding UTF8
    [javac]         {"aring", "229"}, // � - lowercase a, ring
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:123: warning: unmappable character for encoding UTF8
    [javac]         {"aelig", "230"}, // � - lowercase ae
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:124: warning: unmappable character for encoding UTF8
    [javac]         {"ccedil", "231"}, // � - lowercase c, cedilla
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:125: warning: unmappable character for encoding UTF8
    [javac]         {"egrave", "232"}, // � - lowercase e, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:126: warning: unmappable character for encoding UTF8
    [javac]         {"eacute", "233"}, // � - lowercase e, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:127: warning: unmappable character for encoding UTF8
    [javac]         {"ecirc", "234"}, // � - lowercase e, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:128: warning: unmappable character for encoding UTF8
    [javac]         {"euml", "235"}, // � - lowercase e, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:129: warning: unmappable character for encoding UTF8
    [javac]         {"igrave", "236"}, // � - lowercase i, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:130: warning: unmappable character for encoding UTF8
    [javac]         {"iacute", "237"}, // � - lowercase i, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:131: warning: unmappable character for encoding UTF8
    [javac]         {"icirc", "238"}, // � - lowercase i, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:132: warning: unmappable character for encoding UTF8
    [javac]         {"iuml", "239"}, // � - lowercase i, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:133: warning: unmappable character for encoding UTF8
    [javac]         {"eth", "240"}, // � - lowercase eth, Icelandic
    [javac]                            ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:134: warning: unmappable character for encoding UTF8
    [javac]         {"ntilde", "241"}, // � - lowercase n, tilde
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:135: warning: unmappable character for encoding UTF8
    [javac]         {"ograve", "242"}, // � - lowercase o, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:136: warning: unmappable character for encoding UTF8
    [javac]         {"oacute", "243"}, // � - lowercase o, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:137: warning: unmappable character for encoding UTF8
    [javac]         {"ocirc", "244"}, // � - lowercase o, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:138: warning: unmappable character for encoding UTF8
    [javac]         {"otilde", "245"}, // � - lowercase o, tilde
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:139: warning: unmappable character for encoding UTF8
    [javac]         {"ouml", "246"}, // � - lowercase o, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:141: warning: unmappable character for encoding UTF8
    [javac]         {"oslash", "248"}, // � - lowercase o, slash
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:142: warning: unmappable character for encoding UTF8
    [javac]         {"ugrave", "249"}, // � - lowercase u, grave accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:143: warning: unmappable character for encoding UTF8
    [javac]         {"uacute", "250"}, // � - lowercase u, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:144: warning: unmappable character for encoding UTF8
    [javac]         {"ucirc", "251"}, // � - lowercase u, circumflex accent
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:145: warning: unmappable character for encoding UTF8
    [javac]         {"uuml", "252"}, // � - lowercase u, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:146: warning: unmappable character for encoding UTF8
    [javac]         {"yacute", "253"}, // � - lowercase y, acute accent
    [javac]                               ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:147: warning: unmappable character for encoding UTF8
    [javac]         {"thorn", "254"}, // � - lowercase thorn, Icelandic
    [javac]                              ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/Entities.java:148: warning: unmappable character for encoding UTF8
    [javac]         {"yuml", "255"}, // � - lowercase y, umlaut
    [javac]                             ^
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/enum/Enum.java:16: warning: as of release 5, 'enum' is a keyword, and may not be used as an identifier
    [javac] package org.apache.commons.lang.enum;
    [javac]                                 ^
    [javac]   (use -source 5 or higher to use 'enum' as a keyword)
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/enum/EnumUtils.java:16: warning: as of release 5, 'enum' is a keyword, and may not be used as an identifier
    [javac] package org.apache.commons.lang.enum;
    [javac]                                 ^
    [javac]   (use -source 5 or higher to use 'enum' as a keyword)
    [javac] /tmp/gen_tests.pl_560586_1695216603/src/java/org/apache/commons/lang/enum/ValuedEnum.java:16: warning: as of release 5, 'enum' is a keyword, and may not be used as an identifier
    [javac] package org.apache.commons.lang.enum;
    [javac]                                 ^
    [javac]   (use -source 5 or higher to use 'enum' as a keyword)
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Short.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Byte.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Float.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/UnsupportedEncodingException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassLoader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/SecurityException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NoSuchMethodException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
     [copy] Copying 10 files to /tmp/gen_tests.pl_560586_1695216603/target/classes

BUILD SUCCESSFUL
Total time: 2 seconds
Creating temporary output directory........................................ OK
Executed command: mkdir -p /tmp/gen_tests.pl_560586_1695216603/evosuite
Generating (regression) tests with: evosuite............................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/bin/evosuite.sh

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class org.apache.commons.lang.enums.ValuedEnum     -projectCP /tmp/gen_tests.pl_560586_1695216603/target/classes     -seed 3064     -Dsearch_budget=150     -Dassertion_timeout=150     -Dtest_dir=/tmp/gen_tests.pl_560586_1695216603/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: org.apache.commons.lang.enums.ValuedEnum
* Starting Client-0
* Connecting to master process on port 15941
* Analyzing classpath: 
  - /tmp/gen_tests.pl_560586_1695216603/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.lang.enums.ValuedEnum
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 17
* Using seed 3064
* Starting evolution
* Initial Number of Goals in DynaMOSA = 9 / 17
* Search finished after 151s and 7299 generations, 620967 statements, best individual has fitness: 15.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 12%
* Total number of goals: 17
* Number of covered goals: 2
* Generated 2 tests with total length 3
* Resulting test suite's coverage: 12%
* Generating assertions
* Resulting test suite's mutation score: 0%
* Writing tests to file
* Writing JUnit test case 'ValuedEnum_ESTest' to /tmp/gen_tests.pl_560586_1695216603/evosuite
* Done!

* Computation finished
OK
Creating test suite archive................................................ OK
Executed command: tar -cjf /tmp/gen_tests.pl_560586_1695216603/Lang-64f-evosuite.3.tar.bz2 -C /tmp/gen_tests.pl_560586_1695216603/evosuite/ .
Creating output directory.................................................. OK
Executed command: mkdir -p /home/liumengjiao/Desktop/CI/Evosuite/Lang_64//Lang/evosuite/3
Moving test suite archive to /home/liumengjiao/Desktop/CI/Evosuite/Lang_64/ OK
Executed command: mv /tmp/gen_tests.pl_560586_1695216603/Lang-64f-evosuite.3.tar.bz2 /home/liumengjiao/Desktop/CI/Evosuite/Lang_64//Lang/evosuite/3
