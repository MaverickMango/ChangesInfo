Only in data/changesInfo//Math_88/properties/modified_classes/inducing/src: java
diff -u -r data/changesInfo//Math_88/properties/modified_classes/inducing/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java data/changesInfo//Math_88/cleaned/inducing/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
--- data/changesInfo//Math_88/properties/modified_classes/inducing/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java	2023-12-27 22:48:16.909969275 -0800
+++ data/changesInfo//Math_88/cleaned/inducing/src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java	2023-06-24 01:24:23.167000000 -0700
@@ -30,6 +30,22 @@
 
 public class SimplexSolverTest extends TestCase {
 
+    public void testMath272() throws OptimizationException {
+        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
+        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
+        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
+        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
+        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));
+
+        SimplexSolver solver = new SimplexSolver();
+        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
+
+        assertEquals(0.0, solution.getPoint()[0], .0000001);
+        assertEquals(1.0, solution.getPoint()[1], .0000001);
+        assertEquals(1.0, solution.getPoint()[2], .0000001);
+        assertEquals(3.0, solution.getValue(), .0000001);
+    }
+
     public void testSimplexSolver() throws OptimizationException {
 
         LinearObjectiveFunction f =
@@ -143,7 +159,7 @@
         assertEquals(1438556.7491409, solution.getValue(), .0000001);
     }
 
-    public void testTrivialModel() throws OptimizationException {
+    public void testSomething() throws OptimizationException {
         LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 1 }, 0);
         Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
         constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ,  0));
@@ -276,7 +292,8 @@
 
         SimplexSolver solver = new SimplexSolver();
         RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
-        assertEquals(7518.0, solution.getValue(), .0000001);
+        assertEquals(13366.0, solution.getValue(), .0000001);
+        //assertEquals(7518.0, solution.getValue(), .0000001);
     }
     
     /**
