===
insert-tree
---
ImportDeclaration [1041,1066]
    QualifiedName: java.util.HashSet [1048,1065]
to
CompilationUnit [0,20264]
at 7
===
insert-tree
---
ImportDeclaration [1090,1111]
    QualifiedName: java.util.Set [1097,1110]
to
CompilationUnit [0,20264]
at 9
===
insert-tree
---
VariableDeclarationStatement [12871,12951]
    PrimitiveType: double [12871,12877]
    VariableDeclarationFragment [12878,12950]
        SimpleName: mostNegative [12878,12890]
        ConditionalExpression [12893,12950]
            InfixExpression [12893,12909]
                SimpleName: basicRow [12893,12901]
                INFIX_EXPRESSION_OPERATOR: == [12902,12904]
                NullLiteral [12905,12909]
            NumberLiteral: 0 [12912,12913]
            MethodInvocation [12916,12950]
                SimpleName: getEntry [12916,12924]
                METHOD_INVOCATION_ARGUMENTS [12925,12949]
                    SimpleName: basicRow [12925,12933]
                    MethodInvocation [12935,12949]
                        SimpleName: getRhsOffset [12935,12947]
to
Block [12618,13061]
at 2
===
insert-tree
---
VariableDeclarationStatement [12960,13008]
    ParameterizedType [12960,12972]
        SimpleType [12960,12963]
            SimpleName: Set [12960,12963]
        SimpleType [12964,12971]
            SimpleName: Integer [12964,12971]
    VariableDeclarationFragment [12973,13007]
        SimpleName: basicRows [12973,12982]
        ClassInstanceCreation [12985,13007]
            ParameterizedType [12989,13005]
                SimpleType [12989,12996]
                    SimpleName: HashSet [12989,12996]
                SimpleType [12997,13004]
                    SimpleName: Integer [12997,13004]
to
Block [12618,13061]
at 3
===
insert-tree
---
SimpleType [12755,12762]
    SimpleName: Integer [12755,12762]
to
VariableDeclarationStatement [12707,12789]
at 0
===
update-node
---
SimpleName: mostNegative [12714,12726]
replace mostNegative by basicRow
===
insert-tree
---
ExpressionStatement [13077,13132]
    Assignment [13077,13131]
        SimpleName: basicRow [13077,13085]
        ASSIGNMENT_OPERATOR: = [13086,13087]
        MethodInvocation [13088,13131]
            SimpleName: getBasicRow [13088,13099]
            METHOD_INVOCATION_ARGUMENTS [13100,13130]
                InfixExpression [13100,13130]
                    MethodInvocation [13100,13126]
                        SimpleName: getNumObjectiveFunctions [13100,13124]
                    INFIX_EXPRESSION_OPERATOR: + [13127,13128]
                    SimpleName: i [13129,13130]
to
Block [12844,12976]
at 0
===
insert-node
---
IfStatement [13145,13610]
to
Block [12844,12976]
at 1
===
update-node
---
SimpleName: getDecisionVariableValue [12729,12753]
replace getDecisionVariableValue by getBasicRow
===
insert-tree
---
MethodInvocation [13149,13177]
    METHOD_INVOCATION_RECEIVER [13149,13158]
        SimpleName: basicRows [13149,13158]
    SimpleName: contains [13159,13167]
    METHOD_INVOCATION_ARGUMENTS [13168,13176]
        SimpleName: basicRow [13168,13176]
to
IfStatement [13145,13610]
at 0
===
insert-node
---
Block [13179,13368]
to
IfStatement [13145,13610]
at 1
===
insert-tree
---
Block [13374,13610]
    ExpressionStatement [13392,13416]
        MethodInvocation [13392,13415]
            METHOD_INVOCATION_RECEIVER [13392,13401]
                SimpleName: basicRows [13392,13401]
            SimpleName: add [13402,13405]
            METHOD_INVOCATION_ARGUMENTS [13406,13414]
                SimpleName: basicRow [13406,13414]
    ExpressionStatement [13433,13596]
        Assignment [13433,13595]
            ArrayAccess [13433,13448]
                SimpleName: coefficients [13433,13445]
                SimpleName: i [13446,13447]
            ASSIGNMENT_OPERATOR: = [13449,13450]
            InfixExpression [13471,13595]
                ParenthesizedExpression [13471,13530]
                    ConditionalExpression [13472,13529]
                        InfixExpression [13472,13488]
                            SimpleName: basicRow [13472,13480]
                            INFIX_EXPRESSION_OPERATOR: == [13481,13483]
                            NullLiteral [13484,13488]
                        NumberLiteral: 0 [13491,13492]
                        MethodInvocation [13495,13529]
                            SimpleName: getEntry [13495,13503]
                            METHOD_INVOCATION_ARGUMENTS [13504,13528]
                                SimpleName: basicRow [13504,13512]
                                MethodInvocation [13514,13528]
                                    SimpleName: getRhsOffset [13514,13526]
                INFIX_EXPRESSION_OPERATOR: - [13531,13532]
                ParenthesizedExpression [13553,13595]
                    ConditionalExpression [13554,13594]
                        SimpleName: restrictToNonNegative [13554,13575]
                        NumberLiteral: 0 [13578,13579]
                        SimpleName: mostNegative [13582,13594]
to
IfStatement [13145,13610]
at 2
===
insert-node
---
InfixExpression [12798,12860]
to
METHOD_INVOCATION_ARGUMENTS [12754,12787]
at 0
===
move-tree
---
ExpressionStatement [12858,12965]
    Assignment [12858,12964]
        ArrayAccess [12858,12873]
            SimpleName: coefficients [12858,12870]
            SimpleName: i [12871,12872]
        ASSIGNMENT_OPERATOR: = [12874,12875]
        InfixExpression [12892,12964]
            MethodInvocation [12892,12919]
                SimpleName: getDecisionVariableValue [12892,12916]
                METHOD_INVOCATION_ARGUMENTS [12917,12918]
                    SimpleName: i [12917,12918]
            INFIX_EXPRESSION_OPERATOR: - [12920,12921]
            ParenthesizedExpression [12922,12964]
                ConditionalExpression [12923,12963]
                    SimpleName: restrictToNonNegative [12923,12944]
                    NumberLiteral: 0 [12947,12948]
                    SimpleName: mostNegative [12951,12963]
to
Block [13179,13368]
at 0
===
insert-tree
---
MethodInvocation [12798,12824]
    SimpleName: getNumObjectiveFunctions [12798,12822]
to
InfixExpression [12798,12860]
at 0
===
insert-node
---
INFIX_EXPRESSION_OPERATOR: + [12825,12826]
to
InfixExpression [12798,12860]
at 1
===
move-tree
---
MethodInvocation [12754,12787]
    SimpleName: getOriginalNumDecisionVariables [12754,12785]
to
InfixExpression [12798,12860]
at 2
===
move-tree
---
NumberLiteral: 0 [12947,12948]
to
Assignment [12858,12964]
at 2
===
delete-node
---
PrimitiveType: double [12707,12713]
===
===
delete-tree
---
MethodInvocation [12892,12919]
    SimpleName: getDecisionVariableValue [12892,12916]
    METHOD_INVOCATION_ARGUMENTS [12917,12918]
        SimpleName: i [12917,12918]
===
delete-node
---
INFIX_EXPRESSION_OPERATOR: - [12920,12921]
===
===
delete-node
---
SimpleName: restrictToNonNegative [12923,12944]
===
===
delete-node
---
SimpleName: mostNegative [12951,12963]
===
===
delete-node
---
ConditionalExpression [12923,12963]
===
===
delete-node
---
ParenthesizedExpression [12922,12964]
===
===
delete-node
---
InfixExpression [12892,12964]
===
===
delete-tree
---
MethodDeclaration [13067,13985]
    Javadoc [13067,13399]
        TagElement [13078,13260]
            TextElement: Get the value of the given decision variable.  This is not the actual [13078,13147]
            TextElement: value as it is guaranteed to be >= 0 and thus must be corrected before [13155,13225]
            TextElement: being returned to the user. [13233,13260]
        TagElement [13276,13334]
            SimpleName: decisionVariable [13283,13299]
            TextElement:  The index of the decision variable [13299,13334]
        TagElement [13342,13391]
            TextElement:  The value of the given decision variable. [13349,13391]
    Modifier: protected [13404,13413]
    PrimitiveType: double [13414,13420]
    SimpleName: getDecisionVariableValue [13421,13445]
    SingleVariableDeclaration [13446,13472]
        Modifier: final [13446,13451]
        PrimitiveType: int [13452,13455]
        SimpleName: decisionVariable [13456,13472]
    Block [13474,13985]
        VariableDeclarationStatement [13482,13538]
            PrimitiveType: int [13482,13485]
            VariableDeclarationFragment [13486,13537]
                SimpleName: col [13486,13489]
                InfixExpression [13492,13537]
                    MethodInvocation [13492,13518]
                        SimpleName: getNumObjectiveFunctions [13492,13516]
                    INFIX_EXPRESSION_OPERATOR: + [13519,13520]
                    SimpleName: decisionVariable [13521,13537]
        VariableDeclarationStatement [13547,13583]
            SimpleType [13547,13554]
                SimpleName: Integer [13547,13554]
            VariableDeclarationFragment [13555,13582]
                SimpleName: basicRow [13555,13563]
                MethodInvocation [13566,13582]
                    SimpleName: getBasicRow [13566,13577]
                    METHOD_INVOCATION_ARGUMENTS [13578,13581]
                        SimpleName: col [13578,13581]
        IfStatement [13590,13641]
            InfixExpression [13594,13610]
                SimpleName: basicRow [13594,13602]
                INFIX_EXPRESSION_OPERATOR: == [13603,13605]
                NullLiteral [13606,13610]
            Block [13612,13641]
                ReturnStatement [13624,13633]
                    NumberLiteral: 0 [13631,13632]
        ForStatement [13779,13931]
            VariableDeclarationExpression [13784,13818]
                PrimitiveType: int [13784,13787]
                VariableDeclarationFragment [13788,13818]
                    SimpleName: i [13788,13789]
                    MethodInvocation [13792,13818]
                        SimpleName: getNumObjectiveFunctions [13792,13816]
            InfixExpression [13820,13827]
                SimpleName: i [13820,13821]
                INFIX_EXPRESSION_OPERATOR: < [13822,13823]
                SimpleName: col [13824,13827]
            PostfixExpression [13829,13832]
                SimpleName: i [13829,13830]
                POSTFIX_EXPRESSION_OPERATOR: ++ [13830,13832]
            Block [13834,13931]
                IfStatement [13846,13923]
                    InfixExpression [13850,13884]
                        MethodInvocation [13850,13879]
                            METHOD_INVOCATION_RECEIVER [13850,13857]
                                SimpleName: tableau [13850,13857]
                            SimpleName: getEntry [13858,13866]
                            METHOD_INVOCATION_ARGUMENTS [13867,13878]
                                SimpleName: basicRow [13867,13875]
                                SimpleName: i [13877,13878]
                        INFIX_EXPRESSION_OPERATOR: == [13880,13882]
                        NumberLiteral: 1 [13883,13884]
                    Block [13886,13923]
                        ReturnStatement [13902,13911]
                            NumberLiteral: 0 [13909,13910]
        ReturnStatement [13938,13980]
            MethodInvocation [13945,13979]
                SimpleName: getEntry [13945,13953]
                METHOD_INVOCATION_ARGUMENTS [13954,13978]
                    SimpleName: basicRow [13954,13962]
                    MethodInvocation [13964,13978]
                        SimpleName: getRhsOffset [13964,13976]
