diff --git a/src/main/java/org/jsoup/safety/Cleaner.java b/src/main/java/org/jsoup/safety/Cleaner.java
index eda67df..8110836 100644
--- a/src/main/java/org/jsoup/safety/Cleaner.java
+++ b/src/main/java/org/jsoup/safety/Cleaner.java
@@ -40,7 +40,8 @@
         Validate.notNull(dirtyDocument);
 
         Document clean = Document.createShell(dirtyDocument.baseUri());
-        copySafeNodes(dirtyDocument.body(), clean.body());
+        if (dirtyDocument.body() != null) // frameset documents won't have a body. the clean doc will have empty body.
+            copySafeNodes(dirtyDocument.body(), clean.body());
 
         return clean;
     }
diff --git a/src/test/java/org/jsoup/safety/CleanerTest.java b/src/test/java/org/jsoup/safety/CleanerTest.java
index 2c6aead..2efa46b 100644
--- a/src/test/java/org/jsoup/safety/CleanerTest.java
+++ b/src/test/java/org/jsoup/safety/CleanerTest.java
@@ -166,4 +166,15 @@
         String customOut2 = Jsoup.clean(html, "http://foo.com/", Whitelist.relaxed(), os);
         assertEquals("<div><p>&#8492;</p></div>", customOut2);
     }
+
+    @Test public void handlesFramesets() {
+        String dirty = "<html><head><script></script><noscript></noscript></head><frameset><frame src=\"foo\" /><frame src=\"foo\" /></frameset></html>";
+        String clean = Jsoup.clean(dirty, Whitelist.basic());
+        assertEquals("", clean); // nothing good can come out of that
+
+        Document dirtyDoc = Jsoup.parse(dirty);
+        Document cleanDoc = new Cleaner(Whitelist.basic()).clean(dirtyDoc);
+        assertFalse(cleanDoc == null);
+        assertEquals(0, cleanDoc.body().childNodes().size());
+    }
 }
