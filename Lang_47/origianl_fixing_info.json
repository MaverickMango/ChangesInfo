{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "/home/liumengjiao/Desktop/CI/Benchmark/data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.lang.text.StrBuilderTest::testLang412Left,org.apache.commons.lang.text.StrBuilderTest::testLang412Right",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.lang.text.StrBuilder",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Lang",
  "id": "47",
  "workingDir": "../bugs/Lang_47_buggy",
  "buggyCommit": "19f33e4e0d824e732d07f06a08567c27b3c808f3",
  "inducingCommit": "e5bd9a5654ff829b091a5a6c4f8ed6180c3d359b",
  "originalCommit": "12796537fc6f3d5d3d3df9fa1027f2f377c30a71",
  "bug_name": "Lang_47",
  "derive": "defects4j",
  "original_fixing_commit": "d5e343049c2610c31ddacb24f0d173942f6d5ac9",
  "buildFiles_changed": false,
  "regression": true,
  "inducing_changes": [],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [
        "src/java/org/apache/commons/lang/text/StrBuilder.java"
      ],
      "num": 1
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.lang.text.StrBuilderTest",
      "test_function": "testLang412Left",
      "assertion_line": "1761",
      "exception": "java.lang.NullPointerException",
      "message": ""
    },
    {
      "test_class": "org.apache.commons.lang.text.StrBuilderTest",
      "test_function": "testLang412Right",
      "assertion_line": "1755",
      "exception": "java.lang.NullPointerException",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/lang/text/StrBuilder.java",
        "src/java/org/apache/commons/lang/text/StrBuilder.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadRight:[Object obj, int width, char padChar]:StrBuilder",
            "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadLeft:[Object obj, int width, char padChar]:StrBuilder"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadRight:[Object obj, int width, char padChar]:StrBuilder",
            "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadLeft:[Object obj, int width, char padChar]:StrBuilder"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1185",
            "1229"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "1186",
            "1187",
            "1188",
            "1233",
            "1234",
            "1235"
          ],
          "num": 6
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/lang/text/StrBuilder.java b/src/java/org/apache/commons/lang/text/StrBuilder.java\nindex 13281ce..fd135fd 100644\n--- a/src/java/org/apache/commons/lang/text/StrBuilder.java\n+++ b/src/java/org/apache/commons/lang/text/StrBuilder.java\n@@ -1183,6 +1183,9 @@\n         if (width \u003e 0) {\n             ensureCapacity(size + width);\n             String str \u003d (obj \u003d\u003d null ? getNullText() : obj.toString());\n+            if (str \u003d\u003d null) {\n+                str \u003d \"\";\n+            }\n             int strLen \u003d str.length();\n             if (strLen \u003e\u003d width) {\n                 str.getChars(strLen - width, strLen, buffer, size);\n@@ -1227,6 +1230,9 @@\n         if (width \u003e 0) {\n             ensureCapacity(size + width);\n             String str \u003d (obj \u003d\u003d null ? getNullText() : obj.toString());\n+            if (str \u003d\u003d null) {\n+                str \u003d \"\";\n+            }\n             int strLen \u003d str.length();\n             if (strLen \u003e\u003d width) {\n                 str.getChars(0, width, buffer, size);\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "IfStatement [38699,38757]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "IfStatement [40619,40677]"
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "patch_changed_mths": {
    "qualified_names": [
      "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadLeft(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;:regression",
      "org.apache.commons.lang.text.StrBuilder:appendFixedWidthPadRight(Ljava/lang/Object;IC)Lorg/apache/commons/lang/text/StrBuilder;:regression"
    ],
    "num": 2
  }
}