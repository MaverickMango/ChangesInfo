===
move-tree
---
IfStatement [11192,11315]
    InfixExpression [11196,11207]
        SimpleName: row [11196,11199]
        INFIX_EXPRESSION_OPERATOR: == [11200,11202]
        NullLiteral [11203,11207]
    Block [11209,11257]
        ExpressionStatement [11231,11239]
            Assignment [11231,11238]
                SimpleName: row [11231,11234]
                ASSIGNMENT_OPERATOR: = [11235,11236]
                SimpleName: i [11237,11238]
    Block [11263,11315]
        ReturnStatement [11285,11297]
            NullLiteral [11292,11296]
to
Block [11105,11339]
at 0
===
insert-node
---
InfixExpression [11123,11188]
to
IfStatement [11192,11315]
at 0
===
move-tree
---
IfStatement [11119,11329]
    PrefixExpression [11123,11172]
        PREFIX_EXPRESSION_OPERATOR: ! [11123,11124]
        MethodInvocation [11124,11172]
            METHOD_INVOCATION_RECEIVER [11124,11133]
                SimpleName: MathUtils [11124,11133]
            SimpleName: equals [11134,11140]
            METHOD_INVOCATION_ARGUMENTS [11141,11171]
                MethodInvocation [11141,11157]
                    SimpleName: getEntry [11141,11149]
                    METHOD_INVOCATION_ARGUMENTS [11150,11156]
                        SimpleName: i [11150,11151]
                        SimpleName: col [11153,11156]
                NumberLiteral: 0.0 [11159,11162]
                SimpleName: epsilon [11164,11171]
    Block [11174,11329]
        IfStatement [11192,11315]
            InfixExpression [11196,11207]
                SimpleName: row [11196,11199]
                INFIX_EXPRESSION_OPERATOR: == [11200,11202]
                NullLiteral [11203,11207]
            Block [11209,11257]
                ExpressionStatement [11231,11239]
                    Assignment [11231,11238]
                        SimpleName: row [11231,11234]
                        ASSIGNMENT_OPERATOR: = [11235,11236]
                        SimpleName: i [11237,11238]
            Block [11263,11315]
                ReturnStatement [11285,11297]
                    NullLiteral [11292,11296]
to
IfStatement [11192,11315]
at 3
===
insert-tree
---
MethodInvocation [11123,11171]
    METHOD_INVOCATION_RECEIVER [11123,11132]
        SimpleName: MathUtils [11123,11132]
    SimpleName: equals [11133,11139]
    METHOD_INVOCATION_ARGUMENTS [11140,11170]
        MethodInvocation [11140,11156]
            SimpleName: getEntry [11140,11148]
            METHOD_INVOCATION_ARGUMENTS [11149,11155]
                SimpleName: i [11149,11150]
                SimpleName: col [11152,11155]
        NumberLiteral: 1.0 [11158,11161]
        SimpleName: epsilon [11163,11170]
to
InfixExpression [11123,11188]
at 0
===
insert-node
---
INFIX_EXPRESSION_OPERATOR: && [11172,11174]
to
InfixExpression [11123,11188]
at 1
===
insert-node
---
ParenthesizedExpression [11175,11188]
to
InfixExpression [11123,11188]
at 2
===
move-tree
---
InfixExpression [11196,11207]
    SimpleName: row [11196,11199]
    INFIX_EXPRESSION_OPERATOR: == [11200,11202]
    NullLiteral [11203,11207]
to
ParenthesizedExpression [11175,11188]
at 0
===
move-tree
---
ReturnStatement [11285,11297]
    NullLiteral [11292,11296]
to
Block [11174,11329]
at 0
===
delete-node
---
Block [11263,11315]
===
