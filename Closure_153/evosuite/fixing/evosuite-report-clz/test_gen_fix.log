cd /home/liumengjiao/Desktop/CI/Benchmark/../bugs/Closure_153_fix && timeout 300000 gen_tests.pl -g evosuite -p Closure -v 153f -n 3 -o /home/liumengjiao/Desktop/CI/Evosuite/Closure_153/ -b 300 >> evosuite-report-clz/test_gen_fix.log 2>&1

--------------------------------------------------------------------------------
                     Defects4j Execution Environment 
--------------------------------------------------------------------------------
PWD.........................../home/liumengjiao/Desktop/CI/bugs/Closure_153_fix
SHELL........................./bin/bash
TZ............................America/Los_Angeles
JAVA_HOME...................../usr/local/lib/jdk1.8.0_351
Java Exec...................../usr/local/lib/jdk1.8.0_351/bin/java
Java Exec Resolved............/usr/local/lib/jdk1.8.0_351/bin/java
Java Version:
  java version "1.8.0_351"
  Java(TM) SE Runtime Environment (build 1.8.0_351-b10)
  Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)
Git version...................git version 2.34.1
SVN version...................1.14.1
Perl version..................v5.34.0
--------------------------------------------------------------------------------
Checking out 86caf52b to /tmp/gen_tests.pl_529807_1695210583............... OK
Executed command: git clone /home/liumengjiao/Desktop/defects4j/project_repos/closure-compiler.git /tmp/gen_tests.pl_529807_1695210583 2>&1 && cd /tmp/gen_tests.pl_529807_1695210583 && git checkout 86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb 2>&1
Cloning into '/tmp/gen_tests.pl_529807_1695210583'...
done.
Note: switching to '86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 86caf52b If a variable is doubly declared in externs and sources, we should keep around both VAR keywords. Fixes issue 290
Init local repository...................................................... OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583 && git init 2>&1 && git config user.name defects4j 2>&1 && git config user.email defects4j@localhost 2>&1 && git config core.autocrlf false 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_529807_1695210583/.git/
Tag post-fix revision...................................................... OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583 && git init 2>&1 && echo ".svn" > .gitignore && git add -A 2>&1 && git commit -a -m D4J_Closure_153_POST_FIX_REVISION 2>&1 && git tag D4J_Closure_153_POST_FIX_REVISION 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_529807_1695210583/.git/
[detached HEAD d3dc476c] D4J_Closure_153_POST_FIX_REVISION
 2 files changed, 4 insertions(+)
 create mode 100644 .defects4j.config
 create mode 100644 .gitignore
Run post-checkout hook..................................................... OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583 && git add -A 2>&1 && git commit -a -m "D4J_Closure_153_POST_FIX_COMPILABLE" 2>&1 && git tag D4J_Closure_153_POST_FIX_COMPILABLE 2>&1
[detached HEAD 53166f21] D4J_Closure_153_POST_FIX_COMPILABLE
 1 file changed, 7 insertions(+), 7 deletions(-)
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Closure/failing_tests/86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb /tmp/gen_tests.pl_529807_1695210583/test
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Closure/dependent_tests /tmp/gen_tests.pl_529807_1695210583/test
Initialize fixed program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583 && git add -A 2>&1 && git commit -a -m "D4J_Closure_153_FIXED_VERSION" 2>&1 && git tag D4J_Closure_153_FIXED_VERSION 2>&1
[detached HEAD 117e7124] D4J_Closure_153_FIXED_VERSION
 3 files changed, 480 insertions(+), 60 deletions(-)
 create mode 100644 defects4j.build.properties
 create mode 100644 test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java.bak
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583; git apply -p1 /home/liumengjiao/Desktop/defects4j/framework/projects/Closure/patches/153.src.patch 2>&1
Initialize buggy program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583 && git add -A 2>&1 && git commit -a -m "D4J_Closure_153_BUGGY_VERSION" 2>&1 && git tag D4J_Closure_153_BUGGY_VERSION 2>&1
[detached HEAD 6697c158] D4J_Closure_153_BUGGY_VERSION
 3 files changed, 22 insertions(+), 27 deletions(-)
Diff 86caf52b:ff1a3d71..................................................... OK
Executed command: git --git-dir=/home/liumengjiao/Desktop/defects4j/project_repos/closure-compiler.git diff --no-ext-diff --binary 86caf52b53f53d8b83e9c1092f4b15ddeb6ca5bb ff1a3d71ca63efdfc79112b6212fd10bd9aecce8 
diff --git a/externs/ie_event.js b/externs/ie_event.js
index 3a0d4f80..0149f95b 100644
--- a/externs/ie_event.js
+++ b/externs/ie_event.js
@@ -13,61 +13,137 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+ 
 /**
  * @fileoverview Definitions for all the extensions over the
  *  W3C's event specification by IE in JScript. This file depends on
- *  w3c_event.js. The whole file has NOT been fully type annotated.
+ *  w3c_event.js.
  *
+ * @see http://msdn.microsoft.com/en-us/library/ms535863.aspx
  * @externs
  */
 
+/** @type {string} */
 Event.prototype.Abstract;
+
+/** @type {boolean} */
 Event.prototype.altKey;
+
+/** @type {boolean} */
 Event.prototype.altLeft;
+
+/** @type {string} */
 Event.prototype.Banner;
+
+/** @type {number} */
 Event.prototype.button;
+
+/** @type {boolean} */
 Event.prototype.cancelBubble;
+
+/** @type {number} */
 Event.prototype.clientX;
+
+/** @type {number} */
 Event.prototype.clientY;
+
 /**
- * @see http://msdn.microsoft.com/en-us/library/ms535220(VS.85).aspx
- * @type {ClipboardData|undefined}
+ * @see http://msdn.microsoft.com/en-us/library/ms535220.aspx
+ * @type {(ClipboardData|undefined)}
  */
 Event.prototype.clipboardData;
+
+/** @type {boolean} */
 Event.prototype.contentOverflow;
+
+/** @type {boolean} */
 Event.prototype.ctrlKey;
+
+/** @type {boolean} */
 Event.prototype.ctrlLeft;
+
+/** @type {string} */
 Event.prototype.data;
+
+/** @type {string} */
 Event.prototype.dataFld;
+
 Event.prototype.domain;
+
+/** @type {Element} */
 Event.prototype.fromElement;
+
+/** @type {number} */
 Event.prototype.keyCode;
+
+/** @type {string} */
 Event.prototype.MoreInfo;
+
+/** @type {string} */
 Event.prototype.nextPage;
+
+/** @type {number} */
 Event.prototype.offsetX;
+
+/** @type {number} */
 Event.prototype.offsetY;
+
+/** @type {string} */
 Event.prototype.propertyName;
+
+/** @type {string} */
 Event.prototype.qualifier;
+
+/** @type {number} */
 Event.prototype.reason;
+
+/** @type {Object.<*,*>} */
 Event.prototype.recordset;
+
+/** @type {boolean} */
 Event.prototype.repeat;
-/**
- * @type {boolean|string|undefined}
- */
+
+/** @type {(boolean|string|undefined)} */
 Event.prototype.returnValue;
+
+/** @type {string} */
 Event.prototype.saveType;
+
 Event.prototype.scheme;
+
+/** @type {number} */
 Event.prototype.screenX;
+
+/** @type {number} */
 Event.prototype.screenY;
+
+/** @type {boolean} */
 Event.prototype.shiftKey;
+
+/** @type {boolean} */
 Event.prototype.shiftLeft;
+
+/** @type {Window} */
 Event.prototype.source;
+
+/** @type {Element} */
 Event.prototype.srcElement;
+
 Event.prototype.srcFilter;
+
+/** @type {string} */
 Event.prototype.srcUrn;
+
+/** @type {Element} */
 Event.prototype.toElement;
-Event.prototype.type;
+
 Event.prototype.userName;
+
+/** @type {number} */
 Event.prototype.wheelDelta;
+
+/** @type {number} */
 Event.prototype.x;
-Event.prototype.y;
+
+/** @type {number} */
+Event.prototype.y;
\ No newline at end of file
diff --git a/src/com/google/javascript/jscomp/AliasExternals.java b/src/com/google/javascript/jscomp/AliasExternals.java
index 195a0ccc..f6069c65 100644
--- a/src/com/google/javascript/jscomp/AliasExternals.java
+++ b/src/com/google/javascript/jscomp/AliasExternals.java
@@ -109,9 +109,12 @@ class AliasExternals implements CompilerPass {
   private final Map<Node, Node> replacementMap =
     new IdentityHashMap<Node, Node>();
 
-  /** Map of all globals that we may alias */
+  /** Map of all globals that we may aliasing */
   private final Map<String, Symbol> globals = Maps.newHashMap();
 
+  /** Holds all of the globals that can be aliased to GLOBAL_ */
+  private final List<Node> globalUses = Lists.newArrayList();
+
   /** Reference to JS Compiler */
   private final AbstractCompiler compiler;
 
@@ -587,10 +590,11 @@ class AliasExternals implements CompilerPass {
     }
 
     // Change the references to the globals
+    for (Node globalUse : globalUses) {
+      replaceGlobalUse(globalUse);
+    }
+
     for (Symbol global : globals.values()) {
-      for (Node globalUse : global.uses) {
-        replaceGlobalUse(globalUse);
-      }
       if (global.aliasAccessor) {
         addGlobalAliasNode(global,
                            getAddingRoot(global.deepestModuleAccess));
@@ -655,13 +659,6 @@ class AliasExternals implements CompilerPass {
 
         Symbol global = globals.get(name);
         if (global != null) {
-          // If a variable is declared in both externs and normal source,
-          // don't alias it.
-          if (n.getParent().getType() == Token.VAR ||
-              n.getParent().getType() == Token.FUNCTION) {
-            globals.remove(name);
-          }
-
           boolean isFirst = parent.getFirstChild() == n;
           // If a global is being assigned to or otherwise modified, then we
           // don't want to alias it.
@@ -677,7 +674,7 @@ class AliasExternals implements CompilerPass {
             global.recordAccessor(t);
           }
 
-          global.uses.add(n);
+          globalUses.add(n);
         }
       }
     }
@@ -751,8 +748,6 @@ class AliasExternals implements CompilerPass {
     JSModule deepestModuleAccess = null;
     JSModule deepestModuleMutate = null;
 
-    List<Node> uses = Lists.newArrayList();
-
     private Symbol(String name, boolean isConstant) {
       this.name = name;
       this.isConstant = isConstant;
diff --git a/src/com/google/javascript/jscomp/Normalize.java b/src/com/google/javascript/jscomp/Normalize.java
index c14ac8f1..4217f393 100644
--- a/src/com/google/javascript/jscomp/Normalize.java
+++ b/src/com/google/javascript/jscomp/Normalize.java
@@ -18,7 +18,6 @@ package com.google.javascript.jscomp;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
 import com.google.javascript.jscomp.MakeDeclaredNamesUnique.BoilerplateRenamer;
 import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
 import com.google.javascript.jscomp.NodeTraversal.Callback;
@@ -28,7 +27,6 @@ import com.google.javascript.rhino.Node;
 import com.google.javascript.rhino.Token;
 
 import java.util.Map;
-import java.util.Set;
 
 /**
  * The goal with this pass is to simplify the other passes,
@@ -628,31 +626,16 @@ class Normalize implements CompilerPass {
   private final class DuplicateDeclarationHandler implements
       SyntacticScopeCreator.RedeclarationHandler {
 
-    private Set<Var> hasOkDuplicateDeclaration = Sets.newHashSet();
-
     /**
      * Remove duplicate VAR declarations encountered discovered during
      * scope creation.
      */
     @Override
     public void onRedeclaration(
-        Scope s, String name, Node n, CompilerInput input) {
+        Scope s, String name, Node n, Node parent, Node gramps,
+        Node nodeWithLineNumber) {
       Preconditions.checkState(n.getType() == Token.NAME);
-      Node parent = n.getParent();
       Var v = s.getVar(name);
-
-      if (v != null && s.isGlobal()) {
-        // We allow variables to be duplicate declared if one
-        // declaration appears in source and the other in externs.
-        // This deals with issues where a browser built-in is declared
-        // in one browser but not in another.
-        if (v.isExtern() && !input.isExtern()) {
-          if (hasOkDuplicateDeclaration.add(v)) {
-            return;
-          }
-        }
-      }
-
       // If name is "arguments", Var maybe null.
       if (v != null && v.getParentNode().getType() == Token.CATCH) {
         // Redeclaration of a catch expression variable is hard to model
@@ -674,7 +657,7 @@ class Normalize implements CompilerPass {
             name);
         compiler.report(
             JSError.make(
-                input.getName(), n,
+                NodeUtil.getSourceName(nodeWithLineNumber), nodeWithLineNumber,
                 CATCH_BLOCK_VAR_ERROR, name));
       } else if (v != null && parent.getType() == Token.FUNCTION) {
         if (v.getParentNode().getType() == Token.VAR) {
@@ -686,7 +669,7 @@ class Normalize implements CompilerPass {
       } else if (parent.getType() == Token.VAR) {
         Preconditions.checkState(parent.hasOneChild());
 
-        replaceVarWithAssignment(n, parent, parent.getParent());
+        replaceVarWithAssignment(n, parent, gramps);
       }
     }
 
diff --git a/src/com/google/javascript/jscomp/SyntacticScopeCreator.java b/src/com/google/javascript/jscomp/SyntacticScopeCreator.java
index eb6e1eab..6dfc2885 100644
--- a/src/com/google/javascript/jscomp/SyntacticScopeCreator.java
+++ b/src/com/google/javascript/jscomp/SyntacticScopeCreator.java
@@ -20,6 +20,7 @@ import com.google.common.base.Preconditions;
 import com.google.javascript.rhino.JSDocInfo;
 import com.google.javascript.rhino.Node;
 import com.google.javascript.rhino.Token;
+import com.google.javascript.rhino.jstype.JSType;
 
 
 /**
@@ -91,7 +92,7 @@ class SyntacticScopeCreator implements ScopeCreator {
       // been declared in the outer scope.
       String fnName = fnNameNode.getString();
       if (!fnName.isEmpty() && NodeUtil.isFunctionExpression(n)) {
-        declareVar(fnNameNode);
+        declareVar(fnName, fnNameNode, n, null, null, n);
       }
 
       // Args: Declare function variables
@@ -99,7 +100,7 @@ class SyntacticScopeCreator implements ScopeCreator {
       for (Node a = args.getFirstChild(); a != null;
            a = a.getNext()) {
         Preconditions.checkState(a.getType() == Token.NAME);
-        declareVar(a);
+        declareVar(a.getString(), a, args, n, null, n);
       }
 
       // Body
@@ -121,7 +122,10 @@ class SyntacticScopeCreator implements ScopeCreator {
         for (Node child = n.getFirstChild();
              child != null;) {
           Node next = child.getNext();
-          declareVar(child);
+          Preconditions.checkState(child.getType() == Token.NAME);
+
+          String name = child.getString();
+          declareVar(name, child, n, parent, null, n);
           child = next;
         }
         return;
@@ -136,7 +140,7 @@ class SyntacticScopeCreator implements ScopeCreator {
           // This is invalid, but allow it so the checks can catch it.
           return;
         }
-        declareVar(n.getFirstChild());
+        declareVar(fnName, n.getFirstChild(), n, parent, null, n);
         return;   // should not examine function's children
 
       case Token.CATCH:
@@ -148,7 +152,7 @@ class SyntacticScopeCreator implements ScopeCreator {
         final Node var = n.getFirstChild();
         final Node block = var.getNext();
 
-        declareVar(var);
+        declareVar(var.getString(), var, n, parent, null, n);
         scanVars(block, n);
         return;  // only one child to scan
 
@@ -174,7 +178,8 @@ class SyntacticScopeCreator implements ScopeCreator {
    */
   interface RedeclarationHandler {
     void onRedeclaration(
-        Scope s, String name, Node n, CompilerInput input);
+        Scope s, String name,
+        Node n, Node parent, Node gramps, Node nodeWithLineNumber);
   }
 
   /**
@@ -182,9 +187,8 @@ class SyntacticScopeCreator implements ScopeCreator {
    */
   private class DefaultRedeclarationHandler implements RedeclarationHandler {
     public void onRedeclaration(
-        Scope s, String name, Node n, CompilerInput input) {
-      Node parent = n.getParent();
-
+        Scope s, String name,
+        Node n, Node parent, Node gramps, Node nodeWithLineNumber) {
       // Don't allow multiple variables to be declared at the top level scope
       if (scope.isGlobal()) {
         Scope.Var origVar = scope.getVar(name);
@@ -205,7 +209,7 @@ class SyntacticScopeCreator implements ScopeCreator {
 
         if (!allowDupe) {
           compiler.report(
-              JSError.make(sourceName, n,
+              JSError.make(sourceName, nodeWithLineNumber,
                            VAR_MULTIPLY_DECLARED_ERROR,
                            name,
                            (origVar.input != null
@@ -216,7 +220,7 @@ class SyntacticScopeCreator implements ScopeCreator {
         // Disallow shadowing "arguments" as we can't handle with our current
         // scope modeling.
         compiler.report(
-            JSError.make(sourceName, n,
+            JSError.make(sourceName, nodeWithLineNumber,
                 VAR_ARGUMENTS_SHADOWED_ERROR));
       }
     }
@@ -225,20 +229,23 @@ class SyntacticScopeCreator implements ScopeCreator {
   /**
    * Declares a variable.
    *
-   * @param n The node corresponding to the variable name.
+   * @param name The variable name
+   * @param n The node corresponding to the variable name (usually a NAME node)
+   * @param parent The parent node of {@code n}
+   * @param gramps The parent node of {@code parent}
    * @param declaredType The variable's type, according to JSDoc
+   * @param nodeWithLineNumber The node to use to access the line number of
+   *     the variable declaration, if needed
    */
-  private void declareVar(Node n) {
-    Preconditions.checkState(n.getType() == Token.NAME);
-
-    CompilerInput input = compiler.getInput(sourceName);
-    String name = n.getString();
+  private void declareVar(String name, Node n, Node parent,
+                          Node gramps, JSType declaredType,
+                          Node nodeWithLineNumber) {
     if (scope.isDeclared(name, false)
         || (scope.isLocal() && name.equals(ARGUMENTS))) {
       redeclarationHandler.onRedeclaration(
-          scope, name, n, input);
+          scope, name, n, parent, gramps, nodeWithLineNumber);
     } else {
-      scope.declare(name, n, null, input);
+      scope.declare(name, n, declaredType, compiler.getInput(sourceName));
     }
   }
 }
diff --git a/test/com/google/javascript/jscomp/NormalizeTest.java b/test/com/google/javascript/jscomp/NormalizeTest.java
index 27b39b2f..8486c20d 100644
--- a/test/com/google/javascript/jscomp/NormalizeTest.java
+++ b/test/com/google/javascript/jscomp/NormalizeTest.java
@@ -93,7 +93,7 @@ public class NormalizeTest extends CompilerTestCase {
 
   public void testDuplicateVarInExterns() {
     test("var extern;",
-         "/** @suppress {duplicate} */ var extern = 3;", "var extern = 3;",
+         "/** @suppress {duplicate} */ var extern = 3;", "extern = 3;",
          null, null);
   }
 
@@ -255,12 +255,8 @@ public class NormalizeTest extends CompilerTestCase {
     test("try { } catch(e) {e; try { } catch(e) {e;}};",
          "try { } catch(e) {e; try { } catch(e$$1) {e$$1;} }; ");
 
-    // Verify the 1st global redefinition of extern definition is not removed.
-    test("/** @suppress {duplicate} */\nvar window;", "var window;");
-
-    // Verify the 2nd global redefinition of extern definition is removed.
-    test("/** @suppress {duplicate} */\nvar window;" +
-         "/** @suppress {duplicate} */\nvar window;", "var window;");
+    // Verify global redefinition of extern definition is removed.
+    test("/** @suppress {duplicate} */\nvar window;", "");
 
     // Verify local masking extern made unique.
     test("function f() {var window}",
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583; git apply -p1 /tmp/gen_tests.pl_529807_1695210583/.defects4j.diff 2>&1
/tmp/gen_tests.pl_529807_1695210583/.defects4j.diff:9: trailing whitespace.
 
warning: 1 line adds whitespace errors.
Tag pre-fix revision....................................................... OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583 && git add -A 2>&1 && git commit -a -m "D4J_Closure_153_PRE_FIX_REVISION" 2>&1 && git tag D4J_Closure_153_PRE_FIX_REVISION 2>&1
[detached HEAD ab0a7c63] D4J_Closure_153_PRE_FIX_REVISION
 5 files changed, 126 insertions(+), 69 deletions(-)
Check out program version: Closure-153f.................................... OK
Executed command: cd /tmp/gen_tests.pl_529807_1695210583 && git checkout D4J_Closure_153_FIXED_VERSION 2>&1
Previous HEAD position was ab0a7c63 D4J_Closure_153_PRE_FIX_REVISION
HEAD is now at 117e7124 D4J_Closure_153_FIXED_VERSION
Running ant (compile)...................................................... OK
Executed command:  cd /tmp/gen_tests.pl_529807_1695210583 && /home/liumengjiao/Desktop/defects4j/major/bin/ant -f /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/home/liumengjiao/Desktop/defects4j -Dd4j.dir.projects=/home/liumengjiao/Desktop/defects4j/framework/projects -Dbasedir=/tmp/gen_tests.pl_529807_1695210583 -Dbuild.compiler=javac1.7  compile 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml

svnversion:

compile:
    [mkdir] Created dir: /tmp/gen_tests.pl_529807_1695210583/build/classes
    [javac] /tmp/gen_tests.pl_529807_1695210583/build.xml:169: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 4 source files to /tmp/gen_tests.pl_529807_1695210583/build/classes
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] 50 warnings
    [javac] /tmp/gen_tests.pl_529807_1695210583/build.xml:175: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 356 source files to /tmp/gen_tests.pl_529807_1695210583/build/classes
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/BufferedWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStreamWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/Charset.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/logging/Level.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayDeque.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Deque.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/PriorityQueue.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/concurrent/Callable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/logging/Logger.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStreamReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/MessageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/GZIPOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/concurrent/ConcurrentHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/concurrent/ConcurrentMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/concurrent/CopyOnWriteArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CloneNotSupportedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/UnsupportedOperationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilenameFilter.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/SuppressWarnings.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Thread.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/RandomAccess.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/regex/Matcher.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/regex/Pattern.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Stack.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/IdentityHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/CRC32.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Void.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/CharsetEncoder.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipEntry.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/zip/ZipInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Readable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Random.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/BufferedReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Hashtable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/beans/PropertyChangeListener.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] 100 warnings
    [mkdir] Created dir: /tmp/gen_tests.pl_529807_1695210583/build/classes/rhino_ast/java/com/google/javascript/rhino
     [copy] Copying 1 file to /tmp/gen_tests.pl_529807_1695210583/build/classes/rhino_ast/java/com/google/javascript/rhino
     [copy] Copying 1 file to /tmp/gen_tests.pl_529807_1695210583/build/classes/com/google/javascript/jscomp/parsing
[propertyfile] Updating property file: /tmp/gen_tests.pl_529807_1695210583/build/classes/com/google/javascript/jscomp/parsing/ParserConfig.properties
    [mkdir] Created dir: /tmp/gen_tests.pl_529807_1695210583/build/classes/com/google/javascript/jscomp/js
     [copy] Copying 1 file to /tmp/gen_tests.pl_529807_1695210583/build/classes/com/google/javascript/jscomp/js

BUILD SUCCESSFUL
Total time: 2 seconds
Creating temporary output directory........................................ OK
Executed command: mkdir -p /tmp/gen_tests.pl_529807_1695210583/evosuite
Generating (regression) tests with: evosuite............................... [MASTER] 04:49:59.774 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:50:00.331 [logback-2] ERROR TestCluster - Failed to check cache for com.google.common.base.Supplier<T> : Type points to itself
[MASTER] 04:50:01.025 [logback-2] ERROR TestCluster - Failed to check cache for com.google.javascript.jscomp.ControlFlowGraph<N> : Type points to itself
[MASTER] 04:50:02.024 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 04:50:08.727 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 04:51:23.986 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 04:51:29.329 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:51:29.944 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[MASTER] 04:51:50.490 [logback-2] ERROR TestCluster - Failed to check cache for com.google.common.base.Supplier<T> : Type points to itself
[MASTER] 04:51:57.289 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/bin/evosuite.sh

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class com.google.javascript.jscomp.Normalize     -projectCP /tmp/gen_tests.pl_529807_1695210583/build/classes:/tmp/gen_tests.pl_529807_1695210583/lib/ant-launcher.jar:/tmp/gen_tests.pl_529807_1695210583/lib/ant.jar:/tmp/gen_tests.pl_529807_1695210583/lib/args4j.jar:/tmp/gen_tests.pl_529807_1695210583/lib/guava.jar:/tmp/gen_tests.pl_529807_1695210583/lib/json.jar:/tmp/gen_tests.pl_529807_1695210583/lib/jsr305.jar:/tmp/gen_tests.pl_529807_1695210583/lib/junit.jar:/tmp/gen_tests.pl_529807_1695210583/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/gen_tests.pl_529807_1695210583/lib/protobuf-java.jar     -seed 3153     -Dsearch_budget=75     -Dassertion_timeout=75     -Dtest_dir=/tmp/gen_tests.pl_529807_1695210583/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: com.google.javascript.jscomp.Normalize
* Starting Client-0
* Connecting to master process on port 17160
* Analyzing classpath: 
  - /tmp/gen_tests.pl_529807_1695210583/build/classes
  - /tmp/gen_tests.pl_529807_1695210583/lib/ant-launcher.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/ant.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/args4j.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/guava.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/json.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/jsr305.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/junit.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/libtrunk_rhino_parser_jarjared.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/protobuf-java.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.Normalize
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 217
* Using seed 3153
* Starting evolution
* Initial Number of Goals in DynaMOSA = 99 / 217
* Search finished after 76s and 675 generations, 289436 statements, best individual has fitness: 90.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 59%
* Total number of goals: 217
* Number of covered goals: 127
* Generated 22 tests with total length 109
* Resulting test suite's coverage: 59%
* Generating assertions
* Resulting test suite's mutation score: 13%
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 41
* Writing tests to file
* Writing JUnit test case 'Normalize_ESTest' to /tmp/gen_tests.pl_529807_1695210583/evosuite
* Done!

* Computation finished
OK

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class com.google.javascript.jscomp.SyntacticScopeCreator     -projectCP /tmp/gen_tests.pl_529807_1695210583/build/classes:/tmp/gen_tests.pl_529807_1695210583/lib/ant-launcher.jar:/tmp/gen_tests.pl_529807_1695210583/lib/ant.jar:/tmp/gen_tests.pl_529807_1695210583/lib/args4j.jar:/tmp/gen_tests.pl_529807_1695210583/lib/guava.jar:/tmp/gen_tests.pl_529807_1695210583/lib/json.jar:/tmp/gen_tests.pl_529807_1695210583/lib/jsr305.jar:/tmp/gen_tests.pl_529807_1695210583/lib/junit.jar:/tmp/gen_tests.pl_529807_1695210583/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/gen_tests.pl_529807_1695210583/lib/protobuf-java.jar     -seed 3153     -Dsearch_budget=75     -Dassertion_timeout=75     -Dtest_dir=/tmp/gen_tests.pl_529807_1695210583/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: com.google.javascript.jscomp.SyntacticScopeCreator
* Starting Client-0
* Connecting to master process on port 17160
* Analyzing classpath: 
  - /tmp/gen_tests.pl_529807_1695210583/build/classes
  - /tmp/gen_tests.pl_529807_1695210583/lib/ant-launcher.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/ant.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/args4j.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/guava.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/json.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/jsr305.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/junit.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/libtrunk_rhino_parser_jarjared.jar
  - /tmp/gen_tests.pl_529807_1695210583/lib/protobuf-java.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.SyntacticScopeCreator
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 74
* Using seed 3153
* Starting evolution
* Initial Number of Goals in DynaMOSA = 30 / 74
* Search finished after 81s and 1088 generations, 475330 statements, best individual has fitness: 42.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 74
* Number of covered goals: 32
* Generated 10 tests with total length 53
* Resulting test suite's coverage: 43%
* Generating assertions
* Resulting test suite's mutation score: 5%
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 23
* Writing tests to file
* Writing JUnit test case 'SyntacticScopeCreator_ESTest' to /tmp/gen_tests.pl_529807_1695210583/evosuite
* Done!

* Computation finished
OK
Creating test suite archive................................................ OK
Executed command: tar -cjf /tmp/gen_tests.pl_529807_1695210583/Closure-153f-evosuite.3.tar.bz2 -C /tmp/gen_tests.pl_529807_1695210583/evosuite/ .
Creating output directory.................................................. OK
Executed command: mkdir -p /home/liumengjiao/Desktop/CI/Evosuite/Closure_153//Closure/evosuite/3
Moving test suite archive to /home/liumengjiao/Desktop/CI/Evosuite/Closure_ OK
Executed command: mv /tmp/gen_tests.pl_529807_1695210583/Closure-153f-evosuite.3.tar.bz2 /home/liumengjiao/Desktop/CI/Evosuite/Closure_153//Closure/evosuite/3
