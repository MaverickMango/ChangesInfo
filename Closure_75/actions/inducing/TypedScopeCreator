===
insert-node
---
IfStatement [18369,18483]
to
SwitchStatement [18073,19000]
at 8
===
insert-node
---
IfStatement [18591,18705]
to
SwitchStatement [18073,19000]
at 12
===
insert-tree
---
PrefixExpression [18373,18415]
    PREFIX_EXPRESSION_OPERATOR: ! [18373,18374]
    MethodInvocation [18374,18415]
        METHOD_INVOCATION_RECEIVER [18374,18382]
            SimpleName: NodeUtil [18374,18382]
        SimpleName: isObjectLitKey [18383,18397]
        METHOD_INVOCATION_ARGUMENTS [18398,18414]
            SimpleName: n [18398,18399]
            MethodInvocation [18401,18414]
                METHOD_INVOCATION_RECEIVER [18401,18402]
                    SimpleName: n [18401,18402]
                SimpleName: getParent [18403,18412]
to
IfStatement [18369,18483]
at 0
===
insert-node
---
Block [18417,18483]
to
IfStatement [18369,18483]
at 1
===
insert-tree
---
PrefixExpression [18595,18637]
    PREFIX_EXPRESSION_OPERATOR: ! [18595,18596]
    MethodInvocation [18596,18637]
        METHOD_INVOCATION_RECEIVER [18596,18604]
            SimpleName: NodeUtil [18596,18604]
        SimpleName: isObjectLitKey [18605,18619]
        METHOD_INVOCATION_ARGUMENTS [18620,18636]
            SimpleName: n [18620,18621]
            MethodInvocation [18623,18636]
                METHOD_INVOCATION_RECEIVER [18623,18624]
                    SimpleName: n [18623,18624]
                SimpleName: getParent [18625,18634]
to
IfStatement [18591,18705]
at 0
===
insert-node
---
Block [18639,18705]
to
IfStatement [18591,18705]
at 1
===
insert-tree
---
VariableDeclarationStatement [21041,21130]
    SimpleType [21041,21047]
        SimpleName: JSType [21041,21047]
    VariableDeclarationFragment [21048,21129]
        SimpleName: keyType [21048,21055]
        MethodInvocation [21058,21129]
            METHOD_INVOCATION_RECEIVER [21058,21066]
                SimpleName: NodeUtil [21058,21066]
            SimpleName: getObjectLitKeyTypeFromValueType [21067,21099]
            METHOD_INVOCATION_ARGUMENTS [21113,21128]
                SimpleName: name [21113,21117]
                SimpleName: valueType [21119,21128]
to
Block [20774,21189]
at 3
===
move-tree
---
ExpressionStatement [18317,18357]
    MethodInvocation [18317,18356]
        METHOD_INVOCATION_RECEIVER [18317,18318]
            SimpleName: n [18317,18318]
        SimpleName: setJSType [18319,18328]
        METHOD_INVOCATION_ARGUMENTS [18329,18355]
            MethodInvocation [18329,18355]
                SimpleName: getNativeType [18329,18342]
                METHOD_INVOCATION_ARGUMENTS [18343,18354]
                    SimpleName: STRING_TYPE [18343,18354]
to
Block [18417,18483]
at 0
===
move-tree
---
ExpressionStatement [18413,18453]
    MethodInvocation [18413,18452]
        METHOD_INVOCATION_RECEIVER [18413,18414]
            SimpleName: n [18413,18414]
        SimpleName: setJSType [18415,18424]
        METHOD_INVOCATION_ARGUMENTS [18425,18451]
            MethodInvocation [18425,18451]
                SimpleName: getNativeType [18425,18438]
                METHOD_INVOCATION_ARGUMENTS [18439,18450]
                    SimpleName: NUMBER_TYPE [18439,18450]
to
Block [18639,18705]
at 0
===
update-node
---
SimpleName: type [20893,20897]
replace type by valueType
===
update-node
---
SimpleName: type [20984,20988]
replace type by keyType
===
insert-tree
---
ExpressionStatement [21172,21196]
    MethodInvocation [21172,21195]
        METHOD_INVOCATION_RECEIVER [21172,21176]
            SimpleName: name [21172,21176]
        SimpleName: setJSType [21177,21186]
        METHOD_INVOCATION_ARGUMENTS [21187,21194]
            SimpleName: keyType [21187,21194]
to
Block [20998,21181]
at 0
===
move-tree
---
IfStatement [20628,20677]
    InfixExpression [20632,20650]
        SimpleName: objLitType [20632,20642]
        INFIX_EXPRESSION_OPERATOR: == [20643,20645]
        NullLiteral [20646,20650]
    Block [20652,20677]
        ReturnStatement [20662,20669]
to
Block [20998,21181]
at 1
===
update-node
---
SimpleName: getStringValue [20856,20870]
replace getStringValue by getObjectLitKeyName
===
update-node
---
INFIX_EXPRESSION_OPERATOR: == [20643,20645]
replace == by !=
===
move-tree
---
VariableDeclarationStatement [21010,21077]
    PrimitiveType: boolean [21010,21017]
    VariableDeclarationFragment [21018,21076]
        SimpleName: isExtern [21018,21026]
        InfixExpression [21029,21076]
            InfixExpression [21029,21049]
                MethodInvocation [21029,21041]
                    METHOD_INVOCATION_RECEIVER [21029,21030]
                        SimpleName: t [21029,21030]
                    SimpleName: getInput [21031,21039]
                INFIX_EXPRESSION_OPERATOR: != [21042,21044]
                NullLiteral [21045,21049]
            INFIX_EXPRESSION_OPERATOR: && [21050,21052]
            MethodInvocation [21053,21076]
                METHOD_INVOCATION_RECEIVER [21053,21065]
                    MethodInvocation [21053,21065]
                        METHOD_INVOCATION_RECEIVER [21053,21054]
                            SimpleName: t [21053,21054]
                        SimpleName: getInput [21055,21063]
                SimpleName: isExtern [21066,21074]
to
Block [20652,20677]
at 0
===
move-tree
---
ExpressionStatement [21088,21171]
    MethodInvocation [21088,21170]
        METHOD_INVOCATION_RECEIVER [21088,21098]
            SimpleName: objLitType [21088,21098]
        SimpleName: defineDeclaredProperty [21099,21121]
        METHOD_INVOCATION_ARGUMENTS [21137,21169]
            SimpleName: memberName [21137,21147]
            SimpleName: type [21149,21153]
            SimpleName: isExtern [21155,21163]
            SimpleName: name [21165,21169]
to
Block [20652,20677]
at 1
===
insert-node
---
IfStatement [34244,34835]
to
Block [33765,34268]
at 1
===
insert-tree
---
InfixExpression [34248,34263]
    SimpleName: keyName [34248,34255]
    INFIX_EXPRESSION_OPERATOR: == [34256,34258]
    NullLiteral [34259,34263]
to
IfStatement [34244,34835]
at 0
===
insert-tree
---
Block [34265,34445]
    ExpressionStatement [34337,34431]
        MethodInvocation [34337,34430]
            METHOD_INVOCATION_RECEIVER [34337,34345]
                SimpleName: compiler [34337,34345]
            SimpleName: report [34346,34352]
            METHOD_INVOCATION_ARGUMENTS [34372,34429]
                MethodInvocation [34372,34429]
                    METHOD_INVOCATION_RECEIVER [34372,34379]
                        SimpleName: JSError [34372,34379]
                    SimpleName: make [34380,34384]
                    METHOD_INVOCATION_ARGUMENTS [34385,34428]
                        SimpleName: sourceName [34385,34395]
                        SimpleName: key [34397,34400]
                        SimpleName: ENUM_NOT_CONSTANT [34402,34419]
                        SimpleName: keyName [34421,34428]
to
IfStatement [34244,34835]
at 1
===
move-tree
---
IfStatement [33839,34223]
    MethodInvocation [33843,33875]
        METHOD_INVOCATION_RECEIVER [33843,33851]
            SimpleName: enumType [33843,33851]
        SimpleName: hasOwnProperty [33852,33866]
        METHOD_INVOCATION_ARGUMENTS [33867,33874]
            SimpleName: keyName [33867,33874]
    Block [33877,33973]
        ExpressionStatement [33893,33959]
            MethodInvocation [33893,33958]
                METHOD_INVOCATION_RECEIVER [33893,33901]
                    SimpleName: compiler [33893,33901]
                SimpleName: report [33902,33908]
                METHOD_INVOCATION_ARGUMENTS [33909,33957]
                    MethodInvocation [33909,33957]
                        METHOD_INVOCATION_RECEIVER [33909,33916]
                            SimpleName: JSError [33909,33916]
                        SimpleName: make [33917,33921]
                        METHOD_INVOCATION_ARGUMENTS [33922,33956]
                            SimpleName: sourceName [33922,33932]
                            SimpleName: key [33934,33937]
                            SimpleName: ENUM_DUP [33939,33947]
                            SimpleName: keyName [33949,33956]
    IfStatement [33979,34223]
        PrefixExpression [33983,34024]
            PREFIX_EXPRESSION_OPERATOR: ! [33983,33984]
            MethodInvocation [33984,34024]
                METHOD_INVOCATION_RECEIVER [33984,34000]
                    SimpleName: codingConvention [33984,34000]
                SimpleName: isValidEnumKey [34001,34015]
                METHOD_INVOCATION_ARGUMENTS [34016,34023]
                    SimpleName: keyName [34016,34023]
        Block [34026,34150]
            ExpressionStatement [34042,34136]
                MethodInvocation [34042,34135]
                    METHOD_INVOCATION_RECEIVER [34042,34050]
                        SimpleName: compiler [34042,34050]
                    SimpleName: report [34051,34057]
                    METHOD_INVOCATION_ARGUMENTS [34077,34134]
                        MethodInvocation [34077,34134]
                            METHOD_INVOCATION_RECEIVER [34077,34084]
                                SimpleName: JSError [34077,34084]
                            SimpleName: make [34085,34089]
                            METHOD_INVOCATION_ARGUMENTS [34090,34133]
                                SimpleName: sourceName [34090,34100]
                                SimpleName: key [34102,34105]
                                SimpleName: ENUM_NOT_CONSTANT [34107,34124]
                                SimpleName: keyName [34126,34133]
        Block [34156,34223]
            ExpressionStatement [34172,34209]
                MethodInvocation [34172,34208]
                    METHOD_INVOCATION_RECEIVER [34172,34180]
                        SimpleName: enumType [34172,34180]
                    SimpleName: defineElement [34181,34194]
                    METHOD_INVOCATION_ARGUMENTS [34195,34207]
                        SimpleName: keyName [34195,34202]
                        SimpleName: key [34204,34207]
to
IfStatement [34244,34835]
at 2
===
update-node
---
SimpleName: type [21149,21153]
replace type by keyType
===
delete-node
---
ReturnStatement [20662,20669]
===
