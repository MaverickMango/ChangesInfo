===
move-tree
---
TagElement [2038,2051]
    TextElement:  UTF-8 [2044,2050]
to
TagElement [1928,2052]
at 3
===
move-tree
---
TagElement [2777,2790]
    TextElement:  UTF-8 [2783,2789]
to
TagElement [2667,2791]
at 3
===
insert-node
---
TextElement: <p> [1233,1236]
to
TagElement [1193,1227]
at 1
===
insert-node
---
TextElement: The encoding character set is determined by the content-type header or http-equiv meta tag, or falls back to  [1242,1351]
to
TagElement [1193,1227]
at 2
===
insert-tree
---
TagElement [1351,1364]
    TextElement:  UTF-8 [1357,1363]
to
TagElement [1193,1227]
at 3
===
insert-node
---
TextElement: . [1364,1365]
to
TagElement [1193,1227]
at 4
===
update-node
---
TextElement:  character set of file contents. If you don't know the charset, generally the best guess is  [1946,2038]
replace  character set of file contents. If you don't know the charset, generally the best guess is  by  (optional) character set of file contents. Set to null to determine from http-equiv meta tag, if
===
update-node
---
TextElement: . [2051,2052]
replace . by present, or fall back to 
===
insert-node
---
TextElement:  (which is often safe to do). [2225,2254]
to
TagElement [1928,2052]
at 4
===
update-node
---
TextElement:  character set of file contents. If you don't know the charset, generally the best guess is  [2685,2777]
replace  character set of file contents. If you don't know the charset, generally the best guess is  by  (optional) character set of file contents. Set to null to determine from http-equiv meta tag, if
===
update-node
---
TextElement: . [2790,2791]
replace . by present, or fall back to 
===
insert-node
---
TextElement:  (which is often safe to do). [3028,3057]
to
TagElement [2667,2791]
at 4
