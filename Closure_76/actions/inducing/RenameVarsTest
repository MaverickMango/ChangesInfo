===
insert-tree
---
FieldDeclaration [1211,1260]
    Modifier: private [1211,1218]
    PrimitiveType: boolean [1219,1226]
    VariableDeclarationFragment [1227,1259]
        SimpleName: useGoogleCodingConvention [1227,1252]
        BooleanLiteral: true [1255,1259]
to
TypeDeclaration [744,17474]
at 12
===
insert-tree
---
MethodDeclaration [1264,1473]
    MarkerAnnotation [1264,1273]
        SimpleName: Override [1265,1273]
    Modifier: protected [1276,1285]
    SimpleType [1286,1302]
        SimpleName: CodingConvention [1286,1302]
    SimpleName: getCodingConvention [1303,1322]
    Block [1325,1473]
        IfStatement [1331,1469]
            SimpleName: useGoogleCodingConvention [1335,1360]
            Block [1362,1412]
                ReturnStatement [1370,1406]
                    ClassInstanceCreation [1377,1405]
                        SimpleType [1381,1403]
                            SimpleName: GoogleCodingConvention [1381,1403]
            Block [1418,1469]
                ReturnStatement [1426,1463]
                    ClassInstanceCreation [1433,1462]
                        SimpleType [1437,1460]
                            SimpleName: DefaultCodingConvention [1437,1460]
to
TypeDeclaration [744,17474]
at 13
===
insert-tree
---
MethodDeclaration [15457,15954]
    Modifier: public [15457,15463]
    PrimitiveType: void [15464,15468]
    SimpleName: testDollarSignSuperExport [15469,15494]
    Block [15497,15954]
        ExpressionStatement [15503,15537]
            Assignment [15503,15536]
                SimpleName: useGoogleCodingConvention [15503,15528]
                ASSIGNMENT_OPERATOR: = [15529,15530]
                BooleanLiteral: false [15531,15536]
        ExpressionStatement [15615,15722]
            MethodInvocation [15615,15721]
                SimpleName: test [15615,15619]
                METHOD_INVOCATION_ARGUMENTS [15620,15720]
                    StringLiteral: "var x = function($super,duper,$fantastic){}" [15620,15665]
                    StringLiteral: "var c = function($super,    a,        b){}" [15676,15720]
        ExpressionStatement [15732,15758]
            Assignment [15732,15757]
                SimpleName: localRenamingOnly [15732,15749]
                ASSIGNMENT_OPERATOR: = [15750,15751]
                BooleanLiteral: false [15752,15757]
        ExpressionStatement [15763,15799]
            MethodInvocation [15763,15798]
                SimpleName: test [15763,15767]
                METHOD_INVOCATION_ARGUMENTS [15768,15797]
                    StringLiteral: "var $super = 1" [15768,15784]
                    StringLiteral: "var a = 1" [15786,15797]
        ExpressionStatement [15805,15838]
            Assignment [15805,15837]
                SimpleName: useGoogleCodingConvention [15805,15830]
                ASSIGNMENT_OPERATOR: = [15831,15832]
                BooleanLiteral: true [15833,15837]
        ExpressionStatement [15843,15950]
            MethodInvocation [15843,15949]
                SimpleName: test [15843,15847]
                METHOD_INVOCATION_ARGUMENTS [15848,15948]
                    StringLiteral: "var x = function($super,duper,$fantastic){}" [15848,15893]
                    StringLiteral: "var d = function(a,     b,    c        ){}" [15904,15948]
to
TypeDeclaration [744,17474]
at 51
