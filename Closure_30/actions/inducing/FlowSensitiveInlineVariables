===
insert-tree
---
ImportDeclaration [721,762]
    QualifiedName: com.google.common.base.Predicates [728,761]
to
CompilationUnit [0,12305]
at 3
===
insert-tree
---
ImportDeclaration [1304,1366]
    QualifiedName: com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge [1311,1365]
to
CompilationUnit [0,12305]
at 12
===
insert-tree
---
FieldDeclaration [3151,4109]
    Modifier: private [3151,3158]
    Modifier: static [3159,3165]
    Modifier: final [3166,3171]
    ParameterizedType [3172,3187]
        SimpleType [3172,3181]
            SimpleName: Predicate [3172,3181]
        SimpleType [3182,3186]
            SimpleName: Node [3182,3186]
    VariableDeclarationFragment [3188,4108]
        SimpleName: SIDE_EFFECT_PREDICATE [3188,3209]
        ClassInstanceCreation [3216,4108]
            ParameterizedType [3220,3235]
                SimpleType [3220,3229]
                    SimpleName: Predicate [3220,3229]
                SimpleType [3230,3234]
                    SimpleName: Node [3230,3234]
            AnonymousClassDeclaration [3238,4108]
                MethodDeclaration [3246,4104]
                    MarkerAnnotation [3246,3255]
                        SimpleName: Override [3247,3255]
                    Modifier: public [3262,3268]
                    PrimitiveType: boolean [3269,3276]
                    SimpleName: apply [3277,3282]
                    SingleVariableDeclaration [3283,3289]
                        SimpleType [3283,3287]
                            SimpleName: Node [3283,3287]
                        SimpleName: n [3288,3289]
                    Block [3291,4104]
                        IfStatement [3452,3502]
                            InfixExpression [3456,3465]
                                SimpleName: n [3456,3457]
                                INFIX_EXPRESSION_OPERATOR: == [3458,3460]
                                NullLiteral [3461,3465]
                            Block [3467,3502]
                                ReturnStatement [3479,3492]
                                    BooleanLiteral: false [3486,3491]
                        IfStatement [3672,3772]
                            InfixExpression [3676,3736]
                                MethodInvocation [3676,3694]
                                    METHOD_INVOCATION_RECEIVER [3676,3684]
                                        SimpleName: NodeUtil [3676,3684]
                                    SimpleName: isCall [3685,3691]
                                    METHOD_INVOCATION_ARGUMENTS [3692,3693]
                                        SimpleName: n [3692,3693]
                                INFIX_EXPRESSION_OPERATOR: && [3695,3697]
                                MethodInvocation [3698,3736]
                                    METHOD_INVOCATION_RECEIVER [3698,3706]
                                        SimpleName: NodeUtil [3698,3706]
                                    SimpleName: functionCallHasSideEffects [3707,3733]
                                    METHOD_INVOCATION_ARGUMENTS [3734,3735]
                                        SimpleName: n [3734,3735]
                            Block [3738,3772]
                                ReturnStatement [3750,3762]
                                    BooleanLiteral: true [3757,3761]
                        IfStatement [3782,3884]
                            InfixExpression [3786,3848]
                                MethodInvocation [3786,3803]
                                    METHOD_INVOCATION_RECEIVER [3786,3794]
                                        SimpleName: NodeUtil [3786,3794]
                                    SimpleName: isNew [3795,3800]
                                    METHOD_INVOCATION_ARGUMENTS [3801,3802]
                                        SimpleName: n [3801,3802]
                                INFIX_EXPRESSION_OPERATOR: && [3804,3806]
                                MethodInvocation [3807,3848]
                                    METHOD_INVOCATION_RECEIVER [3807,3815]
                                        SimpleName: NodeUtil [3807,3815]
                                    SimpleName: constructorCallHasSideEffects [3816,3845]
                                    METHOD_INVOCATION_ARGUMENTS [3846,3847]
                                        SimpleName: n [3846,3847]
                            Block [3850,3884]
                                ReturnStatement [3862,3874]
                                    BooleanLiteral: true [3869,3873]
                        ForStatement [3894,4074]
                            VariableDeclarationExpression [3899,3925]
                                SimpleType [3899,3903]
                                    SimpleName: Node [3899,3903]
                                VariableDeclarationFragment [3904,3925]
                                    SimpleName: c [3904,3905]
                                    MethodInvocation [3908,3925]
                                        METHOD_INVOCATION_RECEIVER [3908,3909]
                                            SimpleName: n [3908,3909]
                                        SimpleName: getFirstChild [3910,3923]
                            InfixExpression [3927,3936]
                                SimpleName: c [3927,3928]
                                INFIX_EXPRESSION_OPERATOR: != [3929,3931]
                                NullLiteral [3932,3936]
                            Assignment [3938,3953]
                                SimpleName: c [3938,3939]
                                ASSIGNMENT_OPERATOR: = [3940,3941]
                                MethodInvocation [3942,3953]
                                    METHOD_INVOCATION_RECEIVER [3942,3943]
                                        SimpleName: c [3942,3943]
                                    SimpleName: getNext [3944,3951]
                            Block [3955,4074]
                                IfStatement [3967,4064]
                                    InfixExpression [3971,4024]
                                        PrefixExpression [3971,4012]
                                            PREFIX_EXPRESSION_OPERATOR: ! [3971,3972]
                                            MethodInvocation [3972,4012]
                                                METHOD_INVOCATION_RECEIVER [3972,3988]
                                                    SimpleName: ControlFlowGraph [3972,3988]
                                                SimpleName: isEnteringNewCfgNode [3989,4009]
                                                METHOD_INVOCATION_ARGUMENTS [4010,4011]
                                                    SimpleName: c [4010,4011]
                                        INFIX_EXPRESSION_OPERATOR: && [4013,4015]
                                        MethodInvocation [4016,4024]
                                            SimpleName: apply [4016,4021]
                                            METHOD_INVOCATION_ARGUMENTS [4022,4023]
                                                SimpleName: c [4022,4023]
                                    Block [4026,4064]
                                        ReturnStatement [4040,4052]
                                            BooleanLiteral: true [4047,4051]
                        ReturnStatement [4083,4096]
                            BooleanLiteral: false [4090,4095]
to
TypeDeclaration [1462,12304]
at 11
===
insert-tree
---
MethodDeclaration [14551,15130]
    Javadoc [14551,14788]
        TagElement [14560,14782]
            TextElement: Given an expression by its root and sub-expression n, return true if there [14560,14634]
            TextElement: the predicate is true for some expression on the right of n. [14640,14700]
            TextElement: Example: [14711,14719]
            TextElement: NotChecked(), NotChecked(), n, Checked(), Checked(); [14730,14782]
    Modifier: private [14791,14798]
    Modifier: static [14799,14805]
    PrimitiveType: boolean [14806,14813]
    SimpleName: checkRightOf [14814,14826]
    SingleVariableDeclaration [14834,14840]
        SimpleType [14834,14838]
            SimpleName: Node [14834,14838]
        SimpleName: n [14839,14840]
    SingleVariableDeclaration [14842,14861]
        SimpleType [14842,14846]
            SimpleName: Node [14842,14846]
        SimpleName: expressionRoot [14847,14861]
    SingleVariableDeclaration [14863,14888]
        ParameterizedType [14863,14878]
            SimpleType [14863,14872]
                SimpleName: Predicate [14863,14872]
            SimpleType [14873,14877]
                SimpleName: Node [14873,14877]
        SimpleName: predicate [14879,14888]
    Block [14890,15130]
        ForStatement [14896,15108]
            VariableDeclarationExpression [14901,14911]
                SimpleType [14901,14905]
                    SimpleName: Node [14901,14905]
                VariableDeclarationFragment [14906,14911]
                    SimpleName: p [14906,14907]
                    SimpleName: n [14910,14911]
            InfixExpression [14913,14932]
                SimpleName: p [14913,14914]
                INFIX_EXPRESSION_OPERATOR: != [14915,14917]
                SimpleName: expressionRoot [14918,14932]
            Assignment [14934,14951]
                SimpleName: p [14934,14935]
                ASSIGNMENT_OPERATOR: = [14936,14937]
                MethodInvocation [14938,14951]
                    METHOD_INVOCATION_RECEIVER [14938,14939]
                        SimpleName: p [14938,14939]
                    SimpleName: getParent [14940,14949]
            Block [14953,15108]
                ForStatement [14961,15102]
                    VariableDeclarationExpression [14966,14988]
                        SimpleType [14966,14970]
                            SimpleName: Node [14966,14970]
                        VariableDeclarationFragment [14971,14988]
                            SimpleName: cur [14971,14974]
                            MethodInvocation [14977,14988]
                                METHOD_INVOCATION_RECEIVER [14977,14978]
                                    SimpleName: p [14977,14978]
                                SimpleName: getNext [14979,14986]
                    InfixExpression [14990,15001]
                        SimpleName: cur [14990,14993]
                        INFIX_EXPRESSION_OPERATOR: != [14994,14996]
                        NullLiteral [14997,15001]
                    Assignment [15003,15022]
                        SimpleName: cur [15003,15006]
                        ASSIGNMENT_OPERATOR: = [15007,15008]
                        MethodInvocation [15009,15022]
                            METHOD_INVOCATION_RECEIVER [15009,15012]
                                SimpleName: cur [15009,15012]
                            SimpleName: getNext [15013,15020]
                    Block [15024,15102]
                        IfStatement [15034,15094]
                            MethodInvocation [15038,15058]
                                METHOD_INVOCATION_RECEIVER [15038,15047]
                                    SimpleName: predicate [15038,15047]
                                SimpleName: apply [15048,15053]
                                METHOD_INVOCATION_ARGUMENTS [15054,15057]
                                    SimpleName: cur [15054,15057]
                            Block [15060,15094]
                                ReturnStatement [15072,15084]
                                    BooleanLiteral: true [15079,15083]
        ReturnStatement [15113,15126]
            BooleanLiteral: false [15120,15125]
to
TypeDeclaration [1462,12304]
at 19
===
insert-tree
---
MethodDeclaration [15134,15748]
    Javadoc [15134,15370]
        TagElement [15143,15364]
            TextElement: Given an expression by its root and sub-expression n, return true if there [15143,15217]
            TextElement: the predicate is true for some expression on the left of n. [15223,15282]
            TextElement: Example: [15293,15301]
            TextElement: Checked(), Checked(), n, NotChecked(), NotChecked(); [15312,15364]
    Modifier: private [15373,15380]
    Modifier: static [15381,15387]
    PrimitiveType: boolean [15388,15395]
    SimpleName: checkLeftOf [15396,15407]
    SingleVariableDeclaration [15415,15421]
        SimpleType [15415,15419]
            SimpleName: Node [15415,15419]
        SimpleName: n [15420,15421]
    SingleVariableDeclaration [15423,15442]
        SimpleType [15423,15427]
            SimpleName: Node [15423,15427]
        SimpleName: expressionRoot [15428,15442]
    SingleVariableDeclaration [15444,15469]
        ParameterizedType [15444,15459]
            SimpleType [15444,15453]
                SimpleName: Predicate [15444,15453]
            SimpleType [15454,15458]
                SimpleName: Node [15454,15458]
        SimpleName: predicate [15460,15469]
    Block [15471,15748]
        ForStatement [15477,15726]
            VariableDeclarationExpression [15482,15504]
                SimpleType [15482,15486]
                    SimpleName: Node [15482,15486]
                VariableDeclarationFragment [15487,15504]
                    SimpleName: p [15487,15488]
                    MethodInvocation [15491,15504]
                        METHOD_INVOCATION_RECEIVER [15491,15492]
                            SimpleName: n [15491,15492]
                        SimpleName: getParent [15493,15502]
            InfixExpression [15506,15525]
                SimpleName: p [15506,15507]
                INFIX_EXPRESSION_OPERATOR: != [15508,15510]
                SimpleName: expressionRoot [15511,15525]
            Assignment [15527,15544]
                SimpleName: p [15527,15528]
                ASSIGNMENT_OPERATOR: = [15529,15530]
                MethodInvocation [15531,15544]
                    METHOD_INVOCATION_RECEIVER [15531,15532]
                        SimpleName: p [15531,15532]
                    SimpleName: getParent [15533,15542]
            Block [15546,15726]
                ForStatement [15554,15720]
                    VariableDeclarationExpression [15559,15599]
                        SimpleType [15559,15563]
                            SimpleName: Node [15559,15563]
                        VariableDeclarationFragment [15564,15599]
                            SimpleName: cur [15564,15567]
                            MethodInvocation [15570,15599]
                                METHOD_INVOCATION_RECEIVER [15570,15583]
                                    MethodInvocation [15570,15583]
                                        METHOD_INVOCATION_RECEIVER [15570,15571]
                                            SimpleName: p [15570,15571]
                                        SimpleName: getParent [15572,15581]
                                SimpleName: getFirstChild [15584,15597]
                    InfixExpression [15601,15609]
                        SimpleName: cur [15601,15604]
                        INFIX_EXPRESSION_OPERATOR: != [15605,15607]
                        SimpleName: p [15608,15609]
                    Assignment [15621,15640]
                        SimpleName: cur [15621,15624]
                        ASSIGNMENT_OPERATOR: = [15625,15626]
                        MethodInvocation [15627,15640]
                            METHOD_INVOCATION_RECEIVER [15627,15630]
                                SimpleName: cur [15627,15630]
                            SimpleName: getNext [15631,15638]
                    Block [15642,15720]
                        IfStatement [15652,15712]
                            MethodInvocation [15656,15676]
                                METHOD_INVOCATION_RECEIVER [15656,15665]
                                    SimpleName: predicate [15656,15665]
                                SimpleName: apply [15666,15671]
                                METHOD_INVOCATION_ARGUMENTS [15672,15675]
                                    SimpleName: cur [15672,15675]
                            Block [15678,15712]
                                ReturnStatement [15690,15702]
                                    BooleanLiteral: true [15697,15701]
        ReturnStatement [15731,15744]
            BooleanLiteral: false [15738,15743]
to
TypeDeclaration [1462,12304]
at 20
===
insert-tree
---
IfStatement [9193,9282]
    MethodInvocation [9197,9249]
        SimpleName: checkRightOf [9197,9209]
        METHOD_INVOCATION_ARGUMENTS [9210,9248]
            SimpleName: def [9210,9213]
            SimpleName: defCfgNode [9215,9225]
            SimpleName: SIDE_EFFECT_PREDICATE [9227,9248]
    Block [9251,9282]
        ReturnStatement [9261,9274]
            BooleanLiteral: false [9268,9273]
to
Block [7470,9974]
at 5
===
insert-tree
---
IfStatement [9458,9546]
    MethodInvocation [9462,9513]
        SimpleName: checkLeftOf [9462,9473]
        METHOD_INVOCATION_ARGUMENTS [9474,9512]
            SimpleName: use [9474,9477]
            SimpleName: useCfgNode [9479,9489]
            SimpleName: SIDE_EFFECT_PREDICATE [9491,9512]
    Block [9515,9546]
        ReturnStatement [9525,9538]
            BooleanLiteral: false [9532,9537]
to
Block [7470,9974]
at 6
===
insert-tree
---
VariableDeclarationStatement [9728,10151]
    ParameterizedType [9728,9781]
        SimpleType [9728,9750]
            SimpleName: CheckPathsBetweenNodes [9728,9750]
        SimpleType [9751,9755]
            SimpleName: Node [9751,9755]
        SimpleType [9757,9780]
            QualifiedName: ControlFlowGraph.Branch [9757,9780]
    VariableDeclarationFragment [9790,10150]
        SimpleName: pathCheck [9790,9799]
        ClassInstanceCreation [9802,10150]
            ParameterizedType [9806,9859]
                SimpleType [9806,9828]
                    SimpleName: CheckPathsBetweenNodes [9806,9828]
                SimpleType [9829,9833]
                    SimpleName: Node [9829,9833]
                SimpleType [9835,9858]
                    QualifiedName: ControlFlowGraph.Branch [9835,9858]
            SimpleName: cfg [9876,9879]
            MethodInvocation [9896,9932]
                METHOD_INVOCATION_RECEIVER [9896,9899]
                    SimpleName: cfg [9896,9899]
                SimpleName: getDirectedGraphNode [9900,9920]
                METHOD_INVOCATION_ARGUMENTS [9921,9931]
                    SimpleName: defCfgNode [9921,9931]
            MethodInvocation [9949,9985]
                METHOD_INVOCATION_RECEIVER [9949,9952]
                    SimpleName: cfg [9949,9952]
                SimpleName: getDirectedGraphNode [9953,9973]
                METHOD_INVOCATION_ARGUMENTS [9974,9984]
                    SimpleName: useCfgNode [9974,9984]
            SimpleName: SIDE_EFFECT_PREDICATE [10002,10023]
            MethodInvocation [10040,10127]
                METHOD_INVOCATION_RECEIVER [10040,10050]
                    SimpleName: Predicates [10040,10050]
                SimpleName: alwaysTrue [10115,10125]
            BooleanLiteral: false [10144,10149]
to
Block [7470,9974]
at 7
===
insert-tree
---
IfStatement [10158,10232]
    MethodInvocation [10162,10199]
        METHOD_INVOCATION_RECEIVER [10162,10171]
            SimpleName: pathCheck [10162,10171]
        SimpleName: somePathsSatisfyPredicate [10172,10197]
    Block [10201,10232]
        ReturnStatement [10211,10224]
            BooleanLiteral: false [10218,10223]
to
Block [7470,9974]
at 8
