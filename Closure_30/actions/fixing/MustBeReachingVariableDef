===
insert-tree
---
FieldDeclaration [2589,2633]
    Modifier: private [2589,2596]
    PrimitiveType: boolean [2597,2604]
    VariableDeclarationFragment [2605,2632]
        SimpleName: unknownDependencies [2605,2624]
        BooleanLiteral: false [2627,2632]
to
TypeDeclaration [2174,2971]
at 7
===
insert-tree
---
IfStatement [14124,14179]
    QualifiedName: def.unknownDependencies [14128,14151]
    Block [14153,14179]
        ReturnStatement [14161,14173]
            BooleanLiteral: true [14168,14172]
to
Block [13737,14102]
at 4
===
move-tree
---
MethodInvocation [12769,12779]
    METHOD_INVOCATION_RECEIVER [12769,12770]
        SimpleName: n [12769,12770]
    SimpleName: isName [12771,12777]
to
IfStatement [12765,12893]
at 0
===
insert-tree
---
VariableDeclarationStatement [12843,12883]
    SimpleType [12843,12846]
        SimpleName: Var [12843,12846]
    VariableDeclarationFragment [12847,12882]
        SimpleName: dep [12847,12850]
        MethodInvocation [12853,12882]
            METHOD_INVOCATION_RECEIVER [12853,12860]
                SimpleName: jsScope [12853,12860]
            SimpleName: getVar [12861,12867]
            METHOD_INVOCATION_ARGUMENTS [12868,12881]
                MethodInvocation [12868,12881]
                    METHOD_INVOCATION_RECEIVER [12868,12869]
                        SimpleName: n [12868,12869]
                    SimpleName: getString [12870,12879]
to
Block [12824,12893]
at 0
===
insert-node
---
IfStatement [12894,13021]
to
Block [12824,12893]
at 1
===
insert-tree
---
InfixExpression [12898,12909]
    SimpleName: dep [12898,12901]
    INFIX_EXPRESSION_OPERATOR: == [12902,12904]
    NullLiteral [12905,12909]
to
IfStatement [12894,13021]
at 0
===
insert-tree
---
Block [12911,12968]
    ExpressionStatement [12925,12956]
        Assignment [12925,12955]
            QualifiedName: def.unknownDependencies [12925,12948]
            ASSIGNMENT_OPERATOR: = [12949,12950]
            BooleanLiteral: true [12951,12955]
to
IfStatement [12894,13021]
at 1
===
insert-node
---
Block [12974,13021]
to
IfStatement [12894,13021]
at 2
===
move-tree
---
ExpressionStatement [12836,12883]
    MethodInvocation [12836,12882]
        METHOD_INVOCATION_RECEIVER [12836,12847]
            QualifiedName: def.depends [12836,12847]
        SimpleName: add [12848,12851]
        METHOD_INVOCATION_ARGUMENTS [12852,12881]
            MethodInvocation [12852,12881]
                METHOD_INVOCATION_RECEIVER [12852,12859]
                    SimpleName: jsScope [12852,12859]
                SimpleName: getVar [12860,12866]
                METHOD_INVOCATION_ARGUMENTS [12867,12880]
                    MethodInvocation [12867,12880]
                        METHOD_INVOCATION_RECEIVER [12867,12868]
                            SimpleName: n [12867,12868]
                        SimpleName: getString [12869,12878]
to
Block [12974,13021]
at 0
===
insert-node
---
SimpleName: dep [13004,13007]
to
METHOD_INVOCATION_ARGUMENTS [12852,12881]
at 0
===
delete-node
---
INFIX_EXPRESSION_OPERATOR: && [12780,12782]
===
===
delete-tree
---
MethodInvocation [12783,12822]
    METHOD_INVOCATION_RECEIVER [12783,12790]
        SimpleName: jsScope [12783,12790]
    SimpleName: isDeclared [12791,12801]
    METHOD_INVOCATION_ARGUMENTS [12802,12821]
        MethodInvocation [12802,12815]
            METHOD_INVOCATION_RECEIVER [12802,12803]
                SimpleName: n [12802,12803]
            SimpleName: getString [12804,12813]
        BooleanLiteral: true [12817,12821]
===
delete-node
---
InfixExpression [12769,12822]
===
===
delete-tree
---
MethodInvocation [12852,12881]
    METHOD_INVOCATION_RECEIVER [12852,12859]
        SimpleName: jsScope [12852,12859]
    SimpleName: getVar [12860,12866]
    METHOD_INVOCATION_ARGUMENTS [12867,12880]
        MethodInvocation [12867,12880]
            METHOD_INVOCATION_RECEIVER [12867,12868]
                SimpleName: n [12867,12868]
            SimpleName: getString [12869,12878]
