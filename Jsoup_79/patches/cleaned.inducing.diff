Only in data/changesInfo//Jsoup_79/properties/modified_classes/inducing/src: main
Only in data/changesInfo//Jsoup_79/properties/modified_classes/inducing/src/test/java/org/jsoup/nodes: DocumentTest.java
Only in data/changesInfo//Jsoup_79/properties/modified_classes/inducing/src/test/java/org/jsoup/nodes: DocumentTypeTest.java
Only in data/changesInfo//Jsoup_79/properties/modified_classes/inducing/src/test/java/org/jsoup/nodes: ElementTest.java
diff -u -r data/changesInfo//Jsoup_79/properties/modified_classes/inducing/src/test/java/org/jsoup/nodes/TextNodeTest.java data/changesInfo//Jsoup_79/cleaned/inducing/src/test/java/org/jsoup/nodes/TextNodeTest.java
--- data/changesInfo//Jsoup_79/properties/modified_classes/inducing/src/test/java/org/jsoup/nodes/TextNodeTest.java	2023-12-27 22:52:01.498834427 -0800
+++ data/changesInfo//Jsoup_79/cleaned/inducing/src/test/java/org/jsoup/nodes/TextNodeTest.java	2023-07-27 02:59:34.558000000 -0700
@@ -4,6 +4,7 @@
 import org.jsoup.TextUtil;
 import org.junit.Test;
 
+import java.util.List;
 import static org.junit.Assert.*;
 
 /**
@@ -72,4 +73,12 @@
         TextNode t = doc.body().textNodes().get(0);
         assertEquals(new String(Character.toChars(135361)), t.outerHtml().trim());
     }
+
+    @Test public void testLeadNodesHaveNoChildren() {
+        Document doc = Jsoup.parse("<div>Hello there</div>");
+        Element div = doc.select("div").first();
+        TextNode tn = (TextNode) div.childNode(0);
+        List<Node> nodes = tn.childNodes();
+        assertEquals(0, nodes.size());
+    }
 }
