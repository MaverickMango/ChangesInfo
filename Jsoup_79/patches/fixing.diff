diff --git a/CHANGES b/CHANGES
index 73eb2cd..c3918ca 100644
--- a/CHANGES
+++ b/CHANGES
@@ -29,12 +29,16 @@
     <https://github.com/jhy/jsoup/issues/998>
 
   * Bugfix: when parsing from a URL, an end tag could be read incorrectly if it started on a buffer boundary.
-      <https://github.com/jhy/jsoup/issues/995>
+    <https://github.com/jhy/jsoup/issues/995>
 
   * Bugfix: when parsing from a URL, if the remote server failed to complete its write (i.e. it writes less than the
     Content Length header promised on a gzipped stream), the parse method would incorrectly throw an unchecked
     exception. It now throws the declared IOException.
-      <https://github.com/jhy/jsoup/issues/980>
+    <https://github.com/jhy/jsoup/issues/980>
+
+  * Bugfix: leaf nodes (such as text nodes) where throwing an unsupported operation exception on childNodes(), instead
+    of just returning an empty list.
+    <https://github.com/jhy/jsoup/issues/1032>
 
 *** Release 1.11.2 [2017-Nov-19]
   * Improvement: added a new pseudo selector :matchText, which allows text nodes to match as if they were elements.
diff --git a/src/main/java/org/jsoup/nodes/LeafNode.java b/src/main/java/org/jsoup/nodes/LeafNode.java
index 77bac9b..ea3605d 100644
--- a/src/main/java/org/jsoup/nodes/LeafNode.java
+++ b/src/main/java/org/jsoup/nodes/LeafNode.java
@@ -2,9 +2,12 @@
 
 import org.jsoup.helper.Validate;
 
+import java.util.Collections;
 import java.util.List;
 
 abstract class LeafNode extends Node {
+    private static final List<Node> EmptyNodes = Collections.emptyList();
+
     Object value; // either a string value, or an attribute map (in the rare case multiple attributes are set)
 
     protected final boolean hasAttributes() {
@@ -90,6 +93,6 @@
 
     @Override
     protected List<Node> ensureChildNodes() {
-        throw new UnsupportedOperationException("Leaf Nodes do not have child nodes.");
+        return EmptyNodes;
     }
 }
diff --git a/src/test/java/org/jsoup/nodes/TextNodeTest.java b/src/test/java/org/jsoup/nodes/TextNodeTest.java
index 42b35ad..1857c05 100644
--- a/src/test/java/org/jsoup/nodes/TextNodeTest.java
+++ b/src/test/java/org/jsoup/nodes/TextNodeTest.java
@@ -4,6 +4,8 @@
 import org.jsoup.TextUtil;
 import org.junit.Test;
 
+import java.util.List;
+
 import static org.junit.Assert.*;
 
 /**
@@ -72,4 +74,12 @@
         TextNode t = doc.body().textNodes().get(0);
         assertEquals(new String(Character.toChars(135361)), t.outerHtml().trim());
     }
+
+    @Test public void testLeadNodesHaveNoChildren() {
+        Document doc = Jsoup.parse("<div>Hello there</div>");
+        Element div = doc.select("div").first();
+        TextNode tn = (TextNode) div.childNode(0);
+        List<Node> nodes = tn.childNodes();
+        assertEquals(0, nodes.size());
+    }
 }
