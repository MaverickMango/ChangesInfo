{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "timeoutSecond": 300,
  "proj": "Closure",
  "id": "113",
  "workingDir": "../bugs/Closure_113_buggy",
  "inducingCommit": "87071ddf324c3885361f0375b84e15c7cd62283d",
  "originalCommit": "f081cda16ed33d28c6768c67ba55c0e6e4ddc63a",
  "bug_name": "Closure_113",
  "derive": "defects4j",
  "original_fixing_commit": "0fb76a81bbdd8ab84a00b8be2099abfb83c88668",
  "buildFiles_changed": false,
  "inducing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "processRequireCall"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "processRequireCall"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "325",
            "326",
            "330"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "325",
            "329"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex e8eacab..6f69dff 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -322,12 +322,11 @@\n       maybeAddStringNodeToSymbolTable(arg);\n \n       // Requires should be removed before runtime.  The one\n-      // exception is if the type has not been provided yet and\n-      // errors for broken requires are turned off, in which case,\n+      // exception is if the type has not been provided yet, in which case,\n       // we will be doing a later pass that may error, so we can\n       // leave this here this time and let it error next time if it\n       // is still not provided.\n-      if (provided !\u003d null || requiresLevel.isOn()) {\n+      if (provided !\u003d null) {\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: || [12342,12344]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [12345,12365]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [12325,12365]",
          "to": ""
        }
      ]
    }
  ],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "processRequireCall"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "processRequireCall"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "325",
            "329"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "325",
            "326",
            "330"
          ],
          "num": 3
        }
      ],
      "diff": "diff -u -r data/changesInfo//Closure_113/properties/modified_classes/inducing/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java data/changesInfo//Closure_113/cleaned/fixing/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n--- data/changesInfo//Closure_113/properties/modified_classes/inducing/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\t2023-08-25 13:28:58.812047345 +0800\n+++ data/changesInfo//Closure_113/cleaned/fixing/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\t2023-06-15 16:35:27.527296820 +0800\n@@ -322,11 +322,12 @@\n       maybeAddStringNodeToSymbolTable(arg);\n \n       // Requires should be removed before runtime.  The one\n-      // exception is if the type has not been provided yet, in which case,\n+      // exception is if the type has not been provided yet and\n+      // errors for broken requires are turned off, in which case,\n       // we will be doing a later pass that may error, so we can\n       // leave this here this time and let it error next time if it\n       // is still not provided.\n-      if (provided !\u003d null) {\n+      if (provided !\u003d null || requiresLevel.isOn()) {\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [12325,12365]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: || [12342,12344]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodInvocation [12345,12365]"
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}