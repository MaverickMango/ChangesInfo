{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "/home/liumengjiao/Desktop/CI/Benchmark/data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.VarCheckTest::testNoUndeclaredVarWhenUsingClosurePass",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.ProcessClosurePrimitives",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "113",
  "workingDir": "../bugs/Closure_113_buggy",
  "buggyCommit": "fa1e469dde0bdfd6978a3266db7803b8d39d1d69",
  "inducingCommit": "87071ddf324c3885361f0375b84e15c7cd62283d",
  "originalCommit": "f081cda16ed33d28c6768c67ba55c0e6e4ddc63a",
  "bug_name": "Closure_113",
  "derive": "defects4j",
  "original_fixing_commit": "0fb76a81bbdd8ab84a00b8be2099abfb83c88668",
  "regression": true,
  "inducing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.ProcessClosurePrimitives:processRequireCall:[NodeTraversal t, Node n, Node parent]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.ProcessClosurePrimitives:processRequireCall:[NodeTraversal t, Node n, Node parent]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "325",
            "326",
            "330"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "325",
            "329"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex e8eacab..6f69dff 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -322,12 +322,11 @@\n       maybeAddStringNodeToSymbolTable(arg);\n \n       // Requires should be removed before runtime.  The one\n-      // exception is if the type has not been provided yet and\n-      // errors for broken requires are turned off, in which case,\n+      // exception is if the type has not been provided yet, in which case,\n       // we will be doing a later pass that may error, so we can\n       // leave this here this time and let it error next time if it\n       // is still not provided.\n-      if (provided !\u003d null || requiresLevel.isOn()) {\n+      if (provided !\u003d null) {\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: || [12342,12344]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [12345,12365]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [12325,12365]",
          "to": ""
        }
      ]
    }
  ],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.VarCheckTest",
      "test_function": "testNoUndeclaredVarWhenUsingClosurePass",
      "assertion_line": "371",
      "exception": "junit.framework.AssertionFailedError",
      "message": "There should be one error. required \"namespace.Class1\" namespace never provided"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java",
        "src/com/google/javascript/jscomp/ProcessClosurePrimitives.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.ProcessClosurePrimitives:processRequireCall:[NodeTraversal t, Node n, Node parent]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.ProcessClosurePrimitives:processRequireCall:[NodeTraversal t, Node n, Node parent]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "324",
            "325",
            "326",
            "327",
            "328",
            "329"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "324",
            "325",
            "326",
            "327",
            "328",
            "329"
          ],
          "num": 6
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\nindex 6f69dff..85cee7c 100644\n--- a/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n+++ b/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java\n@@ -321,12 +321,12 @@\n       maybeAddToSymbolTable(left);\n       maybeAddStringNodeToSymbolTable(arg);\n \n-      // Requires should be removed before runtime.  The one\n-      // exception is if the type has not been provided yet, in which case,\n-      // we will be doing a later pass that may error, so we can\n-      // leave this here this time and let it error next time if it\n-      // is still not provided.\n-      if (provided !\u003d null) {\n+      // Requires should be removed before further processing.\n+      // Some clients run closure pass multiple times, first with\n+      // the checks for broken requires turned off. In these cases, we\n+      // allow broken requires to be preserved by the first run to\n+      // let them be caught in the subsequent run.\n+      if (provided !\u003d null || requiresLevel.isOn()) {\n         parent.detachFromParent();\n         compiler.reportCodeChange();\n       }\n",
      "operations": []
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "patch_changed_mths": {
    "qualified_names": [
      "com.google.javascript.jscomp.ProcessClosurePrimitives:processRequireCall(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V:regression"
    ],
    "num": 1
  }
}