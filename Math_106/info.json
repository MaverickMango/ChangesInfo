{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "timeoutSecond": 300,
  "proj": "Math",
  "id": "106",
  "workingDir": "../bugs/Math_106_buggy",
  "inducingCommit": "41598b038509e9cdb7f6dbeefdb2a2876d2708a6",
  "originalCommit": "351f0eabe385899e1c15651d24fe914c603a6160",
  "bug_name": "Math_106",
  "derive": "defects4j",
  "original_fixing_commit": "41ba9e00e3bbde990f6821f67f0da2a5575b9ac3",
  "buildFiles_changed": false,
  "inducing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/math/util/MathUtils.java",
        "src/java/org/apache/commons/math/util/MathUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "equals"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "lcm",
            "gcd"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "2",
            "22",
            "470"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "2",
            "22",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509"
          ],
          "num": 41
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java\nindex 4c0e5b7..7d56edc 100644\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2003-2004 The Apache Software Foundation.\n+ * Copyright 2003-2005 The Apache Software Foundation.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,7 +19,7 @@\n /**\n  * Some useful additions to the built-in functions in {@link Math}.\n  *\n- * @version $Revision: 1.20 $ $Date: 2004/10/14 04:01:04 $\n+ * @version $Revision: 1.20 $ $Date$\n  */\n public final class MathUtils {\n     \n@@ -468,4 +468,43 @@\n     public static boolean equals(double x, double y) {\n         return ((Double.isNaN(x) \u0026\u0026 Double.isNaN(y)) || x \u003d\u003d y);\n     }\n+\n+    /**\n+     * Returns the least common multiple between two integer values.\n+     * @param a the first integer value.\n+     * @param b the second integer value.\n+     * @return the least common multiple between a and b.\n+     */\n+    public static int lcm(int a, int b) {\n+        return Math.abs(a / gcd(a, b) * b);\n+    }\n+\n+    /**\n+     * Returns the greatest common divisor between two integer values.\n+     * @param a the first integer value.\n+     * @param b the second integer value.\n+     * @return the greatest common divisor between a and b.\n+     */\n+    public static int gcd(int a, int b) {\n+        int ret;\n+        \n+        if (a \u003d\u003d 0) {\n+            ret \u003d Math.abs(b);\n+        } else if (b \u003d\u003d 0) {\n+            ret \u003d Math.abs(a);\n+        } else if (a \u003c 0) {\n+            ret \u003d gcd(-a, b);\n+        } else if (b \u003c 0) {\n+            ret \u003d gcd(a, -b);\n+        } else {\n+            int r \u003d 0;\n+            while(b \u003e 0){\n+                r \u003d a % b;\n+                a \u003d b;\n+                b \u003d r;\n+            }\n+            ret \u003d a;\n+        }\n+        return ret;\n+    }\n }\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodDeclaration [15811,16124]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodDeclaration [16130,16862]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [
        "src/java/org/apache/commons/math/fraction/Fraction.java",
        "src/java/org/apache/commons/math/fraction/FractionFormat.java",
        "src/java/org/apache/commons/math/fraction/ProperFractionFormat.java"
      ],
      "num": 3
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "lcm",
        "gcd"
      ],
      "num": 2
    },
    "delete_functions": {
      "qualified_names": [
        "equals"
      ],
      "num": 1
    }
  },
  "trigger_tests": [],
  "fixing_changes": [],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}