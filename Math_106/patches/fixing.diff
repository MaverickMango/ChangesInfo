diff --git a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
index 5dfa386..a98b665 100644
--- a/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
+++ b/src/java/org/apache/commons/math/fraction/ProperFractionFormat.java
@@ -24,6 +24,10 @@
 /**
  * Formats a Fraction number in proper format.  The number format for each of
  * the whole number, numerator and, denominator can be configured.
+ * <p>
+ * Minus signs are only allowed in the whole number part - i.e.,
+ * "-3 1/2" is legitimate and denotes -7/2, but "-3 -1/2" is invalid and
+ * will result in a <code>ParseException</code>.
  * 
  * @since 1.1
  * @version $Revision$ $Date$
@@ -114,6 +118,11 @@
     /**
      * Parses a string to produce a {@link Fraction} object.  This method
      * expects the string to be formatted as a proper fraction.
+     * <p>
+     * Minus signs are only allowed in the whole number part - i.e.,
+     * "-3 1/2" is legitimate and denotes -7/2, but "-3 -1/2" is invalid and
+     * will result in a <code>ParseException</code>.
+     * 
      * @param source the string to parse
      * @param pos input/ouput parsing parameter.
      * @return the parsed {@link Fraction} object.
@@ -152,6 +161,12 @@
             pos.setIndex(initialIndex);
             return null;
         }
+        
+        if (num.intValue() < 0) {
+            // minus signs should be leading, invalid expression
+            pos.setIndex(initialIndex);
+            return null;
+        }
 
         // parse '/'
         int startIndex = pos.getIndex();
@@ -185,6 +200,12 @@
             pos.setIndex(initialIndex);
             return null;
         }
+        
+        if (den.intValue() < 0) {
+            // minus signs must be leading, invalid
+            pos.setIndex(initialIndex);
+            return null;
+        }
 
         int w = whole.intValue();
         int n = num.intValue();
diff --git a/src/test/org/apache/commons/math/fraction/FractionFormatTest.java b/src/test/org/apache/commons/math/fraction/FractionFormatTest.java
index eef7840..edfe945 100644
--- a/src/test/org/apache/commons/math/fraction/FractionFormatTest.java
+++ b/src/test/org/apache/commons/math/fraction/FractionFormatTest.java
@@ -229,6 +229,23 @@
         }
     }
     
+    public void testParseProperInvalidMinus() {
+        String source = "2 -2 / 3";
+        try {
+            Fraction c = properFormat.parse(source);
+            fail("invalid minus in improper fraction.");
+        } catch (ParseException ex) {
+            // expected
+        }
+        source = "2 2 / -3";
+        try {
+            Fraction c = properFormat.parse(source);
+            fail("invalid minus in improper fraction.");
+        } catch (ParseException ex) {
+            // expected
+        }
+    }
+    
     public void testNumeratorFormat() {
     	NumberFormat old = properFormat.getNumeratorFormat();
         NumberFormat nf = NumberFormat.getInstance();
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index 1cc4de5..a9d126c 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -49,6 +49,9 @@
       <action dev="psteitz" type="update" issue="MATH-148" due-to="Joni Salonen">
         Added QR Decomposition.
       </action>
+      <action dev="psteitz" type="fix" issue="MATH-60" due-to="Nhung Nnguyen">
+        Modified ProperFractionFormat to reject embedded minus signs.
+      </action>
     </release>
     <release version="1.1" date="2005-12-17"  
  description="This is a maintenance release containing bug fixes and enhancements.
