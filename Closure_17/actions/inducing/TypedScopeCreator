===
insert-tree
---
VariableDeclarationStatement [20077,20109]
    PrimitiveType: boolean [20077,20084]
    VariableDeclarationFragment [20085,20108]
        SimpleName: createdEnumType [20085,20100]
        BooleanLiteral: false [20103,20108]
to
Block [19017,20451]
at 6
===
insert-node
---
IfStatement [20502,20636]
to
Block [19017,20451]
at 10
===
move-tree
---
ReturnStatement [42989,43050]
    MethodInvocation [42996,43049]
        SimpleName: getDeclaredTypeInAnnotation [42996,43023]
        METHOD_INVOCATION_ARGUMENTS [43024,43048]
            SimpleName: sourceName [43024,43034]
            SimpleName: lValue [43036,43042]
            SimpleName: info [43044,43048]
to
Block [42129,43064]
at 1
===
insert-tree
---
PrefixExpression [20506,20522]
    PREFIX_EXPRESSION_OPERATOR: ! [20506,20507]
    SimpleName: createdEnumType [20507,20522]
to
IfStatement [20502,20636]
at 0
===
insert-node
---
Block [20524,20636]
to
IfStatement [20502,20636]
at 1
===
insert-tree
---
ExpressionStatement [20252,20275]
    Assignment [20252,20274]
        SimpleName: createdEnumType [20252,20267]
        ASSIGNMENT_OPERATOR: = [20268,20269]
        BooleanLiteral: true [20270,20274]
to
Block [20126,20212]
at 1
===
move-tree
---
ExpressionStatement [20353,20445]
    MethodInvocation [20353,20444]
        SimpleName: processObjectLitProperties [20353,20379]
        METHOD_INVOCATION_ARGUMENTS [20391,20443]
            SimpleName: t [20391,20392]
            SimpleName: objectLit [20394,20403]
            MethodInvocation [20405,20443]
                METHOD_INVOCATION_RECEIVER [20405,20415]
                    SimpleName: ObjectType [20405,20415]
                SimpleName: cast [20416,20420]
                METHOD_INVOCATION_ARGUMENTS [20421,20442]
                    MethodInvocation [20421,20442]
                        METHOD_INVOCATION_RECEIVER [20421,20430]
                            SimpleName: objectLit [20421,20430]
                        SimpleName: getJSType [20431,20440]
to
Block [20524,20636]
at 0
===
insert-node
---
IfStatement [42663,43357]
to
IfStatement [42258,43058]
at 2
===
insert-node
---
Block [42681,43357]
to
IfStatement [42663,43357]
at 0
===
move-tree
---
IfStatement [42472,43058]
    InfixExpression [42476,42519]
        InfixExpression [42476,42488]
            SimpleName: info [42476,42480]
            INFIX_EXPRESSION_OPERATOR: != [42481,42483]
            NullLiteral [42484,42488]
        INFIX_EXPRESSION_OPERATOR: && [42489,42491]
        MethodInvocation [42492,42519]
            METHOD_INVOCATION_RECEIVER [42492,42496]
                SimpleName: info [42492,42496]
            SimpleName: hasEnumParameterType [42497,42517]
    Block [42521,42769]
        IfStatement [42531,42761]
            InfixExpression [42535,42588]
                InfixExpression [42535,42549]
                    SimpleName: rValue [42535,42541]
                    INFIX_EXPRESSION_OPERATOR: != [42542,42544]
                    NullLiteral [42545,42549]
                INFIX_EXPRESSION_OPERATOR: && [42550,42552]
                InfixExpression [42553,42588]
                    MethodInvocation [42553,42569]
                        METHOD_INVOCATION_RECEIVER [42553,42559]
                            SimpleName: rValue [42553,42559]
                        SimpleName: getType [42560,42567]
                    INFIX_EXPRESSION_OPERATOR: == [42570,42572]
                    QualifiedName: Token.OBJECTLIT [42573,42588]
            Block [42590,42638]
                ReturnStatement [42602,42628]
                    MethodInvocation [42609,42627]
                        METHOD_INVOCATION_RECEIVER [42609,42615]
                            SimpleName: rValue [42609,42615]
                        SimpleName: getJSType [42616,42625]
            Block [42644,42761]
                ReturnStatement [42656,42751]
                    MethodInvocation [42663,42750]
                        SimpleName: createEnumTypeFromNodes [42663,42686]
                        METHOD_INVOCATION_ARGUMENTS [42702,42749]
                            SimpleName: rValue [42702,42708]
                            MethodInvocation [42710,42735]
                                METHOD_INVOCATION_RECEIVER [42710,42716]
                                    SimpleName: lValue [42710,42716]
                                SimpleName: getQualifiedName [42717,42733]
                            SimpleName: info [42737,42741]
                            SimpleName: lValue [42743,42749]
    IfStatement [42775,43058]
        InfixExpression [42779,42856]
            InfixExpression [42779,42791]
                SimpleName: info [42779,42783]
                INFIX_EXPRESSION_OPERATOR: != [42784,42786]
                NullLiteral [42787,42791]
            INFIX_EXPRESSION_OPERATOR: && [42792,42794]
            ParenthesizedExpression [42812,42856]
                InfixExpression [42813,42855]
                    MethodInvocation [42813,42833]
                        METHOD_INVOCATION_RECEIVER [42813,42817]
                            SimpleName: info [42813,42817]
                        SimpleName: isConstructor [42818,42831]
                    INFIX_EXPRESSION_OPERATOR: || [42834,42836]
                    MethodInvocation [42837,42855]
                        METHOD_INVOCATION_RECEIVER [42837,42841]
                            SimpleName: info [42837,42841]
                        SimpleName: isInterface [42842,42853]
        Block [42858,42973]
            ReturnStatement [42868,42965]
                MethodInvocation [42875,42964]
                    SimpleName: createFunctionTypeFromNodes [42875,42902]
                    METHOD_INVOCATION_ARGUMENTS [42916,42963]
                        SimpleName: rValue [42916,42922]
                        MethodInvocation [42924,42949]
                            METHOD_INVOCATION_RECEIVER [42924,42930]
                                SimpleName: lValue [42924,42930]
                            SimpleName: getQualifiedName [42931,42947]
                        SimpleName: info [42951,42955]
                        SimpleName: lValue [42957,42963]
        Block [42979,43058]
            ReturnStatement [42989,43050]
                MethodInvocation [42996,43049]
                    SimpleName: getDeclaredTypeInAnnotation [42996,43023]
                    METHOD_INVOCATION_ARGUMENTS [43024,43048]
                        SimpleName: sourceName [43024,43034]
                        SimpleName: lValue [43036,43042]
                        SimpleName: info [43044,43048]
to
Block [42681,43357]
at 0
===
move-tree
---
MethodInvocation [42492,42519]
    METHOD_INVOCATION_RECEIVER [42492,42496]
        SimpleName: info [42492,42496]
    SimpleName: hasEnumParameterType [42497,42517]
to
IfStatement [42472,43058]
at 0
===
move-tree
---
InfixExpression [42813,42855]
    MethodInvocation [42813,42833]
        METHOD_INVOCATION_RECEIVER [42813,42817]
            SimpleName: info [42813,42817]
        SimpleName: isConstructor [42818,42831]
    INFIX_EXPRESSION_OPERATOR: || [42834,42836]
    MethodInvocation [42837,42855]
        METHOD_INVOCATION_RECEIVER [42837,42841]
            SimpleName: info [42837,42841]
        SimpleName: isInterface [42842,42853]
to
IfStatement [42775,43058]
at 0
===
insert-tree
---
IfStatement [43167,43349]
    InfixExpression [43171,43299]
        InfixExpression [43171,43248]
            InfixExpression [43171,43206]
                MethodInvocation [43171,43188]
                    METHOD_INVOCATION_RECEIVER [43171,43175]
                        SimpleName: info [43171,43175]
                    SimpleName: isConstant [43176,43186]
                INFIX_EXPRESSION_OPERATOR: && [43189,43191]
                InfixExpression [43192,43206]
                    SimpleName: rValue [43192,43198]
                    INFIX_EXPRESSION_OPERATOR: != [43199,43201]
                    NullLiteral [43202,43206]
            INFIX_EXPRESSION_OPERATOR: && [43219,43221]
            InfixExpression [43222,43248]
                MethodInvocation [43222,43240]
                    METHOD_INVOCATION_RECEIVER [43222,43228]
                        SimpleName: rValue [43222,43228]
                    SimpleName: getJSType [43229,43238]
                INFIX_EXPRESSION_OPERATOR: != [43241,43243]
                NullLiteral [43244,43248]
        INFIX_EXPRESSION_OPERATOR: && [43261,43263]
        PrefixExpression [43264,43299]
            PREFIX_EXPRESSION_OPERATOR: ! [43264,43265]
            MethodInvocation [43265,43299]
                METHOD_INVOCATION_RECEIVER [43265,43283]
                    MethodInvocation [43265,43283]
                        METHOD_INVOCATION_RECEIVER [43265,43271]
                            SimpleName: rValue [43265,43271]
                        SimpleName: getJSType [43272,43281]
                SimpleName: isUnknownType [43284,43297]
    Block [43301,43349]
        ReturnStatement [43313,43339]
            MethodInvocation [43320,43338]
                METHOD_INVOCATION_RECEIVER [43320,43326]
                    SimpleName: rValue [43320,43326]
                SimpleName: getJSType [43327,43336]
to
IfStatement [42775,43058]
at 3
===
insert-tree
---
ParenthesizedExpression [50589,50675]
    InfixExpression [50590,50674]
        InfixExpression [50590,50628]
            MethodInvocation [50590,50607]
                METHOD_INVOCATION_RECEIVER [50590,50594]
                    SimpleName: info [50590,50594]
                SimpleName: isConstant [50595,50605]
            INFIX_EXPRESSION_OPERATOR: && [50608,50610]
            InfixExpression [50611,50628]
                SimpleName: valueType [50611,50620]
                INFIX_EXPRESSION_OPERATOR: != [50621,50623]
                NullLiteral [50624,50628]
        INFIX_EXPRESSION_OPERATOR: && [50645,50647]
        PrefixExpression [50648,50674]
            PREFIX_EXPRESSION_OPERATOR: ! [50648,50649]
            MethodInvocation [50649,50674]
                METHOD_INVOCATION_RECEIVER [50649,50658]
                    SimpleName: valueType [50649,50658]
                SimpleName: isUnknownType [50659,50672]
to
InfixExpression [50088,50200]
at 3
===
delete-node
---
INFIX_EXPRESSION_OPERATOR: && [42489,42491]
===
===
delete-node
---
InfixExpression [42476,42519]
===
===
delete-node
---
INFIX_EXPRESSION_OPERATOR: && [42792,42794]
===
===
delete-node
---
ParenthesizedExpression [42812,42856]
===
===
delete-node
---
InfixExpression [42779,42856]
===
===
delete-node
---
Block [42979,43058]
===
===
multi-move-tree
---
InfixExpression [42476,42488]
    SimpleName: info [42476,42480]
    INFIX_EXPRESSION_OPERATOR: != [42481,42483]
    NullLiteral [42484,42488]
to
InfixExpression [42667,42679]
at -1
===
multi-move-tree
---
InfixExpression [42779,42791]
    SimpleName: info [42779,42783]
    INFIX_EXPRESSION_OPERATOR: != [42784,42786]
    NullLiteral [42787,42791]
to
InfixExpression [42667,42679]
at -1
