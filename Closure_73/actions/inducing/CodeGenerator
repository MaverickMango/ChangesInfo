===
insert-tree
---
ImportDeclaration [635,674]
    QualifiedName: com.google.common.base.Charsets [642,673]
to
CompilationUnit [0,26589]
at 1
===
insert-tree
---
ImportDeclaration [894,926]
    QualifiedName: java.nio.charset.Charset [901,925]
to
CompilationUnit [0,26589]
at 7
===
insert-tree
---
ImportDeclaration [927,966]
    QualifiedName: java.nio.charset.CharsetEncoder [934,965]
to
CompilationUnit [0,26589]
at 8
===
insert-tree
---
FieldDeclaration [1139,1189]
    Modifier: private [1139,1146]
    Modifier: final [1147,1152]
    SimpleType [1153,1167]
        SimpleName: CharsetEncoder [1153,1167]
    VariableDeclarationFragment [1168,1188]
        SimpleName: outputCharsetEncoder [1168,1188]
to
TypeDeclaration [855,26588]
at 4
===
insert-tree
---
MethodDeclaration [1193,1746]
    SimpleName: CodeGenerator [1193,1206]
    SingleVariableDeclaration [1207,1228]
        SimpleType [1207,1219]
            SimpleName: CodeConsumer [1207,1219]
        SimpleName: consumer [1220,1228]
    SingleVariableDeclaration [1230,1251]
        SimpleType [1230,1237]
            SimpleName: Charset [1230,1237]
        SimpleName: outputCharset [1238,1251]
    Block [1253,1746]
        ExpressionStatement [1259,1273]
            Assignment [1259,1272]
                SimpleName: cc [1259,1261]
                ASSIGNMENT_OPERATOR: = [1262,1263]
                SimpleName: consumer [1264,1272]
        IfStatement [1278,1742]
            InfixExpression [1282,1341]
                InfixExpression [1282,1303]
                    SimpleName: outputCharset [1282,1295]
                    INFIX_EXPRESSION_OPERATOR: == [1296,1298]
                    NullLiteral [1299,1303]
                INFIX_EXPRESSION_OPERATOR: || [1304,1306]
                InfixExpression [1307,1341]
                    SimpleName: outputCharset [1307,1320]
                    INFIX_EXPRESSION_OPERATOR: == [1321,1323]
                    QualifiedName: Charsets.US_ASCII [1324,1341]
            Block [1343,1667]
                ExpressionStatement [1628,1661]
                    Assignment [1628,1660]
                        FieldAccess [1628,1653]
                            ThisExpression [1628,1632]
                            SimpleName: outputCharsetEncoder [1633,1653]
                        ASSIGNMENT_OPERATOR: = [1654,1655]
                        NullLiteral [1656,1660]
            Block [1673,1742]
                ExpressionStatement [1681,1736]
                    Assignment [1681,1735]
                        FieldAccess [1681,1706]
                            ThisExpression [1681,1685]
                            SimpleName: outputCharsetEncoder [1686,1706]
                        ASSIGNMENT_OPERATOR: = [1707,1708]
                        MethodInvocation [1709,1735]
                            METHOD_INVOCATION_RECEIVER [1709,1722]
                                SimpleName: outputCharset [1709,1722]
                            SimpleName: newEncoder [1723,1733]
to
TypeDeclaration [855,26588]
at 5
===
insert-node
---
MethodDeclaration [22559,22743]
to
TypeDeclaration [855,26588]
at 22
===
insert-tree
---
SingleVariableDeclaration [21799,21834]
    SimpleType [21799,21813]
        SimpleName: CharsetEncoder [21799,21813]
    SimpleName: outputCharsetEncoder [21814,21834]
to
MethodDeclaration [20911,21713]
at 5
===
insert-tree
---
Javadoc [22559,22592]
    TagElement [22563,22590]
        TextElement: Escapes regular expression  [22563,22590]
to
MethodDeclaration [22559,22743]
at 0
===
insert-node
---
Modifier: static [22595,22601]
to
MethodDeclaration [22559,22743]
at 1
===
insert-tree
---
SimpleType [22602,22608]
    SimpleName: String [22602,22608]
to
MethodDeclaration [22559,22743]
at 2
===
insert-node
---
SimpleName: regexpEscape [22609,22621]
to
MethodDeclaration [22559,22743]
at 3
===
insert-tree
---
SingleVariableDeclaration [22622,22630]
    SimpleType [22622,22628]
        SimpleName: String [22622,22628]
    SimpleName: s [22629,22630]
to
MethodDeclaration [22559,22743]
at 4
===
insert-tree
---
SingleVariableDeclaration [22632,22667]
    SimpleType [22632,22646]
        SimpleName: CharsetEncoder [22632,22646]
    SimpleName: outputCharsetEncoder [22647,22667]
to
MethodDeclaration [22559,22743]
at 5
===
insert-node
---
Block [22669,22743]
to
MethodDeclaration [22559,22743]
at 6
===
insert-tree
---
SingleVariableDeclaration [23252,23287]
    SimpleType [23252,23266]
        SimpleName: CharsetEncoder [23252,23266]
    SimpleName: outputCharsetEncoder [23267,23287]
to
MethodDeclaration [21846,23818]
at 9
===
insert-tree
---
ConstructorInvocation [1793,1814]
    SimpleName: consumer [1798,1806]
    NullLiteral [1808,1812]
to
Block [1063,1087]
at 0
===
move-tree
---
ReturnStatement [21796,21838]
    MethodInvocation [21803,21837]
        SimpleName: strEscape [21803,21812]
        METHOD_INVOCATION_ARGUMENTS [21813,21836]
            SimpleName: s [21813,21814]
            CharacterLiteral: '/' [21816,21819]
            StringLiteral: "\"" [21821,21825]
            StringLiteral: "'" [21827,21830]
            StringLiteral: "\\" [21832,21836]
to
Block [22669,22743]
at 0
===
insert-tree
---
ReturnStatement [22915,22944]
    MethodInvocation [22922,22943]
        SimpleName: regexpEscape [22922,22934]
        METHOD_INVOCATION_ARGUMENTS [22935,22942]
            SimpleName: s [22935,22936]
            NullLiteral [22938,22942]
to
Block [21790,21842]
at 0
===
insert-node
---
SimpleName: outputCharsetEncoder [22529,22549]
to
METHOD_INVOCATION_ARGUMENTS [21665,21707]
at 5
===
insert-node
---
SimpleName: outputCharsetEncoder [22717,22737]
to
METHOD_INVOCATION_ARGUMENTS [21813,21836]
at 5
===
insert-node
---
IfStatement [24576,25465]
to
SwitchStatement [22265,23760]
at 27
===
insert-tree
---
InfixExpression [24580,24608]
    SimpleName: outputCharsetEncoder [24580,24600]
    INFIX_EXPRESSION_OPERATOR: != [24601,24603]
    NullLiteral [24604,24608]
to
IfStatement [24576,25465]
at 0
===
insert-tree
---
Block [24610,24853]
    IfStatement [24624,24841]
        MethodInvocation [24628,24661]
            METHOD_INVOCATION_RECEIVER [24628,24648]
                SimpleName: outputCharsetEncoder [24628,24648]
            SimpleName: canEncode [24649,24658]
            METHOD_INVOCATION_ARGUMENTS [24659,24660]
                SimpleName: c [24659,24660]
        Block [24663,24706]
            ExpressionStatement [24679,24692]
                MethodInvocation [24679,24691]
                    METHOD_INVOCATION_RECEIVER [24679,24681]
                        SimpleName: sb [24679,24681]
                    SimpleName: append [24682,24688]
                    METHOD_INVOCATION_ARGUMENTS [24689,24690]
                        SimpleName: c [24689,24690]
        Block [24712,24841]
            ExpressionStatement [24775,24827]
                MethodInvocation [24775,24826]
                    METHOD_INVOCATION_RECEIVER [24775,24785]
                        SimpleName: StringUtil [24775,24785]
                    SimpleName: appendHexJavaScriptRepresentation [24786,24819]
                    METHOD_INVOCATION_ARGUMENTS [24820,24825]
                        SimpleName: sb [24820,24822]
                        SimpleName: c [24824,24825]
to
IfStatement [24576,25465]
at 1
===
insert-node
---
Block [24859,25465]
to
IfStatement [24576,25465]
at 2
===
insert-node
---
SimpleName: outputCharsetEncoder [6991,7011]
to
METHOD_INVOCATION_ARGUMENTS [6241,6258]
at 1
===
move-tree
---
IfStatement [23345,23752]
    InfixExpression [23349,23369]
        InfixExpression [23349,23357]
            SimpleName: c [23349,23350]
            INFIX_EXPRESSION_OPERATOR: > [23351,23352]
            NumberLiteral: 0x1F [23353,23357]
        INFIX_EXPRESSION_OPERATOR: && [23358,23360]
        InfixExpression [23361,23369]
            SimpleName: c [23361,23362]
            INFIX_EXPRESSION_OPERATOR: < [23363,23364]
            NumberLiteral: 0x7F [23365,23369]
    Block [23371,23475]
        ExpressionStatement [23450,23463]
            MethodInvocation [23450,23462]
                METHOD_INVOCATION_RECEIVER [23450,23452]
                    SimpleName: sb [23450,23452]
                SimpleName: append [23453,23459]
                METHOD_INVOCATION_ARGUMENTS [23460,23461]
                    SimpleName: c [23460,23461]
    Block [23481,23752]
        ExpressionStatement [23688,23740]
            MethodInvocation [23688,23739]
                METHOD_INVOCATION_RECEIVER [23688,23698]
                    SimpleName: StringUtil [23688,23698]
                SimpleName: appendHexJavaScriptRepresentation [23699,23732]
                METHOD_INVOCATION_ARGUMENTS [23733,23738]
                    SimpleName: sb [23733,23735]
                    SimpleName: c [23737,23738]
to
Block [24859,25465]
at 0
===
insert-node
---
SimpleName: outputCharsetEncoder [14726,14746]
to
METHOD_INVOCATION_ARGUMENTS [13958,13971]
at 1
===
update-node
---
NumberLiteral: 0x1F [23353,23357]
replace 0x1F by 0x1f
===
update-node
---
INFIX_EXPRESSION_OPERATOR: < [23363,23364]
replace < by <=
===
update-node
---
NumberLiteral: 0x7F [23365,23369]
replace 0x7F by 0x7f
===
delete-tree
---
ExpressionStatement [1069,1083]
    Assignment [1069,1082]
        SimpleName: cc [1069,1071]
        ASSIGNMENT_OPERATOR: = [1072,1073]
        SimpleName: consumer [1074,1082]
===
delete-tree
---
Javadoc [21717,21750]
    TagElement [21721,21748]
        TextElement: Escapes regular expression  [21721,21748]
