===
insert-tree
---
ImportDeclaration [691,730]
    QualifiedName: com.google.common.base.Charsets [698,729]
to
CompilationUnit [0,32605]
at 2
===
insert-tree
---
ImportDeclaration [1266,1298]
    QualifiedName: java.nio.charset.Charset [1273,1297]
to
CompilationUnit [0,32605]
at 17
===
insert-tree
---
FieldDeclaration [8838,8945]
    NormalAnnotation [8838,8886]
        SimpleName: FlagSpec [8839,8847]
        MemberValuePair [8848,8885]
            SimpleName: help [8848,8852]
            StringLiteral: "Input charset for all files." [8855,8885]
    Modifier: static [8889,8895]
    Modifier: final [8896,8901]
    ParameterizedType [8902,8914]
        SimpleType [8902,8906]
            SimpleName: Flag [8902,8906]
        SimpleType [8907,8913]
            SimpleName: String [8907,8913]
    VariableDeclarationFragment [8915,8944]
        SimpleName: FLAG_charset [8915,8927]
        MethodInvocation [8930,8944]
            METHOD_INVOCATION_RECEIVER [8930,8934]
                SimpleName: Flag [8930,8934]
            SimpleName: value [8935,8940]
            METHOD_INVOCATION_ARGUMENTS [8941,8943]
                StringLiteral: "" [8941,8943]
to
TypeDeclaration [1362,32604]
at 31
===
insert-tree
---
FieldDeclaration [9032,9068]
    Modifier: private [9032,9039]
    Modifier: static [9040,9046]
    SimpleType [9047,9054]
        SimpleName: Charset [9047,9054]
    VariableDeclarationFragment [9055,9067]
        SimpleName: inputCharset [9055,9067]
to
TypeDeclaration [1362,32604]
at 35
===
insert-tree
---
MethodDeclaration [25094,25782]
    Javadoc [25094,25417]
        TagElement [25103,25289]
            TextElement: Query the flag for the charset, and return a Charset object representing [25103,25175]
            TextElement: the selection.  Keep this in a separate function [25181,25229]
            TextElement: so it can be called both in static and normal methods. [25235,25289]
        TagElement [25300,25342]
            TextElement:  Charset to use when reading inputs [25307,25342]
        TagElement [25348,25411]
            SimpleName: FlagUsageException [25356,25374]
            TextElement:  if flag is not a valid Charset name. [25374,25411]
    Modifier: private [25420,25427]
    Modifier: static [25428,25434]
    SimpleType [25435,25442]
        SimpleName: Charset [25435,25442]
    SimpleName: getInputCharset [25443,25458]
    SimpleType [25468,25486]
        SimpleName: FlagUsageException [25468,25486]
    Block [25487,25782]
        IfStatement [25493,25751]
            PrefixExpression [25497,25526]
                PREFIX_EXPRESSION_OPERATOR: ! [25497,25498]
                MethodInvocation [25498,25526]
                    METHOD_INVOCATION_RECEIVER [25498,25516]
                        MethodInvocation [25498,25516]
                            METHOD_INVOCATION_RECEIVER [25498,25510]
                                SimpleName: FLAG_charset [25498,25510]
                            SimpleName: get [25511,25514]
                    SimpleName: isEmpty [25517,25524]
            Block [25528,25751]
                IfStatement [25536,25695]
                    PrefixExpression [25540,25580]
                        PREFIX_EXPRESSION_OPERATOR: ! [25540,25541]
                        MethodInvocation [25541,25580]
                            METHOD_INVOCATION_RECEIVER [25541,25548]
                                SimpleName: Charset [25541,25548]
                            SimpleName: isSupported [25549,25560]
                            METHOD_INVOCATION_ARGUMENTS [25561,25579]
                                MethodInvocation [25561,25579]
                                    METHOD_INVOCATION_RECEIVER [25561,25573]
                                        SimpleName: FLAG_charset [25561,25573]
                                    SimpleName: get [25574,25577]
                    Block [25582,25695]
                        ThrowStatement [25592,25687]
                            ClassInstanceCreation [25598,25686]
                                SimpleType [25602,25620]
                                    SimpleName: FlagUsageException [25602,25620]
                                InfixExpression [25621,25685]
                                    MethodInvocation [25621,25639]
                                        METHOD_INVOCATION_RECEIVER [25621,25633]
                                            SimpleName: FLAG_charset [25621,25633]
                                        SimpleName: get [25634,25637]
                                    INFIX_EXPRESSION_OPERATOR: + [25640,25641]
                                    StringLiteral: " is not a valid charset name." [25654,25685]
                ReturnStatement [25702,25745]
                    MethodInvocation [25709,25744]
                        METHOD_INVOCATION_RECEIVER [25709,25716]
                            SimpleName: Charset [25709,25716]
                        SimpleName: forName [25717,25724]
                        METHOD_INVOCATION_ARGUMENTS [25725,25743]
                            MethodInvocation [25725,25743]
                                METHOD_INVOCATION_RECEIVER [25725,25737]
                                    SimpleName: FLAG_charset [25725,25737]
                                SimpleName: get [25738,25741]
        ReturnStatement [25756,25778]
            QualifiedName: Charsets.UTF_8 [25763,25777]
to
TypeDeclaration [1362,32604]
at 55
===
insert-tree
---
SimpleType [10617,10635]
    SimpleName: FlagUsageException [10617,10635]
to
MethodDeclaration [10321,11100]
at 6
===
insert-tree
---
ExpressionStatement [11352,11385]
    Assignment [11352,11384]
        SimpleName: inputCharset [11352,11364]
        ASSIGNMENT_OPERATOR: = [11365,11366]
        MethodInvocation [11367,11384]
            SimpleName: getInputCharset [11367,11382]
to
Block [10386,11100]
at 5
===
insert-tree
---
IfStatement [21350,21499]
    InfixExpression [21354,21384]
        SimpleName: inputCharset [21354,21366]
        INFIX_EXPRESSION_OPERATOR: == [21367,21369]
        QualifiedName: Charsets.UTF_8 [21370,21384]
    Block [21386,21442]
        ExpressionStatement [21394,21436]
            Assignment [21394,21435]
                QualifiedName: options.outputCharset [21394,21415]
                ASSIGNMENT_OPERATOR: = [21416,21417]
                QualifiedName: Charsets.US_ASCII [21418,21435]
    Block [21448,21499]
        ExpressionStatement [21456,21493]
            Assignment [21456,21492]
                QualifiedName: options.outputCharset [21456,21477]
                ASSIGNMENT_OPERATOR: = [21478,21479]
                SimpleName: inputCharset [21480,21492]
to
Block [20383,24327]
at 9
===
insert-node
---
InfixExpression [27938,27997]
to
IfStatement [26479,26691]
at 0
===
move-tree
---
MethodInvocation [26483,26521]
    METHOD_INVOCATION_RECEIVER [26483,26496]
        SimpleName: sourceMapPath [26483,26496]
    SimpleName: contains [26497,26505]
    METHOD_INVOCATION_ARGUMENTS [26506,26520]
        QualifiedName: File.separator [26506,26520]
to
InfixExpression [27938,27997]
at 0
===
insert-node
---
INFIX_EXPRESSION_OPERATOR: || [27966,27968]
to
InfixExpression [27938,27997]
at 1
===
insert-tree
---
MethodInvocation [27969,27997]
    METHOD_INVOCATION_RECEIVER [27969,27982]
        SimpleName: sourceMapPath [27969,27982]
    SimpleName: contains [27983,27991]
    METHOD_INVOCATION_ARGUMENTS [27992,27996]
        StringLiteral: "\\" [27992,27996]
to
InfixExpression [27938,27997]
at 2
===
update-node
---
SimpleName: equals [20788,20794]
replace equals by isEmpty
===
insert-node
---
VariableDeclarationStatement [12848,12917]
to
Block [12549,12611]
at 0
===
insert-tree
---
ExpressionStatement [12926,12946]
    MethodInvocation [12926,12945]
        METHOD_INVOCATION_RECEIVER [12926,12932]
            SimpleName: inputs [12926,12932]
        SimpleName: add [12933,12936]
        METHOD_INVOCATION_ARGUMENTS [12937,12944]
            SimpleName: newFile [12937,12944]
to
Block [12549,12611]
at 1
===
insert-node
---
StringLiteral: "/" [27961,27964]
to
METHOD_INVOCATION_ARGUMENTS [26506,26520]
at 0
===
insert-tree
---
SimpleType [12848,12860]
    SimpleName: JSSourceFile [12848,12860]
to
VariableDeclarationStatement [12848,12917]
at 0
===
insert-node
---
VariableDeclarationFragment [12861,12916]
to
VariableDeclarationStatement [12848,12917]
at 1
===
insert-tree
---
MethodInvocation [21594,21613]
    METHOD_INVOCATION_RECEIVER [21594,21606]
        SimpleName: inputCharset [21594,21606]
    SimpleName: name [21607,21611]
to
ClassInstanceCreation [20814,20851]
at 2
===
insert-node
---
SimpleName: newFile [12861,12868]
to
VariableDeclarationFragment [12861,12916]
at 0
===
move-tree
---
MethodInvocation [12570,12601]
    METHOD_INVOCATION_RECEIVER [12570,12582]
        SimpleName: JSSourceFile [12570,12582]
    SimpleName: fromFile [12583,12591]
    METHOD_INVOCATION_ARGUMENTS [12592,12600]
        SimpleName: filename [12592,12600]
to
VariableDeclarationFragment [12861,12916]
at 1
===
insert-node
---
SimpleName: inputCharset [12903,12915]
to
METHOD_INVOCATION_ARGUMENTS [12592,12600]
at 1
===
delete-tree
---
METHOD_INVOCATION_RECEIVER [12559,12565]
    SimpleName: inputs [12559,12565]
===
delete-node
---
SimpleName: add [12566,12569]
===
===
delete-node
---
METHOD_INVOCATION_ARGUMENTS [12570,12601]
===
===
delete-node
---
MethodInvocation [12559,12602]
===
===
delete-node
---
ExpressionStatement [12559,12603]
===
===
delete-tree
---
METHOD_INVOCATION_ARGUMENTS [20795,20797]
    StringLiteral: "" [20795,20797]
===
delete-node
---
QualifiedName: File.separator [26506,26520]
===
