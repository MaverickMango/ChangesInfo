===
insert-tree
---
MethodDeclaration [9588,10190]
    Modifier: public [9588,9594]
    PrimitiveType: void [9595,9599]
    SimpleName: testIssue311 [9600,9612]
    Block [9615,10190]
        ExpressionStatement [9621,10186]
            MethodInvocation [9621,10185]
                SimpleName: test [9621,9625]
                METHOD_INVOCATION_ARGUMENTS [9626,10184]
                    InfixExpression [9626,9929]
                        StringLiteral: "function a(b) {\n" [9626,9645]
                        INFIX_EXPRESSION_OPERATOR: + [9646,9647]
                        StringLiteral: "  switch (b.v) {\n" [9657,9677]
                        StringLiteral: "    case 'SWITCH':\n" [9689,9711]
                        StringLiteral: "      if (b.i >= 0) {\n" [9723,9748]
                        StringLiteral: "        return b.o;\n" [9760,9783]
                        StringLiteral: "      } else {\n" [9795,9813]
                        StringLiteral: "        return;\n" [9825,9844]
                        StringLiteral: "      }\n" [9856,9867]
                        StringLiteral: "      break;\n" [9879,9895]
                        StringLiteral: "  }\n" [9907,9914]
                        StringLiteral: "}" [9926,9929]
                    InfixExpression [9940,10184]
                        StringLiteral: "function a(b) {\n" [9940,9959]
                        INFIX_EXPRESSION_OPERATOR: + [9960,9961]
                        StringLiteral: "  switch (b.v) {\n" [9971,9991]
                        StringLiteral: "    case 'SWITCH':\n" [10003,10025]
                        StringLiteral: "      if (b.i >= 0) {\n" [10037,10062]
                        StringLiteral: "        return b.o;\n" [10074,10097]
                        StringLiteral: "      } else {\n" [10109,10127]
                        StringLiteral: "      }\n" [10139,10150]
                        StringLiteral: "  }\n" [10162,10169]
                        StringLiteral: "}" [10181,10184]
to
TypeDeclaration [653,9247]
at 24
===
insert-tree
---
ExpressionStatement [9004,9121]
    MethodInvocation [9004,9120]
        SimpleName: test [9004,9008]
        METHOD_INVOCATION_ARGUMENTS [9009,9119]
            StringLiteral: "switch (a) { case 'a': break; case 'b': case 'c': }" [9009,9062]
            StringLiteral: "switch (a) { case 'a': case 'b': case 'c': }" [9073,9119]
to
Block [8816,9245]
at 1
===
insert-tree
---
ExpressionStatement [9314,9476]
    MethodInvocation [9314,9475]
        SimpleName: test [9314,9318]
        METHOD_INVOCATION_ARGUMENTS [9319,9474]
            InfixExpression [9319,9402]
                StringLiteral: "function foo() {" [9319,9337]
                INFIX_EXPRESSION_OPERATOR: + [9338,9339]
                StringLiteral: "  switch (a) { case 'a':return; case 'b': case 'c': }}" [9346,9402]
            StringLiteral: "function foo() { switch (a) { case 'a': case 'b': case 'c': }}" [9410,9474]
to
Block [8816,9245]
at 3
===
update-node
---
StringLiteral: "switch (a) { case 'a': case 'b': case 'c': }" [8904,8950]
replace "switch (a) { case 'a': case 'b': case 'c': }" by "switch (a) { case 'a': break; case 'b': case 'c': }"
===
update-node
---
StringLiteral: "function foo() { switch (a) { case 'a': case 'b': case 'c': }}" [9072,9136]
replace "function foo() { switch (a) { case 'a': case 'b': case 'c': }}" by "function foo() { switch (a) { case 'a':return; case 'b': case 'c': }}"
