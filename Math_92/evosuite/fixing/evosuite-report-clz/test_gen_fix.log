cd /home/liumengjiao/Desktop/CI/Benchmark/../bugs/Math_92_fix && timeout 300000 gen_tests.pl -g evosuite -p Math -v 92f -n 3 -o /home/liumengjiao/Desktop/CI/Evosuite/Math_92/ -b 300 >> evosuite-report-clz/test_gen_fix.log 2>&1

--------------------------------------------------------------------------------
                     Defects4j Execution Environment 
--------------------------------------------------------------------------------
PWD.........................../home/liumengjiao/Desktop/CI/bugs/Math_92_fix
SHELL........................./bin/bash
TZ............................America/Los_Angeles
JAVA_HOME...................../usr/local/lib/jdk1.8.0_351
Java Exec...................../usr/local/lib/jdk1.8.0_351/bin/java
Java Exec Resolved............/usr/local/lib/jdk1.8.0_351/bin/java
Java Version:
  java version "1.8.0_351"
  Java(TM) SE Runtime Environment (build 1.8.0_351-b10)
  Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)
Git version...................git version 2.34.1
SVN version...................1.14.1
Perl version..................v5.34.0
--------------------------------------------------------------------------------
Checking out 85a8ab2d to /tmp/gen_tests.pl_571672_1695218501............... OK
Executed command: git clone /home/liumengjiao/Desktop/defects4j/project_repos/commons-math.git /tmp/gen_tests.pl_571672_1695218501 2>&1 && cd /tmp/gen_tests.pl_571672_1695218501 && git checkout 85a8ab2dcfc26e83be1514acdb11d3feaac3e73d 2>&1
Cloning into '/tmp/gen_tests.pl_571672_1695218501'...
done.
Note: switching to '85a8ab2dcfc26e83be1514acdb11d3feaac3e73d'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 85a8ab2dc Fixed error in binomial coefficient computation JIRA: MATH-241 Reported and patched by Christian Semrau
Init local repository...................................................... OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501 && git init 2>&1 && git config user.name defects4j 2>&1 && git config user.email defects4j@localhost 2>&1 && git config core.autocrlf false 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_571672_1695218501/.git/
Tag post-fix revision...................................................... OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501 && git init 2>&1 && echo ".svn" > .gitignore && git add -A 2>&1 && git commit -a -m D4J_Math_92_POST_FIX_REVISION 2>&1 && git tag D4J_Math_92_POST_FIX_REVISION 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_571672_1695218501/.git/
[detached HEAD f6f1d2e60] D4J_Math_92_POST_FIX_REVISION
 2 files changed, 4 insertions(+)
 create mode 100644 .defects4j.config
 create mode 100644 .gitignore
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Math/failing_tests/85a8ab2dcfc26e83be1514acdb11d3feaac3e73d /tmp/gen_tests.pl_571672_1695218501/src/test
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Math/random_tests /tmp/gen_tests.pl_571672_1695218501/src/test
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Math/broken_tests /tmp/gen_tests.pl_571672_1695218501/src/test
Initialize fixed program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501 && git add -A 2>&1 && git commit -a -m "D4J_Math_92_FIXED_VERSION" 2>&1 && git tag D4J_Math_92_FIXED_VERSION 2>&1
[detached HEAD 33c534b2c] D4J_Math_92_FIXED_VERSION
 11 files changed, 887 insertions(+), 41 deletions(-)
 create mode 100644 defects4j.build.properties
 create mode 100644 src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java.bak
 create mode 100644 src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java.bak
 create mode 100644 src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java.bak
 create mode 100644 src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java.bak
 create mode 100644 src/test/org/apache/commons/math/stat/descriptive/summary/SumTest.java.bak
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501; git apply -p1 /home/liumengjiao/Desktop/defects4j/framework/projects/Math/patches/92.src.patch 2>&1
Initialize buggy program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501 && git add -A 2>&1 && git commit -a -m "D4J_Math_92_BUGGY_VERSION" 2>&1 && git tag D4J_Math_92_BUGGY_VERSION 2>&1
[detached HEAD f0b9c26ed] D4J_Math_92_BUGGY_VERSION
 2 files changed, 7 insertions(+), 50 deletions(-)
Diff 85a8ab2d:63c7bc9d..................................................... OK
Executed command: git --git-dir=/home/liumengjiao/Desktop/defects4j/project_repos/commons-math.git diff --no-ext-diff --binary 85a8ab2dcfc26e83be1514acdb11d3feaac3e73d 63c7bc9d7cbee21a7f6acc5a9b85d1b8b0e3a205 
diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java
index 03c92eb20..8cb759075 100644
--- a/src/java/org/apache/commons/math/util/MathUtils.java
+++ b/src/java/org/apache/commons/math/util/MathUtils.java
@@ -181,42 +181,11 @@ public final class MathUtils {
         if ((k == 1) || (k == n - 1)) {
             return n;
         }
-        // Use symmetry for large k
-        if (k > n / 2)
-            return binomialCoefficient(n, n - k);
-        
-        // We use the formula
-        // (n choose k) = n! / (n-k)! / k!
-        // (n choose k) == ((n-k+1)*...*n) / (1*...*k)
-        // which could be written
-        // (n choose k) == (n-1 choose k-1) * n / k
-        long result = 1;
-        if (n <= 61) {
-            // For n <= 61, the naive implementation cannot overflow.
-            for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
-                result = result * i / j;
-            }
-        } else if (n <= 66) {
-            // For n > 61 but n <= 66, the result cannot overflow,
-            // but we must take care not to overflow intermediate values.
-            for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
-                // We know that (result * i) is divisible by j,
-                // but (result * i) may overflow, so we split j:
-                // Filter out the gcd, d, so j/d and i/d are integer.
-                // result is divisible by (j/d) because (j/d)
-                // is relative prime to (i/d) and is a divisor of
-                // result * (i/d).
-                long d = gcd(i, j);
-                result = (result / (j / d)) * (i / d);
-            }
-        } else {
-            // For n > 66, a result overflow might occur, so we check
-            // the multiplication, taking care to not overflow
-            // unnecessary.
-            for (int j = 1, i = n - k + 1; j <= k; i++, j++) {
-                long d = gcd(i, j);
-                result = mulAndCheck((result / (j / d)), (i / d));
-            }
+
+        long result = Math.round(binomialCoefficientDouble(n, k));
+        if (result == Long.MAX_VALUE) {
+            throw new ArithmeticException(
+                "result too large to represent in a long integer");
         }
         return result;
     }
@@ -244,33 +213,7 @@ public final class MathUtils {
      * @throws IllegalArgumentException if preconditions are not met.
      */
     public static double binomialCoefficientDouble(final int n, final int k) {
-        if (n < k) {
-            throw new IllegalArgumentException(
-                "must have n >= k for binomial coefficient (n,k)");
-        }
-        if (n < 0) {
-            throw new IllegalArgumentException(
-                "must have n >= 0 for binomial coefficient (n,k)");
-        }
-        if ((n == k) || (k == 0)) {
-            return 1d;
-        }
-        if ((k == 1) || (k == n - 1)) {
-            return n;
-        }
-        if (k > n/2) {
-            return binomialCoefficientDouble(n, n - k);
-        }
-        if (n < 67) {
-            return binomialCoefficient(n,k);
-        }
-        
-        double result = 1d;
-        for (int i = 1; i <= k; i++) {
-             result *= (double)(n - k + i) / (double)i;
-        }
-  
-        return Math.floor(result + 0.5);
+        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);
     }
     
     /**
@@ -304,28 +247,8 @@ public final class MathUtils {
             return 0;
         }
         if ((k == 1) || (k == n - 1)) {
-            return Math.log((double) n);
-        }
-        
-        /*
-         * For values small enough to do exact integer computation,
-         * return the log of the exact value 
-         */
-        if (n < 67) {  
-            return Math.log(binomialCoefficient(n,k));
+            return Math.log((double)n);
         }
-        
-        /*
-         * Return the log of binomialCoefficientDouble for values that will not
-         * overflow binomialCoefficientDouble
-         */
-        if (n < 1030) { 
-            return Math.log(binomialCoefficientDouble(n, k));
-        } 
-        
-        /*
-         * Sum logs for values that could overflow
-         */
         double logSum = 0;
 
         // n!/k!
@@ -338,7 +261,7 @@ public final class MathUtils {
             logSum -= Math.log((double)i);
         }
 
-        return logSum;      
+        return logSum;
     }
     
     /**
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index 8d5cb7eee..8ecb0f686 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -39,9 +39,6 @@ The <action> type attribute can be add,update,fix,remove.
   </properties>
   <body>
     <release version="2.0" date="TBD" description="TBD">
-      <action dev="psteitz" type="fix" issue="MATH-241" due-to="Christian Semrau">
-        Fixed error in binomial coefficient computation.
-      </action>
       <action dev="luc" type="add" >
         Added a Legendre-Gauss integrator.
       </action>
diff --git a/src/test/org/apache/commons/math/util/MathUtilsTest.java b/src/test/org/apache/commons/math/util/MathUtilsTest.java
index 0648cb3f7..8b953579d 100644
--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java
+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java
@@ -14,10 +14,6 @@
 package org.apache.commons.math.util;
 
 import java.math.BigDecimal;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
 
 import junit.framework.Test;
 import junit.framework.TestCase;
@@ -43,37 +39,17 @@ public final class MathUtilsTest extends TestCase {
         return suite;
     }
 
-    /** cached binomial coefficients */
-    private static List<Map<Integer, Long>> binomialCache = new ArrayList<Map<Integer, Long>>();
-
     /**
-     * Exact (caching) recursive implementation to test against
+     * Exact recursive implementation to test against
      */
-    private long binomialCoefficient(int n, int k) throws ArithmeticException {
-        if (binomialCache.size() > n) {
-            Long cachedResult = binomialCache.get(n).get(new Integer(k));
-            if (cachedResult != null) {
-                return cachedResult.longValue();
-            }
-        }
-        long result = -1;
+    private long binomialCoefficient(int n, int k) {
         if ((n == k) || (k == 0)) {
-            result = 1;
-        } else if ((k == 1) || (k == n - 1)) {
-            result = n;
-        } else {
-            result = MathUtils.addAndCheck(binomialCoefficient(n - 1, k - 1),
-                binomialCoefficient(n - 1, k));
-        }
-        if (result == -1) {
-            throw new ArithmeticException(
-                "error computing binomial coefficient");
+            return 1;
         }
-        for (int i = binomialCache.size(); i < n + 1; i++) {
-            binomialCache.add(new HashMap<Integer, Long>());
+        if ((k == 1) || (k == n - 1)) {
+            return n;
         }
-        binomialCache.get(n).put(new Integer(k), new Long(result));
-        return result;
+        return binomialCoefficient(n - 1, k - 1) + binomialCoefficient(n - 1, k);
     }
 
     /**
@@ -165,63 +141,12 @@ public final class MathUtilsTest extends TestCase {
             }
         }
 
-        assertEquals(binomialCoefficient(34, 17), MathUtils
-            .binomialCoefficient(34, 17));
-    }
-
-    /**
-     * Tests correctness for large n and sharpness of upper bound in API doc
-     * JIRA: MATH-241
-     */
-    public void testBinomialCoefficientLarge() throws Exception {
-        // This tests all legal and illegal values for n <= 200.
-        for (int n = 0; n <= 200; n++) {
-            for (int k = 0; k <= n; k++) {
-                long ourResult = -1;
-                long exactResult = -1;
-                boolean shouldThrow = false;
-                boolean didThrow = false;
-                try {
-                    ourResult = MathUtils.binomialCoefficient(n, k);
-                } catch (ArithmeticException ex) {
-                    didThrow = true;
-                }
-                try {
-                    exactResult = binomialCoefficient(n, k);
-                } catch (ArithmeticException ex) {
-                    shouldThrow = true;
-                }
-                assertEquals(n+","+k, shouldThrow, didThrow);
-                assertEquals(n+","+k, exactResult, ourResult);
-                assertTrue(n+","+k, (n > 66 || !didThrow));
-            }
-        }
-
-        long ourResult = MathUtils.binomialCoefficient(300, 3);
-        long exactResult = binomialCoefficient(300, 3);
-        assertEquals(exactResult, ourResult);
-
-        ourResult = MathUtils.binomialCoefficient(700, 697);
-        exactResult = binomialCoefficient(700, 697);
-        assertEquals(exactResult, ourResult);
-
-        // This one should throw
-        try {
-            MathUtils.binomialCoefficient(700, 300);
-            fail("Expecting ArithmeticException");
-        } catch (ArithmeticException ex) {
-            // Expected
-        }
-
-        // Larger values cannot be computed directly by our
-        // test implementation because of stack limitations,
-        // so we make little jumps to fill the cache.
-        for (int i = 2000; i <= 10000; i += 2000) {
-            ourResult = MathUtils.binomialCoefficient(i, 3);
-            exactResult = binomialCoefficient(i, 3);
-            assertEquals(exactResult, ourResult);
-        }
-
+        /*
+         * Takes a long time for recursion to unwind, but succeeds and yields
+         * exact value = 2,333,606,220
+         * assertEquals(MathUtils.binomialCoefficient(34,17),
+         * binomialCoefficient(34,17));
+         */
     }
 
     public void testBinomialCoefficientFail() {
@@ -245,12 +170,6 @@ public final class MathUtilsTest extends TestCase {
         } catch (IllegalArgumentException ex) {
             ;
         }
-        try {
-            MathUtils.binomialCoefficient(67, 30);
-            fail("expecting ArithmeticException");
-        } catch (ArithmeticException ex) {
-            ;
-        }
         try {
             MathUtils.binomialCoefficient(67, 34);
             fail("expecting ArithmeticException");
@@ -258,8 +177,7 @@ public final class MathUtilsTest extends TestCase {
             ;
         }
         double x = MathUtils.binomialCoefficientDouble(1030, 515);
-        assertTrue("expecting infinite binomial coefficient", Double
-            .isInfinite(x));
+        assertTrue("expecting infinite binomial coefficient", Double.isInfinite(x));
     }
 
     public void testCosh() {
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501; git apply -p1 /tmp/gen_tests.pl_571672_1695218501/.defects4j.diff 2>&1
Tag pre-fix revision....................................................... OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501 && git add -A 2>&1 && git commit -a -m "D4J_Math_92_PRE_FIX_REVISION" 2>&1 && git tag D4J_Math_92_PRE_FIX_REVISION 2>&1
[detached HEAD 38f2bb635] D4J_Math_92_PRE_FIX_REVISION
 3 files changed, 21 insertions(+), 183 deletions(-)
Check out program version: Math-92f........................................ OK
Executed command: cd /tmp/gen_tests.pl_571672_1695218501 && git checkout D4J_Math_92_FIXED_VERSION 2>&1
Previous HEAD position was 38f2bb635 D4J_Math_92_PRE_FIX_REVISION
HEAD is now at 33c534b2c D4J_Math_92_FIXED_VERSION
Running ant (compile)...................................................... OK
Executed command:  cd /tmp/gen_tests.pl_571672_1695218501 && /home/liumengjiao/Desktop/defects4j/major/bin/ant -f /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/home/liumengjiao/Desktop/defects4j -Dd4j.dir.projects=/home/liumengjiao/Desktop/defects4j/framework/projects -Dbasedir=/tmp/gen_tests.pl_571672_1695218501 -Dbuild.compiler=javac1.7  compile 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml

init:
    [mkdir] Created dir: /tmp/gen_tests.pl_571672_1695218501/target/lib

get-deps:

compile:
    [mkdir] Created dir: /tmp/gen_tests.pl_571672_1695218501/target/classes
    [javac] /tmp/gen_tests.pl_571672_1695218501/build.xml:46: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 278 source files to /tmp/gen_tests.pl_571672_1695218501/target/classes
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/MessageFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/MissingResourceException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArithmeticException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArrayIndexOutOfBoundsException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ListResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/FieldPosition.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParsePosition.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Externalizable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/BufferedReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStreamReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Random.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/MessageDigest.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/SecureRandom.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchAlgorithmException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchProviderException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/net/MalformedURLException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintWriter.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/MessageFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/MissingResourceException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArithmeticException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArrayIndexOutOfBoundsException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ListResourceBundle.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Deprecated.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/FieldPosition.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParsePosition.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Double.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] Note: /tmp/gen_tests.pl_571672_1695218501/src/java/org/apache/commons/math/stat/Frequency.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 100 warnings
    [mkdir] Created dir: /tmp/gen_tests.pl_571672_1695218501/target/classes/META-INF
     [copy] Copying 1 file to /tmp/gen_tests.pl_571672_1695218501/target/classes/META-INF

BUILD SUCCESSFUL
Total time: 1 second
Creating temporary output directory........................................ OK
Executed command: mkdir -p /tmp/gen_tests.pl_571672_1695218501/evosuite
Generating (regression) tests with: evosuite............................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/bin/evosuite.sh

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class org.apache.commons.math.util.MathUtils     -projectCP /tmp/gen_tests.pl_571672_1695218501/target/classes:/home/liumengjiao/Desktop/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar     -seed 3092     -Dsearch_budget=150     -Dassertion_timeout=150     -Dtest_dir=/tmp/gen_tests.pl_571672_1695218501/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: org.apache.commons.math.util.MathUtils
* Starting Client-0
* Connecting to master process on port 12691
* Analyzing classpath: 
  - /tmp/gen_tests.pl_571672_1695218501/target/classes
  - /home/liumengjiao/Desktop/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.util.MathUtils
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 275
* Using seed 3092
* Starting evolution
* Initial Number of Goals in DynaMOSA = 101 / 275
* Search finished after 151s and 8733 generations, 2201046 statements, best individual has fitness: 2.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 275
* Number of covered goals: 273
* Generated 129 tests with total length 137
* Resulting test suite's coverage: 99%
* Generating assertions
* Resulting test suite's mutation score: 60%
* Writing tests to file
* Writing JUnit test case 'MathUtils_ESTest' to /tmp/gen_tests.pl_571672_1695218501/evosuite
* Done!

* Computation finished
OK
Creating test suite archive................................................ OK
Executed command: tar -cjf /tmp/gen_tests.pl_571672_1695218501/Math-92f-evosuite.3.tar.bz2 -C /tmp/gen_tests.pl_571672_1695218501/evosuite/ .
Creating output directory.................................................. OK
Executed command: mkdir -p /home/liumengjiao/Desktop/CI/Evosuite/Math_92//Math/evosuite/3
Moving test suite archive to /home/liumengjiao/Desktop/CI/Evosuite/Math_92/ OK
Executed command: mv /tmp/gen_tests.pl_571672_1695218501/Math-92f-evosuite.3.tar.bz2 /home/liumengjiao/Desktop/CI/Evosuite/Math_92//Math/evosuite/3
