===
insert-tree
---
MethodDeclaration [2968,3062]
    Modifier: public [2968,2974]
    PrimitiveType: void [2975,2979]
    SimpleName: testDoNotExitConditional2 [2980,3005]
    Block [3008,3062]
        ExpressionStatement [3014,3058]
            MethodInvocation [3014,3057]
                SimpleName: testSame [3014,3022]
                METHOD_INVOCATION_ARGUMENTS [3023,3056]
                    StringLiteral: "if (true) var x = 1; var z = x;" [3023,3056]
to
TypeDeclaration [636,15066]
at 22
===
insert-tree
---
MethodDeclaration [3067,3162]
    Modifier: public [3067,3073]
    PrimitiveType: void [3074,3078]
    SimpleName: testDoNotExitConditional3 [3079,3104]
    Block [3107,3162]
        ExpressionStatement [3113,3158]
            MethodInvocation [3113,3157]
                SimpleName: testSame [3113,3121]
                METHOD_INVOCATION_ARGUMENTS [3122,3156]
                    StringLiteral: "var x; if (true) x=1; var z = x;" [3122,3156]
to
TypeDeclaration [636,15066]
at 23
===
insert-tree
---
MethodDeclaration [4449,5284]
    Modifier: public [4449,4455]
    PrimitiveType: void [4456,4460]
    SimpleName: testOnlyReadAtInitialization [4461,4489]
    Block [4492,5284]
        ExpressionStatement [4498,4534]
            MethodInvocation [4498,4533]
                SimpleName: test [4498,4502]
                METHOD_INVOCATION_ARGUMENTS [4503,4532]
                    StringLiteral: "var a; a = foo();" [4503,4522]
                    StringLiteral: "foo();" [4524,4532]
        ExpressionStatement [4539,4611]
            MethodInvocation [4539,4610]
                SimpleName: test [4539,4543]
                METHOD_INVOCATION_ARGUMENTS [4544,4609]
                    StringLiteral: "var a; if (a = foo()) { alert(3); }" [4544,4581]
                    StringLiteral: "if (foo()) { alert(3); }" [4583,4609]
        ExpressionStatement [4616,4673]
            MethodInvocation [4616,4672]
                SimpleName: test [4616,4620]
                METHOD_INVOCATION_ARGUMENTS [4621,4671]
                    StringLiteral: "var a; switch (a = foo()) {}" [4621,4651]
                    StringLiteral: "switch(foo()) {}" [4653,4671]
        ExpressionStatement [4678,4769]
            MethodInvocation [4678,4768]
                SimpleName: test [4678,4682]
                METHOD_INVOCATION_ARGUMENTS [4683,4767]
                    StringLiteral: "var a; function f(){ return a = foo(); }" [4683,4725]
                    StringLiteral: "function f(){ return foo(); }" [4736,4767]
        ExpressionStatement [4774,4865]
            MethodInvocation [4774,4864]
                SimpleName: test [4774,4778]
                METHOD_INVOCATION_ARGUMENTS [4779,4863]
                    StringLiteral: "function f(){ var a; return a = foo(); }" [4779,4821]
                    StringLiteral: "function f(){ return foo(); }" [4832,4863]
        ExpressionStatement [4870,4946]
            MethodInvocation [4870,4945]
                SimpleName: test [4870,4874]
                METHOD_INVOCATION_ARGUMENTS [4875,4944]
                    StringLiteral: "var a; with (a = foo()) { alert(3); }" [4875,4914]
                    StringLiteral: "with (foo()) { alert(3); }" [4916,4944]
        ExpressionStatement [4952,4998]
            MethodInvocation [4952,4997]
                SimpleName: test [4952,4956]
                METHOD_INVOCATION_ARGUMENTS [4957,4996]
                    StringLiteral: "var a; b = (a = foo());" [4957,4982]
                    StringLiteral: "b = foo();" [4984,4996]
        ExpressionStatement [5003,5088]
            MethodInvocation [5003,5087]
                SimpleName: test [5003,5007]
                METHOD_INVOCATION_ARGUMENTS [5008,5086]
                    StringLiteral: "var a; while(a = foo()) { alert(3); }" [5008,5047]
                    StringLiteral: "while(foo()) { alert(3); }" [5058,5086]
        ExpressionStatement [5093,5178]
            MethodInvocation [5093,5177]
                SimpleName: test [5093,5097]
                METHOD_INVOCATION_ARGUMENTS [5098,5176]
                    StringLiteral: "var a; for(;a = foo();) { alert(3); }" [5098,5137]
                    StringLiteral: "for(;foo();) { alert(3); }" [5148,5176]
        ExpressionStatement [5183,5280]
            MethodInvocation [5183,5279]
                SimpleName: test [5183,5187]
                METHOD_INVOCATION_ARGUMENTS [5188,5278]
                    StringLiteral: "var a; do {} while(a = foo()) { alert(3); }" [5188,5233]
                    StringLiteral: "do {} while(foo()) { alert(3); }" [5244,5278]
to
TypeDeclaration [636,15066]
at 31
===
insert-tree
---
MethodDeclaration [5288,6065]
    Modifier: public [5288,5294]
    PrimitiveType: void [5295,5299]
    SimpleName: testImmutableWithSingleReferenceAfterInitialzation [5300,5350]
    Block [5353,6065]
        ExpressionStatement [5359,5387]
            MethodInvocation [5359,5386]
                SimpleName: test [5359,5363]
                METHOD_INVOCATION_ARGUMENTS [5364,5385]
                    StringLiteral: "var a; a = 1;" [5364,5379]
                    StringLiteral: "1;" [5381,5385]
        ExpressionStatement [5392,5456]
            MethodInvocation [5392,5455]
                SimpleName: test [5392,5396]
                METHOD_INVOCATION_ARGUMENTS [5397,5454]
                    StringLiteral: "var a; if (a = 1) { alert(3); }" [5397,5430]
                    StringLiteral: "if (1) { alert(3); }" [5432,5454]
        ExpressionStatement [5461,5510]
            MethodInvocation [5461,5509]
                SimpleName: test [5461,5465]
                METHOD_INVOCATION_ARGUMENTS [5466,5508]
                    StringLiteral: "var a; switch (a = 1) {}" [5466,5492]
                    StringLiteral: "switch(1) {}" [5494,5508]
        ExpressionStatement [5515,5598]
            MethodInvocation [5515,5597]
                SimpleName: test [5515,5519]
                METHOD_INVOCATION_ARGUMENTS [5520,5596]
                    StringLiteral: "var a; function f(){ return a = 1; }" [5520,5558]
                    StringLiteral: "function f(){ return 1; }" [5569,5596]
        ExpressionStatement [5603,5686]
            MethodInvocation [5603,5685]
                SimpleName: test [5603,5607]
                METHOD_INVOCATION_ARGUMENTS [5608,5684]
                    StringLiteral: "function f(){ var a; return a = 1; }" [5608,5646]
                    StringLiteral: "function f(){ return 1; }" [5657,5684]
        ExpressionStatement [5691,5759]
            MethodInvocation [5691,5758]
                SimpleName: test [5691,5695]
                METHOD_INVOCATION_ARGUMENTS [5696,5757]
                    StringLiteral: "var a; with (a = 1) { alert(3); }" [5696,5731]
                    StringLiteral: "with (1) { alert(3); }" [5733,5757]
        ExpressionStatement [5765,5803]
            MethodInvocation [5765,5802]
                SimpleName: test [5765,5769]
                METHOD_INVOCATION_ARGUMENTS [5770,5801]
                    StringLiteral: "var a; b = (a = 1);" [5770,5791]
                    StringLiteral: "b = 1;" [5793,5801]
        ExpressionStatement [5808,5885]
            MethodInvocation [5808,5884]
                SimpleName: test [5808,5812]
                METHOD_INVOCATION_ARGUMENTS [5813,5883]
                    StringLiteral: "var a; while(a = 1) { alert(3); }" [5813,5848]
                    StringLiteral: "while(1) { alert(3); }" [5859,5883]
        ExpressionStatement [5890,5967]
            MethodInvocation [5890,5966]
                SimpleName: test [5890,5894]
                METHOD_INVOCATION_ARGUMENTS [5895,5965]
                    StringLiteral: "var a; for(;a = 1;) { alert(3); }" [5895,5930]
                    StringLiteral: "for(;1;) { alert(3); }" [5941,5965]
        ExpressionStatement [5972,6061]
            MethodInvocation [5972,6060]
                SimpleName: test [5972,5976]
                METHOD_INVOCATION_ARGUMENTS [5977,6059]
                    StringLiteral: "var a; do {} while(a = 1) { alert(3); }" [5977,6018]
                    StringLiteral: "do {} while(1) { alert(3); }" [6029,6059]
to
TypeDeclaration [636,15066]
at 32
===
insert-tree
---
MethodDeclaration [6069,6677]
    Modifier: public [6069,6075]
    PrimitiveType: void [6076,6080]
    SimpleName: testSingleReferenceAfterInitialzation [6081,6118]
    Block [6121,6677]
        ExpressionStatement [6127,6165]
            MethodInvocation [6127,6164]
                SimpleName: test [6127,6131]
                METHOD_INVOCATION_ARGUMENTS [6132,6163]
                    StringLiteral: "var a; a = foo();a;" [6132,6153]
                    StringLiteral: "foo();" [6155,6163]
        ExpressionStatement [6170,6221]
            MethodInvocation [6170,6220]
                SimpleName: testSame [6170,6178]
                METHOD_INVOCATION_ARGUMENTS [6179,6219]
                    StringLiteral: "var a; if (a = foo()) { alert(3); } a;" [6179,6219]
        ExpressionStatement [6226,6270]
            MethodInvocation [6226,6269]
                SimpleName: testSame [6226,6234]
                METHOD_INVOCATION_ARGUMENTS [6235,6268]
                    StringLiteral: "var a; switch (a = foo()) {} a;" [6235,6268]
        ExpressionStatement [6275,6331]
            MethodInvocation [6275,6330]
                SimpleName: testSame [6275,6283]
                METHOD_INVOCATION_ARGUMENTS [6284,6329]
                    StringLiteral: "var a; function f(){ return a = foo(); } a;" [6284,6329]
        ExpressionStatement [6336,6391]
            MethodInvocation [6336,6390]
                SimpleName: testSame [6336,6344]
                METHOD_INVOCATION_ARGUMENTS [6345,6389]
                    StringLiteral: "function f(){ var a; return a = foo(); a;}" [6345,6389]
        ExpressionStatement [6396,6449]
            MethodInvocation [6396,6448]
                SimpleName: testSame [6396,6404]
                METHOD_INVOCATION_ARGUMENTS [6405,6447]
                    StringLiteral: "var a; with (a = foo()) { alert(3); } a;" [6405,6447]
        ExpressionStatement [6454,6493]
            MethodInvocation [6454,6492]
                SimpleName: testSame [6454,6462]
                METHOD_INVOCATION_ARGUMENTS [6463,6491]
                    StringLiteral: "var a; b = (a = foo()); a;" [6463,6491]
        ExpressionStatement [6498,6551]
            MethodInvocation [6498,6550]
                SimpleName: testSame [6498,6506]
                METHOD_INVOCATION_ARGUMENTS [6507,6549]
                    StringLiteral: "var a; while(a = foo()) { alert(3); } a;" [6507,6549]
        ExpressionStatement [6556,6609]
            MethodInvocation [6556,6608]
                SimpleName: testSame [6556,6564]
                METHOD_INVOCATION_ARGUMENTS [6565,6607]
                    StringLiteral: "var a; for(;a = foo();) { alert(3); } a;" [6565,6607]
        ExpressionStatement [6614,6673]
            MethodInvocation [6614,6672]
                SimpleName: testSame [6614,6622]
                METHOD_INVOCATION_ARGUMENTS [6623,6671]
                    StringLiteral: "var a; do {} while(a = foo()) { alert(3); } a;" [6623,6671]
to
TypeDeclaration [636,15066]
at 33
===
insert-tree
---
MethodDeclaration [16062,16233]
    Modifier: public [16062,16068]
    PrimitiveType: void [16069,16073]
    SimpleName: testInlineAliases1b [16074,16093]
    Block [16096,16233]
        ExpressionStatement [16102,16229]
            MethodInvocation [16102,16228]
                SimpleName: test [16102,16106]
                METHOD_INVOCATION_ARGUMENTS [16107,16227]
                    StringLiteral: "var x = this.foo(); this.bar(); var y; y = x; this.baz(y);" [16107,16167]
                    StringLiteral: "var x = this.foo(); this.bar(); x; this.baz(x);" [16178,16227]
to
TypeDeclaration [636,15066]
at 81
===
insert-tree
---
MethodDeclaration [16237,16408]
    Modifier: public [16237,16243]
    PrimitiveType: void [16244,16248]
    SimpleName: testInlineAliases1c [16249,16268]
    Block [16271,16408]
        ExpressionStatement [16277,16404]
            MethodInvocation [16277,16403]
                SimpleName: test [16277,16281]
                METHOD_INVOCATION_ARGUMENTS [16282,16402]
                    StringLiteral: "var x; x = this.foo(); this.bar(); var y = x; this.baz(y);" [16282,16342]
                    StringLiteral: "var x; x = this.foo(); this.bar(); this.baz(x);" [16353,16402]
to
TypeDeclaration [636,15066]
at 82
===
insert-tree
---
MethodDeclaration [16412,16589]
    Modifier: public [16412,16418]
    PrimitiveType: void [16419,16423]
    SimpleName: testInlineAliases1d [16424,16443]
    Block [16446,16589]
        ExpressionStatement [16452,16585]
            MethodInvocation [16452,16584]
                SimpleName: test [16452,16456]
                METHOD_INVOCATION_ARGUMENTS [16457,16583]
                    StringLiteral: "var x; x = this.foo(); this.bar(); var y; y = x; this.baz(y);" [16457,16520]
                    StringLiteral: "var x; x = this.foo(); this.bar(); x; this.baz(x);" [16531,16583]
to
TypeDeclaration [636,15066]
at 83
===
insert-tree
---
MethodDeclaration [16809,17025]
    Modifier: public [16809,16815]
    PrimitiveType: void [16816,16820]
    SimpleName: testInlineAliases2b [16821,16840]
    Block [16843,17025]
        ExpressionStatement [16849,17021]
            MethodInvocation [16849,17020]
                SimpleName: test [16849,16853]
                METHOD_INVOCATION_ARGUMENTS [16854,17019]
                    InfixExpression [16854,16945]
                        StringLiteral: "var x = this.foo(); this.bar(); " [16854,16888]
                        INFIX_EXPRESSION_OPERATOR: + [16889,16890]
                        StringLiteral: "function f() { var y; y = x; this.baz(y); }" [16900,16945]
                    StringLiteral: "var x = this.foo(); this.bar(); function f() { this.baz(x); }" [16956,17019]
to
TypeDeclaration [636,15066]
at 85
===
insert-tree
---
MethodDeclaration [17029,17248]
    Modifier: public [17029,17035]
    PrimitiveType: void [17036,17040]
    SimpleName: testInlineAliases2c [17041,17060]
    Block [17063,17248]
        ExpressionStatement [17069,17244]
            MethodInvocation [17069,17243]
                SimpleName: test [17069,17073]
                METHOD_INVOCATION_ARGUMENTS [17074,17242]
                    InfixExpression [17074,17165]
                        StringLiteral: "var x; x = this.foo(); this.bar(); " [17074,17111]
                        INFIX_EXPRESSION_OPERATOR: + [17112,17113]
                        StringLiteral: "function f() { var y = x; this.baz(y); }" [17123,17165]
                    StringLiteral: "var x; x = this.foo(); this.bar(); function f() { this.baz(x); }" [17176,17242]
to
TypeDeclaration [636,15066]
at 86
===
insert-tree
---
MethodDeclaration [17252,17474]
    Modifier: public [17252,17258]
    PrimitiveType: void [17259,17263]
    SimpleName: testInlineAliases2d [17264,17283]
    Block [17286,17474]
        ExpressionStatement [17292,17470]
            MethodInvocation [17292,17469]
                SimpleName: test [17292,17296]
                METHOD_INVOCATION_ARGUMENTS [17297,17468]
                    InfixExpression [17297,17391]
                        StringLiteral: "var x; x = this.foo(); this.bar(); " [17297,17334]
                        INFIX_EXPRESSION_OPERATOR: + [17335,17336]
                        StringLiteral: "function f() { var y; y = x; this.baz(y); }" [17346,17391]
                    StringLiteral: "var x; x = this.foo(); this.bar(); function f() { this.baz(x); }" [17402,17468]
to
TypeDeclaration [636,15066]
at 87
===
insert-tree
---
MethodDeclaration [17611,17744]
    Modifier: public [17611,17617]
    PrimitiveType: void [17618,17622]
    SimpleName: testNoInlineAliases1b [17623,17644]
    Block [17647,17744]
        ExpressionStatement [17653,17740]
            MethodInvocation [17653,17739]
                SimpleName: testSame [17653,17661]
                METHOD_INVOCATION_ARGUMENTS [17671,17738]
                    StringLiteral: "var x = this.foo(); this.bar(); var y; y = x; x = 3; this.baz(y);" [17671,17738]
to
TypeDeclaration [636,15066]
at 89
===
insert-tree
---
MethodDeclaration [17882,18016]
    Modifier: public [17882,17888]
    PrimitiveType: void [17889,17893]
    SimpleName: testNoInlineAliases2b [17894,17915]
    Block [17918,18016]
        ExpressionStatement [17924,18012]
            MethodInvocation [17924,18011]
                SimpleName: testSame [17924,17932]
                METHOD_INVOCATION_ARGUMENTS [17942,18010]
                    StringLiteral: "var x = this.foo(); this.bar(); var y; y = x; y = 3; this.baz(y); " [17942,18010]
to
TypeDeclaration [636,15066]
at 91
===
insert-tree
---
MethodDeclaration [18221,18422]
    Modifier: public [18221,18227]
    PrimitiveType: void [18228,18232]
    SimpleName: testNoInlineAliases3b [18233,18254]
    Block [18257,18422]
        ExpressionStatement [18263,18418]
            MethodInvocation [18263,18417]
                SimpleName: testSame [18263,18271]
                METHOD_INVOCATION_ARGUMENTS [18282,18416]
                    InfixExpression [18282,18416]
                        StringLiteral: "var x = this.foo(); this.bar(); " [18282,18316]
                        INFIX_EXPRESSION_OPERATOR: + [18317,18318]
                        StringLiteral: "function f() { var y; y = x; g(); this.baz(y); } " [18328,18379]
                        StringLiteral: "function g() { x = 3; }" [18391,18416]
to
TypeDeclaration [636,15066]
at 93
===
insert-tree
---
MethodDeclaration [18591,18756]
    Modifier: public [18591,18597]
    PrimitiveType: void [18598,18602]
    SimpleName: testNoInlineAliases4b [18603,18624]
    Block [18627,18756]
        ExpressionStatement [18633,18752]
            MethodInvocation [18633,18751]
                SimpleName: testSame [18633,18641]
                METHOD_INVOCATION_ARGUMENTS [18652,18750]
                    InfixExpression [18652,18750]
                        StringLiteral: "var x = this.foo(); this.bar(); " [18652,18686]
                        INFIX_EXPRESSION_OPERATOR: + [18687,18688]
                        StringLiteral: "function f() { var y; y = x; y = 3; this.baz(y); }" [18698,18750]
to
TypeDeclaration [636,15066]
at 95
===
insert-tree
---
MethodDeclaration [18918,19076]
    Modifier: public [18918,18924]
    PrimitiveType: void [18925,18929]
    SimpleName: testNoInlineAliases5b [18930,18951]
    Block [18954,19076]
        ExpressionStatement [18960,19072]
            MethodInvocation [18960,19071]
                SimpleName: testSame [18960,18968]
                METHOD_INVOCATION_ARGUMENTS [18978,19070]
                    InfixExpression [18978,19070]
                        StringLiteral: "var x = this.foo(); this.bar(); var y; y = x; this.bing();" [18978,19038]
                        INFIX_EXPRESSION_OPERATOR: + [19039,19040]
                        StringLiteral: "this.baz(y); x = 3;" [19049,19070]
to
TypeDeclaration [636,15066]
at 97
===
insert-tree
---
MethodDeclaration [19238,19396]
    Modifier: public [19238,19244]
    PrimitiveType: void [19245,19249]
    SimpleName: testNoInlineAliases6b [19250,19271]
    Block [19274,19396]
        ExpressionStatement [19280,19392]
            MethodInvocation [19280,19391]
                SimpleName: testSame [19280,19288]
                METHOD_INVOCATION_ARGUMENTS [19298,19390]
                    InfixExpression [19298,19390]
                        StringLiteral: "var x = this.foo(); this.bar(); var y; y = x; this.bing();" [19298,19358]
                        INFIX_EXPRESSION_OPERATOR: + [19359,19360]
                        StringLiteral: "this.baz(y); y = 3;" [19369,19390]
to
TypeDeclaration [636,15066]
at 99
===
insert-tree
---
MethodDeclaration [19578,19756]
    Modifier: public [19578,19584]
    PrimitiveType: void [19585,19589]
    SimpleName: testNoInlineAliases7b [19590,19611]
    Block [19614,19756]
        ExpressionStatement [19620,19752]
            MethodInvocation [19620,19751]
                SimpleName: testSame [19620,19628]
                METHOD_INVOCATION_ARGUMENTS [19639,19750]
                    InfixExpression [19639,19750]
                        StringLiteral: "var x = this.foo(); this.bar(); " [19639,19673]
                        INFIX_EXPRESSION_OPERATOR: + [19674,19675]
                        StringLiteral: "function f() { var y; y = x; this.bing(); this.baz(y); x = 3; }" [19685,19750]
to
TypeDeclaration [636,15066]
at 101
===
insert-tree
---
MethodDeclaration [19925,20090]
    Modifier: public [19925,19931]
    PrimitiveType: void [19932,19936]
    SimpleName: testNoInlineAliases8b [19937,19958]
    Block [19961,20090]
        ExpressionStatement [19967,20086]
            MethodInvocation [19967,20085]
                SimpleName: testSame [19967,19975]
                METHOD_INVOCATION_ARGUMENTS [19986,20084]
                    InfixExpression [19986,20084]
                        StringLiteral: "var x = this.foo(); this.bar(); " [19986,20020]
                        INFIX_EXPRESSION_OPERATOR: + [20021,20022]
                        StringLiteral: "function f() { var y; y = x; this.baz(y); y = 3; }" [20032,20084]
to
TypeDeclaration [636,15066]
at 103
===
insert-tree
---
MethodDeclaration [20094,20477]
    Modifier: public [20094,20100]
    PrimitiveType: void [20101,20105]
    SimpleName: testSideEffectOrder [20106,20125]
    Block [20128,20477]
        VariableDeclarationStatement [20201,20242]
            SimpleType [20201,20207]
                SimpleName: String [20201,20207]
            VariableDeclarationFragment [20208,20241]
                SimpleName: EXTERNS [20208,20215]
                StringLiteral: "var z; function f(){}" [20218,20241]
        ExpressionStatement [20247,20338]
            MethodInvocation [20247,20337]
                SimpleName: test [20247,20251]
                METHOD_INVOCATION_ARGUMENTS [20252,20336]
                    SimpleName: EXTERNS [20252,20259]
                    StringLiteral: "var x = f(y.a, y); z = x;" [20270,20297]
                    StringLiteral: "z = f(y.a, y);" [20308,20324]
                    NullLiteral [20326,20330]
                    NullLiteral [20332,20336]
        ExpressionStatement [20412,20473]
            MethodInvocation [20412,20472]
                SimpleName: testSame [20412,20420]
                METHOD_INVOCATION_ARGUMENTS [20421,20471]
                    SimpleName: EXTERNS [20421,20428]
                    StringLiteral: "var x = f(y.a, y); z.b = x;" [20430,20459]
                    NullLiteral [20461,20465]
                    NullLiteral [20467,20471]
to
TypeDeclaration [636,15066]
at 104
===
insert-tree
---
MethodDeclaration [20481,20709]
    Modifier: public [20481,20487]
    PrimitiveType: void [20488,20492]
    SimpleName: testInlineParameterAlias1 [20493,20518]
    Block [20521,20709]
        ExpressionStatement [20527,20705]
            MethodInvocation [20527,20704]
                SimpleName: test [20527,20531]
                METHOD_INVOCATION_ARGUMENTS [20539,20696]
                    InfixExpression [20539,20625]
                        StringLiteral: "function f(x) {" [20539,20556]
                        INFIX_EXPRESSION_OPERATOR: + [20557,20558]
                        StringLiteral: "  var y = x;" [20565,20579]
                        StringLiteral: "  g();" [20588,20596]
                        StringLiteral: "  y;y;" [20605,20613]
                        StringLiteral: "}" [20622,20625]
                    InfixExpression [20633,20696]
                        StringLiteral: "function f(x) {" [20633,20650]
                        INFIX_EXPRESSION_OPERATOR: + [20651,20652]
                        StringLiteral: "  g();" [20659,20667]
                        StringLiteral: "  x;x;" [20676,20684]
                        StringLiteral: "}" [20693,20696]
to
TypeDeclaration [636,15066]
at 105
===
insert-tree
---
MethodDeclaration [20713,20959]
    Modifier: public [20713,20719]
    PrimitiveType: void [20720,20724]
    SimpleName: testInlineParameterAlias2 [20725,20750]
    Block [20753,20959]
        ExpressionStatement [20759,20955]
            MethodInvocation [20759,20954]
                SimpleName: test [20759,20763]
                METHOD_INVOCATION_ARGUMENTS [20771,20946]
                    InfixExpression [20771,20860]
                        StringLiteral: "function f(x) {" [20771,20788]
                        INFIX_EXPRESSION_OPERATOR: + [20789,20790]
                        StringLiteral: "  var y; y = x;" [20797,20814]
                        StringLiteral: "  g();" [20823,20831]
                        StringLiteral: "  y;y;" [20840,20848]
                        StringLiteral: "}" [20857,20860]
                    InfixExpression [20868,20946]
                        StringLiteral: "function f(x) {" [20868,20885]
                        INFIX_EXPRESSION_OPERATOR: + [20886,20887]
                        StringLiteral: "  x;" [20894,20900]
                        StringLiteral: "  g();" [20909,20917]
                        StringLiteral: "  x;x;" [20926,20934]
                        StringLiteral: "}" [20943,20946]
to
TypeDeclaration [636,15066]
at 106
===
insert-tree
---
MethodDeclaration [20963,21168]
    Modifier: public [20963,20969]
    PrimitiveType: void [20970,20974]
    SimpleName: testInlineFunctionAlias1 [20975,20999]
    Block [21002,21168]
        ExpressionStatement [21008,21164]
            MethodInvocation [21008,21163]
                SimpleName: test [21008,21012]
                METHOD_INVOCATION_ARGUMENTS [21020,21155]
                    InfixExpression [21020,21094]
                        StringLiteral: "function f(x) {};" [21020,21039]
                        INFIX_EXPRESSION_OPERATOR: + [21040,21041]
                        StringLiteral: "var y = f;" [21048,21060]
                        StringLiteral: "g();" [21069,21075]
                        StringLiteral: "y();y();" [21084,21094]
                    InfixExpression [21102,21155]
                        StringLiteral: "function f(x) {};" [21102,21121]
                        INFIX_EXPRESSION_OPERATOR: + [21122,21123]
                        StringLiteral: "g();" [21130,21136]
                        StringLiteral: "f();f();" [21145,21155]
to
TypeDeclaration [636,15066]
at 107
===
insert-tree
---
MethodDeclaration [21172,21393]
    Modifier: public [21172,21178]
    PrimitiveType: void [21179,21183]
    SimpleName: testInlineFunctionAlias2 [21184,21208]
    Block [21211,21393]
        ExpressionStatement [21217,21389]
            MethodInvocation [21217,21388]
                SimpleName: test [21217,21221]
                METHOD_INVOCATION_ARGUMENTS [21229,21380]
                    InfixExpression [21229,21306]
                        StringLiteral: "function f(x) {};" [21229,21248]
                        INFIX_EXPRESSION_OPERATOR: + [21249,21250]
                        StringLiteral: "var y; y = f;" [21257,21272]
                        StringLiteral: "g();" [21281,21287]
                        StringLiteral: "y();y();" [21296,21306]
                    InfixExpression [21314,21380]
                        StringLiteral: "function f(x) {};" [21314,21333]
                        INFIX_EXPRESSION_OPERATOR: + [21334,21335]
                        StringLiteral: "f;" [21342,21346]
                        StringLiteral: "g();" [21355,21361]
                        StringLiteral: "f();f();" [21370,21380]
to
TypeDeclaration [636,15066]
at 108
===
insert-tree
---
MethodDeclaration [21397,21649]
    Modifier: public [21397,21403]
    PrimitiveType: void [21404,21408]
    SimpleName: testInlineCatchAlias1 [21409,21430]
    Block [21433,21649]
        ExpressionStatement [21439,21645]
            MethodInvocation [21439,21644]
                SimpleName: test [21439,21443]
                METHOD_INVOCATION_ARGUMENTS [21451,21636]
                    InfixExpression [21451,21551]
                        StringLiteral: "try {" [21451,21458]
                        INFIX_EXPRESSION_OPERATOR: + [21459,21460]
                        StringLiteral: "} catch (e) {" [21467,21482]
                        StringLiteral: "  var y = e;" [21491,21505]
                        StringLiteral: "  g();" [21514,21522]
                        StringLiteral: "  y;y;" [21531,21539]
                        StringLiteral: "}" [21548,21551]
                    InfixExpression [21559,21636]
                        StringLiteral: "try {" [21559,21566]
                        INFIX_EXPRESSION_OPERATOR: + [21567,21568]
                        StringLiteral: "} catch (e) {" [21575,21590]
                        StringLiteral: "  g();" [21599,21607]
                        StringLiteral: "  e;e;" [21616,21624]
                        StringLiteral: "}" [21633,21636]
to
TypeDeclaration [636,15066]
at 109
===
insert-tree
---
MethodDeclaration [21653,21923]
    Modifier: public [21653,21659]
    PrimitiveType: void [21660,21664]
    SimpleName: testInlineCatchAlias2 [21665,21686]
    Block [21689,21923]
        ExpressionStatement [21695,21919]
            MethodInvocation [21695,21918]
                SimpleName: test [21695,21699]
                METHOD_INVOCATION_ARGUMENTS [21707,21910]
                    InfixExpression [21707,21810]
                        StringLiteral: "try {" [21707,21714]
                        INFIX_EXPRESSION_OPERATOR: + [21715,21716]
                        StringLiteral: "} catch (e) {" [21723,21738]
                        StringLiteral: "  var y; y = e;" [21747,21764]
                        StringLiteral: "  g();" [21773,21781]
                        StringLiteral: "  y;y;" [21790,21798]
                        StringLiteral: "}" [21807,21810]
                    InfixExpression [21818,21910]
                        StringLiteral: "try {" [21818,21825]
                        INFIX_EXPRESSION_OPERATOR: + [21826,21827]
                        StringLiteral: "} catch (e) {" [21834,21849]
                        StringLiteral: "  e;" [21858,21864]
                        StringLiteral: "  g();" [21873,21881]
                        StringLiteral: "  e;e;" [21890,21898]
                        StringLiteral: "}" [21907,21910]
to
TypeDeclaration [636,15066]
at 110
===
update-node
---
SimpleName: testDoNotExitConditional [2878,2902]
replace testDoNotExitConditional by testDoNotExitConditional1
===
insert-tree
---
ExpressionStatement [4366,4441]
    MethodInvocation [4366,4440]
        SimpleName: test [4366,4370]
        METHOD_INVOCATION_ARGUMENTS [4371,4439]
            StringLiteral: "var a; a = foo(); if (a) { alert(3); }" [4371,4411]
            StringLiteral: "if (foo()) { alert(3); }" [4413,4439]
to
Block [4133,4215]
at 1
===
insert-tree
---
ExpressionStatement [15038,15076]
    MethodInvocation [15038,15075]
        SimpleName: test [15038,15042]
        METHOD_INVOCATION_ARGUMENTS [15043,15074]
            StringLiteral: "var a = b.c; f(a);" [15043,15063]
            StringLiteral: "f(b.c);" [15065,15074]
to
Block [12536,12613]
at 1
===
update-node
---
StringLiteral: "var x = {};\nvar y = x.a;\nx.a = 1;\nvar z = y;" [7369,7418]
replace "var x = {};\nvar y = x.a;\nx.a = 1;\nvar z = y;" by "var x = {}; var y = x.a; x.a = 1; var z = y;"
===
delete-tree
---
ExpressionStatement [2964,3008]
    MethodInvocation [2964,3007]
        SimpleName: testSame [2964,2972]
        METHOD_INVOCATION_ARGUMENTS [2973,3006]
            StringLiteral: "if (true) var x = 1; var z = x;" [2973,3006]
