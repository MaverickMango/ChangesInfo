===
insert-node
---
MethodDeclaration [7668,8350]
to
TypeDeclaration [1039,16826]
at 20
===
insert-tree
---
MethodDeclaration [9576,10094]
    Javadoc [9576,9868]
        TagElement [9587,9765]
            TextElement: Returns the percentage of values that are equal to v [9587,9639]
            TextElement: (as a proportion between 0 and 1). [9647,9681]
            TextElement: <p> [9689,9692]
            TextElement: Returns <code>Double.NaN</code> if no values have been added.</p> [9700,9765]
        TagElement [9781,9809]
            SimpleName: v [9788,9789]
            TextElement:  the value to lookup [9789,9809]
        TagElement [9817,9860]
            TextElement:  the proportion of values equal to v [9824,9860]
    Modifier: public [9873,9879]
    PrimitiveType: double [9880,9886]
    SimpleName: getPct [9887,9893]
    SingleVariableDeclaration [9894,9909]
        ParameterizedType [9894,9907]
            SimpleType [9894,9904]
                SimpleName: Comparable [9894,9904]
            WildcardType [9905,9906]
        SimpleName: v [9908,9909]
    Block [9911,10094]
        VariableDeclarationStatement [9921,9955]
            Modifier: final [9921,9926]
            PrimitiveType: long [9927,9931]
            VariableDeclarationFragment [9932,9954]
                SimpleName: sumFreq [9932,9939]
                MethodInvocation [9942,9954]
                    SimpleName: getSumFreq [9942,9952]
        IfStatement [9964,10024]
            InfixExpression [9968,9980]
                SimpleName: sumFreq [9968,9975]
                INFIX_EXPRESSION_OPERATOR: == [9976,9978]
                NumberLiteral: 0 [9979,9980]
            Block [9982,10024]
                ReturnStatement [9996,10014]
                    QualifiedName: Double.NaN [10003,10013]
        ReturnStatement [10033,10080]
            InfixExpression [10040,10079]
                CastExpression [10040,10060]
                    PrimitiveType: double [10041,10047]
                    MethodInvocation [10049,10060]
                        SimpleName: getCount [10049,10057]
                        METHOD_INVOCATION_ARGUMENTS [10058,10059]
                            SimpleName: v [10058,10059]
                INFIX_EXPRESSION_OPERATOR: / [10061,10062]
                CastExpression [10063,10079]
                    PrimitiveType: double [10064,10070]
                    SimpleName: sumFreq [10072,10079]
to
TypeDeclaration [1039,16826]
at 25
===
insert-node
---
MethodDeclaration [11573,13185]
to
TypeDeclaration [1039,16826]
at 30
===
insert-node
---
MethodDeclaration [15007,15663]
to
TypeDeclaration [1039,16826]
at 35
===
insert-tree
---
SingleMemberAnnotation [2507,2537]
    SimpleName: SuppressWarnings [2508,2524]
    StringLiteral: "unchecked" [2525,2536]
to
MethodDeclaration [2359,2616]
at 1
===
insert-tree
---
MarkerAnnotation [7564,7575]
    SimpleName: Deprecated [7565,7575]
to
MethodDeclaration [7216,7891]
at 1
===
insert-tree
---
Javadoc [7668,7849]
    TagElement [7679,7761]
        TextElement: Returns the number of values = v. [7679,7712]
        TextElement: Returns 0 if the value is not comparable. [7720,7761]
    TagElement [7777,7806]
        SimpleName: v [7784,7785]
        TextElement:  the value to lookup. [7785,7806]
    TagElement [7814,7841]
        TextElement:  the frequency of v. [7821,7841]
to
MethodDeclaration [7668,8350]
at 0
===
insert-node
---
Modifier: public [7854,7860]
to
MethodDeclaration [7668,8350]
at 1
===
insert-node
---
PrimitiveType: long [7861,7865]
to
MethodDeclaration [7668,8350]
at 2
===
insert-node
---
SimpleName: getCount [7866,7874]
to
MethodDeclaration [7668,8350]
at 3
===
insert-tree
---
SingleVariableDeclaration [7875,7890]
    ParameterizedType [7875,7888]
        SimpleType [7875,7885]
            SimpleName: Comparable [7875,7885]
        WildcardType [7886,7887]
    SimpleName: v [7889,7890]
to
MethodDeclaration [7668,8350]
at 4
===
insert-node
---
Block [7892,8350]
to
MethodDeclaration [7668,8350]
at 5
===
insert-tree
---
MarkerAnnotation [9471,9482]
    SimpleName: Deprecated [9472,9482]
to
MethodDeclaration [8645,9157]
at 1
===
insert-tree
---
MarkerAnnotation [11465,11476]
    SimpleName: Deprecated [11466,11476]
to
MethodDeclaration [10194,11706]
at 1
===
insert-tree
---
Javadoc [11573,11829]
    TagElement [11584,11725]
        TextElement: Returns the cumulative frequency of values less than or equal to v. [11584,11651]
        TextElement: <p> [11659,11662]
        TextElement: Returns 0 if v is not comparable to the values set.</p> [11670,11725]
    TagElement [11741,11770]
        SimpleName: v [11748,11749]
        TextElement:  the value to lookup. [11749,11770]
    TagElement [11778,11821]
        TextElement:  the proportion of values equal to v [11785,11821]
to
MethodDeclaration [11573,13185]
at 0
===
insert-tree
---
SingleMemberAnnotation [11834,11864]
    SimpleName: SuppressWarnings [11835,11851]
    StringLiteral: "unchecked" [11852,11863]
to
MethodDeclaration [11573,13185]
at 1
===
insert-node
---
Modifier: public [11873,11879]
to
MethodDeclaration [11573,13185]
at 2
===
insert-node
---
PrimitiveType: long [11880,11884]
to
MethodDeclaration [11573,13185]
at 3
===
insert-node
---
SimpleName: getCumFreq [11885,11895]
to
MethodDeclaration [11573,13185]
at 4
===
insert-tree
---
SingleVariableDeclaration [11896,11911]
    ParameterizedType [11896,11909]
        SimpleType [11896,11906]
            SimpleName: Comparable [11896,11906]
        WildcardType [11907,11908]
    SimpleName: v [11910,11911]
to
MethodDeclaration [11573,13185]
at 5
===
insert-node
---
Block [11913,13185]
to
MethodDeclaration [11573,13185]
at 6
===
insert-tree
---
MarkerAnnotation [14890,14901]
    SimpleName: Deprecated [14891,14901]
to
MethodDeclaration [12909,13558]
at 1
===
insert-tree
---
Javadoc [15007,15432]
    TagElement [15018,15316]
        TextElement: Returns the cumulative percentage of values less than or equal to v [15018,15085]
        TextElement: (as a proportion between 0 and 1). [15093,15127]
        TextElement: <p> [15135,15138]
        TextElement: Returns <code>Double.NaN</code> if no values have been added. [15146,15207]
        TextElement: Returns 0 if at least one value has been added, but v is not comparable [15215,15286]
        TextElement: to the values set.</p> [15294,15316]
    TagElement [15332,15360]
        SimpleName: v [15339,15340]
        TextElement:  the value to lookup [15340,15360]
    TagElement [15368,15424]
        TextElement:  the proportion of values less than or equal to v [15375,15424]
to
MethodDeclaration [15007,15663]
at 0
===
insert-node
---
Modifier: public [15437,15443]
to
MethodDeclaration [15007,15663]
at 1
===
insert-node
---
PrimitiveType: double [15444,15450]
to
MethodDeclaration [15007,15663]
at 2
===
insert-node
---
SimpleName: getCumPct [15451,15460]
to
MethodDeclaration [15007,15663]
at 3
===
insert-tree
---
SingleVariableDeclaration [15461,15476]
    ParameterizedType [15461,15474]
        SimpleType [15461,15471]
            SimpleName: Comparable [15461,15471]
        WildcardType [15472,15473]
    SimpleName: v [15475,15476]
to
MethodDeclaration [15007,15663]
at 4
===
insert-node
---
Block [15478,15663]
to
MethodDeclaration [15007,15663]
at 5
===
insert-tree
---
TypeParameter [17118,17141]
    SimpleName: T [17118,17119]
    ParameterizedType [17128,17141]
        SimpleType [17128,17138]
            SimpleName: Comparable [17128,17138]
        SimpleType [17139,17140]
            SimpleName: T [17139,17140]
to
TypeDeclaration [14818,16069]
at 5
===
insert-tree
---
ParameterizedType [17154,17179]
    SimpleType [17154,17164]
        SimpleName: Comparator [17154,17164]
    ParameterizedType [17165,17178]
        SimpleType [17165,17175]
            SimpleName: Comparable [17165,17175]
        SimpleType [17176,17177]
            SimpleName: T [17176,17177]
to
TypeDeclaration [14818,16069]
at 6
===
insert-tree
---
MethodDeclaration [17329,18168]
    Javadoc [17329,18011]
        TagElement [17344,17542]
            TextElement: Compare the two  [17344,17360]
            TagElement [17360,17389]
                SimpleName: Comparable [17367,17377]
                TextElement:  Comparable [17377,17388]
            TextElement:  arguments. [17389,17400]
            TextElement: This method is equivalent to: [17412,17441]
            TextElement: <pre>(( [17453,17460]
            TagElement [17460,17489]
                SimpleName: Comparable [17467,17477]
                TextElement:  Comparable [17477,17488]
            TextElement: )o1). [17489,17494]
            TagElement [17494,17532]
                MemberRef [17501,17521]
                    SimpleName: Comparable [17501,17511]
                    SimpleName: compareTo [17512,17521]
                TextElement:  compareTo [17521,17531]
            TextElement: (o2)</pre> [17532,17542]
        TagElement [17566,17594]
            SimpleName: o1 [17574,17576]
            TextElement:  the first object  [17576,17594]
        TagElement [17606,17634]
            SimpleName: o2 [17614,17616]
            TextElement:  the second object [17616,17634]
        TagElement [17646,17675]
            TextElement:   result of comparison [17653,17675]
        TagElement [17687,17829]
            SimpleName: NullPointerException [17695,17715]
            TextElement:  when <i>o1</i> is <code>null</code>,  [17715,17753]
            TextElement: or when <code>((Comparable)o1).compareTo(o2)</code> does [17773,17829]
        TagElement [17841,17999]
            SimpleName: ClassCastException [17849,17867]
            TextElement:  when <i>o1</i> is not a  [17867,17892]
            TagElement [17892,17921]
                SimpleName: Comparable [17899,17909]
                TextElement:  Comparable [17909,17920]
            TextElement: ,  [17921,17923]
            TextElement: or when <code>((Comparable)o1).compareTo(o2)</code> does [17943,17999]
    SingleMemberAnnotation [18020,18050]
        SimpleName: SuppressWarnings [18021,18037]
        StringLiteral: "unchecked" [18038,18049]
    Modifier: public [18059,18065]
    PrimitiveType: int [18066,18069]
    SimpleName: compare [18070,18077]
    SingleVariableDeclaration [18078,18094]
        ParameterizedType [18078,18091]
            SimpleType [18078,18088]
                SimpleName: Comparable [18078,18088]
            SimpleType [18089,18090]
                SimpleName: T [18089,18090]
        SimpleName: o1 [18092,18094]
    SingleVariableDeclaration [18096,18112]
        ParameterizedType [18096,18109]
            SimpleType [18096,18106]
                SimpleName: Comparable [18096,18106]
            SimpleType [18107,18108]
                SimpleName: T [18107,18108]
        SimpleName: o2 [18110,18112]
    Block [18114,18168]
        ReturnStatement [18128,18158]
            ParenthesizedExpression [18135,18157]
                MethodInvocation [18136,18156]
                    METHOD_INVOCATION_RECEIVER [18136,18138]
                        SimpleName: o1 [18136,18138]
                    SimpleName: compareTo [18139,18148]
                    METHOD_INVOCATION_ARGUMENTS [18149,18155]
                        CastExpression [18149,18155]
                            SimpleType [18150,18151]
                                SimpleName: T [18150,18151]
                            SimpleName: o2 [18153,18155]
to
TypeDeclaration [14818,16069]
at 10
===
update-node
---
TextElement: Accepts int, long, char or Object values.  New values added must be  [1093,1161]
replace Accepts int, long, char or Object values.  New values added must be  by Accepts int, long, char or Comparable values.  New values added must be 
===
insert-node
---
ParameterizedType [2559,2572]
to
SingleVariableDeclaration [2520,2541]
at 0
===
insert-tree
---
TagElement [7488,7551]
    TextElement:  replaced by  [7499,7512]
    TagElement [7512,7541]
        MethodRef [7519,7540]
            SimpleName: getCount [7520,7528]
            MethodRefParameter [7529,7539]
                SimpleType [7529,7539]
                    SimpleName: Comparable [7529,7539]
    TextElement:  as of 2.0 [7541,7551]
to
Javadoc [7216,7397]
at 3
===
insert-tree
---
ReturnStatement [7621,7656]
    MethodInvocation [7628,7655]
        SimpleName: getCount [7628,7636]
        METHOD_INVOCATION_ARGUMENTS [7637,7654]
            CastExpression [7637,7654]
                ParameterizedType [7638,7651]
                    SimpleType [7638,7648]
                        SimpleName: Comparable [7638,7648]
                    WildcardType [7649,7650]
                SimpleName: v [7653,7654]
to
Block [7433,7891]
at 0
===
move-tree
---
IfStatement [7443,7536]
    InstanceofExpression [7447,7467]
        SimpleName: v [7447,7448]
        SimpleType [7460,7467]
            SimpleName: Integer [7460,7467]
    Block [7469,7536]
        ReturnStatement [7483,7526]
            MethodInvocation [7490,7525]
                SimpleName: getCount [7490,7498]
                METHOD_INVOCATION_ARGUMENTS [7499,7524]
                    MethodInvocation [7499,7524]
                        METHOD_INVOCATION_RECEIVER [7499,7512]
                            ParenthesizedExpression [7499,7512]
                                CastExpression [7500,7511]
                                    SimpleType [7501,7508]
                                        SimpleName: Integer [7501,7508]
                                    SimpleName: v [7510,7511]
                        SimpleName: longValue [7513,7522]
to
Block [7892,8350]
at 0
===
move-tree
---
VariableDeclarationStatement [7545,7561]
    PrimitiveType: long [7545,7549]
    VariableDeclarationFragment [7550,7560]
        SimpleName: result [7550,7556]
        NumberLiteral: 0 [7559,7560]
to
Block [7892,8350]
at 1
===
move-tree
---
TryStatement [7570,7862]
    Block [7574,7721]
        VariableDeclarationStatement [7589,7620]
            SimpleType [7589,7593]
                SimpleName: Long [7589,7593]
            VariableDeclarationFragment [7594,7619]
                SimpleName: count [7594,7599]
                MethodInvocation [7603,7619]
                    METHOD_INVOCATION_RECEIVER [7603,7612]
                        SimpleName: freqTable [7603,7612]
                    SimpleName: get [7613,7616]
                    METHOD_INVOCATION_ARGUMENTS [7617,7618]
                        SimpleName: v [7617,7618]
        IfStatement [7633,7711]
            InfixExpression [7637,7650]
                SimpleName: count [7637,7642]
                INFIX_EXPRESSION_OPERATOR: != [7643,7645]
                NullLiteral [7646,7650]
            Block [7652,7711]
                ExpressionStatement [7670,7697]
                    Assignment [7670,7696]
                        SimpleName: result [7670,7676]
                        ASSIGNMENT_OPERATOR: = [7677,7678]
                        MethodInvocation [7679,7696]
                            METHOD_INVOCATION_RECEIVER [7679,7684]
                                SimpleName: count [7679,7684]
                            SimpleName: longValue [7685,7694]
    CatchClause [7722,7862]
        SingleVariableDeclaration [7729,7750]
            SimpleType [7729,7747]
                SimpleName: ClassCastException [7729,7747]
            SimpleName: ex [7748,7750]
        Block [7752,7862]
to
Block [7892,8350]
at 2
===
move-tree
---
ReturnStatement [7871,7885]
    SimpleName: result [7878,7884]
to
Block [7892,8350]
at 3
===
insert-tree
---
TagElement [9397,9458]
    TextElement:  replaced by  [9408,9421]
    TagElement [9421,9448]
        MethodRef [9428,9447]
            SimpleName: getPct [9429,9435]
            MethodRefParameter [9436,9446]
                SimpleType [9436,9446]
                    SimpleName: Comparable [9436,9446]
    TextElement:  as of 2.0 [9448,9458]
to
Javadoc [8645,8938]
at 3
===
insert-tree
---
ReturnStatement [9528,9564]
    MethodInvocation [9535,9563]
        SimpleName: getCumPct [9535,9544]
        METHOD_INVOCATION_ARGUMENTS [9545,9562]
            CastExpression [9545,9562]
                ParameterizedType [9546,9559]
                    SimpleType [9546,9556]
                        SimpleName: Comparable [9546,9556]
                    WildcardType [9557,9558]
                SimpleName: v [9561,9562]
to
Block [8974,9157]
at 0
===
insert-tree
---
TagElement [11387,11452]
    TextElement:  replaced by  [11398,11411]
    TagElement [11411,11442]
        MethodRef [11418,11441]
            SimpleName: getCumFreq [11419,11429]
            MethodRefParameter [11430,11440]
                SimpleType [11430,11440]
                    SimpleName: Comparable [11430,11440]
    TextElement:  as of 2.0 [11442,11452]
to
Javadoc [10194,10450]
at 3
===
insert-tree
---
ReturnStatement [11524,11561]
    MethodInvocation [11531,11560]
        SimpleName: getCumFreq [11531,11541]
        METHOD_INVOCATION_ARGUMENTS [11542,11559]
            CastExpression [11542,11559]
                ParameterizedType [11543,11556]
                    SimpleType [11543,11553]
                        SimpleName: Comparable [11543,11553]
                    WildcardType [11554,11555]
                SimpleName: v [11558,11559]
to
Block [10488,11706]
at 0
===
move-tree
---
IfStatement [10498,10554]
    InfixExpression [10502,10519]
        MethodInvocation [10502,10514]
            SimpleName: getSumFreq [10502,10512]
        INFIX_EXPRESSION_OPERATOR: == [10515,10517]
        NumberLiteral: 0 [10518,10519]
    Block [10521,10554]
        ReturnStatement [10535,10544]
            NumberLiteral: 0 [10542,10543]
to
Block [11913,13185]
at 0
===
move-tree
---
IfStatement [10563,10658]
    InstanceofExpression [10567,10587]
        SimpleName: v [10567,10568]
        SimpleType [10580,10587]
            SimpleName: Integer [10580,10587]
    Block [10589,10658]
        ReturnStatement [10603,10648]
            MethodInvocation [10610,10647]
                SimpleName: getCumFreq [10610,10620]
                METHOD_INVOCATION_ARGUMENTS [10621,10646]
                    MethodInvocation [10621,10646]
                        METHOD_INVOCATION_RECEIVER [10621,10634]
                            ParenthesizedExpression [10621,10634]
                                CastExpression [10622,10633]
                                    SimpleType [10623,10630]
                                        SimpleName: Integer [10623,10630]
                                    SimpleName: v [10632,10633]
                        SimpleName: longValue [10635,10644]
to
Block [11913,13185]
at 1
===
move-tree
---
VariableDeclarationStatement [10667,10705]
    SimpleType [10667,10677]
        SimpleName: Comparator [10667,10677]
    VariableDeclarationFragment [10678,10704]
        SimpleName: c [10678,10679]
        MethodInvocation [10682,10704]
            METHOD_INVOCATION_RECEIVER [10682,10691]
                SimpleName: freqTable [10682,10691]
            SimpleName: comparator [10692,10702]
to
Block [11913,13185]
at 2
===
move-tree
---
IfStatement [10714,10781]
    InfixExpression [10718,10727]
        SimpleName: c [10718,10719]
        INFIX_EXPRESSION_OPERATOR: == [10720,10722]
        NullLiteral [10723,10727]
    Block [10729,10781]
        ExpressionStatement [10743,10771]
            Assignment [10743,10770]
                SimpleName: c [10743,10744]
                ASSIGNMENT_OPERATOR: = [10745,10746]
                ClassInstanceCreation [10747,10770]
                    SimpleType [10751,10768]
                        SimpleName: NaturalComparator [10751,10768]
to
Block [11913,13185]
at 3
===
move-tree
---
VariableDeclarationStatement [10790,10806]
    PrimitiveType: long [10790,10794]
    VariableDeclarationFragment [10795,10805]
        SimpleName: result [10795,10801]
        NumberLiteral: 0 [10804,10805]
to
Block [11913,13185]
at 4
===
move-tree
---
TryStatement [10824,11067]
    Block [10828,10973]
        VariableDeclarationStatement [10842,10872]
            SimpleType [10842,10846]
                SimpleName: Long [10842,10846]
            VariableDeclarationFragment [10847,10871]
                SimpleName: value [10847,10852]
                MethodInvocation [10855,10871]
                    METHOD_INVOCATION_RECEIVER [10855,10864]
                        SimpleName: freqTable [10855,10864]
                    SimpleName: get [10865,10868]
                    METHOD_INVOCATION_ARGUMENTS [10869,10870]
                        SimpleName: v [10869,10870]
        IfStatement [10885,10963]
            InfixExpression [10889,10902]
                SimpleName: value [10889,10894]
                INFIX_EXPRESSION_OPERATOR: != [10895,10897]
                NullLiteral [10898,10902]
            Block [10904,10963]
                ExpressionStatement [10922,10949]
                    Assignment [10922,10948]
                        SimpleName: result [10922,10928]
                        ASSIGNMENT_OPERATOR: = [10929,10930]
                        MethodInvocation [10931,10948]
                            METHOD_INVOCATION_RECEIVER [10931,10936]
                                SimpleName: value [10931,10936]
                            SimpleName: longValue [10937,10946]
    CatchClause [10974,11067]
        SingleVariableDeclaration [10981,11002]
            SimpleType [10981,10999]
                SimpleName: ClassCastException [10981,10999]
            SimpleName: ex [11000,11002]
        Block [11004,11067]
            ReturnStatement [11018,11032]
                SimpleName: result [11025,11031]
to
Block [11913,13185]
at 5
===
move-tree
---
IfStatement [11085,11209]
    InfixExpression [11089,11127]
        MethodInvocation [11089,11123]
            METHOD_INVOCATION_RECEIVER [11089,11090]
                SimpleName: c [11089,11090]
            SimpleName: compare [11091,11098]
            METHOD_INVOCATION_ARGUMENTS [11099,11122]
                SimpleName: v [11099,11100]
                MethodInvocation [11102,11122]
                    METHOD_INVOCATION_RECEIVER [11102,11111]
                        SimpleName: freqTable [11102,11111]
                    SimpleName: firstKey [11112,11120]
        INFIX_EXPRESSION_OPERATOR: < [11124,11125]
        NumberLiteral: 0 [11126,11127]
    Block [11129,11209]
        ReturnStatement [11143,11152]
            NumberLiteral: 0 [11150,11151]
to
Block [11913,13185]
at 6
===
move-tree
---
IfStatement [11227,11370]
    InfixExpression [11231,11269]
        MethodInvocation [11231,11264]
            METHOD_INVOCATION_RECEIVER [11231,11232]
                SimpleName: c [11231,11232]
            SimpleName: compare [11233,11240]
            METHOD_INVOCATION_ARGUMENTS [11241,11263]
                SimpleName: v [11241,11242]
                MethodInvocation [11244,11263]
                    METHOD_INVOCATION_RECEIVER [11244,11253]
                        SimpleName: freqTable [11244,11253]
                    SimpleName: lastKey [11254,11261]
        INFIX_EXPRESSION_OPERATOR: >= [11265,11267]
        NumberLiteral: 0 [11268,11269]
    Block [11271,11370]
        ReturnStatement [11285,11305]
            MethodInvocation [11292,11304]
                SimpleName: getSumFreq [11292,11302]
to
Block [11913,13185]
at 7
===
move-tree
---
VariableDeclarationStatement [11388,11426]
    ParameterizedType [11388,11399]
        SimpleType [11388,11396]
            SimpleName: Iterator [11388,11396]
        WildcardType [11397,11398]
    VariableDeclarationFragment [11400,11425]
        SimpleName: values [11400,11406]
        MethodInvocation [11409,11425]
            SimpleName: valuesIterator [11409,11423]
to
Block [11913,13185]
at 8
===
move-tree
---
WhileStatement [11435,11677]
    MethodInvocation [11442,11458]
        METHOD_INVOCATION_RECEIVER [11442,11448]
            SimpleName: values [11442,11448]
        SimpleName: hasNext [11449,11456]
    Block [11460,11677]
        VariableDeclarationStatement [11474,11507]
            SimpleType [11474,11480]
                SimpleName: Object [11474,11480]
            VariableDeclarationFragment [11481,11506]
                SimpleName: nextValue [11481,11490]
                MethodInvocation [11493,11506]
                    METHOD_INVOCATION_RECEIVER [11493,11499]
                        SimpleName: values [11493,11499]
                    SimpleName: next [11500,11504]
        IfStatement [11520,11667]
            InfixExpression [11524,11551]
                MethodInvocation [11524,11547]
                    METHOD_INVOCATION_RECEIVER [11524,11525]
                        SimpleName: c [11524,11525]
                    SimpleName: compare [11526,11533]
                    METHOD_INVOCATION_ARGUMENTS [11534,11546]
                        SimpleName: v [11534,11535]
                        SimpleName: nextValue [11537,11546]
                INFIX_EXPRESSION_OPERATOR: > [11548,11549]
                NumberLiteral: 0 [11550,11551]
            Block [11553,11615]
                ExpressionStatement [11571,11601]
                    Assignment [11571,11600]
                        SimpleName: result [11571,11577]
                        ASSIGNMENT_OPERATOR: += [11578,11580]
                        MethodInvocation [11581,11600]
                            SimpleName: getCount [11581,11589]
                            METHOD_INVOCATION_ARGUMENTS [11590,11599]
                                SimpleName: nextValue [11590,11599]
            Block [11621,11667]
                ReturnStatement [11639,11653]
                    SimpleName: result [11646,11652]
to
Block [11913,13185]
at 9
===
move-tree
---
ReturnStatement [11686,11700]
    SimpleName: result [11693,11699]
to
Block [11913,13185]
at 10
===
insert-tree
---
TagElement [14813,14877]
    TextElement:  replaced by  [14824,14837]
    TagElement [14837,14867]
        MethodRef [14844,14866]
            SimpleName: getCumPct [14845,14854]
            MethodRefParameter [14855,14865]
                SimpleType [14855,14865]
                    SimpleName: Comparable [14855,14865]
    TextElement:  as of 2.0 [14867,14877]
to
Javadoc [12909,13334]
at 3
===
insert-tree
---
ReturnStatement [14950,14986]
    MethodInvocation [14957,14985]
        SimpleName: getCumPct [14957,14966]
        METHOD_INVOCATION_ARGUMENTS [14967,14984]
            CastExpression [14967,14984]
                ParameterizedType [14968,14981]
                    SimpleType [14968,14978]
                        SimpleName: Comparable [14968,14978]
                    WildcardType [14979,14980]
                SimpleName: v [14983,14984]
to
Block [13373,13558]
at 0
===
move-tree
---
SimpleType [2520,2530]
    SimpleName: Comparator [2520,2530]
to
ParameterizedType [2559,2572]
at 0
===
insert-node
---
WildcardType [2570,2571]
to
ParameterizedType [2559,2572]
at 1
===
insert-node
---
ParameterizedType [12092,12117]
to
VariableDeclarationStatement [10667,10705]
at 0
===
insert-node
---
ParameterizedType [3080,3093]
to
ParameterizedType [2993,3004]
at 1
===
insert-tree
---
SimpleType [7126,7130]
    SimpleName: Long [7126,7130]
to
ParameterizedType [7020,7031]
at 1
===
move-tree
---
SimpleType [10667,10677]
    SimpleName: Comparator [10667,10677]
to
ParameterizedType [12092,12117]
at 0
===
insert-tree
---
ParameterizedType [12103,12116]
    SimpleType [12103,12113]
        SimpleName: Comparable [12103,12113]
    WildcardType [12114,12115]
to
ParameterizedType [12092,12117]
at 1
===
insert-node
---
CastExpression [12122,12172]
to
VariableDeclarationFragment [10678,10704]
at 1
===
insert-node
---
ParameterizedType [12857,12870]
to
ParameterizedType [11388,11399]
at 1
===
insert-node
---
CastExpression [2640,2686]
to
ClassInstanceCreation [2565,2609]
at 1
===
insert-tree
---
SimpleType [3080,3090]
    SimpleName: Comparable [3080,3090]
to
ParameterizedType [3080,3093]
at 0
===
move-tree
---
WildcardType [3002,3003]
to
ParameterizedType [3080,3093]
at 1
===
insert-tree
---
ParameterizedType [3178,3191]
    SimpleType [3178,3188]
        SimpleName: Comparable [3178,3188]
    WildcardType [3189,3190]
to
VariableDeclarationStatement [3088,3115]
at 0
===
insert-tree
---
ParameterizedType [12123,12148]
    SimpleType [12123,12133]
        SimpleName: Comparator [12123,12133]
    ParameterizedType [12134,12147]
        SimpleType [12134,12144]
            SimpleName: Comparable [12134,12144]
        WildcardType [12145,12146]
to
CastExpression [12122,12172]
at 0
===
move-tree
---
MethodInvocation [10682,10704]
    METHOD_INVOCATION_RECEIVER [10682,10691]
        SimpleName: freqTable [10682,10691]
    SimpleName: comparator [10692,10702]
to
CastExpression [12122,12172]
at 1
===
insert-tree
---
SimpleType [12857,12867]
    SimpleName: Comparable [12857,12867]
to
ParameterizedType [12857,12870]
at 0
===
move-tree
---
WildcardType [11397,11398]
to
ParameterizedType [12857,12870]
at 1
===
insert-tree
---
ParameterizedType [12946,12959]
    SimpleType [12946,12956]
        SimpleName: Comparable [12946,12956]
    WildcardType [12957,12958]
to
VariableDeclarationStatement [11474,11507]
at 0
===
insert-tree
---
ParameterizedType [2641,2674]
    SimpleType [2641,2651]
        SimpleName: Comparator [2641,2651]
    WildcardType [2652,2673]
        ParameterizedType [2660,2673]
            SimpleType [2660,2670]
                SimpleName: Comparable [2660,2670]
            WildcardType [2671,2672]
to
CastExpression [2640,2686]
at 0
===
move-tree
---
SimpleName: comparator [2598,2608]
to
CastExpression [2640,2686]
at 1
===
move-tree
---
MethodInvocation [7142,7157]
    METHOD_INVOCATION_RECEIVER [7142,7150]
        SimpleName: iterator [7142,7150]
    SimpleName: next [7151,7155]
to
METHOD_INVOCATION_RECEIVER [7134,7158]
at 0
===
delete-tree
---
SimpleType [3088,3094]
    SimpleName: Object [3088,3094]
===
delete-node
---
WildcardType [7029,7030]
===
===
delete-tree
---
SimpleType [7136,7140]
    SimpleName: Long [7136,7140]
===
delete-node
---
CastExpression [7135,7157]
===
===
delete-node
---
ParenthesizedExpression [7134,7158]
===
===
delete-tree
---
SimpleType [11474,11480]
    SimpleName: Object [11474,11480]
===
delete-tree
---
SimpleType [15024,15034]
    SimpleName: Comparator [15024,15034]
===
delete-tree
---
MethodDeclaration [15184,16063]
    Javadoc [15184,15866]
        TagElement [15199,15397]
            TextElement: Compare the two  [15199,15215]
            TagElement [15215,15244]
                SimpleName: Comparable [15222,15232]
                TextElement:  Comparable [15232,15243]
            TextElement:  arguments. [15244,15255]
            TextElement: This method is equivalent to: [15267,15296]
            TextElement: <pre>(( [15308,15315]
            TagElement [15315,15344]
                SimpleName: Comparable [15322,15332]
                TextElement:  Comparable [15332,15343]
            TextElement: )o1). [15344,15349]
            TagElement [15349,15387]
                MemberRef [15356,15376]
                    SimpleName: Comparable [15356,15366]
                    SimpleName: compareTo [15367,15376]
                TextElement:  compareTo [15376,15386]
            TextElement: (o2)</pre> [15387,15397]
        TagElement [15421,15449]
            SimpleName: o1 [15429,15431]
            TextElement:  the first object  [15431,15449]
        TagElement [15461,15489]
            SimpleName: o2 [15469,15471]
            TextElement:  the second object [15471,15489]
        TagElement [15501,15530]
            TextElement:   result of comparison [15508,15530]
        TagElement [15542,15684]
            SimpleName: NullPointerException [15550,15570]
            TextElement:  when <i>o1</i> is <code>null</code>,  [15570,15608]
            TextElement: or when <code>((Comparable)o1).compareTo(o2)</code> does [15628,15684]
        TagElement [15696,15854]
            SimpleName: ClassCastException [15704,15722]
            TextElement:  when <i>o1</i> is not a  [15722,15747]
            TagElement [15747,15776]
                SimpleName: Comparable [15754,15764]
                TextElement:  Comparable [15764,15775]
            TextElement: ,  [15776,15778]
            TextElement: or when <code>((Comparable)o1).compareTo(o2)</code> does [15798,15854]
    SingleMemberAnnotation [15875,15905]
        SimpleName: SuppressWarnings [15876,15892]
        StringLiteral: "unchecked" [15893,15904]
    Modifier: public [15952,15958]
    PrimitiveType: int [15959,15962]
    SimpleName: compare [15963,15970]
    SingleVariableDeclaration [15971,15980]
        SimpleType [15971,15977]
            SimpleName: Object [15971,15977]
        SimpleName: o1 [15978,15980]
    SingleVariableDeclaration [15982,15991]
        SimpleType [15982,15988]
            SimpleName: Object [15982,15988]
        SimpleName: o2 [15989,15991]
    Block [15993,16063]
        ReturnStatement [16007,16053]
            MethodInvocation [16014,16052]
                METHOD_INVOCATION_RECEIVER [16014,16038]
                    ParenthesizedExpression [16014,16038]
                        CastExpression [16015,16037]
                            ParameterizedType [16016,16034]
                                SimpleType [16016,16026]
                                    SimpleName: Comparable [16016,16026]
                                SimpleType [16027,16033]
                                    SimpleName: Object [16027,16033]
                            SimpleName: o1 [16035,16037]
                SimpleName: compareTo [16039,16048]
                METHOD_INVOCATION_ARGUMENTS [16049,16051]
                    SimpleName: o2 [16049,16051]
===
multi-move-tree
---
VariableDeclarationStatement [8984,9018]
    Modifier: final [8984,8989]
    PrimitiveType: long [8990,8994]
    VariableDeclarationFragment [8995,9017]
        SimpleName: sumFreq [8995,9002]
        MethodInvocation [9005,9017]
            SimpleName: getSumFreq [9005,9015]
to
VariableDeclarationStatement [15488,15522]
at -1
===
multi-move-tree
---
VariableDeclarationStatement [13383,13417]
    Modifier: final [13383,13388]
    PrimitiveType: long [13389,13393]
    VariableDeclarationFragment [13394,13416]
        SimpleName: sumFreq [13394,13401]
        MethodInvocation [13404,13416]
            SimpleName: getSumFreq [13404,13414]
to
VariableDeclarationStatement [15488,15522]
at -1
===
multi-move-tree
---
IfStatement [9027,9087]
    InfixExpression [9031,9043]
        SimpleName: sumFreq [9031,9038]
        INFIX_EXPRESSION_OPERATOR: == [9039,9041]
        NumberLiteral: 0 [9042,9043]
    Block [9045,9087]
        ReturnStatement [9059,9077]
            QualifiedName: Double.NaN [9066,9076]
to
IfStatement [15531,15591]
at -1
===
multi-move-tree
---
IfStatement [13426,13486]
    InfixExpression [13430,13442]
        SimpleName: sumFreq [13430,13437]
        INFIX_EXPRESSION_OPERATOR: == [13438,13440]
        NumberLiteral: 0 [13441,13442]
    Block [13444,13486]
        ReturnStatement [13458,13476]
            QualifiedName: Double.NaN [13465,13475]
to
IfStatement [15531,15591]
at -1
===
multi-move-tree
---
ReturnStatement [13495,13544]
    InfixExpression [13502,13543]
        CastExpression [13502,13524]
            PrimitiveType: double [13503,13509]
            MethodInvocation [13511,13524]
                SimpleName: getCumFreq [13511,13521]
                METHOD_INVOCATION_ARGUMENTS [13522,13523]
                    SimpleName: v [13522,13523]
        INFIX_EXPRESSION_OPERATOR: / [13525,13526]
        CastExpression [13527,13543]
            PrimitiveType: double [13528,13534]
            SimpleName: sumFreq [13536,13543]
to
ReturnStatement [15600,15649]
at -1
===
multi-move-tree
---
ReturnStatement [9096,9143]
    InfixExpression [9103,9142]
        CastExpression [9103,9123]
            PrimitiveType: double [9104,9110]
            MethodInvocation [9112,9123]
                SimpleName: getCount [9112,9120]
                METHOD_INVOCATION_ARGUMENTS [9121,9122]
                    SimpleName: v [9121,9122]
        INFIX_EXPRESSION_OPERATOR: / [9124,9125]
        CastExpression [9126,9142]
            PrimitiveType: double [9127,9133]
            SimpleName: sumFreq [9135,9142]
to
ReturnStatement [15600,15649]
at -1
===
multi-move-tree
---
SimpleName: getCount [9112,9120]
to
SimpleName: getCumFreq [15616,15626]
at -1
