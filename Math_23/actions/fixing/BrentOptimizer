===
insert-node
---
Javadoc [1219,1905]
to
TypeDeclaration [1219,10297]
at 0
===
insert-node
---
TagElement [1226,1867]
to
Javadoc [1219,1905]
at 0
===
move-tree
---
TagElement [1686,1699]
    TextElement:  $Id$ [1694,1699]
to
Javadoc [1219,1905]
at 1
===
move-tree
---
TagElement [1703,1713]
    TextElement:  2.0 [1709,1713]
to
Javadoc [1219,1905]
at 2
===
insert-node
---
TextElement: For a function defined on some interval  [1226,1266]
to
TagElement [1226,1867]
at 0
===
move-tree
---
TagElement [1550,1566]
    TextElement:  (lo, hi) [1556,1565]
to
TagElement [1226,1867]
at 1
===
insert-node
---
TextElement: , this class [1282,1294]
to
TagElement [1226,1867]
at 2
===
insert-node
---
TextElement: finds an approximation  [1298,1321]
to
TagElement [1226,1867]
at 3
===
move-tree
---
TagElement [1611,1620]
    TextElement:  x [1617,1619]
to
TagElement [1226,1867]
at 4
===
insert-node
---
TextElement:  to the point at which the function [1330,1365]
to
TagElement [1226,1867]
at 5
===
insert-node
---
TextElement: attains its minimum. [1369,1389]
to
TagElement [1226,1867]
at 6
===
insert-node
---
TextElement: It implements Richard Brent's algorithm (from his book "Algorithms for [1393,1463]
to
TagElement [1226,1867]
at 7
===
move-tree
---
TextElement: Minimization without Derivatives", p. 79) for finding minima of real [1297,1365]
to
TagElement [1226,1867]
at 8
===
insert-node
---
TextElement: univariate functions. [1539,1560]
to
TagElement [1226,1867]
at 9
===
insert-node
---
TextElement: <br/> [1564,1569]
to
TagElement [1226,1867]
at 10
===
insert-node
---
TextElement: This code is an adaptation, partly based on the Python code from SciPy [1573,1643]
to
TagElement [1226,1867]
at 11
===
insert-node
---
TextElement: (module "optimize.py" v0.5); the original algorithm is also modified [1647,1715]
to
TagElement [1226,1867]
at 12
===
insert-node
---
TextElement: <ul> [1719,1723]
to
TagElement [1226,1867]
at 13
===
insert-node
---
TextElement: <li>to use an initial guess provided by the user,</li> [1728,1782]
to
TagElement [1226,1867]
at 14
===
insert-node
---
TextElement: <li>to ensure that the best point encountered is the one returned.</li> [1787,1858]
to
TagElement [1226,1867]
at 15
===
insert-node
---
TextElement: </ul> [1862,1867]
to
TagElement [1226,1867]
at 16
===
insert-tree
---
VariableDeclarationStatement [5509,5549]
    SimpleType [5509,5533]
        SimpleName: UnivariatePointValuePair [5509,5533]
    VariableDeclarationFragment [5534,5548]
        SimpleName: best [5534,5538]
        SimpleName: current [5541,5548]
to
Block [4307,9475]
at 19
===
update-node
---
TextElement: . [9802,9803]
replace . by . When 
===
insert-tree
---
TagElement [10432,10441]
    TextElement:  a [10438,10440]
to
TagElement [9707,9803]
at 10
===
insert-node
---
TextElement:  and  [10441,10446]
to
TagElement [9707,9803]
at 11
===
insert-tree
---
TagElement [10446,10455]
    TextElement:  b [10452,10454]
to
TagElement [9707,9803]
at 12
===
insert-node
---
TextElement:  have the same function [10455,10478]
to
TagElement [9707,9803]
at 13
===
insert-node
---
TextElement: value,  [10486,10493]
to
TagElement [9707,9803]
at 14
===
insert-tree
---
TagElement [10493,10502]
    TextElement:  a [10499,10501]
to
TagElement [9707,9803]
at 15
===
insert-node
---
TextElement:  is returned. [10502,10515]
to
TagElement [9707,9803]
at 16
===
insert-tree
---
ExpressionStatement [8376,8559]
    Assignment [8376,8558]
        SimpleName: best [8376,8380]
        ASSIGNMENT_OPERATOR: = [8381,8382]
        MethodInvocation [8383,8558]
            SimpleName: best [8383,8387]
            METHOD_INVOCATION_ARGUMENTS [8388,8557]
                SimpleName: best [8388,8392]
                MethodInvocation [8422,8520]
                    SimpleName: best [8422,8426]
                    METHOD_INVOCATION_ARGUMENTS [8427,8519]
                        SimpleName: current [8427,8434]
                        SimpleName: previous [8469,8477]
                        SimpleName: isMinim [8512,8519]
                SimpleName: isMinim [8550,8557]
to
Block [5608,9317]
at 10
===
insert-node
---
MethodInvocation [9872,10047]
to
ReturnStatement [9385,9425]
at 0
===
update-node
---
INFIX_EXPRESSION_OPERATOR: < [10183,10184]
replace < by <=
===
update-node
---
INFIX_EXPRESSION_OPERATOR: > [10256,10257]
replace > by >=
===
insert-node
---
SimpleName: best [9872,9876]
to
MethodInvocation [9872,10047]
at 0
===
insert-node
---
METHOD_INVOCATION_ARGUMENTS [9877,10046]
to
MethodInvocation [9872,10047]
at 1
===
insert-node
---
SimpleName: best [9877,9881]
to
METHOD_INVOCATION_ARGUMENTS [9877,10046]
at 0
===
move-tree
---
MethodInvocation [9392,9424]
    SimpleName: best [9392,9396]
    METHOD_INVOCATION_ARGUMENTS [9397,9423]
        SimpleName: current [9397,9404]
        SimpleName: previous [9406,9414]
        SimpleName: isMinim [9416,9423]
to
METHOD_INVOCATION_ARGUMENTS [9877,10046]
at 1
===
insert-node
---
SimpleName: isMinim [10039,10046]
to
METHOD_INVOCATION_ARGUMENTS [9877,10046]
at 2
===
move-tree
---
SimpleName: best [8193,8197]
to
ReturnStatement [8186,8226]
at 0
===
delete-node
---
TextElement: Implements Richard Brent's algorithm (from his book "Algorithms for [1226,1293]
===
===
delete-node
---
TextElement: univariate functions. This implementation is an adaptation partly [1369,1434]
===
===
delete-node
---
TextElement: based on the Python code from SciPy (module "optimize.py" v0.5). [1438,1502]
===
===
delete-node
---
TextElement: If the function is defined on some interval  [1506,1550]
===
===
delete-node
---
TextElement: , then [1566,1572]
===
===
delete-node
---
TextElement: this method finds an approximation  [1576,1611]
===
===
delete-node
---
TextElement:  to the point at which [1620,1642]
===
===
delete-node
---
TextElement: the function attains its minimum. [1646,1679]
===
===
delete-node
---
TagElement [1226,1679]
===
===
delete-node
---
Javadoc [1219,1717]
===
===
delete-tree
---
METHOD_INVOCATION_ARGUMENTS [8198,8224]
    SimpleName: current [8198,8205]
    SimpleName: previous [8207,8215]
    SimpleName: isMinim [8217,8224]
===
delete-node
---
MethodInvocation [8193,8225]
===
