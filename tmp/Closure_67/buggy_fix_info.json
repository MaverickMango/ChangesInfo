{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest::testAliasing7",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "67",
  "workingDir": "../bugs/Closure_67_tmp",
  "bug_name": "Closure_67",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest",
      "test_function": "testAliasing7",
      "assertion_line": "189",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: function e(){}e.prototype[\"alias1\"]\u003de.prototype.method1\u003dfunction(){this.method2()};e.prototype.method2\u003dfunction(){}\nResult: function e(){}e.prototype[\"alias1\"]\u003de.prototype.method1\u003dfunction(){this.method2()}"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java",
        "src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.AnalyzePrototypeProperties\\$ProcessProperties:isPrototypePropertyAssign:[Node assign]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.AnalyzePrototypeProperties\\$ProcessProperties:isPrototypePropertyAssign:[Node assign]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "318"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "318"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\nindex 4472638..30b19e0 100644\n--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\n@@ -315,7 +315,7 @@\n       Node n \u003d assign.getFirstChild();\n       if (n !\u003d null \u0026\u0026 NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n           \u0026\u0026 n.getType() \u003d\u003d Token.GETPROP\n-          \u0026\u0026 assign.getParent().getType() \u003d\u003d Token.EXPR_RESULT) {\n+          ) {\n         // We want to exclude the assignment itself from the usage list\n         boolean isChainedProperty \u003d\n             n.getFirstChild().getType() \u003d\u003d Token.GETPROP;\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [11763,11765]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [11766,11815]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [11655,11815]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}