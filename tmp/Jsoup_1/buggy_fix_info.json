{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.parser.ParserTest::createsStructureFromBodySnippet",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Document",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "1",
  "workingDir": "../bugs/Jsoup_1_tmp",
  "bug_name": "Jsoup_1",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.parser.ParserTest",
      "test_function": "createsStructureFromBodySnippet",
      "assertion_line": "110",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c[foo bar baz]\u003e but was:\u003c[bar baz foo]\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Document.java",
        "src/main/java/org/jsoup/nodes/Document.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Document:normalise:[Element element]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Document:normalise:[Element element]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "125",
            "126"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "125",
            "126"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Document.java b/src/main/java/org/jsoup/nodes/Document.java\nindex 6ed4c12..bc0f650 100644\n--- a/src/main/java/org/jsoup/nodes/Document.java\n+++ b/src/main/java/org/jsoup/nodes/Document.java\n@@ -122,8 +122,8 @@\n \n         for (Node node: toMove) {\n             element.removeChild(node);\n-            body().prependChild(node);\n-            body().prependChild(new TextNode(\" \", \"\"));\n+            body().appendChild(new TextNode(\" \", \"\"));\n+            body().appendChild(node);\n         }\n     }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}