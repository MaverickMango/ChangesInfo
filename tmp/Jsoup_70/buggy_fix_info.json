{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.nodes.ElementTest::testKeepsPreTextAtDepth",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Element",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "70",
  "workingDir": "../bugs/Jsoup_70_tmp",
  "bug_name": "Jsoup_70",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.nodes.ElementTest",
      "test_function": "testKeepsPreTextAtDepth",
      "assertion_line": "110",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003ccode["
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Element.java",
        "src/main/java/org/jsoup/nodes/Element.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Element:preserveWhitespace:[Node node]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Element:preserveWhitespace:[Node node]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1091",
            "1092",
            "1095",
            "1096",
            "1097"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "1093",
            "1094"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Element.java b/src/main/java/org/jsoup/nodes/Element.java\nindex ba1470b..faca4c8 100644\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n@@ -1088,13 +1088,10 @@\n         // looks only at this element and five levels up, to prevent recursion \u0026 needless stack searches\n         if (node !\u003d null \u0026\u0026 node instanceof Element) {\n             Element el \u003d (Element) node;\n-            int i \u003d 0;\n-            do {\n                 if (el.tag.preserveWhitespace())\n                     return true;\n-                el \u003d el.parent();\n-                i++;\n-            } while (i \u003c 6 \u0026\u0026 el !\u003d null);\n+                else\n+                    return el.parent() !\u003d null \u0026\u0026 el.parent().tag.preserveWhitespace();\n         }\n         return false;\n     }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ReturnStatement [40161,40228]"
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [40050,40060]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [40176,40193]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [40210,40214]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [40076,40228]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [40236,40255]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "DoStatement [40073,40257]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}