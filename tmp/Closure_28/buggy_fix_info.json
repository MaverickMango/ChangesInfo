{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.InlineCostEstimatorTest::testCost,com.google.javascript.jscomp.InlineFunctionsTest::testIssue728",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.InlineCostEstimator",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "28",
  "workingDir": "../bugs/Closure_28_tmp",
  "bug_name": "Closure_28",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.InlineCostEstimatorTest",
      "test_function": "testCost",
      "assertion_line": "49",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c1\u003e but was:\u003c4\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.InlineFunctionsTest",
      "test_function": "testIssue728",
      "assertion_line": "2176",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");if(!false)alert(\"x\");\nResult: var f\u003dfunction(){return false};if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");if(!f())alert(\"x\");"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/InlineCostEstimator.java",
        "src/com/google/javascript/jscomp/InlineCostEstimator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.InlineCostEstimator\\$CompiledSizeEstimator:addConstant:[String newcode]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "102",
            "103",
            "104",
            "105"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "101"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/InlineCostEstimator.java b/src/com/google/javascript/jscomp/InlineCostEstimator.java\nindex 65694ab..76a5d0a 100644\n--- a/src/com/google/javascript/jscomp/InlineCostEstimator.java\n+++ b/src/com/google/javascript/jscomp/InlineCostEstimator.java\n@@ -99,9 +99,5 @@\n      * Constants (true, false, null) are considered basically free,\n      * because it\u0027s likely that they will get folded when we\u0027re done.\n      */\n-    @Override\n-    void addConstant(String newcode) {\n-      add(\"0\");\n-    }\n   }\n }\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [2522,2746]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [
        "com.google.javascript.jscomp.InlineCostEstimator\\$CompiledSizeEstimator:addConstant:[String newcode]:void"
      ],
      "num": 1
    }
  }
}