{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.CheckMissingReturnTest::testIssue779,com.google.javascript.jscomp.ControlFlowAnalysisTest::testDeepNestedFinally,com.google.javascript.jscomp.ControlFlowAnalysisTest::testDeepNestedBreakwithFinally",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.ControlFlowAnalysis",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "14",
  "workingDir": "../bugs/Closure_14_tmp",
  "bug_name": "Closure_14",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.CheckMissingReturnTest",
      "test_function": "testIssue779",
      "assertion_line": "195",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Unexpected error(s): JSC_MISSING_RETURN_STATEMENT. Missing return statement. Function expected to return number. at testcode line 1 : 24 expected:\u003c0\u003e but was:\u003c1\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.ControlFlowAnalysisTest",
      "test_function": "testDeepNestedFinally",
      "assertion_line": "177",
      "exception": "junit.framework.AssertionFailedError",
      "message": "No cross edges found"
    },
    {
      "test_class": "com.google.javascript.jscomp.ControlFlowAnalysisTest",
      "test_function": "testDeepNestedBreakwithFinally",
      "assertion_line": "177",
      "exception": "junit.framework.AssertionFailedError",
      "message": "No cross edges found"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "src/com/google/javascript/jscomp/ControlFlowAnalysis.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.ControlFlowAnalysis:computeFollowNode:[Node fromNode, Node node, ControlFlowAnalysis cfa]:Node"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.ControlFlowAnalysis:computeFollowNode:[Node fromNode, Node node, ControlFlowAnalysis cfa]:Node"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "767"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "767"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\nindex 980deff..5c6927f 100644\n--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\n@@ -764,7 +764,7 @@\n         } else if (parent.getLastChild() \u003d\u003d node){\n           if (cfa !\u003d null) {\n             for (Node finallyNode : cfa.finallyMap.get(parent)) {\n-              cfa.createEdge(fromNode, Branch.ON_EX, finallyNode);\n+              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);\n             }\n           }\n           return computeFollowNode(fromNode, parent, cfa);\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}