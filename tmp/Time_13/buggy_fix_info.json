{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.joda.time.format.TestISOPeriodFormat::testFormatStandard_negative",
    "test.dir": "src/test/java",
    "clz.modified": "org.joda.time.format.PeriodFormatterBuilder",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Time",
  "id": "13",
  "workingDir": "../bugs/Time_13_tmp",
  "bug_name": "Time_13",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.joda.time.format.TestISOPeriodFormat",
      "test_function": "testFormatStandard_negative",
      "assertion_line": "135",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cPT[-]0.008S\u003e but was:\u003cPT[]0.008S\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/joda/time/format/PeriodFormatterBuilder.java",
        "src/main/java/org/joda/time/format/PeriodFormatterBuilder.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.joda.time.format.PeriodFormatterBuilder\\$FieldFormatter:printTo:[StringBuffer buf, ReadablePeriod period, Locale locale]:void",
            "org.joda.time.format.PeriodFormatterBuilder\\$FieldFormatter:calculatePrintedLength:[ReadablePeriod period, Locale locale]:int"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.joda.time.format.PeriodFormatterBuilder\\$FieldFormatter:printTo:[StringBuffer buf, ReadablePeriod period, Locale locale]:void",
            "org.joda.time.format.PeriodFormatterBuilder\\$FieldFormatter:calculatePrintedLength:[ReadablePeriod period, Locale locale]:int"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1098",
            "1133",
            "1143",
            "1144",
            "1145"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "1098",
            "1132",
            "1143"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\nindex 29b0872..6c8e9c6 100644\n--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java\n@@ -1095,7 +1095,7 @@\n             if (iFieldType \u003e\u003d SECONDS_MILLIS) {\n                 // valueLong contains the seconds and millis fields\n                 // the minimum output is 0.000, which is 4 or 5 digits with a negative\n-                sum \u003d (valueLong \u003c 0 ? Math.max(sum, 5) : Math.max(sum, 4));\n+                sum \u003d Math.max(sum, 4);\n                 // plus one for the decimal point\n                 sum++;\n                 if (iFieldType \u003d\u003d SECONDS_OPTIONAL_MILLIS \u0026\u0026\n@@ -1130,7 +1130,6 @@\n             if (iPrefix !\u003d null) {\n                 iPrefix.printTo(buf, value);\n             }\n-            int bufLen \u003d buf.length();\n             int minDigits \u003d iMinPrintedDigits;\n             if (minDigits \u003c\u003d 1) {\n                 FormatUtils.appendUnpaddedInteger(buf, value);\n@@ -1140,9 +1139,6 @@\n             if (iFieldType \u003e\u003d SECONDS_MILLIS) {\n                 int dp \u003d (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);\n                 if (iFieldType \u003d\u003d SECONDS_MILLIS || dp \u003e 0) {\n-                    if (valueLong \u003c 0 \u0026\u0026 valueLong \u003e -DateTimeConstants.MILLIS_PER_SECOND) {\n-                        buf.insert(bufLen, \u0027-\u0027);\n-                    }\n                     buf.append(\u0027.\u0027);\n                     FormatUtils.appendPaddedInteger(buf, dp, 3);\n                 }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [39916,39929]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [39932,39948]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [39916,39967]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ParenthesizedExpression [39915,39968]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [41296,41322]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [41796,41939]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}