{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest::testC3P0Types",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "94",
  "workingDir": "../bugs/JacksonDatabind_94_tmp",
  "bug_name": "JacksonDatabind_94",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
      "test_function": "testC3P0Types",
      "assertion_line": "115",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected an exception with one of substrings ([Illegal type]): got one with message \"Can not instantiate value of type [simple type, class com.mchange.v2.c3p0.jacksontest.ComboPooledDataSource] from String value (\u0027/tmp/foobar.txt\u0027); no single-String constructor/factory method"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
        "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator:validateSubType:[DeserializationContext ctxt, JavaType type]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator:validateSubType:[DeserializationContext ctxt, JavaType type]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "23",
            "99",
            "100",
            "107",
            "108"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "22",
            "99"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java\nindex 777637a..9865b1a 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java\n@@ -20,7 +20,6 @@\n {\n     protected final static String PREFIX_SPRING \u003d \"org.springframework.\";\n \n-    protected final static String PREFIX_C3P0 \u003d \"com.mchange.v2.c3p0.\";\n \n     /**\n      * Set of well-known \"nasty classes\", deserialization of which is considered dangerous\n@@ -96,16 +95,12 @@\n                             || \"AbstractApplicationContext\".equals(name)) {\n                         break main_check;\n                     }\n-                }\n-            } else if (full.startsWith(PREFIX_C3P0)) {\n                 // [databind#1737]; more 3rd party\n                 // s.add(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");\n                 // s.add(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");\n                 // [databind#1931]; more 3rd party\n                 // com.mchange.v2.c3p0.ComboPooledDataSource\n                 // com.mchange.v2.c3p0.debug.AfterCloseLoggingComboPooledDataSource \n-                if (full.endsWith(\"DataSource\")) {\n-                    break main_check;\n                 }\n             }\n             return;\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "FieldDeclaration [648,715]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [4427,4989]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}