{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.csv.CSVRecordTest::testToMapWithNoHeader",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.csv.CSVRecord",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Csv",
  "id": "9",
  "workingDir": "../bugs/Csv_9_tmp",
  "bug_name": "Csv_9",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.csv.CSVRecordTest",
      "test_function": "testToMapWithNoHeader",
      "assertion_line": "175",
      "exception": "java.lang.NullPointerException",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/csv/CSVRecord.java",
        "src/main/java/org/apache/commons/csv/CSVRecord.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.csv.CSVRecord:putIn:[final M map]:M"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.csv.CSVRecord:putIn:[final M map]:M"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "180",
            "181",
            "182"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "179"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/csv/CSVRecord.java b/src/main/java/org/apache/commons/csv/CSVRecord.java\nindex e814b70..3abb468 100644\n--- a/src/main/java/org/apache/commons/csv/CSVRecord.java\n+++ b/src/main/java/org/apache/commons/csv/CSVRecord.java\n@@ -177,9 +177,6 @@\n      * @return the given map.\n      */\n     \u003cM extends Map\u003cString, String\u003e\u003e M putIn(final M map) {\n-        if (mapping \u003d\u003d null) {\n-            return map;\n-        }\n         for (final Entry\u003cString, Integer\u003e entry : mapping.entrySet()) {\n             final int col \u003d entry.getValue().intValue();\n             if (col \u003c values.length) {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [5751,5807]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}