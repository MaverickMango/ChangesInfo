{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.nodes.DocumentTypeTest::outerHtmlGeneration,org.jsoup.nodes.DocumentTypeTest::constructorValidationThrowsExceptionOnBlankName",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.DocumentType",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "16",
  "workingDir": "../bugs/Jsoup_16_tmp",
  "bug_name": "Jsoup_16",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.nodes.DocumentTypeTest",
      "test_function": "outerHtmlGeneration",
      "assertion_line": "36",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c\u003c!DOCTYPE html [\"]http://www.ibm.com/d...\u003e but was:\u003c\u003c!DOCTYPE html []http://www.ibm.com/d...\u003e"
    },
    {
      "test_class": "org.jsoup.nodes.DocumentTypeTest",
      "test_function": "constructorValidationThrowsExceptionOnBlankName",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected exception: java.lang.IllegalArgumentException"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/DocumentType.java",
        "src/main/java/org/jsoup/nodes/DocumentType.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.DocumentType:DocumentType:[String name, String publicId, String systemId, String baseUri]:null",
            "org.jsoup.nodes.DocumentType:outerHtmlHead:[StringBuilder accum, int depth, Document.OutputSettings out]:void"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.DocumentType:outerHtmlHead:[StringBuilder accum, int depth, Document.OutputSettings out]:void",
            "org.jsoup.nodes.DocumentType:DocumentType:[String name, String publicId, String systemId, String baseUri]:null"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "4",
            "22",
            "35",
            "39"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "3",
            "22",
            "33",
            "37"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/DocumentType.java b/src/main/java/org/jsoup/nodes/DocumentType.java\nindex f8c79f0..f9f77da 100644\n--- a/src/main/java/org/jsoup/nodes/DocumentType.java\n+++ b/src/main/java/org/jsoup/nodes/DocumentType.java\n@@ -1,7 +1,6 @@\n package org.jsoup.nodes;\n \n import org.jsoup.helper.StringUtil;\n-import org.jsoup.helper.Validate;\n \n /**\n  * A {@code \u003c!DOCTPYE\u003e} node.\n@@ -19,7 +18,6 @@\n     public DocumentType(String name, String publicId, String systemId, String baseUri) {\n         super(baseUri);\n \n-        Validate.notEmpty(name);\n         attr(\"name\", name);\n         attr(\"publicId\", publicId);\n         attr(\"systemId\", systemId);\n@@ -32,11 +30,11 @@\n \n     @Override\n     void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\n-        accum.append(\"\u003c!DOCTYPE \").append(attr(\"name\"));\n+        accum.append(\"\u003c!DOCTYPE html\");\n         if (!StringUtil.isBlank(attr(\"publicId\")))\n             accum.append(\" PUBLIC \\\"\").append(attr(\"publicId\")).append(\"\\\"\");\n         if (!StringUtil.isBlank(attr(\"systemId\")))\n-            accum.append(\" \\\"\").append(attr(\"systemId\")).append(\"\\\"\");\n+            accum.append(\u0027 \u0027).append(attr(\"systemId\")).append(\"\\\"\");\n         accum.append(\u0027\u003e\u0027);\n     }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "CharacterLiteral: \u0027 \u0027 [1069,1072]"
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [62,95]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [580,604]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_RECEIVER [899,925]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: append [926,932]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_ARGUMENTS [933,945]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [899,946]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "StringLiteral: \" \\\"\" [1153,1158]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}