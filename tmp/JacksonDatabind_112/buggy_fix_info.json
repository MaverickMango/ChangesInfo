{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.deser.creators.DelegatingArrayCreator2324Test::testDeserializeBagOfStrings",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "112",
  "workingDir": "../bugs/JacksonDatabind_112_tmp",
  "bug_name": "JacksonDatabind_112",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.deser.creators.DelegatingArrayCreator2324Test",
      "test_function": "testDeserializeBagOfStrings",
      "assertion_line": "59",
      "exception": "com.fasterxml.jackson.databind.exc.MismatchedInputException",
      "message": "Cannot construct instance of `com.fasterxml.jackson.databind.deser.creators.DelegatingArrayCreator2324Test$ImmutableBag` (although at least one Creator exists): no default no-arguments constructor found"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer:createContextual:[DeserializationContext ctxt, BeanProperty property]:JsonDeserializer\u003c?\u003e"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer:createContextual:[DeserializationContext ctxt, BeanProperty property]:JsonDeserializer\u003c?\u003e"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "107",
            "109",
            "110",
            "111"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "107"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java\nindex 0bf2e12..f50ca36 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java\n@@ -104,11 +104,8 @@\n         JsonDeserializer\u003cObject\u003e delegate \u003d null;\n         if (_valueInstantiator !\u003d null) {\n             // [databind#2324]: check both array-delegating and delegating\n-            AnnotatedWithParams delegateCreator \u003d _valueInstantiator.getArrayDelegateCreator();\n+            AnnotatedWithParams delegateCreator \u003d _valueInstantiator.getDelegateCreator();\n             if (delegateCreator !\u003d null) {\n-                JavaType delegateType \u003d _valueInstantiator.getArrayDelegateType(ctxt.getConfig());\n-                delegate \u003d findDeserializer(ctxt, delegateType, property);\n-            } else if ((delegateCreator \u003d _valueInstantiator.getDelegateCreator()) !\u003d null) {\n                 JavaType delegateType \u003d _valueInstantiator.getDelegateType(ctxt.getConfig());\n                 delegate \u003d findDeserializer(ctxt, delegateType, property);\n             }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [4252,4334]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [4433,4500]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [4614,4672]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [4502,4686]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [4429,4686]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}