{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest::testParseReparse",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.zip.X7875_NewUnix",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "34",
  "workingDir": "../bugs/Compress_34_tmp",
  "bug_name": "Compress_34",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest",
      "test_function": "testParseReparse",
      "assertion_line": "168",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c0\u003e but was:\u003c5\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java",
        "src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.X7875_NewUnix:getCentralDirectoryLength:[]:ZipShort"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.X7875_NewUnix:getCentralDirectoryLength:[]:ZipShort"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "58",
            "147"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "57",
            "146"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java b/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java\nindex e325b56..14aebab 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java\n@@ -55,7 +55,6 @@\n  */\n public class X7875_NewUnix implements ZipExtraField, Cloneable, Serializable {\n     private static final ZipShort HEADER_ID \u003d new ZipShort(0x7875);\n-    private static final ZipShort ZERO \u003d new ZipShort(0);\n     private static final BigInteger ONE_THOUSAND \u003d BigInteger.valueOf(1000);\n     private static final long serialVersionUID \u003d 1L;\n \n@@ -144,7 +143,7 @@\n      * @return a \u003ccode\u003eZipShort\u003c/code\u003e for the length of the data of this extra field\n      */\n     public ZipShort getCentralDirectoryLength() {\n-        return ZERO;\n+        return getLocalFileDataLength();\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ReturnStatement [5129,5161]"
        },
        {
          "type": "delete-tree",
          "from": "FieldDeclaration [2386,2439]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ReturnStatement [5187,5199]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}