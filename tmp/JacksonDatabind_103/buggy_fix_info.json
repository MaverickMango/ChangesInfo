{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.exc.BasicExceptionTest::testLocationAddition",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.DatabindContext,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonMappingException,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.deser.BasicDeserializerFactory,com.fasterxml.jackson.databind.deser.BeanDeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache,com.fasterxml.jackson.databind.deser.SettableAnyProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.std.StdDeserializer,com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer,com.fasterxml.jackson.databind.deser.std.StdValueInstantiator,com.fasterxml.jackson.databind.introspect.BasicBeanDescription,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.ser.PropertyBuilder,com.fasterxml.jackson.databind.util.ClassUtil",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "103",
  "workingDir": "../bugs/JacksonDatabind_103_tmp",
  "bug_name": "JacksonDatabind_103",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.exc.BasicExceptionTest",
      "test_function": "testLocationAddition",
      "assertion_line": "127",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Should only get one \u0027at [\u0027 marker, got 2, source: Cannot deserialize Map key of type `com.fasterxml.jackson.databind.BaseMapTest$ABC` from String \"value\": not a valid representation, problem: (com.fasterxml.jackson.databind.exc.InvalidFormatException) Cannot deserialize Map key of type `com.fasterxml.jackson.databind.BaseMapTest$ABC` from String \"value\": not one of values excepted for Enum class: [A, B, C]"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/DatabindContext.java",
        "src/main/java/com/fasterxml/jackson/databind/DatabindContext.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.DatabindContext:resolveSubType:[JavaType baseType, String subClass]:JavaType"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.DatabindContext:resolveSubType:[JavaType baseType, String subClass]:JavaType"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "195"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "195"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/DatabindContext.java b/src/main/java/com/fasterxml/jackson/databind/DatabindContext.java\nindex 1111038..134498b 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/DatabindContext.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DatabindContext.java\n@@ -192,7 +192,7 @@\n                 throw invalidTypeIdException(baseType, subClass, String.format(\n                         \"problem: (%s) %s\",\n                         e.getClass().getName(),\n-                        ClassUtil.exceptionMessage(e)));\n+                        e.getMessage()));\n             }\n             if (baseType.isTypeOrSuperTypeOf(cls)) {\n                 return getTypeFactory().constructSpecializedType(baseType, cls);\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [6406,6415]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [6433,6434]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java",
        "src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.DeserializationContext:parseDate:[String dateStr]:Date",
            "com.fasterxml.jackson.databind.DeserializationContext:instantiationException:[Class\u003c?\u003e instClass, Throwable cause]:JsonMappingException"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.DeserializationContext:parseDate:[String dateStr]:Date",
            "com.fasterxml.jackson.databind.DeserializationContext:instantiationException:[Class\u003c?\u003e instClass, Throwable cause]:JsonMappingException"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "714",
            "1603"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "714",
            "1603"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java b/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\nindex e2ff054..5ac7cdb 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/DeserializationContext.java\n@@ -711,7 +711,7 @@\n         } catch (ParseException e) {\n             throw new IllegalArgumentException(String.format(\n                     \"Failed to parse Date value \u0027%s\u0027: %s\", dateStr,\n-                    ClassUtil.exceptionMessage(e)));\n+                    e.getMessage()));\n         }\n     }\n \n@@ -1600,7 +1600,7 @@\n         String excMsg;\n         if (cause \u003d\u003d null) {\n             excMsg \u003d \"N/A\";\n-        } else if ((excMsg \u003d ClassUtil.exceptionMessage(cause)) \u003d\u003d null) {\n+        } else if ((excMsg \u003d cause.getMessage()) \u003d\u003d null) {\n             excMsg \u003d ClassUtil.nameOf(cause.getClass());\n         }\n         String msg \u003d String.format(\"Cannot construct instance of %s, problem: %s\",\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [23830,23839]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [23857,23858]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [62844,62849]",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/JsonMappingException.java",
        "src/main/java/com/fasterxml/jackson/databind/JsonMappingException.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.JsonMappingException:wrapWithPath:[Throwable src, Reference ref]:JsonMappingException",
            "com.fasterxml.jackson.databind.JsonMappingException:fromUnexpectedIOE:[IOException src]:JsonMappingException"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.JsonMappingException:fromUnexpectedIOE:[IOException src]:JsonMappingException",
            "com.fasterxml.jackson.databind.JsonMappingException:wrapWithPath:[Throwable src, Reference ref]:JsonMappingException"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "10",
            "340",
            "381"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "9",
            "339",
            "380"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/JsonMappingException.java b/src/main/java/com/fasterxml/jackson/databind/JsonMappingException.java\nindex 4c25818..e0c6408 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/JsonMappingException.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/JsonMappingException.java\n@@ -7,7 +7,6 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.core.*;\n-import com.fasterxml.jackson.databind.util.ClassUtil;\n \n /**\n  * Checked exception used to signal fatal problems with mapping of\n@@ -337,7 +336,7 @@\n         return new JsonMappingException(null,\n                 String.format(\"Unexpected IOException (of type %s): %s\",\n                         src.getClass().getName(),\n-                        ClassUtil.exceptionMessage(src)));\n+                        src.getMessage()));\n     }\n \n     /**\n@@ -378,7 +377,7 @@\n             jme \u003d (JsonMappingException) src;\n         } else {\n             // [databind#2128]: try to avoid duplication\n-            String msg \u003d ClassUtil.exceptionMessage(src);\n+            String msg \u003d src.getMessage();\n             // Let\u0027s use a more meaningful placeholder if all we have is null\n             if (msg \u003d\u003d null || msg.length() \u003d\u003d 0) {\n                 msg \u003d \"(was \"+src.getClass().getName()+\")\";\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [234,287]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [11466,11475]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [11493,11496]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [13186,13195]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [13213,13216]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java",
        "src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.SerializerProvider:_createAndCacheUntypedSerializer:[JavaType type]:JsonSerializer\u003cObject\u003e",
            "com.fasterxml.jackson.databind.SerializerProvider:_createAndCacheUntypedSerializer:[Class\u003c?\u003e rawType]:JsonSerializer\u003cObject\u003e"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.SerializerProvider:_createAndCacheUntypedSerializer:[JavaType type]:JsonSerializer\u003cObject\u003e",
            "com.fasterxml.jackson.databind.SerializerProvider:_createAndCacheUntypedSerializer:[Class\u003c?\u003e rawType]:JsonSerializer\u003cObject\u003e"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1341",
            "1361"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "1341",
            "1361"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\nindex ac24e11..d68b578 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n@@ -1338,7 +1338,7 @@\n             // We better only expose checked exceptions, since those\n             // are what caller is expected to handle\n             ser \u003d null; // doesn\u0027t matter but compiler whines otherwise\n-            reportMappingProblem(iae, ClassUtil.exceptionMessage(iae));\n+            reportMappingProblem(iae, iae.getMessage());\n         }\n \n         if (ser !\u003d null) {\n@@ -1358,7 +1358,7 @@\n             // We better only expose checked exceptions, since those\n             // are what caller is expected to handle\n             ser \u003d null;\n-            reportMappingProblem(iae, ClassUtil.exceptionMessage(iae));\n+            reportMappingProblem(iae, iae.getMessage());\n         }\n     \n         if (ser !\u003d null) {\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [50791,50800]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [50818,50821]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [51539,51548]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [51566,51569]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:findTypeDeserializer:[DeserializationConfig config, JavaType baseType]:TypeDeserializer"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:findTypeDeserializer:[DeserializationConfig config, JavaType baseType]:TypeDeserializer"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1589"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "1589"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\nindex 2019d1e..042cf0a 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java\n@@ -1586,7 +1586,7 @@\n             return b.buildTypeDeserializer(config, baseType, subtypes);\n         } catch (IllegalArgumentException e0) {\n             InvalidDefinitionException e \u003d InvalidDefinitionException.from((JsonParser) null,\n-                    ClassUtil.exceptionMessage(e0), baseType);\n+                    e0.getMessage(), baseType);\n             e.initCause(e0);\n             throw e;\n         }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [74355,74364]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [74382,74384]",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:buildBeanDeserializer:[DeserializationContext ctxt, JavaType type, BeanDescription beanDesc]:JsonDeserializer\u003cObject\u003e",
            "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:buildBuilderBasedDeserializer:[DeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc]:JsonDeserializer\u003cObject\u003e"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:buildBuilderBasedDeserializer:[DeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc]:JsonDeserializer\u003cObject\u003e",
            "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:buildBeanDeserializer:[DeserializationContext ctxt, JavaType type, BeanDescription beanDesc]:JsonDeserializer\u003cObject\u003e"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "222",
            "281"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "222",
            "281"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\nindex 1f02d70..9835b52 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n@@ -219,7 +219,7 @@\n             //   to throw proper exception, it doesn\u0027t actually have reference to this\n             //   instance so...\n             throw InvalidDefinitionException.from(ctxt.getParser(),\n-                    ClassUtil.exceptionMessage(e),\n+                    e.getMessage(),\n                     beanDesc, null);\n         }\n         BeanDeserializerBuilder builder \u003d constructBeanDeserializerBuilder(ctxt, beanDesc);\n@@ -278,7 +278,7 @@\n             //   to throw proper exception, it doesn\u0027t actually have reference to this\n             //   instance so...\n             throw InvalidDefinitionException.from(ctxt.getParser(),\n-                    ClassUtil.exceptionMessage(e),\n+                    e.getMessage(),\n                     builderDesc, null);\n         }\n         final DeserializationConfig config \u003d ctxt.getConfig();\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [9533,9542]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [9560,9561]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [12312,12321]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [12339,12340]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.DeserializerCache:_createAndCache2:[DeserializationContext ctxt, DeserializerFactory factory, JavaType type]:JsonDeserializer\u003cObject\u003e"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.DeserializerCache:_createAndCache2:[DeserializationContext ctxt, DeserializerFactory factory, JavaType type]:JsonDeserializer\u003cObject\u003e"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "268"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "268"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java\nindex 8aff025..b4dbdbe 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java\n@@ -265,7 +265,7 @@\n         } catch (IllegalArgumentException iae) {\n             // We better only expose checked exceptions, since those\n             // are what caller is expected to handle\n-            throw JsonMappingException.from(ctxt, ClassUtil.exceptionMessage(iae), iae);\n+            throw JsonMappingException.from(ctxt, iae.getMessage(), iae);\n         }\n         if (deser \u003d\u003d null) {\n             return null;\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [10660,10669]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [10687,10690]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.SettableAnyProperty:_throwAsIOE:[Exception e, Object propName, Object value]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.SettableAnyProperty:_throwAsIOE:[Exception e, Object propName, Object value]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "202",
            "214"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "202",
            "214"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java\nindex 465562e..e6663f1 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/SettableAnyProperty.java\n@@ -199,7 +199,7 @@\n             StringBuilder msg \u003d new StringBuilder(\"Problem deserializing \\\"any\\\" property \u0027\").append(propName);\n             msg.append(\"\u0027 of class \"+getClassName()+\" (expected type: \").append(_type);\n             msg.append(\"; actual type: \").append(actType).append(\")\");\n-            String origMsg \u003d ClassUtil.exceptionMessage(e);\n+            String origMsg \u003d e.getMessage();\n             if (origMsg !\u003d null) {\n                 msg.append(\", problem: \").append(origMsg);\n             } else {\n@@ -211,7 +211,7 @@\n         ClassUtil.throwIfRTE(e);\n         // let\u0027s wrap the innermost problem\n         Throwable t \u003d ClassUtil.getRootCause(e);\n-        throw new JsonMappingException(null, ClassUtil.exceptionMessage(t), t);\n+        throw new JsonMappingException(null, t.getMessage(), t);\n     }\n \n     private String getClassName() { return _setter.getDeclaringClass().getName(); }\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [7523,7532]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [7550,7551]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [8026,8035]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [8053,8054]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.SettableBeanProperty:_throwAsIOE:[JsonParser p, Exception e]:IOException",
            "com.fasterxml.jackson.databind.deser.SettableBeanProperty:_throwAsIOE:[JsonParser p, Exception e, Object value]:void"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.SettableBeanProperty:_throwAsIOE:[JsonParser p, Exception e, Object value]:void",
            "com.fasterxml.jackson.databind.deser.SettableBeanProperty:_throwAsIOE:[JsonParser p, Exception e]:IOException"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "590",
            "611"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "590",
            "611"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java\nindex bd0c044..31a5bb0 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java\n@@ -587,7 +587,7 @@\n                     .append(getType())\n                     .append(\"; actual type: \")\n                     .append(actType).append(\")\");\n-            String origMsg \u003d ClassUtil.exceptionMessage(e);\n+            String origMsg \u003d e.getMessage();\n             if (origMsg !\u003d null) {\n                 msg.append(\", problem: \")\n                     .append(origMsg);\n@@ -608,7 +608,7 @@\n         ClassUtil.throwIfRTE(e);\n         // let\u0027s wrap the innermost problem\n         Throwable th \u003d ClassUtil.getRootCause(e);\n-        throw JsonMappingException.from(p, ClassUtil.exceptionMessage(th), th);\n+        throw JsonMappingException.from(p, th.getMessage(), th);\n     }\n \n     @Deprecated // since 2.7\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [20437,20446]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [20464,20465]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [21120,21129]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [21147,21149]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StdDeserializer:_parseDate:[String value, DeserializationContext ctxt]:java.util.Date"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StdDeserializer:_parseDate:[String value, DeserializationContext ctxt]:java.util.Date"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "526"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "526"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java\nindex 9a6f482..05ece29 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java\n@@ -523,7 +523,7 @@\n         } catch (IllegalArgumentException iae) {\n             return (java.util.Date) ctxt.handleWeirdStringValue(_valueClass, value,\n                     \"not a valid representation (error: %s)\",\n-                    ClassUtil.exceptionMessage(iae));\n+                    iae.getMessage());\n         }\n     }\n \n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [19600,19609]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [19627,19630]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer:_weirdKey:[DeserializationContext ctxt, String key, Exception e]:Object",
            "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer:deserializeKey:[String key, DeserializationContext ctxt]:Object"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer:deserializeKey:[String key, DeserializationContext ctxt]:Object",
            "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer:_weirdKey:[DeserializationContext ctxt, String key, Exception e]:Object"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "135",
            "262"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "135",
            "262"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\nindex 5ff36d4..c904c2e 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\n@@ -132,7 +132,7 @@\n         } catch (Exception re) {\n             return ctxt.handleWeirdKey(_keyClass, key, \"not a valid representation, problem: (%s) %s\",\n                     re.getClass().getName(),\n-                    ClassUtil.exceptionMessage(re));\n+                    re.getMessage());\n         }\n         if (_keyClass.isEnum() \u0026\u0026 ctxt.getConfig().isEnabled(DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL)) {\n             return null;\n@@ -259,7 +259,7 @@\n     // @since 2.9\n     protected Object _weirdKey(DeserializationContext ctxt, String key, Exception e) throws IOException {\n         return ctxt.handleWeirdKey(_keyClass, key, \"problem: %s\",\n-                ClassUtil.exceptionMessage(e));\n+                e.getMessage());\n     }\n \n     /*\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [4963,4972]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [4990,4992]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [9639,9648]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [9666,9667]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator:wrapException:[Throwable t]:JsonMappingException"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator:wrapException:[Throwable t]:JsonMappingException"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "456"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "456"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java\nindex 919c963..3d112e4 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java\n@@ -453,7 +453,7 @@\n             }\n         }\n         return new JsonMappingException(null,\n-                \"Instantiation of \"+getValueTypeDesc()+\" value failed: \"+ClassUtil.exceptionMessage(t), t);\n+                \"Instantiation of \"+getValueTypeDesc()+\" value failed: \"+t.getMessage(), t);\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [15178,15187]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [15205,15206]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java",
        "src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.introspect.BasicBeanDescription:instantiateBean:[boolean fixAccess]:Object"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.introspect.BasicBeanDescription:instantiateBean:[boolean fixAccess]:Object"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "364"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "364"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java b/src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java\nindex 139f73a..c23b068 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java\n@@ -361,7 +361,7 @@\n             ClassUtil.throwIfRTE(t);\n             throw new IllegalArgumentException(\"Failed to instantiate bean of type \"\n                     +_classInfo.getAnnotated().getName()+\": (\"+t.getClass().getName()+\") \"\n-                    +ClassUtil.exceptionMessage(t), t);\n+                    +t.getMessage(), t);\n         }\n     }\n \n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [11535,11544]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [11562,11563]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java",
        "src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider:_wrapAsIOE:[JsonGenerator g, Exception e]:IOException",
            "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider:includeFilterSuppressNulls:[Object filter]:boolean"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider:_wrapAsIOE:[JsonGenerator g, Exception e]:IOException",
            "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider:includeFilterSuppressNulls:[Object filter]:boolean"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "171",
            "505"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "171",
            "505"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java b/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\nindex 2d52142..549a256 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java\n@@ -168,7 +168,7 @@\n         } catch (Throwable t) {\n             String msg \u003d String.format(\n \"Problem determining whether filter of type \u0027%s\u0027 should filter out `null` values: (%s) %s\",\n-filter.getClass().getName(), t.getClass().getName(), ClassUtil.exceptionMessage(t));\n+filter.getClass().getName(), t.getClass().getName(), t.getMessage());\n             reportBadDefinition(filter.getClass(), msg, t);\n             return false; // never gets here\n         }\n@@ -502,7 +502,7 @@\n         if (e instanceof IOException) {\n             return (IOException) e;\n         }\n-        String msg \u003d ClassUtil.exceptionMessage(e);\n+        String msg \u003d e.getMessage();\n         if (msg \u003d\u003d null) {\n             msg \u003d \"[no message for \"+e.getClass().getName()+\"]\";\n         }\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [6549,6558]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [6576,6577]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [18552,18561]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [18579,18580]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java",
        "src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.PropertyBuilder:buildWriter:[SerializerProvider prov, BeanPropertyDefinition propDef, JavaType declaredType, JsonSerializer\u003c?\u003e ser, TypeSerializer typeSer, TypeSerializer contentTypeSer, AnnotatedMember am, boolean defaultUseStaticTyping]:BeanPropertyWriter"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.PropertyBuilder:buildWriter:[SerializerProvider prov, BeanPropertyDefinition propDef, JavaType declaredType, JsonSerializer\u003c?\u003e ser, TypeSerializer typeSer, TypeSerializer contentTypeSer, AnnotatedMember am, boolean defaultUseStaticTyping]:BeanPropertyWriter"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "103",
            "105"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "103",
            "105"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java b/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java\nindex 957af4c..43602e3 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/PropertyBuilder.java\n@@ -100,9 +100,9 @@\n             serializationType \u003d findSerializationType(am, defaultUseStaticTyping, declaredType);\n         } catch (JsonMappingException e) {\n             if (propDef \u003d\u003d null) {\n-                return prov.reportBadDefinition(declaredType, ClassUtil.exceptionMessage(e));\n+                return prov.reportBadDefinition(declaredType, e.getMessage());\n             }\n-            return prov.reportBadPropertyDefinition(_beanDesc, propDef, ClassUtil.exceptionMessage(e));\n+            return prov.reportBadPropertyDefinition(_beanDesc, propDef, e.getMessage());\n         }\n \n         // Container types can have separate type serializers for content (value / element) type\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [4317,4326]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [4344,4345]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: ClassUtil [4435,4444]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [4462,4463]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java",
        "src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.util.ClassUtil:exceptionMessage:[Throwable t]:String"
          ],
          "num": 1
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "10",
            "753",
            "754",
            "755",
            "756",
            "757",
            "758"
          ],
          "num": 7
        },
        {
          "qualified_names": [
            "9",
            "753"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java b/src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java\nindex 28e88c5..b241a75 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java\n@@ -7,7 +7,6 @@\n import java.util.*;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n-import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.JsonMappingException;\n@@ -750,12 +749,6 @@\n      *\n      * @since 2.9.7\n      */\n-    public static String exceptionMessage(Throwable t) {\n-        if (t instanceof JsonProcessingException) {\n-            return ((JsonProcessingException) t).getOriginalMessage();\n-        }\n-        return t.getMessage();\n-    }\n     \n     /*\n     /**********************************************************\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [238,296]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [23682,24289]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [
        "com.fasterxml.jackson.databind.util.ClassUtil:exceptionMessage:[Throwable t]:String"
      ],
      "num": 1
    }
  }
}