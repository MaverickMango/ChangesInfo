{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl::testUnknownTypeIDRecovery",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "39",
  "workingDir": "../bugs/JacksonDatabind_39_tmp",
  "bug_name": "JacksonDatabind_39",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl",
      "test_function": "testUnknownTypeIDRecovery",
      "assertion_line": "223",
      "exception": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
      "message": "Unrecognized field \"location\" (class com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl$CallRecord), not marked as ignorable (4 known properties: \"version\", \"item\", \"item2\", \"application\"])"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer:deserialize:[JsonParser p, DeserializationContext ctxt]:Object"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer:deserialize:[JsonParser p, DeserializationContext ctxt]:Object"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "45"
          ],
          "num": 10
        },
        {
          "qualified_names": [
            "34"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java\nindex 0453595..5bc789f 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java\n@@ -32,17 +32,7 @@\n     {\n         // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit\n         //    special unfortunately\n-        if (p.hasToken(JsonToken.FIELD_NAME)) {\n-            while (true) {\n-                JsonToken t \u003d p.nextToken();\n-                if ((t \u003d\u003d null) || (t \u003d\u003d JsonToken.END_OBJECT)) {\n-                    break;\n-                }\n-                p.skipChildren();\n-            }\n-        } else {\n             p.skipChildren();\n-        }\n         return null;\n     }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [1060,1092]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [1094,1336]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [1342,1383]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [1056,1383]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}