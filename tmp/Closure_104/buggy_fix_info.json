{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.rhino.jstype.UnionTypeTest::testGreatestSubtypeUnionTypes5",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.rhino.jstype.UnionType",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "104",
  "workingDir": "../bugs/Closure_104_tmp",
  "bug_name": "Closure_104",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.rhino.jstype.UnionTypeTest",
      "test_function": "testGreatestSubtypeUnionTypes5",
      "assertion_line": "159",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cNoObject\u003e but was:\u003cNone\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/rhino/jstype/UnionType.java",
        "src/com/google/javascript/rhino/jstype/UnionType.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.rhino.jstype.UnionType:meet:[JSType that]:JSType"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.rhino.jstype.UnionType:meet:[JSType that]:JSType"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "291"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "291"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/rhino/jstype/UnionType.java b/src/com/google/javascript/rhino/jstype/UnionType.java\nindex 6f0d798..a9c9a0a 100644\n--- a/src/com/google/javascript/rhino/jstype/UnionType.java\n+++ b/src/com/google/javascript/rhino/jstype/UnionType.java\n@@ -288,7 +288,7 @@\n       builder.addAlternate(that);\n     }\n     JSType result \u003d builder.build();\n-    if (!result.isNoType()) {\n+    if (result !\u003d null) {\n       return result;\n     } else if (this.isObject() \u0026\u0026 that.isObject()) {\n       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [8452,8466]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: !\u003d [8459,8461]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "NullLiteral [8462,8466]"
        },
        {
          "type": "delete-node",
          "from": "PREFIX_EXPRESSION_OPERATOR: ! [8452,8453]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_RECEIVER [8453,8459]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: isNoType [8460,8468]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [8453,8470]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "PrefixExpression [8452,8470]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}