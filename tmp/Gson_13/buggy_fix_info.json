{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.gson.stream.JsonReaderTest::testNegativeZero",
    "test.dir": "gson/src/test/java",
    "clz.modified": "com.google.gson.stream.JsonReader",
    "src.dir": "gson/src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Gson",
  "id": "13",
  "workingDir": "../bugs/Gson_13_tmp",
  "bug_name": "Gson_13",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.gson.stream.JsonReaderTest",
      "test_function": "testNegativeZero",
      "assertion_line": "573",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c[-]0\u003e but was:\u003c[]0\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "gson/src/main/java/com/google/gson/stream/JsonReader.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.gson.stream.JsonReader:peekNumber:[]:int"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.gson.stream.JsonReader:peekNumber:[]:int"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "731"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "731"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/gson/src/main/java/com/google/gson/stream/JsonReader.java b/gson/src/main/java/com/google/gson/stream/JsonReader.java\nindex 9cbc62f..877742b 100644\n--- a/gson/src/main/java/com/google/gson/stream/JsonReader.java\n+++ b/gson/src/main/java/com/google/gson/stream/JsonReader.java\n@@ -728,7 +728,7 @@\n     }\n \n     // We\u0027ve read a complete number. Decide if it\u0027s a PEEKED_LONG or a PEEKED_NUMBER.\n-    if (last \u003d\u003d NUMBER_CHAR_DIGIT \u0026\u0026 fitsInLong \u0026\u0026 (value !\u003d Long.MIN_VALUE || negative) \u0026\u0026 (value!\u003d0 || false\u003d\u003dnegative)) {\n+    if (last \u003d\u003d NUMBER_CHAR_DIGIT \u0026\u0026 fitsInLong \u0026\u0026 (value !\u003d Long.MIN_VALUE || negative)) {\n       peekedLong \u003d negative ? value : -value;\n       pos +\u003d i;\n       return peeked \u003d PEEKED_LONG;\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [24329,24331]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ParenthesizedExpression [24332,24361]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [24248,24361]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}