{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.optimization.linear.SimplexSolverTest::testSingleVariableAndConstraint",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.math.optimization.linear.SimplexTableau",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "87",
  "workingDir": "../bugs/Math_87_tmp",
  "bug_name": "Math_87",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
      "test_function": "testSingleVariableAndConstraint",
      "assertion_line": "75",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c10.0\u003e but was:\u003c0.0\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRow:[final int col]:Integer"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRow:[final int col]:Integer"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "275",
            "277"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "275",
            "276",
            "278",
            "280"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\nindex b0d114e..0ab790c 100644\n--- a/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -272,10 +272,12 @@\n     private Integer getBasicRow(final int col) {\n         Integer row \u003d null;\n         for (int i \u003d getNumObjectiveFunctions(); i \u003c getHeight(); i++) {\n-            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) \u0026\u0026 (row \u003d\u003d null)) {\n+            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n+                if (row \u003d\u003d null) {\n                 row \u003d i;\n-            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {\n+                } else {\n                 return null;\n+                }\n             }\n         }\n         return row;\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "Block [11259,11307]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [11123,11171]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [11172,11174]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ParenthesizedExpression [11175,11188]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [11123,11188]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}