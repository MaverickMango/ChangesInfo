{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.parser.HtmlParserTest::retainsAttributesOfDifferentCaseIfSensitive,org.jsoup.parser.HtmlParserTest::dropsDuplicateAttributes,org.jsoup.parser.XmlTreeBuilderTest::dropsDuplicateAttributes",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Attributes,org.jsoup.parser.HtmlTreeBuilder,org.jsoup.parser.ParseSettings,org.jsoup.parser.Token,org.jsoup.parser.XmlTreeBuilder",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "92",
  "workingDir": "../bugs/Jsoup_92_tmp",
  "bug_name": "Jsoup_92",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.parser.HtmlParserTest",
      "test_function": "retainsAttributesOfDifferentCaseIfSensitive",
      "assertion_line": "74",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c\u003cp One\u003d\"[One\" one\u003d\"Three\" two\u003d\"Four]\" Two\u003d\"Six\"\u003eText\u003c/p\u003e\u003e but was:\u003c\u003cp One\u003d\"[Two\" one\u003d\"Three\" two\u003d\"Five]\" Two\u003d\"Six\"\u003eText\u003c/p\u003e\u003e"
    },
    {
      "test_class": "org.jsoup.parser.HtmlParserTest",
      "test_function": "dropsDuplicateAttributes",
      "assertion_line": "64",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c\u003cp one\u003d\"[One\" two\u003d\"two]\"\u003eText\u003c/p\u003e\u003e but was:\u003c\u003cp one\u003d\"[Four\" one\u003d\"Two\" two\u003d\"two\" one\u003d\"Three\" two\u003d\"Five]\"\u003eText\u003c/p\u003e\u003e"
    },
    {
      "test_class": "org.jsoup.parser.XmlTreeBuilderTest",
      "test_function": "dropsDuplicateAttributes",
      "assertion_line": "255",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c\u003cp One\u003d\"[One\" ONE\u003d\"Two\" one\u003d\"Three\" two\u003d\"Six]\" Two\u003d\"Eight\"\u003eText\u003c/...\u003e but was:\u003c\u003cp One\u003d\"[Four\" ONE\u003d\"Five\" one\u003d\"Three\" two\u003d\"Seven]\" Two\u003d\"Eight\"\u003eText\u003c/...\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Attributes.java",
        "src/main/java/org/jsoup/nodes/Attributes.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Attributes:deduplicate:[ParseSettings settings]:int",
            "org.jsoup.nodes.Attributes:add:[String key, String value]:Attributes",
            "org.jsoup.nodes.Attributes:isEmpty:[]:boolean"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Attributes\\$Dataset:entrySet:[]:Set\u003cEntry\u003cString,String\u003e\u003e",
            "org.jsoup.nodes.Attributes:addAll:[Attributes incoming]:void",
            "org.jsoup.nodes.Attributes:add:[String key, String value]:void"
          ],
          "num": 3
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "6",
            "119",
            "124",
            "241",
            "242",
            "243",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419"
          ],
          "num": 24
        },
        {
          "qualified_names": [
            "5",
            "118",
            "242",
            "406"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Attributes.java b/src/main/java/org/jsoup/nodes/Attributes.java\nindex 85dabcf..a716abc 100644\n--- a/src/main/java/org/jsoup/nodes/Attributes.java\n+++ b/src/main/java/org/jsoup/nodes/Attributes.java\n@@ -3,7 +3,6 @@\n import org.jsoup.SerializationException;\n import org.jsoup.helper.Validate;\n import org.jsoup.internal.StringUtil;\n-import org.jsoup.parser.ParseSettings;\n \n import java.io.IOException;\n import java.util.AbstractMap;\n@@ -116,12 +115,11 @@\n      * Adds a new attribute. Will produce duplicates if the key already exists.\n      * @see Attributes#put(String, String)\n      */\n-    public Attributes add(String key, String value) {\n+    private void add(String key, String value) {\n         checkCapacity(size + 1);\n         keys[size] \u003d key;\n         vals[size] \u003d value;\n         size++;\n-        return this;\n     }\n \n     /**\n@@ -238,9 +236,6 @@\n     /**\n      * Test if this Attributes list is empty (size\u003d\u003d0).\n      */\n-    public boolean isEmpty() {\n-        return size \u003d\u003d 0;\n-    }\n \n     /**\n      Add all the attributes from the incoming set to this set.\n@@ -399,24 +394,6 @@\n      * @param settings case sensitivity\n      * @return number of removed dupes\n      */\n-    public int deduplicate(ParseSettings settings) {\n-        if (isEmpty())\n-            return 0;\n-        boolean preserve \u003d settings.preserveAttributeCase();\n-        int dupes \u003d 0;\n-        OUTER: for (int i \u003d 0; i \u003c keys.length; i++) {\n-            for (int j \u003d i + 1; j \u003c keys.length; j++) {\n-                if (keys[j] \u003d\u003d null)\n-                    continue OUTER; // keys.length doesn\u0027t shrink when removing, so re-test\n-                if ((preserve \u0026\u0026 keys[i].equals(keys[j])) || (!preserve \u0026\u0026 keys[i].equalsIgnoreCase(keys[j]))) {\n-                    dupes++;\n-                    remove(j);\n-                    j--;\n-                }\n-            }\n-        }\n-        return dupes;\n-    }\n \n     private static class Dataset extends AbstractMap\u003cString, String\u003e {\n         private final Attributes attributes;\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "PrimitiveType: void [3838,3842]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "Javadoc [11904,12099]"
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [139,177]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [3876,3886]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ReturnStatement [4030,4042]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [7157,7287]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [12032,12917]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java",
        "src/main/java/org/jsoup/parser/HtmlTreeBuilder.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.parser.HtmlTreeBuilder:insert:[final Token.StartTag startTag]:Element"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.parser.HtmlTreeBuilder:insert:[final Token.StartTag startTag]:Element"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "199",
            "200",
            "201",
            "202",
            "203",
            "204"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "198"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\nindex 099859d..e51f5f3 100644\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilder.java\n@@ -196,12 +196,6 @@\n \n     Element insert(final Token.StartTag startTag) {\n         // cleanup duplicate attributes:\n-        if (!startTag.attributes.isEmpty()) {\n-            int dupes \u003d startTag.attributes.deduplicate(settings);\n-            if (dupes \u003e 0) {\n-                error(\"Duplicate attribute\");\n-            }\n-        }\n \n         // handle empty unknown tags\n         // when the spec expects an empty tag, will directly hit insertEmpty, so won\u0027t generate this fake end tag.\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [7757,7960]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/ParseSettings.java",
        "src/main/java/org/jsoup/parser/ParseSettings.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.parser.ParseSettings:preserveAttributeCase:[]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "38",
            "39",
            "40"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "37"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/ParseSettings.java b/src/main/java/org/jsoup/parser/ParseSettings.java\nindex 18c685a..1378978 100644\n--- a/src/main/java/org/jsoup/parser/ParseSettings.java\n+++ b/src/main/java/org/jsoup/parser/ParseSettings.java\n@@ -35,9 +35,6 @@\n     /**\n      * Returns true if preserving attribute case.\n      */\n-    public boolean preserveAttributeCase() {\n-        return preserveAttributeCase;\n-    }\n \n     /**\n      * Define parse settings.\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [881,1031]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/Token.java",
        "src/main/java/org/jsoup/parser/Token.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.parser.Token\\$Tag:newAttribute:[]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.parser.Token\\$Tag:newAttribute:[]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "116"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "116"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/Token.java b/src/main/java/org/jsoup/parser/Token.java\nindex ca26404..9b0b7c2 100644\n--- a/src/main/java/org/jsoup/parser/Token.java\n+++ b/src/main/java/org/jsoup/parser/Token.java\n@@ -113,7 +113,7 @@\n                     else\n                         value \u003d null;\n                     // note that we add, not put. So that the first is kept, and rest are deduped, once in a context where case sensitivity is known (the appropriate tree builder).\n-                    attributes.add(pendingAttributeName, value);\n+                    attributes.put(pendingAttributeName, value);\n                 }\n             }\n             pendingAttributeName \u003d null;\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "src/main/java/org/jsoup/parser/XmlTreeBuilder.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.parser.XmlTreeBuilder:insert:[Token.StartTag startTag]:Element"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.parser.XmlTreeBuilder:insert:[Token.StartTag startTag]:Element"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "78"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "77"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java\nindex 7fbe251..01dbcef 100644\n--- a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java\n+++ b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java\n@@ -75,7 +75,6 @@\n     Element insert(Token.StartTag startTag) {\n         Tag tag \u003d Tag.valueOf(startTag.name(), settings);\n         // todo: wonder if for xml parsing, should treat all tags as unknown? because it\u0027s not html.\n-        startTag.attributes.deduplicate(settings);\n \n         Element el \u003d new Element(tag, baseUri, settings.normalizeAttributes(startTag.attributes));\n         insertNode(el);\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [2548,2590]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "org.jsoup.nodes.Attributes\\$Dataset:entrySet:[]:Set\u003cEntry\u003cString,String\u003e\u003e",
        "org.jsoup.nodes.Attributes:addAll:[Attributes incoming]:void",
        "org.jsoup.nodes.Attributes:add:[String key, String value]:void"
      ],
      "num": 3
    },
    "delete_functions": {
      "qualified_names": [
        "org.jsoup.nodes.Attributes:deduplicate:[ParseSettings settings]:int",
        "org.jsoup.nodes.Attributes:isEmpty:[]:boolean",
        "org.jsoup.nodes.Attributes:add:[String key, String value]:Attributes",
        "org.jsoup.parser.ParseSettings:preserveAttributeCase:[]:boolean"
      ],
      "num": 4
    }
  }
}