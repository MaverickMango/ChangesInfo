{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest::testCompatibilityWithOriginalVersion",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.codec.language.bm.Lang,org.apache.commons.codec.language.bm.PhoneticEngine,org.apache.commons.codec.language.bm.Rule,src.main.resources.org.apache.commons.codec.language.bm.ash_lang.txt,src.main.resources.org.apache.commons.codec.language.bm.gen_lang.txt,src.main.resources.org.apache.commons.codec.language.bm.sep_lang.txt",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Codec",
  "id": "14",
  "workingDir": "../bugs/Codec_14_tmp",
  "bug_name": "Codec_14",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest",
      "test_function": "testCompatibilityWithOriginalVersion",
      "assertion_line": "190",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c...dzn|bntsn|bnzn|vndzn[]\u003e but was:\u003c...dzn|bntsn|bnzn|vndzn[|vntsn]\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "src/main/java/org/apache/commons/codec/language/bm/Lang.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "98",
            "102"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "98",
            "102"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/codec/language/bm/Lang.java b/src/main/java/org/apache/commons/codec/language/bm/Lang.java\nindex a7ebba6..e9c2e72 100644\n--- a/src/main/java/org/apache/commons/codec/language/bm/Lang.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/Lang.java\n@@ -95,11 +95,11 @@\n \n     private static final Map\u003cNameType, Lang\u003e Langs \u003d new EnumMap\u003cNameType, Lang\u003e(NameType.class);\n \n-    private static final String LANGUAGE_RULES_RN \u003d \"org/apache/commons/codec/language/bm/%s_lang.txt\";\n+    private static final String LANGUAGE_RULES_RN \u003d \"org/apache/commons/codec/language/bm/lang.txt\";\n \n     static {\n         for (final NameType s : NameType.values()) {\n-            Langs.put(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance(s)));\n+            Langs.put(s, loadFromResource(LANGUAGE_RULES_RN, Languages.getInstance(s)));\n         }\n     }\n \n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_RECEIVER [4395,4401]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: format [4402,4408]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [4428,4439]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [4409,4439]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [4395,4440]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
        "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.codec.language.bm.PhoneticEngine:applyFinalRules:[final PhonemeBuilder phonemeBuilder, final Map\u003cString,List\u003cRule\u003e\u003e finalRules]:PhonemeBuilder"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.codec.language.bm.PhoneticEngine:applyFinalRules:[final PhonemeBuilder phonemeBuilder, final Map\u003cString,List\u003cRule\u003e\u003e finalRules]:PhonemeBuilder"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "31",
            "338",
            "339",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "373"
          ],
          "num": 13
        },
        {
          "qualified_names": [
            "31",
            "338",
            "361",
            "364"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java b/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\nindex 44a3f03..97cedb2 100644\n--- a/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n@@ -28,7 +28,7 @@\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n-import java.util.TreeMap;\n+import java.util.TreeSet;\n \n import org.apache.commons.codec.language.bm.Languages.LanguageSet;\n import org.apache.commons.codec.language.bm.Rule.Phoneme;\n@@ -335,8 +335,7 @@\n             return phonemeBuilder;\n         }\n \n-        final Map\u003cRule.Phoneme, Rule.Phoneme\u003e phonemes \u003d\n-            new TreeMap\u003cRule.Phoneme, Rule.Phoneme\u003e(Rule.Phoneme.COMPARATOR);\n+        final Set\u003cRule.Phoneme\u003e phonemes \u003d new TreeSet\u003cRule.Phoneme\u003e(Rule.Phoneme.COMPARATOR);\n \n         for (final Rule.Phoneme phoneme : phonemeBuilder.getPhonemes()) {\n             PhonemeBuilder subBuilder \u003d PhonemeBuilder.empty(phoneme.getLanguages());\n@@ -359,18 +358,10 @@\n             // the phonemes map orders the phonemes only based on their text, but ignores the language set\n             // when adding new phonemes, check for equal phonemes and merge their language set, otherwise\n             // phonemes with the same text but different language set get lost\n-            for (final Rule.Phoneme newPhoneme : subBuilder.getPhonemes()) {\n-                if (phonemes.containsKey(newPhoneme)) {\n-                    final Rule.Phoneme oldPhoneme \u003d phonemes.remove(newPhoneme);\n-                    final Rule.Phoneme mergedPhoneme \u003d oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());\n-                    phonemes.put(mergedPhoneme, mergedPhoneme);\n-                } else {\n-                    phonemes.put(newPhoneme, newPhoneme);\n-                }\n-            }\n+            phonemes.addAll(subBuilder.getPhonemes());\n         }\n \n-        return new PhonemeBuilder(phonemes.keySet());\n+        return new PhonemeBuilder(phonemes);\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ImportDeclaration [1137,1162]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "ExpressionStatement [14234,14276]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "MethodInvocation [14234,14275]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "METHOD_INVOCATION_RECEIVER [14234,14242]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: addAll [14243,14249]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "METHOD_INVOCATION_ARGUMENTS [14250,14274]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [1137,1162]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [13025,13037]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [13088,13100]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SingleVariableDeclaration [14279,14308]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [14337,14766]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "EnhancedForStatement [14274,14766]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_RECEIVER [14812,14820]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: keySet [14821,14827]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [14812,14829]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
        "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.codec.language.bm.Rule\\$Phoneme:mergeWithLanguage:[final LanguageSet lang]:Phoneme"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.codec.language.bm.Rule\\$Phoneme:toString:[]:String"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "158",
            "159",
            "160"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "157"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/codec/language/bm/Rule.java b/src/main/java/org/apache/commons/codec/language/bm/Rule.java\nindex 659d2df..f96ff7c 100644\n--- a/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n+++ b/src/main/java/org/apache/commons/codec/language/bm/Rule.java\n@@ -155,9 +155,6 @@\n          * @param lang the language set to merge\n          * @return a new Phoneme\n          */\n-        public Phoneme mergeWithLanguage(final LanguageSet lang) {\n-          return new Phoneme(this.phonemeText.toString(), this.languages.merge(lang));\n-        }\n \n         @Override\n         public String toString() {\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "Javadoc [5527,5757]"
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [5527,5921]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "org.apache.commons.codec.language.bm.Rule\\$Phoneme:toString:[]:String"
      ],
      "num": 1
    },
    "delete_functions": {
      "qualified_names": [
        "org.apache.commons.codec.language.bm.Rule\\$Phoneme:mergeWithLanguage:[final LanguageSet lang]:Phoneme"
      ],
      "num": 1
    }
  }
}