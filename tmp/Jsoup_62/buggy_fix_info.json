{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.parser.HtmlParserTest::caseSensitiveParseTree",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.parser.HtmlTreeBuilderState",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "62",
  "workingDir": "../bugs/Jsoup_62_tmp",
  "bug_name": "Jsoup_62",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.parser.HtmlParserTest",
      "test_function": "caseSensitiveParseTree",
      "assertion_line": "955",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c\u003cr\u003e \u003cX\u003e A \u003c[/X\u003e \u003cy\u003e B \u003c/y]\u003e \u003c/r\u003e\u003e but was:\u003c\u003cr\u003e \u003cX\u003e A \u003c[y\u003e B \u003c/y\u003e \u003c/X]\u003e \u003c/r\u003e\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "764"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "764"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\nindex e641a21..c515462 100644\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n@@ -761,7 +761,7 @@\n         }\n \n         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n-            String name \u003d t.asEndTag().name(); // matches with case sensitivity if enabled\n+            String name \u003d t.asEndTag().normalName();\n             ArrayList\u003cElement\u003e stack \u003d tb.getStack();\n             for (int pos \u003d stack.size() -1; pos \u003e\u003d 0; pos--) {\n                 Element node \u003d stack.get(pos);\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: normalName [38551,38561]"
        },
        {
          "type": "delete-node",
          "from": "SimpleName: name [38531,38535]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}