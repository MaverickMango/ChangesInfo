{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.nodes.ElementTest::testClonesClassnames",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Element",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "32",
  "workingDir": "../bugs/Jsoup_32_tmp",
  "bug_name": "Jsoup_32",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.nodes.ElementTest",
      "test_function": "testClonesClassnames",
      "assertion_line": "493",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Element.java",
        "src/main/java/org/jsoup/nodes/Element.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Element:clone:[]:Element"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Element:clone:[]:Element"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1138"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "1138"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Element.java b/src/main/java/org/jsoup/nodes/Element.java\nindex 95cde5f..7906822 100644\n--- a/src/main/java/org/jsoup/nodes/Element.java\n+++ b/src/main/java/org/jsoup/nodes/Element.java\n@@ -1135,7 +1135,7 @@\n     @Override\n     public Element clone() {\n         Element clone \u003d (Element) super.clone();\n-        clone.classNames \u003d null; // derived on first hit, otherwise gets a pointer to source classnames\n+        clone.classNames();\n         return clone;\n     }\n }\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [40217,40236]"
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [40217,40241]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}