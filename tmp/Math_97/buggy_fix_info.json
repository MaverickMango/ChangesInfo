{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.analysis.BrentSolverTest::testRootEndpoints",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.math.analysis.BrentSolver",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "97",
  "workingDir": "../bugs/Math_97_tmp",
  "bug_name": "Math_97",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.analysis.BrentSolverTest",
      "test_function": "testRootEndpoints",
      "assertion_line": "279",
      "exception": "java.lang.IllegalArgumentException",
      "message": "Function values at endpoints do not have different signs.  Endpoints: [3.0,3.141592653589793]  Values: [0.1411200080598672,1.2246467991473532E-16]"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/math/analysis/BrentSolver.java",
        "src/java/org/apache/commons/math/analysis/BrentSolver.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.analysis.BrentSolver:solve:[double min, double max]:double"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.analysis.BrentSolver:solve:[double min, double max]:double"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "138",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "152",
            "153",
            "156",
            "158",
            "159",
            "160",
            "161",
            "162"
          ],
          "num": 16
        },
        {
          "qualified_names": [
            "138",
            "145"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/math/analysis/BrentSolver.java b/src/java/org/apache/commons/math/analysis/BrentSolver.java\nindex 57f64a9..766d87e 100644\n--- a/src/java/org/apache/commons/math/analysis/BrentSolver.java\n+++ b/src/java/org/apache/commons/math/analysis/BrentSolver.java\n@@ -135,31 +135,17 @@\n         \n         // Verify bracketing\n         double sign \u003d yMin * yMax;\n-        if (sign \u003e 0) {\n+        if (sign \u003e\u003d 0) {\n             // check if either value is close to a zero\n-            if (Math.abs(yMin) \u003c\u003d functionValueAccuracy) {\n-                setResult(min, 0);\n-                ret \u003d min;\n-            } else if (Math.abs(yMax) \u003c\u003d functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret \u003d max;\n-            } else {\n                 // neither value is close to zero and min and max do not bracket root.\n                 throw new IllegalArgumentException\n                 (\"Function values at endpoints do not have different signs.\" +\n                         \"  Endpoints: [\" + min + \",\" + max + \"]\" + \n                         \"  Values: [\" + yMin + \",\" + yMax + \"]\");\n-            }\n-        } else if (sign \u003c 0){\n+        } else {\n             // solve using only the first endpoint as initial guess\n             ret \u003d solve(min, yMin, max, yMax, min, yMin);\n-        } else {\n             // either min or max is a root\n-            if (yMin \u003d\u003d 0.0) {\n-                ret \u003d min;\n-            } else {\n-                ret \u003d max;\n-            }\n         }\n \n         return ret;\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [6262,6369]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [5331,5339]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [5415,5454]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [5456,5533]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [5543,5582]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [5584,5661]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [5667,6033]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [5539,6033]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [5411,6033]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [5341,6043]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [5327,6379]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}