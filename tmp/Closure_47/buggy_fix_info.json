{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testParseSourceMetaMap,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testGoldenOutput0a,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testMultilineMapping,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testMultiFunctionMapping,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testLiteralMappingsGoldenOutput,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testMultilineMapping2,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testBasicMappingGoldenOutput,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testSourceMapMerging,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testLiteralMappings,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testBasicMapping1,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testBasicMapping2,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testGoldenOutput1,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testGoldenOutput2,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testGoldenOutput3,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testGoldenOutput4,com.google.debugging.sourcemap.SourceMapGeneratorV3Test::testGoldenOutput5",
    "test.dir": "test",
    "clz.modified": "com.google.debugging.sourcemap.SourceMapConsumerV3,com.google.javascript.jscomp.SourceMap",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "47",
  "workingDir": "../bugs/Closure_47_tmp",
  "bug_name": "Closure_47",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testParseSourceMetaMap",
      "assertion_line": "450",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c5\u003e but was:\u003c4\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testGoldenOutput0a",
      "assertion_line": "134",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...t\":1,"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testMultilineMapping",
      "assertion_line": "93",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c10\u003e but was:\u003c9\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testMultiFunctionMapping",
      "assertion_line": "107",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c10\u003e but was:\u003c9\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testLiteralMappingsGoldenOutput",
      "assertion_line": "77",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...t\":1,"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testMultilineMapping2",
      "assertion_line": "100",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c10\u003e but was:\u003c9\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testBasicMappingGoldenOutput",
      "assertion_line": "54",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...t\":1,"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testSourceMapMerging",
      "assertion_line": "480",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c5\u003e but was:\u003c4\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testLiteralMappings",
      "assertion_line": "71",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c10\u003e but was:\u003c9\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testBasicMapping1",
      "assertion_line": "49",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c10\u003e but was:\u003c9\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testBasicMapping2",
      "assertion_line": "67",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c10\u003e but was:\u003c9\u003e"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testGoldenOutput1",
      "assertion_line": "149",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...t\":1,"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testGoldenOutput2",
      "assertion_line": "179",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...t\":1,"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testGoldenOutput3",
      "assertion_line": "195",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...t\":1,"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testGoldenOutput4",
      "assertion_line": "209",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...t\":1,"
    },
    {
      "test_class": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
      "test_function": "testGoldenOutput5",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c..."
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/debugging/sourcemap/SourceMapConsumerV3.java",
        "src/com/google/debugging/sourcemap/SourceMapConsumerV3.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.debugging.sourcemap.SourceMapConsumerV3:getOriginalMappingForEntry:[Entry entry]:OriginalMapping"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.debugging.sourcemap.SourceMapConsumerV3:getOriginalMappingForEntry:[Entry entry]:OriginalMapping"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "489",
            "490"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "489",
            "490"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java b/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java\nindex 5ee9108..d67dc10 100644\n--- a/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java\n+++ b/src/com/google/debugging/sourcemap/SourceMapConsumerV3.java\n@@ -486,8 +486,8 @@\n       // Adjust the line/column here to be start at 1.\n       Builder x \u003d OriginalMapping.newBuilder()\n         .setOriginalFile(sources[entry.getSourceFileId()])\n-        .setLineNumber(entry.getSourceLine() + 1)\n-        .setColumnPosition(entry.getSourceColumn() + 1);\n+        .setLineNumber(entry.getSourceLine())\n+        .setColumnPosition(entry.getSourceColumn());\n       if (entry.getNameId() !\u003d UNMAPPED) {\n         x.setIdentifier(names[entry.getNameId()]);\n       }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: + [15716,15717]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 1 [15718,15719]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [15694,15719]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: + [15772,15773]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 1 [15774,15775]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [15748,15775]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/SourceMap.java",
        "src/com/google/javascript/jscomp/SourceMap.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.LocationMapping:addMapping:[Node node, FilePosition outputStartPosition, FilePosition outputEndPosition]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.LocationMapping:addMapping:[Node node, FilePosition outputStartPosition, FilePosition outputEndPosition]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "138",
            "139",
            "140",
            "141",
            "142",
            "146"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "141"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/SourceMap.java b/src/com/google/javascript/jscomp/SourceMap.java\nindex 7192408..835dfa4 100644\n--- a/src/com/google/javascript/jscomp/SourceMap.java\n+++ b/src/com/google/javascript/jscomp/SourceMap.java\n@@ -135,15 +135,10 @@\n     // zero based.\n     // We don\u0027t change this for the v1 or v2 source maps but for\n     // v3 we make them both 0 based.\n-    int lineBaseOffset \u003d 1;\n-    if (generator instanceof SourceMapGeneratorV1\n-        || generator instanceof SourceMapGeneratorV2) {\n-      lineBaseOffset \u003d 0;\n-    }\n \n     generator.addMapping(\n         sourceFile, originalName,\n-        new FilePosition(node.getLineno() - lineBaseOffset, node.getCharno()),\n+        new FilePosition(node.getLineno(), node.getCharno()),\n         outputStartPosition, outputEndPosition);\n   }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [4337,4360]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [4365,4498]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: - [4602,4603]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: lineBaseOffset [4604,4618]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [4585,4618]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}