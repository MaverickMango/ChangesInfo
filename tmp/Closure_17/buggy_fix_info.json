{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.TypeCheckTest::testIssue688",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.TypedScopeCreator",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "17",
  "workingDir": "../bugs/Closure_17_tmp",
  "bug_name": "Closure_17",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testIssue688",
      "assertion_line": "5906",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cin[consistent return type"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "src/com/google/javascript/jscomp/TypedScopeCreator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$AbstractScopeBuilder:getDeclaredType:[String sourceName, JSDocInfo info, Node lValue, @Nullable Node rValue]:JSType"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$AbstractScopeBuilder:getDeclaredType:[String sourceName, JSDocInfo info, Node lValue, @Nullable Node rValue]:JSType"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1291",
            "1292",
            "1294",
            "1295",
            "1296"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "1291"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 8bc7bda..efaba2c 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1288,12 +1288,8 @@\n           if (info.isConstant()) {\n             JSType knownType \u003d null;\n             if (rValue !\u003d null) {\n-              JSDocInfo rValueInfo \u003d rValue.getJSDocInfo();\n-              if (rValueInfo !\u003d null \u0026\u0026 rValueInfo.hasType()) {\n+              if (rValue.getJSType() !\u003d null \u0026\u0026 !rValue.getJSType().isUnknownType()) {\n                 // If rValue has a type-cast, we use the type in the type-cast.\n-                return rValueInfo.getType().evaluate(scope, typeRegistry);\n-              } else if (rValue.getJSType() !\u003d null\n-                  \u0026\u0026 !rValue.getJSType().isUnknownType()) {\n                 // If rValue\u0027s type was already computed during scope creation,\n                 // then we can safely use that.\n                 return rValue.getJSType();\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [48524,48569]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [48588,48630]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [48632,48804]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [48584,49817]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}