{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.parser.ParserTest::parsesQuiteRoughAttributes",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.parser.Parser",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "5",
  "workingDir": "../bugs/Jsoup_5_tmp",
  "bug_name": "Jsoup_5",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.parser.ParserTest",
      "test_function": "parsesQuiteRoughAttributes",
      "assertion_line": "45",
      "exception": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: 14"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/Parser.java",
        "src/main/java/org/jsoup/parser/Parser.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.parser.Parser:parseAttribute:[]:Attribute"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.parser.Parser:parseAttribute:[]:Attribute"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "206",
            "207"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "206"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/Parser.java b/src/main/java/org/jsoup/parser/Parser.java\nindex 38eb6f0..e6ea833 100644\n--- a/src/main/java/org/jsoup/parser/Parser.java\n+++ b/src/main/java/org/jsoup/parser/Parser.java\n@@ -203,8 +203,7 @@\n         if (key.length() !\u003d 0)\n             return Attribute.createFromEncoded(key, value);\n         else {\n-            if (value.length() \u003d\u003d 0) // no key, no val; unknown char, keep popping so not get stuck\n-                tq.advance();\n+            tq.consume();\n                 \n             return null;\n         }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [7507,7526]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [7503,7620]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}