{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.optimization.linear.SimplexSolverTest::testMath713NegativeVariable",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.optimization.linear.SimplexTableau",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "42",
  "workingDir": "../bugs/Math_42_tmp",
  "bug_name": "Math_42",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
      "test_function": "testMath713NegativeVariable",
      "assertion_line": "43",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution:[]:RealPointValuePair"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution:[]:RealPointValuePair"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "410",
            "414",
            "415"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "413"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java b/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\nindex d96c916..02c22b5 100644\n--- a/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n+++ b/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\n@@ -407,12 +407,10 @@\n             continue;\n           }\n           Integer basicRow \u003d getBasicRow(colIndex);\n-          if (basicRow !\u003d null \u0026\u0026 basicRow \u003d\u003d 0) {\n               // if the basic row is found to be the objective function row\n               // set the coefficient to 0 -\u003e this case handles unconstrained \n               // variables that are still part of the objective function\n-              coefficients[i] \u003d 0;\n-          } else if (basicRows.contains(basicRow)) {\n+          if (basicRows.contains(basicRow)) {\n               // if multiple variables can take a given value\n               // then we choose the first and set the rest equal to 0\n               coefficients[i] \u003d 0 - (restrictToNonNegative ? 0 : mostNegative);\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [15933,15966]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [15968,16243]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [15929,16740]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}