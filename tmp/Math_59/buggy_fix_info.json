{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.util.FastMathTest::testMinMaxFloat",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.util.FastMath",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "59",
  "workingDir": "../bugs/Math_59_tmp",
  "bug_name": "Math_59",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.util.FastMathTest",
      "test_function": "testMinMaxFloat",
      "assertion_line": "103",
      "exception": "junit.framework.AssertionFailedError",
      "message": "max(50.0, -50.0) expected:\u003c50.0\u003e but was:\u003c-50.0\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/util/FastMath.java",
        "src/main/java/org/apache/commons/math/util/FastMath.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.util.FastMath:max:[final float a, final float b]:float"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.util.FastMath:max:[final float a, final float b]:float"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "3482"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "3482"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/util/FastMath.java b/src/main/java/org/apache/commons/math/util/FastMath.java\nindex 4f7d447..8cba4d4 100644\n--- a/src/main/java/org/apache/commons/math/util/FastMath.java\n+++ b/src/main/java/org/apache/commons/math/util/FastMath.java\n@@ -3479,7 +3479,7 @@\n      * @return b if a is lesser or equal to b, a otherwise\n      */\n     public static float max(final float a, final float b) {\n-        return (a \u003c\u003d b) ? b : (Float.isNaN(a + b) ? Float.NaN : a);\n+        return (a \u003c\u003d b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);\n     }\n \n     /** Compute the maximum of two values\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}