{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13,com.google.javascript.jscomp.TypeCheckTest::testScoping12,com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl,com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.TypedScopeCreator",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "70",
  "workingDir": "../bugs/Closure_70_tmp",
  "bug_name": "Closure_70",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testDuplicateLocalVarDecl",
      "assertion_line": "1970",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c2\u003e but was:\u003c1\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionArguments13",
      "assertion_line": "7084",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testScoping12",
      "assertion_line": "8883",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testDuplicateLocalVarDecl",
      "assertion_line": "8850",
      "exception": "junit.framework.AssertionFailedError",
      "message": "unexpected warning(s) : JSC_DUP_VAR_DECLARATION. variable x redefined with type string, original definition at  [testcode] :2 with type number at  [testcode]  line 2 : 42 expected:\u003c2\u003e but was:\u003c1\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionArguments13",
      "assertion_line": "8883",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "src/com/google/javascript/jscomp/TypedScopeCreator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$LocalScopeBuilder:declareArguments:[Node functionNode]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$LocalScopeBuilder:declareArguments:[Node functionNode]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1745"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "1745"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex aa7e245..210bb66 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1742,7 +1742,7 @@\n           for (Node astParameter : astParameters.children()) {\n             if (jsDocParameter !\u003d null) {\n               defineSlot(astParameter, functionNode,\n-                  jsDocParameter.getJSType(), false);\n+                  jsDocParameter.getJSType(), true);\n               jsDocParameter \u003d jsDocParameter.getNext();\n             } else {\n               defineSlot(astParameter, functionNode, null, true);\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}