{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math3.genetics.ElitisticListPopulationTest::testChromosomeListConstructorTooLow,org.apache.commons.math3.genetics.ElitisticListPopulationTest::testConstructorTooHigh,org.apache.commons.math3.genetics.ElitisticListPopulationTest::testConstructorTooLow,org.apache.commons.math3.genetics.ElitisticListPopulationTest::testChromosomeListConstructorTooHigh",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math3.genetics.ElitisticListPopulation",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "35",
  "workingDir": "../bugs/Math_35_tmp",
  "bug_name": "Math_35",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math3.genetics.ElitisticListPopulationTest",
      "test_function": "testChromosomeListConstructorTooLow",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected exception: org.apache.commons.math3.exception.OutOfRangeException"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java",
        "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math3.genetics.ElitisticListPopulation:ElitisticListPopulation:[final int populationLimit, final double elitismRate]:null",
            "org.apache.commons.math3.genetics.ElitisticListPopulation:ElitisticListPopulation:[final List\u003cChromosome\u003e chromosomes, final int populationLimit, final double elitismRate]:null"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.apache.commons.math3.genetics.ElitisticListPopulation:ElitisticListPopulation:[final int populationLimit, final double elitismRate]:null",
            "org.apache.commons.math3.genetics.ElitisticListPopulation:ElitisticListPopulation:[final List\u003cChromosome\u003e chromosomes, final int populationLimit, final double elitismRate]:null"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "51",
            "65"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "51",
            "65"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\nindex 829c97d..67b368d 100644\n--- a/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\n+++ b/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java\n@@ -48,7 +48,7 @@\n                                    final int populationLimit,\n                                    final double elitismRate) {\n         super(chromosomes, populationLimit);\n-        setElitismRate(elitismRate);\n+        this.elitismRate \u003d elitismRate;\n     }\n \n     /**\n@@ -62,7 +62,7 @@\n      */\n     public ElitisticListPopulation(final int populationLimit, final double elitismRate) {\n         super(populationLimit);\n-        setElitismRate(elitismRate);\n+        this.elitismRate \u003d elitismRate;\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [2099,2130]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [2667,2698]"
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [2099,2127]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [2664,2692]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}