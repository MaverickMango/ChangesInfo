{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.helper.W3CDomTest::handlesInvalidAttributeNames",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.helper.W3CDom",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "54",
  "workingDir": "../bugs/Jsoup_54_tmp",
  "bug_name": "Jsoup_54",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.helper.W3CDomTest",
      "test_function": "handlesInvalidAttributeNames",
      "assertion_line": "93",
      "exception": "org.w3c.dom.DOMException",
      "message": "INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified."
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/helper/W3CDom.java",
        "src/main/java/org/jsoup/helper/W3CDom.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.helper.W3CDom\\$W3CBuilder:copyAttributes:[org.jsoup.nodes.Node source, Element el]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.helper.W3CDom\\$W3CBuilder:copyAttributes:[org.jsoup.nodes.Node source, Element el]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "126"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "125"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/helper/W3CDom.java b/src/main/java/org/jsoup/helper/W3CDom.java\nindex 497e3ea..20aeeda 100644\n--- a/src/main/java/org/jsoup/helper/W3CDom.java\n+++ b/src/main/java/org/jsoup/helper/W3CDom.java\n@@ -123,7 +123,6 @@\n             for (Attribute attribute : source.attributes()) {\n                 // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]\n                 String key \u003d attribute.getKey().replaceAll(\"[^-a-zA-Z0-9_:.]\", \"\");\n-                if (key.matches(\"[a-zA-Z_:]{1}[-a-zA-Z0-9_:.]*\"))\n                     el.setAttribute(key, attribute.getValue());\n             }\n         }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [5080,5124]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [5076,5189]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}