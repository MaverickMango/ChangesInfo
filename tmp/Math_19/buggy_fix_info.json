{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testBoundaryRangeTooLarge",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "19",
  "workingDir": "../bugs/Math_19_tmp",
  "bug_name": "Math_19",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest",
      "test_function": "testBoundaryRangeTooLarge",
      "assertion_line": "414",
      "exception": "java.lang.Exception",
      "message": "Unexpected exception, expected\u003corg.apache.commons.math3.exception.NumberIsTooLargeException\u003e but was\u003corg.apache.commons.math3.exception.MathIllegalStateException\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer:checkParameters:[]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer:checkParameters:[]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "540",
            "541",
            "542",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "549",
            "550",
            "551",
            "552"
          ],
          "num": 13
        },
        {
          "qualified_names": [
            "539"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex f6a4f28..51d1c64 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -537,19 +537,6 @@\n                 boundaries[1] \u003d uB;\n \n                 // Abort early if the normalization will overflow (cf. \"encode\" method).\n-                for (int i \u003d 0; i \u003c lB.length; i++) {\n-                    if (Double.isInfinite(boundaries[1][i] - boundaries[0][i])) {\n-                        final double max \u003d Double.MAX_VALUE + boundaries[0][i];\n-                        final NumberIsTooLargeException e\n-                            \u003d new NumberIsTooLargeException(boundaries[1][i],\n-                                                            max,\n-                                                            true);\n-                        e.getContext().addMessage(LocalizedFormats.OVERFLOW);\n-                        e.getContext().addMessage(LocalizedFormats.INDEX, i);\n-\n-                        throw e;\n-                    }\n-                }\n             }\n         } else {\n             // Convert API to internal handling of boundaries.\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ForStatement [24263,24960]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}