{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.IntegrationTest::testIssue937",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.PrepareAst",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "129",
  "workingDir": "../bugs/Closure_129_tmp",
  "bug_name": "Closure_129",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.IntegrationTest",
      "test_function": "testIssue937",
      "assertion_line": "2430",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: console.log((new x).abc())\nResult: console.log((0,(new x).abc)())"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/PrepareAst.java",
        "src/com/google/javascript/jscomp/PrepareAst.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.PrepareAst\\$PrepareAnnotations:annotateCalls:[Node n]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.PrepareAst\\$PrepareAnnotations:annotateCalls:[Node n]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "166",
            "167",
            "168"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "165"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/PrepareAst.java b/src/com/google/javascript/jscomp/PrepareAst.java\nindex 42982af..d993bee 100644\n--- a/src/com/google/javascript/jscomp/PrepareAst.java\n+++ b/src/com/google/javascript/jscomp/PrepareAst.java\n@@ -163,9 +163,6 @@\n       Node first \u003d n.getFirstChild();\n \n       // ignore cast nodes.\n-      while (first.isCast()) {\n-        first \u003d first.getFirstChild();\n-      }\n \n       if (!NodeUtil.isGet(first)) {\n         n.putBooleanProp(Node.FREE_CALL, true);\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "WhileStatement [4935,5006]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}