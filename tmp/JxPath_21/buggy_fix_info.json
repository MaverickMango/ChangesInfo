{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.jxpath.ri.model.JXPath151Test::testMapValueEquality,org.apache.commons.jxpath.ri.model.MixedModelTest::testNull",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.jxpath.ri.model.beans.PropertyPointer",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "JxPath",
  "id": "21",
  "workingDir": "../bugs/JxPath_21_tmp",
  "bug_name": "JxPath_21",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.jxpath.ri.model.JXPath151Test",
      "test_function": "testMapValueEquality",
      "assertion_line": "43",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Evaluating \u003cmap/b !\u003d map/a\u003e expected:\u003ctrue\u003e but was:\u003cfalse\u003e"
    },
    {
      "test_class": "org.apache.commons.jxpath.ri.model.MixedModelTest",
      "test_function": "testNull",
      "assertion_line": "315",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Evaluating value iterator \u003c$testnull/nothing[1]\u003e expected:\u003c[null]\u003e but was:\u003c[]\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java",
        "src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.beans.PropertyPointer:getLength:[]:int"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.beans.PropertyPointer:getLength:[]:int"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "152",
            "153"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "152"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java b/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java\nindex f7e2525..52aa39a 100644\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java\n@@ -149,8 +149,7 @@\n      * @return int length\n      */\n     public int getLength() {\n-        Object baseValue \u003d getBaseValue();\n-        return baseValue \u003d\u003d null ? 1 : ValueUtils.getLength(baseValue);\n+        return ValueUtils.getLength(getBaseValue());\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [4365,4371]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: baseValue [4372,4381]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationFragment [4372,4398]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationStatement [4365,4399]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: baseValue [4460,4469]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [4415,4432]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 1 [4435,4436]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [4415,4470]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}