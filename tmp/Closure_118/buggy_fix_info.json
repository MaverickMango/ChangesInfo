{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.DisambiguatePropertiesTest::testOneType4,com.google.javascript.jscomp.DisambiguatePropertiesTest::testTwoTypes4",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.DisambiguateProperties",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "118",
  "workingDir": "../bugs/Closure_118_tmp",
  "bug_name": "Closure_118",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.DisambiguatePropertiesTest",
      "test_function": "testOneType4",
      "assertion_line": "128",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c{[]}\u003e but was:\u003c{[a\u003d[[Foo.prototype]]]}\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.DisambiguatePropertiesTest",
      "test_function": "testTwoTypes4",
      "assertion_line": "1371",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: function Foo(){}Foo.prototype\u003d{a:0};var F\u003dnew Foo;F.a\u003d0;function Bar(){}Bar.prototype\u003d{\"a\":0};var B\u003dnew Bar;B[\"a\"]\u003d0\nResult: function Foo(){}Foo.prototype\u003d{Foo_prototype$a:0};var F\u003dnew Foo;F.Foo_prototype$a\u003d0;function Bar(){}Bar.prototype\u003d{\"Bar_prototype$a\":0};var B\u003dnew Bar;B[\"a\"]\u003d0"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/DisambiguateProperties.java",
        "src/com/google/javascript/jscomp/DisambiguateProperties.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.DisambiguateProperties\\$FindRenameableProperties:handleObjectLit:[NodeTraversal t, Node n]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.DisambiguateProperties\\$FindRenameableProperties:handleObjectLit:[NodeTraversal t, Node n]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "495",
            "496",
            "497"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "494"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java\nindex 01293c9..b34921e 100644\n--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java\n+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java\n@@ -492,9 +492,6 @@\n           child !\u003d null;\n           child \u003d child.getNext()) {\n         // Maybe STRING, GET, SET\n-        if (child.isQuotedString()) {\n-          continue;\n-        }\n \n         // We should never see a mix of numbers and strings.\n         String name \u003d child.getString();\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [17170,17229]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}