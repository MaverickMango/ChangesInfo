{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotationsAssign,com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotationsMember,com.google.javascript.jscomp.CodePrinterTest::testOptionalTypesAnnotation,com.google.javascript.jscomp.CodePrinterTest::testTempConstructor,com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotationsDispatcher1,com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotationsDispatcher2,com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotationsImplements,com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotationsNamespace,com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotations,com.google.javascript.jscomp.CodePrinterTest::testVariableArgumentsTypesAnnotation,com.google.javascript.jscomp.CodePrinterTest::testEmitUnknownParamTypesAsAllType,com.google.javascript.jscomp.CodePrinterTest::testTypeAnnotationsMemberSubclass,com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest::testRewritePrototypeMethods2,com.google.javascript.jscomp.DisambiguatePropertiesTest::testStaticProperty,com.google.javascript.jscomp.ExternExportsPassTest::testExportDontEmitPrototypePathPrefix,com.google.javascript.jscomp.ExternExportsPassTest::testExportMultiple,com.google.javascript.jscomp.ExternExportsPassTest::testExportSymbolWithConstructor,com.google.javascript.jscomp.ExternExportsPassTest::testExportSymbolDefinedInVar,com.google.javascript.jscomp.ExternExportsPassTest::testExportSymbol,com.google.javascript.jscomp.ExternExportsPassTest::testExportMultiple2,com.google.javascript.jscomp.ExternExportsPassTest::testExportMultiple3,com.google.javascript.jscomp.ExternExportsPassTest::testExportProperty,com.google.javascript.jscomp.LooseTypeCheckTest::testNestedFunctionInference1,com.google.javascript.jscomp.LooseTypeCheckTest::testScoping10,com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateOldTypeDef,com.google.javascript.jscomp.LooseTypeCheckTest::testBadConstructorCall,com.google.javascript.jscomp.LooseTypeCheckTest::testDontAddMethodsIfNoConstructor,com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceInheritanceCheck11,com.google.javascript.jscomp.LooseTypeCheckTest::testErrorMismatchingPropertyOnInterface5,com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateTypeDef,com.google.javascript.jscomp.LooseTypeCheckTest::testBug911118,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference12,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference13,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference15,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference16,com.google.javascript.jscomp.LooseTypeCheckTest::testPrototypePropertyReference,com.google.javascript.jscomp.LooseTypeCheckTest::testGoodExtends7,com.google.javascript.jscomp.LooseTypeCheckTest::testTypeRedefinition,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference1,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference2,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference3,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference4,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference7,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference8,com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionInference9,com.google.javascript.jscomp.LooseTypeCheckTest::testInterfaceInheritanceCheck7,com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticMethodDecl1,com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticMethodDecl5,com.google.javascript.jscomp.TypeCheckTest::testNestedFunctionInference1,com.google.javascript.jscomp.TypeCheckTest::testScoping10,com.google.javascript.jscomp.TypeCheckTest::testDuplicateOldTypeDef,com.google.javascript.jscomp.TypeCheckTest::testInferredReturn1,com.google.javascript.jscomp.TypeCheckTest::testInferredReturn2,com.google.javascript.jscomp.TypeCheckTest::testInferredReturn3,com.google.javascript.jscomp.TypeCheckTest::testInferredReturn4,com.google.javascript.jscomp.TypeCheckTest::testInferredReturn6,com.google.javascript.jscomp.TypeCheckTest::testBadConstructorCall,com.google.javascript.jscomp.TypeCheckTest::testDontAddMethodsIfNoConstructor,com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck11,com.google.javascript.jscomp.TypeCheckTest::testErrorMismatchingPropertyOnInterface5,com.google.javascript.jscomp.TypeCheckTest::testDuplicateTypeDef,com.google.javascript.jscomp.TypeCheckTest::testBug911118,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference12,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference13,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference15,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference16,com.google.javascript.jscomp.TypeCheckTest::testPrototypePropertyReference,com.google.javascript.jscomp.TypeCheckTest::testGoodExtends7,com.google.javascript.jscomp.TypeCheckTest::testTypeRedefinition,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference1,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference2,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference3,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference4,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference7,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference8,com.google.javascript.jscomp.TypeCheckTest::testFunctionInference9,com.google.javascript.jscomp.TypeCheckTest::testInterfaceInheritanceCheck7,com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticMethodDecl1,com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticMethodDecl5,com.google.javascript.jscomp.TypedScopeCreatorTest::testConstructorNode,com.google.javascript.jscomp.TypedScopeCreatorTest::testPropertiesOnInterface,com.google.javascript.jscomp.TypedScopeCreatorTest::testMethodBeforeFunction,com.google.javascript.jscomp.TypedScopeCreatorTest::testConstructorProperty,com.google.javascript.jscomp.TypedScopeCreatorTest::testReturnTypeInference1",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.FunctionTypeBuilder,com.google.javascript.jscomp.TypedScopeCreator,com.google.javascript.rhino.jstype.FunctionBuilder,com.google.javascript.rhino.jstype.FunctionType",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "144",
  "workingDir": "../bugs/Closure_144_tmp",
  "bug_name": "Closure_144",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotationsAssign",
      "assertion_line": "613",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c/**"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotationsMember",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cvar a \u003d {};"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testOptionalTypesAnnotation",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...param {string\u003d} x"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTempConstructor",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c/**"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotationsDispatcher1",
      "assertion_line": "692",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cvar a \u003d {};"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotationsDispatcher2",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cvar a \u003d {};"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotationsImplements",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cvar a \u003d {};"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotationsNamespace",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cvar a \u003d {};"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotations",
      "assertion_line": "606",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c/**"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testVariableArgumentsTypesAnnotation",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...ram {...string} x"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testEmitUnknownParamTypesAsAllType",
      "assertion_line": "743",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...*"
    },
    {
      "test_class": "com.google.javascript.jscomp.CodePrinterTest",
      "test_function": "testTypeAnnotationsMemberSubclass",
      "assertion_line": "799",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cvar a \u003d {};"
    },
    {
      "test_class": "com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest",
      "test_function": "testRewritePrototypeMethods2",
      "assertion_line": "546",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c[FUNCTION a \u003d function (this:a): undefined, NAME JSCompiler_StaticMethods_foo$self \u003d a, FUNCTION JSCompiler_StaticMethods_foo \u003d function (a): number, NAME JSCompiler_StaticMethods_bar$self \u003d a, FUNCTION JSCompiler_StaticMethods_bar \u003d function (a, number): number, FUNCTION JSCompiler_StaticMethods_baz \u003d function (a): undefined, NEW a \u003d a, CALL JSCompiler_StaticMethods_foo \u003d number, CALL JSCompiler_StaticMethods_bar \u003d number, CALL JSCompiler_StaticMethods_baz \u003d undefined]\u003e but was:\u003c[FUNCTION a \u003d function (this:a): ?, NAME JSCompiler_StaticMethods_foo$self \u003d a, FUNCTION JSCompiler_StaticMethods_foo \u003d function (a): number, NAME JSCompiler_StaticMethods_bar$self \u003d a, FUNCTION JSCompiler_StaticMethods_bar \u003d function (a, number): number, FUNCTION JSCompiler_StaticMethods_baz \u003d function (a): ?, NEW a \u003d a, CALL JSCompiler_StaticMethods_foo \u003d number, CALL JSCompiler_StaticMethods_bar \u003d number, CALL JSCompiler_StaticMethods_baz \u003d ?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.DisambiguatePropertiesTest",
      "test_function": "testStaticProperty",
      "assertion_line": "999",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: function Foo(){}function Bar(){}Foo.function__this_Foo___undefined$a\u003d0;Bar.function__this_Bar___undefined$a\u003d0\nResult: function Foo(){}function Bar(){}Foo.function__this_Foo____$a\u003d0;Bar.function__this_Bar____$a\u003d0"
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportDontEmitPrototypePathPrefix",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c/**"
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportMultiple",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c..."
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportSymbolWithConstructor",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c/**"
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportSymbolDefinedInVar",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...e"
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportSymbol",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...e"
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportMultiple2",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...e"
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportMultiple3",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c..."
    },
    {
      "test_class": "com.google.javascript.jscomp.ExternExportsPassTest",
      "test_function": "testExportProperty",
      "assertion_line": "386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testNestedFunctionInference1",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (this:f): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testScoping10",
      "assertion_line": "1252",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (): [undefined]\u003e but was:\u003cfunction (): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testDuplicateOldTypeDef",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...on (this:goog.Bar): [undefined]\u003e but was:\u003c...on (this:goog.Bar): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testBadConstructorCall",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...unction (this:Foo): [undefined] should be called wi...\u003e but was:\u003c...unction (this:Foo): [?] should be called wi...\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testDontAddMethodsIfNoConstructor",
      "assertion_line": "5316",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (): [undefined]\u003e but was:\u003cfunction (): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testInterfaceInheritanceCheck11",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...his:Super, number): [undefined"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testErrorMismatchingPropertyOnInterface5",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testDuplicateTypeDef",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...on (this:goog.Bar): [undefined]\u003e but was:\u003c...on (this:goog.Bar): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testBug911118",
      "assertion_line": "4270",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (): [undefined]\u003e but was:\u003cfunction (): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference12",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference13",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...unction (goog.Foo): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference15",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (this:f): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference16",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (this:f): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testPrototypePropertyReference",
      "assertion_line": "6504",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...(this:Foo, number): [undefined]\u003e but was:\u003c...(this:Foo, number): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testGoodExtends7",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...ion (this:derived): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testTypeRedefinition",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...unction (this:a.A): [undefined], original definitio...\u003e but was:\u003c...unction (this:a.A): [?], original definitio...\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference1",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...d   : function (?): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference2",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... : function (?, ?): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference3",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (...[?]): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference4",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... (?, ?, ?, ...[?]): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference7",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c..., ?, ?, ?, ...[?]): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference8",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testFunctionInference9",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testInterfaceInheritanceCheck7",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...his:Super, number): [undefined"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testDuplicateStaticMethodDecl1",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (number): [undefined, original definition at [testcode]:1 with type function (number): undefined]\u003e but was:\u003c... function (number): [?, original definition at [testcode]:1 with type function (number): ?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.LooseTypeCheckTest",
      "test_function": "testDuplicateStaticMethodDecl5",
      "assertion_line": "6969",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... type function (?): [undefined]\u003e but was:\u003c... type function (?): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testNestedFunctionInference1",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (this:f): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testScoping10",
      "assertion_line": "1232",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (): [undefined]\u003e but was:\u003cfunction (): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testDuplicateOldTypeDef",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...on (this:goog.Bar): [undefined]\u003e but was:\u003c...on (this:goog.Bar): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testInferredReturn1",
      "assertion_line": "7043",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testInferredReturn2",
      "assertion_line": "7043",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testInferredReturn3",
      "assertion_line": "7043",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testInferredReturn4",
      "assertion_line": "7043",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testInferredReturn6",
      "assertion_line": "7043",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testBadConstructorCall",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...unction (this:Foo): [undefined] should be called wi...\u003e but was:\u003c...unction (this:Foo): [?] should be called wi...\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testDontAddMethodsIfNoConstructor",
      "assertion_line": "5386",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (): [undefined]\u003e but was:\u003cfunction (): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testInterfaceInheritanceCheck11",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...his:Super, number): [undefined"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testErrorMismatchingPropertyOnInterface5",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testDuplicateTypeDef",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...on (this:goog.Bar): [undefined]\u003e but was:\u003c...on (this:goog.Bar): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testBug911118",
      "assertion_line": "4340",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (): [undefined]\u003e but was:\u003cfunction (): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference12",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference13",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...unction (goog.Foo): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference15",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (this:f): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference16",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (this:f): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testPrototypePropertyReference",
      "assertion_line": "6574",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...(this:Foo, number): [undefined]\u003e but was:\u003c...(this:Foo, number): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testGoodExtends7",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...ion (this:derived): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testTypeRedefinition",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...unction (this:a.A): [undefined], original definitio...\u003e but was:\u003c...unction (this:a.A): [?], original definitio...\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference1",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...d   : function (?): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference2",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... : function (?, ?): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference3",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (...[?]): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference4",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... (?, ?, ?, ...[?]): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference7",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c..., ?, ?, ?, ...[?]): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference8",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionInference9",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...nd   : function (): [undefined]"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testInterfaceInheritanceCheck7",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...his:Super, number): [undefined"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testDuplicateStaticMethodDecl1",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... function (number): [undefined, original definition at [testcode]:1 with type function (number): undefined]\u003e but was:\u003c... function (number): [?, original definition at [testcode]:1 with type function (number): ?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testDuplicateStaticMethodDecl5",
      "assertion_line": "7044",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c... type function (?): [undefined]\u003e but was:\u003c... type function (?): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypedScopeCreatorTest",
      "test_function": "testConstructorNode",
      "assertion_line": "555",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...on (this:goog.Foo): [undefined]\u003e but was:\u003c...on (this:goog.Foo): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypedScopeCreatorTest",
      "test_function": "testPropertiesOnInterface",
      "assertion_line": "345",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (this:I): [undefined]\u003e but was:\u003cfunction (this:I): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypedScopeCreatorTest",
      "test_function": "testMethodBeforeFunction",
      "assertion_line": "264",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...n (this:Window, ?): [undefined]\u003e but was:\u003c...n (this:Window, ?): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypedScopeCreatorTest",
      "test_function": "testConstructorProperty",
      "assertion_line": "103",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...ion (this:foo.Bar): [undefined]\u003e but was:\u003c...ion (this:foo.Bar): [?]\u003e"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypedScopeCreatorTest",
      "test_function": "testReturnTypeInference1",
      "assertion_line": "690",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003cfunction (): [undefined]\u003e but was:\u003cfunction (): [?]\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/FunctionTypeBuilder.java",
        "src/com/google/javascript/jscomp/FunctionTypeBuilder.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.FunctionTypeBuilder:inferReturnType:[@Nullable JSDocInfo info]:FunctionTypeBuilder",
            "com.google.javascript.jscomp.FunctionTypeBuilder:buildAndRegister:[]:FunctionType",
            "com.google.javascript.jscomp.FunctionTypeBuilder:inferReturnStatements:[@Nullable Node functionBlock]:FunctionTypeBuilder"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.FunctionTypeBuilder:buildAndRegister:[]:FunctionType",
            "com.google.javascript.jscomp.FunctionTypeBuilder:inferReturnType:[@Nullable JSDocInfo info]:FunctionTypeBuilder"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "74",
            "201",
            "203",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "238",
            "239",
            "240",
            "241",
            "242",
            "243",
            "244",
            "527"
          ],
          "num": 34
        },
        {
          "qualified_names": [
            "73",
            "200",
            "201",
            "214",
            "496"
          ],
          "num": 5
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/FunctionTypeBuilder.java b/src/com/google/javascript/jscomp/FunctionTypeBuilder.java\nindex 01fa8ba..8ac4f11 100644\n--- a/src/com/google/javascript/jscomp/FunctionTypeBuilder.java\n+++ b/src/com/google/javascript/jscomp/FunctionTypeBuilder.java\n@@ -71,7 +71,6 @@\n   private final Scope scope;\n \n   private JSType returnType \u003d null;\n-  private boolean returnTypeInferred \u003d false;\n   private List\u003cObjectType\u003e implementedInterfaces \u003d null;\n   private ObjectType baseType \u003d null;\n   private ObjectType thisType \u003d null;\n@@ -198,9 +197,9 @@\n    */\n   FunctionTypeBuilder inferReturnType(@Nullable JSDocInfo info) {\n     returnType \u003d info !\u003d null \u0026\u0026 info.hasReturnType() ?\n-        info.getReturnType().evaluate(scope, typeRegistry) : null;\n+        info.getReturnType().evaluate(scope, typeRegistry) :\n+        typeRegistry.getNativeType(UNKNOWN_TYPE);\n     if (templateTypeName !\u003d null \u0026\u0026\n-        returnType !\u003d null \u0026\u0026\n         returnType.restrictByNotNullOrUndefined().isTemplateType()) {\n       reportError(TEMPLATE_TYPE_EXPECTED, fnName);\n     }\n@@ -211,37 +210,7 @@\n    * If we haven\u0027t found a return value yet, try to look at the \"return\"\n    * statements in the function.\n    */\n-  FunctionTypeBuilder inferReturnStatements(@Nullable Node functionBlock) {\n-    if (functionBlock \u003d\u003d null || compiler.getInput(sourceName).isExtern()) {\n-      return this;\n-    }\n-    Preconditions.checkArgument(functionBlock.getType() \u003d\u003d Token.BLOCK);\n-    if (returnType \u003d\u003d null) {\n-      boolean hasNonEmptyReturns \u003d false;\n-      List\u003cNode\u003e worklist \u003d Lists.newArrayList(functionBlock);\n-      while (!worklist.isEmpty()) {\n-        Node current \u003d worklist.remove(worklist.size() - 1);\n-        int cType \u003d current.getType();\n-        if (cType \u003d\u003d Token.RETURN \u0026\u0026 current.getFirstChild() !\u003d null ||\n-            cType \u003d\u003d Token.THROW) {\n-          hasNonEmptyReturns \u003d true;\n-          break;\n-        } else if (NodeUtil.isStatementBlock(current) ||\n-            NodeUtil.isControlStructure(current)) {\n-          for (Node child \u003d current.getFirstChild();\n-               child !\u003d null; child \u003d child.getNext()) {\n-            worklist.add(child);\n-          }\n-        }\n-      }\n \n-      if (!hasNonEmptyReturns) {\n-        returnType \u003d typeRegistry.getNativeType(VOID_TYPE);\n-        returnTypeInferred \u003d true;\n-      }\n-    }\n-    return this;\n-  }\n \n   /**\n    * Infer the role of the function (whether it\u0027s a constructor or interface)\n@@ -524,7 +493,7 @@\n           .withName(fnName)\n           .withSourceNode(sourceNode)\n           .withParamsNode(parametersNode)\n-          .withReturnType(returnType, returnTypeInferred)\n+          .withReturnType(returnType)\n           .withTypeOfThis(thisType)\n           .withTemplateName(templateTypeName)\n           .build();\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodInvocation [7708,7748]"
        },
        {
          "type": "delete-tree",
          "from": "FieldDeclaration [2873,2916]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NullLiteral [7746,7750]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [7785,7787]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [7796,7814]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [7760,7814]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [7969,9214]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: returnTypeInferred [18786,18804]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "src/com/google/javascript/jscomp/TypedScopeCreator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$AbstractScopeBuilder:getFunctionType:[String name, Node rValue, JSDocInfo info, @Nullable Node lvalueNode]:FunctionType"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$AbstractScopeBuilder:getFunctionType:[String name, Node rValue, JSDocInfo info, @Nullable Node lvalueNode]:FunctionType"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "577",
            "618",
            "636"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "576",
            "618",
            "637"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4be3b8d..8bf22fc 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -574,7 +574,6 @@\n       Node fnRoot \u003d isFnLiteral ? rValue : null;\n       Node parametersNode \u003d isFnLiteral ?\n           rValue.getFirstChild().getNext() : null;\n-      Node fnBlock \u003d isFnLiteral ? parametersNode.getNext() : null;\n \n       if (functionType \u003d\u003d null \u0026\u0026 info !\u003d null \u0026\u0026 info.hasType()) {\n         JSType type \u003d info.getType().evaluate(scope, typeRegistry);\n@@ -615,7 +614,6 @@\n                     .setSourceNode(fnRoot)\n                     .inferFromOverriddenFunction(propType, parametersNode)\n                     .inferThisType(info, owner)\n-                    .inferReturnStatements(fnBlock)\n                     .buildAndRegister();\n               }\n             }\n@@ -633,7 +631,6 @@\n             .inferInheritance(info)\n             .inferThisType(info, owner)\n             .inferParameterTypes(parametersNode, info)\n-            .inferReturnStatements(fnBlock)\n             .buildAndRegister();\n       }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [22324,22385]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: inferReturnStatements [24248,24269]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_ARGUMENTS [24270,24277]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_RECEIVER [23966,24278]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [23966,24318]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: inferReturnStatements [24824,24845]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_ARGUMENTS [24846,24853]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_RECEIVER [24483,24854]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [24483,24886]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/rhino/jstype/FunctionBuilder.java",
        "src/com/google/javascript/rhino/jstype/FunctionBuilder.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.rhino.jstype.FunctionBuilder:withReturnType:[JSType returnType, boolean inferred]:FunctionBuilder"
          ],
          "num": 1
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "101",
            "102",
            "103",
            "104",
            "105"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "100"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionBuilder.java b/src/com/google/javascript/rhino/jstype/FunctionBuilder.java\nindex 902f2e6..4a6596e 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionBuilder.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionBuilder.java\n@@ -98,11 +98,6 @@\n   }\n \n   /** Set the return type and whether it\u0027s inferred. */\n-  public FunctionBuilder withReturnType(JSType returnType, boolean inferred) {\n-    this.returnType \u003d returnType;\n-    this.inferredReturnType \u003d inferred;\n-    return this;\n-  }\n \n   /** Sets an inferred return type. */\n   public FunctionBuilder withInferredReturnType(JSType returnType) {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [3272,3499]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/rhino/jstype/FunctionType.java",
        "src/com/google/javascript/rhino/jstype/FunctionType.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.rhino.jstype.FunctionType:cloneWithNewReturnType:[JSType newReturnType, boolean inferred]:FunctionType"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.rhino.jstype.FunctionType:cloneWithNewReturnType:[JSType newReturnType, boolean inferred]:FunctionType"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "517"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "517"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/rhino/jstype/FunctionType.java b/src/com/google/javascript/rhino/jstype/FunctionType.java\nindex 6a4d2f4..0cae0e3 100644\n--- a/src/com/google/javascript/rhino/jstype/FunctionType.java\n+++ b/src/com/google/javascript/rhino/jstype/FunctionType.java\n@@ -514,7 +514,7 @@\n \n   FunctionType cloneWithNewReturnType(JSType newReturnType, boolean inferred) {\n     return new FunctionType(\n-        registry, null, source,\n+        registry, null, null,\n         new ArrowType(\n             registry, call.parameters, newReturnType, inferred),\n         typeOfThis, null, false, false);\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ReturnStatement [16788,16971]"
        },
        {
          "type": "delete-tree",
          "from": "ReturnStatement [16788,16973]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [
        "com.google.javascript.jscomp.FunctionTypeBuilder:inferReturnStatements:[@Nullable Node functionBlock]:FunctionTypeBuilder",
        "com.google.javascript.rhino.jstype.FunctionBuilder:withReturnType:[JSType returnType, boolean inferred]:FunctionBuilder"
      ],
      "num": 2
    }
  }
}