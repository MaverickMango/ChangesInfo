{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.complex.ComplexTest::testAddNaN",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.complex.Complex",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "53",
  "workingDir": "../bugs/Math_53_tmp",
  "bug_name": "Math_53",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.complex.ComplexTest",
      "test_function": "testAddNaN",
      "assertion_line": "116",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/complex/Complex.java",
        "src/main/java/org/apache/commons/math/complex/Complex.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.complex.Complex:add:[Complex rhs]:Complex"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.complex.Complex:add:[Complex rhs]:Complex"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "153",
            "154",
            "155"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "152"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/complex/Complex.java b/src/main/java/org/apache/commons/math/complex/Complex.java\nindex ab58c78..e0a8e97 100644\n--- a/src/main/java/org/apache/commons/math/complex/Complex.java\n+++ b/src/main/java/org/apache/commons/math/complex/Complex.java\n@@ -150,9 +150,6 @@\n     public Complex add(Complex rhs)\n         throws NullArgumentException {\n         MathUtils.checkNotNull(rhs);\n-        if (isNaN || rhs.isNaN) {\n-            return NaN;\n-        }\n         return createComplex(real + rhs.getReal(),\n             imaginary + rhs.getImaginary());\n     }\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [5465,5524]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}