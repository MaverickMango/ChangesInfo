{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.gson.functional.CollectionTest::testIssue1107",
    "test.dir": "gson/src/test/java",
    "clz.modified": "com.google.gson.internal.$Gson$Types",
    "src.dir": "gson/src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Gson",
  "id": "18",
  "workingDir": "../bugs/Gson_18_tmp",
  "bug_name": "Gson_18",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.gson.functional.CollectionTest",
      "test_function": "testIssue1107",
      "assertion_line": "410",
      "exception": "java.lang.ClassCastException",
      "message": "com.google.gson.internal.LinkedTreeMap cannot be cast to com.google.gson.functional.CollectionTest$SmallClass"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "gson/src/main/java/com/google/gson/internal/$Gson$Types.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.gson.internal.$Gson$Types:getSupertype:[Type context, Class\u003c?\u003e contextRawType, Class\u003c?\u003e supertype]:Type"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.gson.internal.$Gson$Types:getSupertype:[Type context, Class\u003c?\u003e contextRawType, Class\u003c?\u003e supertype]:Type"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "278",
            "280",
            "281"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "277"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\nindex adea605..f86ad36 100644\n--- a/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n+++ b/gson/src/main/java/com/google/gson/internal/$Gson$Types.java\n@@ -275,10 +275,7 @@\n    * @param supertype a superclass of, or interface implemented by, this.\n    */\n   static Type getSupertype(Type context, Class\u003c?\u003e contextRawType, Class\u003c?\u003e supertype) {\n-    if (context instanceof WildcardType) {\n       // wildcards are useless for resolving supertypes. As the upper bound has the same raw type, use it instead\n-      context \u003d ((WildcardType)context).getUpperBounds()[0];\n-    }\n     checkArgument(supertype.isAssignableFrom(contextRawType));\n     return resolve(context, contextRawType,\n         $Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [9827,10046]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}