{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions31",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.FunctionToBlockMutator,com.google.javascript.jscomp.RenameLabels",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "72",
  "workingDir": "../bugs/Closure_72_tmp",
  "bug_name": "Closure_72",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.InlineFunctionsTest",
      "test_function": "testInlineFunctions31",
      "assertion_line": "388",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: lab:JSCompiler_inline_label_0:4\nResult: lab:lab:4"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/FunctionToBlockMutator.java",
        "src/com/google/javascript/jscomp/FunctionToBlockMutator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.FunctionToBlockMutator:makeLocalNamesUnique:[Node fnNode, boolean isCallInLoop]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.FunctionToBlockMutator:makeLocalNamesUnique:[Node fnNode, boolean isCallInLoop]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "152",
            "153"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "151"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/FunctionToBlockMutator.java b/src/com/google/javascript/jscomp/FunctionToBlockMutator.java\nindex 3fee1a9..64764c0 100644\n--- a/src/com/google/javascript/jscomp/FunctionToBlockMutator.java\n+++ b/src/com/google/javascript/jscomp/FunctionToBlockMutator.java\n@@ -149,8 +149,6 @@\n                 \"inline_\",\n                 isCallInLoop)));\n     // Make label names unique to this instance.\n-    new RenameLabels(compiler, new LabelNameSupplier(idSupplier), false)\n-        .process(null, fnNode);\n   }\n \n   static class LabelNameSupplier implements Supplier\u003cString\u003e {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [5289,5389]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/RenameLabels.java",
        "src/com/google/javascript/jscomp/RenameLabels.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.RenameLabels\\$ProcessLabels:visitLabel:[Node node, Node parent]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.RenameLabels\\$ProcessLabels:visitLabel:[Node node, Node parent]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "215"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "215"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/RenameLabels.java b/src/com/google/javascript/jscomp/RenameLabels.java\nindex 28e52ee..a2f53cf 100644\n--- a/src/com/google/javascript/jscomp/RenameLabels.java\n+++ b/src/com/google/javascript/jscomp/RenameLabels.java\n@@ -212,7 +212,7 @@\n       String name \u003d nameNode.getString();\n       LabelInfo li \u003d getLabelInfo(name);\n       // This is a label...\n-      if (li.referenced || !removeUnused) {\n+      if (li.referenced) {\n         String newName \u003d getNameForId(li.id);\n         if (!name.equals(newName)) {\n           // ... and it is used, give it the short name.\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: || [6937,6939]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "PrefixExpression [6940,6953]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [6923,6953]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}