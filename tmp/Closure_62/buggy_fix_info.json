{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1,com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.LightweightMessageFormatter",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "62",
  "workingDir": "../bugs/Closure_62_tmp",
  "bug_name": "Closure_62",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.LightweightMessageFormatterTest",
      "test_function": "testFormatErrorSpaceEndOfLine1",
      "assertion_line": "91",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...ion here"
    },
    {
      "test_class": "com.google.javascript.jscomp.LightweightMessageFormatterTest",
      "test_function": "testFormatErrorSpaceEndOfLine2",
      "assertion_line": "100",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...iption here"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/LightweightMessageFormatter.java",
        "src/com/google/javascript/jscomp/LightweightMessageFormatter.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.LightweightMessageFormatter:format:[JSError error, boolean warning]:String"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.LightweightMessageFormatter:format:[JSError error, boolean warning]:String"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "98"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "98"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\nindex 420dbc0..5a4f884 100644\n--- a/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n+++ b/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\n@@ -95,7 +95,7 @@\n       // charno \u003d\u003d sourceExpert.length() means something is missing\n       // at the end of the line\n       if (excerpt.equals(LINE)\n-          \u0026\u0026 0 \u003c\u003d charno \u0026\u0026 charno \u003c\u003d sourceExcerpt.length()) {\n+          \u0026\u0026 0 \u003c\u003d charno \u0026\u0026 charno \u003c sourceExcerpt.length()) {\n         for (int i \u003d 0; i \u003c charno; i++) {\n           char c \u003d sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}