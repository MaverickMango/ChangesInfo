{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test::testExample",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "98",
  "workingDir": "../bugs/JacksonDatabind_98_tmp",
  "bug_name": "JacksonDatabind_98",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test",
      "test_function": "testExample",
      "assertion_line": "87",
      "exception": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
      "message": "Cannot construct instance of `com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test$AnimalAndType`, problem: argument type mismatch"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler:complete:[JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator]:Object"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler:complete:[JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator]:Object"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "298",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307"
          ],
          "num": 10
        },
        {
          "qualified_names": [
            "298"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java\nindex 9ff1c0b..2a3fbaa 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java\n@@ -295,16 +295,7 @@\n                 if ((typeProp !\u003d null) \u0026\u0026 (typeProp.getCreatorIndex() \u003e\u003d 0)) {\n                     // 31-May-2018, tatu: [databind#1328] if id is NOT plain `String`, need to\n                     //    apply deserializer... fun fun.\n-                    final Object v;\n-                    if (typeProp.getType().hasRawClass(String.class)) {\n-                        v \u003d typeId;\n-                    } else {\n-                        TokenBuffer tb \u003d new TokenBuffer(p, ctxt);\n-                        tb.writeString(typeId);\n-                        v \u003d typeProp.getValueDeserializer().deserialize(tb.asParserOnFirstToken(), ctxt);\n-                        tb.close();\n-                    }\n-                    buffer.assignParameter(typeProp, v);\n+                    buffer.assignParameter(typeProp, typeId);\n                 }\n             }\n         }\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [12335,12350]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [12371,12766]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}