{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest::shouldReadBigGid",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "32",
  "workingDir": "../bugs/Compress_32_tmp",
  "bug_name": "Compress_32",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest",
      "test_function": "shouldReadBigGid",
      "assertion_line": "254",
      "exception": "java.lang.NumberFormatException",
      "message": "For input string: \"4294967294\""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java",
        "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:applyPaxHeadersToCurrentEntry:[Map\u003cString,String\u003e headers]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:applyPaxHeadersToCurrentEntry:[Map\u003cString,String\u003e headers]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "501",
            "505"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "501",
            "505"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\nindex 41acf2a..c557007 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n@@ -498,11 +498,11 @@\n             } else if (\"linkpath\".equals(key)){\n                 currEntry.setLinkName(val);\n             } else if (\"gid\".equals(key)){\n-                currEntry.setGroupId(Long.parseLong(val));\n+                currEntry.setGroupId(Integer.parseInt(val));\n             } else if (\"gname\".equals(key)){\n                 currEntry.setGroupName(val);\n             } else if (\"uid\".equals(key)){\n-                currEntry.setUserId(Long.parseLong(val));\n+                currEntry.setUserId(Integer.parseInt(val));\n             } else if (\"uname\".equals(key)){\n                 currEntry.setUserName(val);\n             } else if (\"size\".equals(key)){\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}