{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.codec.language.SoundexTest::testHWRuleEx1",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.codec.language.Soundex",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Codec",
  "id": "15",
  "workingDir": "../bugs/Codec_15_tmp",
  "bug_name": "Codec_15",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.codec.language.SoundexTest",
      "test_function": "testHWRuleEx1",
      "assertion_line": "232",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cY3[3]0\u003e but was:\u003cY3[0]0\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/codec/language/Soundex.java",
        "src/main/java/org/apache/commons/codec/language/Soundex.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.codec.language.Soundex:getMappingCode:[final String str, final int index]:char"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.codec.language.Soundex:getMappingCode:[final String str, final int index]:char"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "188",
            "189",
            "190",
            "193",
            "194",
            "195"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "188",
            "189",
            "190",
            "191",
            "192"
          ],
          "num": 5
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/codec/language/Soundex.java b/src/main/java/org/apache/commons/codec/language/Soundex.java\nindex 404384d..71d1f07 100644\n--- a/src/main/java/org/apache/commons/codec/language/Soundex.java\n+++ b/src/main/java/org/apache/commons/codec/language/Soundex.java\n@@ -185,14 +185,13 @@\n         final char mappedChar \u003d this.map(str.charAt(index));\n         // HW rule check\n         if (index \u003e 1 \u0026\u0026 mappedChar !\u003d \u00270\u0027) {\n-            for (int i\u003dindex-1 ; i\u003e\u003d0 ; i--) {\n-                final char prevChar \u003d str.charAt(i);\n-                if (this.map(prevChar)\u003d\u003dmappedChar) {\n+            final char hwChar \u003d str.charAt(index - 1);\n+            if (\u0027H\u0027 \u003d\u003d hwChar || \u0027W\u0027 \u003d\u003d hwChar) {\n+                final char preHWChar \u003d str.charAt(index - 2);\n+                final char firstCode \u003d this.map(preHWChar);\n+                if (firstCode \u003d\u003d mappedChar || \u0027H\u0027 \u003d\u003d preHWChar || \u0027W\u0027 \u003d\u003d preHWChar) {\n                     return 0;\n                 }\n-                if (\u0027H\u0027!\u003dprevChar \u0026\u0026 \u0027W\u0027!\u003dprevChar) {\n-                    break;\n-                }\n             }\n         }\n         return mappedChar;\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "VariableDeclarationStatement [7391,7433]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "IfStatement [7446,7754]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [7450,7480]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "VariableDeclarationStatement [7562,7605]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "Modifier: final [7562,7567]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "PrimitiveType: char [7568,7572]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "VariableDeclarationFragment [7573,7604]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: firstCode [7573,7582]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [7626,7669]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: || [7670,7672]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [7673,7689]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [7626,7649]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: || [7650,7652]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [7653,7669]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [7534,7543]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: firstCode [7626,7635]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: i [7475,7476]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [7597,7679]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationExpression [7396,7409]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [7412,7416]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "PostfixExpression [7419,7422]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ForStatement [7391,7693]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}