{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math3.optimization.fitting.HarmonicFitterTest::testMath844",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math3.optimization.fitting.HarmonicFitter",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "25",
  "workingDir": "../bugs/Math_25_tmp",
  "bug_name": "Math_25",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math3.optimization.fitting.HarmonicFitterTest",
      "test_function": "testMath844",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected exception: org.apache.commons.math3.exception.MathIllegalStateException"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java",
        "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math3.optimization.fitting.HarmonicFitter\\$ParameterGuesser:guessAOmega:[]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math3.optimization.fitting.HarmonicFitter\\$ParameterGuesser:guessAOmega:[]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "323",
            "326",
            "327"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "322"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java b/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java\nindex c7af9ae..1da2c45 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java\n@@ -320,11 +320,8 @@\n                 }\n                 a \u003d 0.5 * (yMax - yMin);\n             } else {\n-                if (c2 \u003d\u003d 0) {\n                     // In some ill-conditioned cases (cf. MATH-844), the guesser\n                     // procedure cannot produce sensible results.\n-                    throw new MathIllegalStateException(LocalizedFormats.ZERO_DENOMINATOR);\n-                }\n \n                 a \u003d FastMath.sqrt(c1 / c2);\n                 omega \u003d FastMath.sqrt(c2 / c3);\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [14054,14325]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}