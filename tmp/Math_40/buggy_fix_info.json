{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest::testIssue716",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "40",
  "workingDir": "../bugs/Math_40_tmp",
  "bug_name": "Math_40",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest",
      "test_function": "testIssue716",
      "assertion_line": "93",
      "exception": "org.apache.commons.math.exception.TooManyEvaluationsException",
      "message": "illegal state: maximal count (100) exceeded: evaluations"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java",
        "src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:doSolve:[]:double"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:doSolve:[]:double"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "235",
            "236",
            "237",
            "238",
            "241",
            "242",
            "243",
            "244"
          ],
          "num": 8
        },
        {
          "qualified_names": [
            "235",
            "238"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java b/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java\nindex 59dc461..93dd3bb 100644\n--- a/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java\n+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java\n@@ -232,16 +232,10 @@\n             double targetY;\n             if (agingA \u003e\u003d MAXIMAL_AGING) {\n                 // we keep updating the high bracket, try to compensate this\n-                final int p \u003d agingA - MAXIMAL_AGING;\n-                final double weightA \u003d (1 \u003c\u003c p) - 1;\n-                final double weightB \u003d p + 1;\n-                targetY \u003d (weightA * yA - weightB * REDUCTION_FACTOR * yB) / (weightA + weightB);\n+                targetY \u003d -REDUCTION_FACTOR * yB;\n             } else if (agingB \u003e\u003d MAXIMAL_AGING) {\n                 // we keep updating the low bracket, try to compensate this\n-                final int p \u003d agingB - MAXIMAL_AGING;\n-                final double weightA \u003d p + 1;\n-                final double weightB \u003d (1 \u003c\u003c p) - 1;\n-                targetY \u003d (weightB * yB - weightA * REDUCTION_FACTOR * yA) / (weightA + weightB);\n+                targetY \u003d -REDUCTION_FACTOR * yA;\n             } else {\n                 // bracketing is balanced, try to find the root itself\n                 targetY \u003d 0;\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [8533,8566]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [8709,8742]"
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [8533,8570]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [8587,8623]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [8640,8669]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [8686,8767]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [8910,8947]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [8964,8993]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [9010,9046]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [9063,9144]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}