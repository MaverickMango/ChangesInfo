{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.TarTestCase::testCOMPRESS178",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "12",
  "workingDir": "../bugs/Compress_12_tmp",
  "bug_name": "Compress_12",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.TarTestCase",
      "test_function": "testCOMPRESS178",
      "assertion_line": "309",
      "exception": "java.lang.IllegalArgumentException",
      "message": "Invalid byte 0 at offset 2 in \u002700{NUL}0765{NUL}\u0027 len\u003d8"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java",
        "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:getNextTarEntry:[]:TarArchiveEntry"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:getNextTarEntry:[]:TarArchiveEntry"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204"
          ],
          "num": 7
        },
        {
          "qualified_names": [
            "198"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\nindex 34e7355..bb670f3 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java\n@@ -195,13 +195,7 @@\n             return null;\n         }\n \n-        try {\n-            currEntry \u003d new TarArchiveEntry(headerBuf);\n-        } catch (IllegalArgumentException e) {\n-            IOException ioe \u003d new IOException(\"Error detected parsing the header\");\n-            ioe.initCause(e);\n-            throw ioe;\n-        }\n+        currEntry \u003d new TarArchiveEntry(headerBuf);\n         entryOffset \u003d 0;\n         entrySize \u003d currEntry.getSize();\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [6520,6587]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "CatchClause [6588,6771]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "TryStatement [6516,6771]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}