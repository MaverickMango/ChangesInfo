{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.PeepholeFoldConstantsTest::testIssue821",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.NodeUtil",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "10",
  "workingDir": "../bugs/Closure_10_tmp",
  "bug_name": "Closure_10",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
      "test_function": "testIssue821",
      "assertion_line": "581",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: var a\u003d(Math.random()\u003e0.5?\"1\":2)+3+4\nResult: var a\u003d(Math.random()\u003e0.5?1:2)+7"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/NodeUtil.java",
        "src/com/google/javascript/jscomp/NodeUtil.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:mayBeString:[Node n, boolean recurse]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:mayBeString:[Node n, boolean recurse]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1417"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "1417"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex eeb12d4..eef2792 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -1414,7 +1414,7 @@\n \n   static boolean mayBeString(Node n, boolean recurse) {\n     if (recurse) {\n-      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);\n+      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n     } else {\n       return mayBeStringHelper(n);\n     }\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}