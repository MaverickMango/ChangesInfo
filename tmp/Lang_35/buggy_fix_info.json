{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.lang3.ArrayUtilsAddTest::testLANG571",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.lang3.ArrayUtils",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Lang",
  "id": "35",
  "workingDir": "../bugs/Lang_35_tmp",
  "bug_name": "Lang_35",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.lang3.ArrayUtilsAddTest",
      "test_function": "testLANG571",
      "assertion_line": "232",
      "exception": "java.lang.ClassCastException",
      "message": "[Ljava.lang.Object; cannot be cast to [Ljava.lang.String;"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "src/main/java/org/apache/commons/lang3/ArrayUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.lang3.ArrayUtils:add:[T[] array, int index, T element]:T[]",
            "org.apache.commons.lang3.ArrayUtils:add:[T[] array, T element]:T[]"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.apache.commons.lang3.ArrayUtils:add:[T[] array, T element]:T[]",
            "org.apache.commons.lang3.ArrayUtils:add:[T[] array, int index, T element]:T[]"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "3295",
            "3574"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "3295",
            "3574"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/lang3/ArrayUtils.java b/src/main/java/org/apache/commons/lang3/ArrayUtils.java\nindex 3a543ce..ac22f8f 100644\n--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java\n@@ -3292,7 +3292,7 @@\n         } else if (element !\u003d null) {\n             type \u003d element.getClass();\n         } else {\n-            throw new IllegalArgumentException(\"Arguments cannot both be null\");            \n+            type \u003d Object.class;\n         }\n         @SuppressWarnings(\"unchecked\") // type must be T\n         T[] newArray \u003d (T[]) copyArrayGrow1(array, type);\n@@ -3571,7 +3571,7 @@\n         } else if (element !\u003d null) {\n             clss \u003d element.getClass();\n         } else {\n-            throw new IllegalArgumentException(\"Array and element cannot both be null\");            \n+            return (T[]) new Object[] { null };\n         }\n         @SuppressWarnings(\"unchecked\") // the add method creates an array of type clss, which is type T\n         final T[] newArray \u003d (T[]) add(array, index, element, clss);\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [127661,127681]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ReturnStatement [139524,139559]"
        },
        {
          "type": "delete-tree",
          "from": "ThrowStatement [127661,127729]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ThrowStatement [139584,139660]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}