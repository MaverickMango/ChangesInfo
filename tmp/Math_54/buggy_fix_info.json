{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.dfp.DfpTest::testIssue567",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.dfp.Dfp",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "54",
  "workingDir": "../bugs/Math_54_tmp",
  "bug_name": "Math_54",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.dfp.DfpTest",
      "test_function": "testIssue567",
      "assertion_line": "1512",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c0.0\u003e but was:\u003c-Infinity\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/dfp/Dfp.java",
        "src/main/java/org/apache/commons/math/dfp/Dfp.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.dfp.Dfp:toDouble:[]:double",
            "org.apache.commons.math.dfp.Dfp:Dfp:[final DfpField field, double x]:null"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.apache.commons.math.dfp.Dfp:Dfp:[final DfpField field, double x]:null",
            "org.apache.commons.math.dfp.Dfp:toDouble:[]:double"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "273",
            "274",
            "275",
            "2322",
            "2323",
            "2324",
            "2325"
          ],
          "num": 7
        },
        {
          "qualified_names": [
            "272",
            "2319"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/dfp/Dfp.java b/src/main/java/org/apache/commons/math/dfp/Dfp.java\nindex 54aabc4..73f1ea3 100644\n--- a/src/main/java/org/apache/commons/math/dfp/Dfp.java\n+++ b/src/main/java/org/apache/commons/math/dfp/Dfp.java\n@@ -270,9 +270,6 @@\n             // Zero or sub-normal\n             if (x \u003d\u003d 0) {\n                 // make sure 0 has the right sign\n-                if ((bits \u0026 0x8000000000000000L) !\u003d 0) {\n-                    sign \u003d -1;\n-                }\n                 return;\n             }\n \n@@ -2319,10 +2316,7 @@\n \n         Dfp y \u003d this;\n         boolean negate \u003d false;\n-        int cmp0 \u003d compare(this, getZero());\n-        if (cmp0 \u003d\u003d 0) {\n-            return sign \u003c 0 ? -0.0 : +0.0;\n-        } else if (cmp0 \u003c 0) {\n+        if (lessThan(getZero())) {\n             y \u003d negate();\n             negate \u003d true;\n         }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodInvocation [71405,71424]"
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [9852,9941]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [71631,71639]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [71507,71543]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [71556,71565]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [71567,71621]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [71552,71705]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}