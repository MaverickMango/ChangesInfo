{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.core.base64.Base64GenerationTest::testBinaryAsEmbeddedObject,com.fasterxml.jackson.core.main.TestGeneratorMisc::testAsEmbedded",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.core.JsonGenerator",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonCore",
  "id": "20",
  "workingDir": "../bugs/JacksonCore_20_tmp",
  "bug_name": "JacksonCore_20",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.core.base64.Base64GenerationTest",
      "test_function": "testBinaryAsEmbeddedObject",
      "assertion_line": "100",
      "exception": "com.fasterxml.jackson.core.JsonGenerationException",
      "message": "No native support for writing embedded objects"
    },
    {
      "test_class": "com.fasterxml.jackson.core.main.TestGeneratorMisc",
      "test_function": "testAsEmbedded",
      "assertion_line": "243",
      "exception": "com.fasterxml.jackson.core.JsonGenerationException",
      "message": "No native support for writing embedded objects"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/core/JsonGenerator.java",
        "src/main/java/com/fasterxml/jackson/core/JsonGenerator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.core.JsonGenerator:writeEmbeddedObject:[Object object]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.core.JsonGenerator:writeEmbeddedObject:[Object object]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1330",
            "1331",
            "1332",
            "1333",
            "1334",
            "1335",
            "1336",
            "1337",
            "1338",
            "1339"
          ],
          "num": 10
        },
        {
          "qualified_names": [
            "1330"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\nindex da75a61..2a08020 100644\n--- a/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n+++ b/src/main/java/com/fasterxml/jackson/core/JsonGenerator.java\n@@ -1327,16 +1327,7 @@\n      */\n     public void writeEmbeddedObject(Object object) throws IOException {\n         // 01-Sep-2016, tatu: As per [core#318], handle small number of cases\n-        if (object \u003d\u003d null) {\n-            writeNull();\n-            return;\n-        }\n-        if (object instanceof byte[]) {\n-            writeBinary((byte[]) object);\n-            return;\n-        }\n-        throw new JsonGenerationException(\"No native support for writing embedded objects of type \"\n-                +object.getClass().getName(),\n+        throw new JsonGenerationException(\"No native support for writing embedded objects\",\n                 this);\n     }\n     \n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ThrowStatement [52548,52654]"
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [52548,52624]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [52633,52736]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ThrowStatement [52745,52905]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}