{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.codec.binary.StringUtilsTest::testEqualsCS1,org.apache.commons.codec.binary.StringUtilsTest::testEqualsCS2",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.codec.binary.StringUtils",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Codec",
  "id": "18",
  "workingDir": "../bugs/Codec_18_tmp",
  "bug_name": "Codec_18",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.codec.binary.StringUtilsTest",
      "test_function": "testEqualsCS1",
      "assertion_line": "228",
      "exception": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: 3"
    },
    {
      "test_class": "org.apache.commons.codec.binary.StringUtilsTest",
      "test_function": "testEqualsCS2",
      "assertion_line": "236",
      "exception": "java.lang.StringIndexOutOfBoundsException",
      "message": "String index out of range: 3"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.codec.binary.StringUtils:equals:[final CharSequence cs1, final CharSequence cs2]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.codec.binary.StringUtils:equals:[final CharSequence cs1, final CharSequence cs2]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "81"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "81"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/codec/binary/StringUtils.java b/src/main/java/org/apache/commons/codec/binary/StringUtils.java\nindex e5fb718..bef55f7 100644\n--- a/src/main/java/org/apache/commons/codec/binary/StringUtils.java\n+++ b/src/main/java/org/apache/commons/codec/binary/StringUtils.java\n@@ -78,7 +78,7 @@\n         if (cs1 instanceof String \u0026\u0026 cs2 instanceof String) {\n             return cs1.equals(cs2);\n         }\n-        return cs1.length() \u003d\u003d cs2.length() \u0026\u0026 CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, cs1.length());\n+        return CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, Math.max(cs1.length(), cs2.length()));\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "METHOD_INVOCATION_ARGUMENTS [3024,3050]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u003d\u003d [2973,2975]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [2960,2988]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [2989,2991]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [2960,3060]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}