{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest::polynomial",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "74",
  "workingDir": "../bugs/Math_74_tmp",
  "bug_name": "Math_74",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest",
      "test_function": "polynomial",
      "assertion_line": "150",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate:[final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y]:double"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate:[final FirstOrderDifferentialEquations equations, final double t0, final double[] y0, final double t, final double[] y]:double"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "245",
            "247",
            "248",
            "249",
            "251",
            "252",
            "253"
          ],
          "num": 7
        },
        {
          "qualified_names": [
            "245",
            "247",
            "248",
            "250"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\nindex 1bbad3e..6f3e883 100644\n--- a/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java\n@@ -242,15 +242,12 @@\n         }\n \n         if (firstTime) {\n-          final double[] scale \u003d new double[y0.length];\n+          final double[] scale;\n           if (vecAbsoluteTolerance \u003d\u003d null) {\n-              for (int i \u003d 0; i \u003c scale.length; ++i) {\n-                scale[i] \u003d scalAbsoluteTolerance + scalRelativeTolerance * Math.abs(y[i]);\n-              }\n+              scale \u003d new double[y0.length];\n+              java.util.Arrays.fill(scale, scalAbsoluteTolerance);\n             } else {\n-              for (int i \u003d 0; i \u003c scale.length; ++i) {\n-                scale[i] \u003d vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * Math.abs(y[i]);\n-              }\n+              scale \u003d vecAbsoluteTolerance;\n             }\n           hNew \u003d initializeStep(equations, forward, getOrder(), scale,\n                                 stepStart, y, yDotK[0], yTmp, yDotK[1]);\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "VariableDeclarationStatement [9068,9089]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "IfStatement [9100,9326]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [9104,9132]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "Block [9134,9261]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "Block [9267,9326]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "ExpressionStatement [9150,9180]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [9195,9247]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "Assignment [9150,9179]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "ASSIGNMENT_OPERATOR: \u003d [9156,9157]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Modifier: final [9068,9073]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ArrayType [9074,9082]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationFragment [9083,9112]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationStatement [9068,9113]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [9124,9522]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}