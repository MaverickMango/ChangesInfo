{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testMath864",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "20",
  "workingDir": "../bugs/Math_20_tmp",
  "bug_name": "Math_20",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest",
      "test_function": "testMath864",
      "assertion_line": "400",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Out of bounds (0.5246031767455861 \u003e 0.5)"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer\\$FitnessFunction:repairAndDecode:[final double[] x]:double[]"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math3.optimization.direct.CMAESOptimizer\\$FitnessFunction:repairAndDecode:[final double[] x]:double[]"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "921",
            "922"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "921"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\nindex b54cb37..4b7dbf6 100644\n--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java\n@@ -918,8 +918,7 @@\n          * @return the original objective variables, possibly repaired.\n          */\n         public double[] repairAndDecode(final double[] x) {\n-            return boundaries !\u003d null \u0026\u0026 isRepairMode ?\n-                decode(repair(x)) :\n+            return\n                 decode(x);\n         }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [39623,39657]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [39676,39693]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [39623,39721]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}