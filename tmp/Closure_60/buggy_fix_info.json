{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504,com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.NodeUtil",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "60",
  "workingDir": "../bugs/Closure_60_tmp",
  "bug_name": "Closure_60",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.CommandLineRunnerTest",
      "test_function": "testIssue504",
      "assertion_line": "365",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: alert(\"hi\")\nResult: "
    },
    {
      "test_class": "com.google.javascript.jscomp.NodeUtilTest",
      "test_function": "testGetBooleanValue",
      "assertion_line": "123",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cunknown\u003e but was:\u003cfalse\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/NodeUtil.java",
        "src/com/google/javascript/jscomp/NodeUtil.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:getPureBooleanValue:[Node n]:TernaryValue",
            "com.google.javascript.jscomp.NodeUtil:getImpureBooleanValue:[Node n]:TernaryValue"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.NodeUtil:getPureBooleanValue:[Node n]:TernaryValue",
            "com.google.javascript.jscomp.NodeUtil:getImpureBooleanValue:[Node n]:TernaryValue"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "108",
            "109",
            "138",
            "140",
            "141"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "107",
            "139"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java\nindex 43a296f..7f20c2e 100644\n--- a/src/com/google/javascript/jscomp/NodeUtil.java\n+++ b/src/com/google/javascript/jscomp/NodeUtil.java\n@@ -105,8 +105,6 @@\n         // ignoring side-effects\n         return TernaryValue.TRUE;\n \n-      case Token.VOID:\n-        return TernaryValue.FALSE;\n \n       default:\n         return getPureBooleanValue(n);\n@@ -135,10 +133,7 @@\n         return TernaryValue.FALSE;\n \n       case Token.VOID:\n-        if (!mayHaveSideEffects(n.getFirstChild())) {\n           return TernaryValue.FALSE;\n-        }\n-        break;\n \n       case Token.NAME:\n         String name \u003d n.getString();\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SwitchCase [3705,3721]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ReturnStatement [3730,3756]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "PrefixExpression [4589,4627]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [4629,4677]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [4585,4677]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "BreakStatement [4686,4692]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}