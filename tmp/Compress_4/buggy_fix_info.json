{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest::testJarMarker,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testCP437FileRoundtripImplicitUnicodeExtra,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testUtf8FileRoundtripImplicitUnicodeExtra,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testCP437FileRoundtripExplicitUnicodeExtra,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testUtf8FileRoundtripExplicitUnicodeExtra,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testASCIIFileRoundtripImplicitUnicodeExtra,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testUtf8FileRoundtripNoEFSImplicitUnicodeExtra,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testZipArchiveInputStreamReadsUnicodeFields,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testASCIIFileRoundtripExplicitUnicodeExtra,org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest::testUtf8FileRoundtripNoEFSExplicitUnicodeExtra",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream,org.apache.commons.compress.archivers.tar.TarArchiveOutputStream,org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream,org.apache.commons.compress.changes.ChangeSetPerformer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "4",
  "workingDir": "../bugs/Compress_4_tmp",
  "bug_name": "Compress_4",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest",
      "test_function": "testJarMarker",
      "assertion_line": "48",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testCP437FileRoundtripImplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testUtf8FileRoundtripImplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testCP437FileRoundtripExplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testUtf8FileRoundtripExplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testASCIIFileRoundtripImplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testZipArchiveInputStreamReadsUnicodeFields",
      "assertion_line": "183",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testASCIIFileRoundtripExplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    },
    {
      "test_class": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
      "test_function": "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra",
      "assertion_line": "291",
      "exception": "java.io.IOException",
      "message": "central directory is empty, can\u0027t expand corrupt archive."
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java",
        "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream:close:[]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream:close:[]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "335"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "336"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\nindex 959df8d..3641ab6 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java\n@@ -333,6 +333,7 @@\n      */\n     public void close() throws IOException {\n         if (!this.closed) {\n+            this.finish();\n             out.close();\n             this.closed \u003d true;\n         }\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [11803,11817]"
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java",
        "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:close:[]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:close:[]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "125"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "126"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\nindex d3afc3d..abe8759 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n@@ -123,6 +123,7 @@\n      */\n     public void close() throws IOException {\n         if (!closed) {\n+            finish();\n             buffer.close();\n             out.close();\n             closed \u003d true;\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [4337,4346]"
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java",
        "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:close:[]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:close:[]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "529"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "530"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\nindex 11808a9..5aa7c87 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java\n@@ -527,6 +527,7 @@\n      * @exception  IOException  if an I/O error occurs.\n      */\n     public void close() throws IOException {\n+        finish();\n         if (raf !\u003d null) {\n             raf.close();\n         }\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [16696,16705]"
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java",
        "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.changes.ChangeSetPerformer:perform:[ArchiveInputStream in, ArchiveOutputStream out]:ChangeSetResults"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.changes.ChangeSetPerformer:perform:[ArchiveInputStream in, ArchiveOutputStream out]:ChangeSetResults"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "128"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "127"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java b/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\nindex 778c2aa..ec8e2cf 100644\n--- a/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n+++ b/src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java\n@@ -125,7 +125,6 @@\n                 results.addedFromChangeSet(change.getEntry().getName());\n             }\n         }\n-        out.finish();\n         return results;\n     }\n \n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [4885,4898]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}