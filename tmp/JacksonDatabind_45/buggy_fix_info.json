{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.ser.DateSerializationTest::testDateDefaultShape",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "45",
  "workingDir": "../bugs/JacksonDatabind_45_tmp",
  "bug_name": "JacksonDatabind_45",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.ser.DateSerializationTest",
      "test_function": "testDateDefaultShape",
      "assertion_line": "288",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c{\"date\":[\"1970-01-01\"]}\u003e but was:\u003c{\"date\":[0]}\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java",
        "src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase:createContextual:[SerializerProvider serializers, BeanProperty property]:JsonSerializer\u003c?\u003e"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase:createContextual:[SerializerProvider serializers, BeanProperty property]:JsonSerializer\u003c?\u003e"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "63",
            "64"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "63"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\nindex 68dbf40..eec386e 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\n@@ -60,8 +60,7 @@\n                     return withFormat(Boolean.TRUE, null);\n                 }\n \n-                if ((shape \u003d\u003d JsonFormat.Shape.STRING) || format.hasPattern()\n-                                || format.hasLocale() || format.hasTimeZone()) {\n+                if (format.getShape() \u003d\u003d JsonFormat.Shape.STRING) {\n                     TimeZone tz \u003d format.getTimeZone();\n                     final String pattern \u003d format.hasPattern()\n                                     ? format.getPattern()\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: shape [2204,2209]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [2204,2236]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ParenthesizedExpression [2203,2237]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: || [2238,2240]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [2296,2314]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [2318,2338]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}