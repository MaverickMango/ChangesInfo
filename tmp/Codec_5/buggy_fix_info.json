{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.codec.binary.Base64InputStreamTest::testCodec98NPE,org.apache.commons.codec.binary.Base64OutputStreamTest::testCodec98NPE",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.codec.binary.Base64",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Codec",
  "id": "5",
  "workingDir": "../bugs/Codec_5_tmp",
  "bug_name": "Codec_5",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.codec.binary.Base64InputStreamTest",
      "test_function": "testCodec98NPE",
      "assertion_line": "61",
      "exception": "java.lang.NullPointerException",
      "message": ""
    },
    {
      "test_class": "org.apache.commons.codec.binary.Base64OutputStreamTest",
      "test_function": "testCodec98NPE",
      "assertion_line": "62",
      "exception": "java.lang.NullPointerException",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/codec/binary/Base64.java",
        "src/java/org/apache/commons/codec/binary/Base64.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.codec.binary.Base64:decode:[byte[] in, int inPos, int inAvail]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.codec.binary.Base64:decode:[byte[] in, int inPos, int inAvail]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "586",
            "587",
            "588"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "585"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/codec/binary/Base64.java b/src/java/org/apache/commons/codec/binary/Base64.java\nindex 19a6959..2618e5d 100644\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n@@ -583,9 +583,6 @@\n         // EOF (-1) and first time \u0027\u003d\u0027 character is encountered in stream.\n         // This approach makes the \u0027\u003d\u0027 padding characters completely optional.\n         if (eof \u0026\u0026 modulus !\u003d 0) {\n-            if (buffer \u003d\u003d null || buffer.length - pos \u003c decodeSize) {\n-                resizeBuffer();\n-            }\n             \n             x \u003d x \u003c\u003c 6;\n             switch (modulus) {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [23355,23458]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}