{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.jxpath.ri.model.beans.BadlyImplementedFactoryTest::testBadFactoryImplementation",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "JxPath",
  "id": "3",
  "workingDir": "../bugs/JxPath_3_tmp",
  "bug_name": "JxPath_3",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.jxpath.ri.model.beans.BadlyImplementedFactoryTest",
      "test_function": "testBadFactoryImplementation",
      "assertion_line": "64",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java",
        "src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createPath:[JXPathContext context]:NodePointer",
            "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createPath:[JXPathContext context, Object value]:NodePointer",
            "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createBadFactoryException:[AbstractFactory factory]:JXPathAbstractFactoryException"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createChild:[JXPathContext context, QName name, int index]:NodePointer",
            "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createPath:[JXPathContext context]:NodePointer"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "19",
            "20",
            "111",
            "112",
            "113",
            "143",
            "144",
            "145",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238"
          ],
          "num": 15
        },
        {
          "qualified_names": [
            "18",
            "112",
            "147",
            "239"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java\nindex b9c02bf..8cbd118 100644\n--- a/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java\n@@ -16,8 +16,6 @@\n  */\n package org.apache.commons.jxpath.ri.model.beans;\n \n-import org.apache.commons.jxpath.AbstractFactory;\n-import org.apache.commons.jxpath.JXPathAbstractFactoryException;\n import org.apache.commons.jxpath.JXPathContext;\n import org.apache.commons.jxpath.JXPathInvalidAccessException;\n import org.apache.commons.jxpath.ri.QName;\n@@ -108,9 +106,6 @@\n             return newParent.createAttribute(context, getName());\n         }\n         else {\n-            if (parent instanceof NullPointer \u0026\u0026 parent.equals(newParent)) {\n-                throw createBadFactoryException(context.getFactory());\n-            }\n             // Consider these two use cases:\n             // 1. The parent pointer of NullPropertyPointer is \n             //    a PropertyOwnerPointer other than NullPointer. When we call \n@@ -140,9 +135,6 @@\n             return pointer;\n         }\n         else {\n-            if (parent instanceof NullPointer \u0026\u0026 parent.equals(newParent)) {\n-                throw createBadFactoryException(context.getFactory());\n-            }\n             if (newParent instanceof PropertyOwnerPointer) {\n                 PropertyOwnerPointer pop \u003d (PropertyOwnerPointer) newParent;\n                 newParent \u003d pop.getPropertyPointer();\n@@ -229,10 +221,4 @@\n         }\n         return string;\n     }\n-\n-    private JXPathAbstractFactoryException createBadFactoryException(AbstractFactory factory) {\n-        return new JXPathAbstractFactoryException(\"Factory \" + factory\n-                + \" reported success creating object for path: \" + asPath()\n-                + \" but object was null.  Terminating to avoid stack recursion.\");\n-    }\n-}\n\\ No newline at end of file\n+}\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [853,902]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [903,967]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [3444,3593]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [5123,5272]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [7734,8061]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createChild:[JXPathContext context, QName name, int index]:NodePointer"
      ],
      "num": 1
    },
    "delete_functions": {
      "qualified_names": [
        "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createPath:[JXPathContext context, Object value]:NodePointer",
        "org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer:createBadFactoryException:[AbstractFactory factory]:JXPathAbstractFactoryException"
      ],
      "num": 2
    }
  }
}