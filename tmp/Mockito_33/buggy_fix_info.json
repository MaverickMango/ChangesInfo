{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest::shouldStubbingWork,org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest::shouldVerificationWorks",
    "test.dir": "test",
    "clz.modified": "org.mockito.internal.invocation.InvocationMatcher",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Mockito",
  "id": "33",
  "workingDir": "../bugs/Mockito_33_tmp",
  "bug_name": "Mockito_33",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest",
      "test_function": "shouldStubbingWork",
      "assertion_line": "39",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest",
      "test_function": "shouldVerificationWorks",
      "assertion_line": "48",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/org/mockito/internal/invocation/InvocationMatcher.java",
        "src/org/mockito/internal/invocation/InvocationMatcher.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.mockito.internal.invocation.InvocationMatcher:hasSameMethod:[Invocation candidate]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.mockito.internal.invocation.InvocationMatcher:hasSameMethod:[Invocation candidate]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "98",
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "num": 12
        },
        {
          "qualified_names": [
            "99"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex ffad2b1..203413f 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -95,19 +95,8 @@\n         Method m1 \u003d invocation.getMethod();\n         Method m2 \u003d candidate.getMethod();\n         \n-        if (m1.getName() !\u003d null \u0026\u0026 m1.getName().equals(m2.getName())) {\n         \t/* Avoid unnecessary cloning */\n-        \tClass[] params1 \u003d m1.getParameterTypes();\n-        \tClass[] params2 \u003d m2.getParameterTypes();\n-        \tif (params1.length \u003d\u003d params2.length) {\n-        \t    for (int i \u003d 0; i \u003c params1.length; i++) {\n-        \t\tif (params1[i] !\u003d params2[i])\n-        \t\t    return false;\n-        \t    }\n-        \t    return true;\n-        \t}\n-        }\n-        return false;\n+        return m1.equals(m2);\n     }\n     \n     public Location getLocation() {\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ReturnStatement [3442,3463]"
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [3401,3843]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ReturnStatement [3852,3865]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}