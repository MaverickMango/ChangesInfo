{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.convert.TestMapConversions::testMapToProperties,com.fasterxml.jackson.databind.deser.TestMapDeserialization::testReadProperties,com.fasterxml.jackson.databind.type.TestTypeFactory::testProperties",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.type.TypeFactory",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "19",
  "workingDir": "../bugs/JacksonDatabind_19_tmp",
  "bug_name": "JacksonDatabind_19",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.convert.TestMapConversions",
      "test_function": "testMapToProperties",
      "assertion_line": "113",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c129\u003e but was:\u003cnull\u003e"
    },
    {
      "test_class": "com.fasterxml.jackson.databind.deser.TestMapDeserialization",
      "test_function": "testReadProperties",
      "assertion_line": "574",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c123\u003e but was:\u003cnull\u003e"
    },
    {
      "test_class": "com.fasterxml.jackson.databind.type.TestTypeFactory",
      "test_function": "testProperties",
      "assertion_line": "185",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected same:\u003cclass java.lang.String\u003e was not:\u003cclass java.lang.Object\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.type.TypeFactory:_mapType:[Class\u003c?\u003e rawClass]:JavaType"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.type.TypeFactory:_mapType:[Class\u003c?\u003e rawClass]:JavaType"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1021",
            "1022",
            "1023"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "1020"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\nindex 4fa88cd..8ebffc8 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n@@ -1018,9 +1018,6 @@\n     private JavaType _mapType(Class\u003c?\u003e rawClass)\n     {\n         // 28-May-2015, tatu: Properties are special, as per [databind#810]\n-        if (rawClass \u003d\u003d Properties.class) {\n-            return MapType.construct(rawClass, CORE_TYPE_STRING, CORE_TYPE_STRING);\n-        }\n         JavaType[] typeParams \u003d findTypeParameters(rawClass, Map.class);\n         // ok to have no types (\"raw\")\n         if (typeParams \u003d\u003d null) {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [41434,41563]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}