{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest::testIssue1255",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.ser.impl.WritableObjectId",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "49",
  "workingDir": "../bugs/JacksonDatabind_49_tmp",
  "bug_name": "JacksonDatabind_49",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest",
      "test_function": "testIssue1255",
      "assertion_line": "32",
      "exception": "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference",
      "message": "Unresolved forward references for: Object id [1] (for com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest$Bar) at [Source: {\"bar1\":1,\"bar2\":{\"@id\":2,\"value\":3}}; line: 1, column: 10]."
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java",
        "src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.impl.WritableObjectId:generateId:[Object forPojo]:Object"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ser.impl.WritableObjectId:generateId:[Object forPojo]:Object"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "50",
            "52"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "49"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java b/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java\nindex d842694..af141e1 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java\n@@ -47,9 +47,7 @@\n         // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of\n         //    id being generated for \"alwaysAsId\", but not being written as POJO; regardless,\n         //    need to use existing id if there is one:\n-        if (id \u003d\u003d null) {\n             id \u003d generator.generateId(forPojo);\n-        }\n         return id;\n     }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [1636,1646]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [1648,1707]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [1632,1707]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}