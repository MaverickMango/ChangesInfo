{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToChildOfUncollapsibleFunctionInLocalScope,com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_1,com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_2,com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_3,com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1,com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1,com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2,com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth2",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.CollapseProperties,com.google.javascript.jscomp.GlobalNamespace",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "89",
  "workingDir": "../bugs/Closure_89_tmp",
  "bug_name": "Closure_89",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAddPropertyToChildOfUncollapsibleFunctionInLocalScope",
      "assertion_line": "610",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: function a(){}a.b\u003d{x:0};var c\u003da;(function(){a.b.y\u003d0})();a.b.y\nResult: function a(){}var a$b$x\u003d0;var a$b$y;var c\u003da;(function(){a$b$y\u003d0})();a$b$y"
    },
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAliasCreatedForFunctionDepth1_1",
      "assertion_line": "279",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: var a\u003dfunction(){};a.b\u003d1;var c\u003da;c.b\u003d2;a.b!\u003dc.b\nResult: var a\u003dfunction(){};var a$b\u003d1;var c\u003da;c.b\u003d2;a$b!\u003dc.b"
    },
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAliasCreatedForFunctionDepth1_2",
      "assertion_line": "295",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: var a\u003dfunction(){};a.b\u003d1;f(a);a.b\nResult: var a\u003dfunction(){};var a$b\u003d1;f(a);a$b"
    },
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAliasCreatedForFunctionDepth1_3",
      "assertion_line": "304",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: var a\u003dfunction(){};a.b\u003d1;new f(a);a.b\nResult: var a\u003dfunction(){};var a$b\u003d1;new f(a);a$b"
    },
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1",
      "assertion_line": "552",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: function a(){}var c\u003da;(function(){a.b\u003d0})();a.b\nResult: function a(){}var a$b;var c\u003da;(function(){a$b\u003d0})();a$b"
    },
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1",
      "assertion_line": "544",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: function a(){}var c\u003da;(function(){a.b\u003d0})();a.b\nResult: function a(){}var a$b;var c\u003da;(function(){a$b\u003d0})();a$b"
    },
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2",
      "assertion_line": "572",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: var a$b\u003dfunction(){};var d\u003da$b;(function(){a$b.c\u003d0})();a$b.c\nResult: var a$b\u003dfunction(){};var a$b$c;var d\u003da$b;(function(){a$b$c\u003d0})();a$b$c"
    },
    {
      "test_class": "com.google.javascript.jscomp.CollapsePropertiesTest",
      "test_function": "testAliasCreatedForFunctionDepth2",
      "assertion_line": "313",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: var a$b\u003dfunction(){};a$b.c\u003d1;var d\u003da$b;a$b.c!\u003dd.c\nResult: var a$b\u003dfunction(){};var a$b$c\u003d1;var d\u003da$b;a$b$c!\u003dd.c"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/CollapseProperties.java",
        "src/com/google/javascript/jscomp/CollapseProperties.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.CollapseProperties:updateSimpleDeclaration:[String alias, Name refName, Ref ref]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.CollapseProperties:updateSimpleDeclaration:[String alias, Name refName, Ref ref]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "484",
            "485",
            "486"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "483"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java\nindex ddccf0d..16d533d 100644\n--- a/src/com/google/javascript/jscomp/CollapseProperties.java\n+++ b/src/com/google/javascript/jscomp/CollapseProperties.java\n@@ -481,9 +481,6 @@\n     Node greatGramps \u003d gramps.getParent();\n     Node greatGreatGramps \u003d greatGramps.getParent();\n \n-    if (rvalue !\u003d null \u0026\u0026 rvalue.getType() \u003d\u003d Token.FUNCTION) {\n-      checkForHosedThisReferences(rvalue, refName.docInfo, refName);\n-    }\n \n     // Create the new alias node.\n     Node nameNode \u003d NodeUtil.newName(\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [18169,18303]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/GlobalNamespace.java",
        "src/com/google/javascript/jscomp/GlobalNamespace.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.GlobalNamespace\\$Name:canCollapseUnannotatedChildNames:[]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.GlobalNamespace\\$Name:canCollapseUnannotatedChildNames:[]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "920"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "920"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/GlobalNamespace.java b/src/com/google/javascript/jscomp/GlobalNamespace.java\nindex 8268339..311e343 100644\n--- a/src/com/google/javascript/jscomp/GlobalNamespace.java\n+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java\n@@ -917,7 +917,7 @@\n       }\n \n       // If this is aliased, then its properties can\u0027t be collapsed either.\n-      if (aliasingGets \u003e 0) {\n+      if (type !\u003d Type.FUNCTION \u0026\u0026 aliasingGets \u003e 0) {\n         return false;\n       }\n \n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [29129,29170]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [29129,29150]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [29151,29153]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}