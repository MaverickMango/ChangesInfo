{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.lang3.math.NumberUtilsTest::testStringCreateNumberEnsureNoPrecisionLoss",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.lang3.math.NumberUtils",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Lang",
  "id": "3",
  "workingDir": "../bugs/Lang_3_tmp",
  "bug_name": "Lang_3",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.lang3.math.NumberUtilsTest",
      "test_function": "testStringCreateNumberEnsureNoPrecisionLoss",
      "assertion_line": "129",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "src/main/java/org/apache/commons/lang3/math/NumberUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.lang3.math.NumberUtils:createNumber:[final String str]:Number"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.lang3.math.NumberUtils:createNumber:[final String str]:Number"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "593",
            "598",
            "603",
            "608"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "592"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 1e6ccdc..c584021 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -590,22 +590,18 @@\n         //Must be a Float, Double, BigDecimal\n         final boolean allZeros \u003d isAllZeros(mant) \u0026\u0026 isAllZeros(exp);\n         try {\n-            if(numDecimals \u003c\u003d 7){// If number has 7 or fewer digits past the decimal point then make it a float\n                 final Float f \u003d createFloat(str);\n                 if (!(f.isInfinite() || (f.floatValue() \u003d\u003d 0.0F \u0026\u0026 !allZeros))) {\n                     return f;\n                 }\n-            }\n         } catch (final NumberFormatException nfe) { // NOPMD\n             // ignore the bad number\n         }\n         try {\n-            if(numDecimals \u003c\u003d 16){// If number has between 8 and 16 digits past the decimal point then make it a double\n                 final Double d \u003d createDouble(str);\n                 if (!(d.isInfinite() || (d.doubleValue() \u003d\u003d 0.0D \u0026\u0026 !allZeros))) {\n                     return d;\n                 }\n-            }\n         } catch (final NumberFormatException nfe) { // NOPMD\n             // ignore the bad number\n         }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [22279,22295]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [22296,22569]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [22276,22569]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [22707,22724]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [22725,23008]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [22704,23008]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}