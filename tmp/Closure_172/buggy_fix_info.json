{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.TypeCheckTest::testIssue1024",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.TypedScopeCreator",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "172",
  "workingDir": "../bugs/Closure_172_tmp",
  "bug_name": "Closure_172",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testIssue1024",
      "assertion_line": "11993",
      "exception": "junit.framework.AssertionFailedError",
      "message": "unexpected warnings(s):"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "src/com/google/javascript/jscomp/TypedScopeCreator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$AbstractScopeBuilder:isQualifiedNameInferred:[String qName, Node n, JSDocInfo info, Node rhsValue, JSType valueType]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypedScopeCreator\\$AbstractScopeBuilder:isQualifiedNameInferred:[String qName, Node n, JSDocInfo info, Node rhsValue, JSType valueType]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1670",
            "1671",
            "1672",
            "1673",
            "1674",
            "1676"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "1669"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java\nindex 4acb363..d5a5947 100644\n--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java\n+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java\n@@ -1667,13 +1667,7 @@\n \n       // Prototypes of constructors and interfaces are always declared.\n       if (qName !\u003d null \u0026\u0026 qName.endsWith(\".prototype\")) {\n-        String className \u003d qName.substring(0, qName.lastIndexOf(\".prototype\"));\n-        Var slot \u003d scope.getSlot(className);\n-        JSType classType \u003d slot \u003d\u003d null ? null : slot.getType();\n-        if (classType !\u003d null\n-            \u0026\u0026 (classType.isConstructor() || classType.isInterface())) {\n           return false;\n-        }\n       }\n \n       boolean inferred \u003d true;\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [63768,63839]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [63848,63884]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [63893,63949]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [63962,64049]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [64051,64086]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [63958,64086]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}