{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jfree.data.xy.junit.XYSeriesTests::testBug1955483",
    "test.dir": "tests",
    "clz.modified": "org.jfree.data.xy.XYSeries",
    "src.dir": "source"
  },
  "timeoutSecond": 100,
  "proj": "Chart",
  "id": "5",
  "workingDir": "../bugs/Chart_5_tmp",
  "bug_name": "Chart_5",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jfree.data.xy.junit.XYSeriesTests",
      "test_function": "testBug1955483",
      "assertion_line": "479",
      "exception": "java.lang.IndexOutOfBoundsException",
      "message": "Index: -1, Size: 1"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "source/org/jfree/data/xy/XYSeries.java",
        "source/org/jfree/data/xy/XYSeries.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jfree.data.xy.XYSeries:addOrUpdate:[Number x, Number y]:XYDataItem"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jfree.data.xy.XYSeries:addOrUpdate:[Number x, Number y]:XYDataItem"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "544",
            "545",
            "546",
            "547",
            "552"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "548"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/source/org/jfree/data/xy/XYSeries.java b/source/org/jfree/data/xy/XYSeries.java\nindex b26e11e..0b37e6e 100644\n--- a/source/org/jfree/data/xy/XYSeries.java\n+++ b/source/org/jfree/data/xy/XYSeries.java\n@@ -541,15 +541,11 @@\n         if (x \u003d\u003d null) {\r\n             throw new IllegalArgumentException(\"Null \u0027x\u0027 argument.\");\r\n         }\r\n-        if (this.allowDuplicateXValues) {\r\n-            add(x, y);\r\n-            return null;\r\n-        }\r\n \r\n         // if we get to here, we know that duplicate X values are not permitted\r\n         XYDataItem overwritten \u003d null;\r\n         int index \u003d indexOf(x);\r\n-        if (index \u003e\u003d 0) {\r\n+        if (index \u003e\u003d 0 \u0026\u0026 !this.allowDuplicateXValues) {\r\n             XYDataItem existing \u003d (XYDataItem) this.data.get(index);\r\n             try {\r\n                 overwritten \u003d (XYDataItem) existing.clone();\r\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "InfixExpression [19577,19618]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [19577,19587]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [19588,19590]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "PrefixExpression [19591,19618]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "PREFIX_EXPRESSION_OPERATOR: ! [19591,19592]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [19449,19511]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [19681,19691]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [19677,20739]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}