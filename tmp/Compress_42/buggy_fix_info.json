{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest::isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.zip.UnixStat,org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "42",
  "workingDir": "../bugs/Compress_42_tmp",
  "bug_name": "Compress_42",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest",
      "test_function": "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet",
      "assertion_line": "280",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java",
        "src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "35"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "34"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java b/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java\nindex a1b20be..8fc3606 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/UnixStat.java\n@@ -32,7 +32,6 @@\n      * Bits used to indicate the filesystem object type.\n      * @since 1.14\n      */\n-    int FILE_TYPE_FLAG \u003d 0170000;\n     /**\n      * Indicates symbolic links.\n      */\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "FieldDeclaration [1095,1216]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java",
        "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:isUnixSymlink:[]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:isUnixSymlink:[]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "297"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "297"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\nindex 2abd22b..5030da5 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n@@ -294,7 +294,7 @@\n      * @return true if the entry represents a unix symlink, false otherwise.\n      */\n     public boolean isUnixSymlink() {\n-        return (getUnixMode() \u0026 UnixStat.FILE_TYPE_FLAG) \u003d\u003d UnixStat.LINK_FLAG;\n+        return (getUnixMode() \u0026 UnixStat.LINK_FLAG) \u003d\u003d UnixStat.LINK_FLAG;\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}