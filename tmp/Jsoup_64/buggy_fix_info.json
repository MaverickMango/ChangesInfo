{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.parser.HtmlParserTest::handlesKnownEmptyStyle,org.jsoup.parser.HtmlParserTest::handlesKnownEmptyNoFrames",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.parser.HtmlTreeBuilderState",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "64",
  "workingDir": "../bugs/Jsoup_64_tmp",
  "bug_name": "Jsoup_64",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.parser.HtmlParserTest",
      "test_function": "handlesKnownEmptyStyle",
      "assertion_line": "376",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c...ead\u003e\u003cstyle\u003e\u003c/style\u003e\u003c[meta name\u003d\"foo\"\u003e\u003c/head\u003e\u003cbody\u003eOne]\u003c/body\u003e\u003c/html\u003e\u003e but was:\u003c...ead\u003e\u003cstyle\u003e\u003c/style\u003e\u003c[/head\u003e\u003cbody\u003e\u0026lt;meta name\u003dfoo\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;One\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;]\u003c/body\u003e\u003c/html\u003e\u003e"
    },
    {
      "test_class": "org.jsoup.parser.HtmlParserTest",
      "test_function": "handlesKnownEmptyNoFrames",
      "assertion_line": "370",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c...oframes\u003e\u003c/noframes\u003e\u003c[meta name\u003d\"foo\"\u003e\u003c/head\u003e\u003cbody\u003eOne]\u003c/body\u003e\u003c/html\u003e\u003e but was:\u003c...oframes\u003e\u003c/noframes\u003e\u003c[/head\u003e\u003cbody\u003e\u0026lt;meta name\u003dfoo\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;One\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;]\u003c/body\u003e\u003c/html\u003e\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1492"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "1489"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\nindex a9a9583..f4b56f7 100644\n--- a/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n+++ b/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java\n@@ -1486,10 +1486,10 @@\n     }\n \n     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n+        tb.insert(startTag);\n         tb.tokeniser.transition(TokeniserState.Rawtext);\n         tb.markInsertionMode();\n         tb.transition(Text);\n-        tb.insert(startTag);\n     }\n \n     // lists of tags to search through. A little harder to read here, but causes less GC than dynamic varargs.\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}