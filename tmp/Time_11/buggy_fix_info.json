{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.joda.time.tz.TestCompiler::testDateTimeZoneBuilder",
    "test.dir": "src/test/java",
    "clz.modified": "org.joda.time.tz.ZoneInfoCompiler",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Time",
  "id": "11",
  "workingDir": "../bugs/Time_11_tmp",
  "bug_name": "Time_11",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.joda.time.tz.TestCompiler",
      "test_function": "testDateTimeZoneBuilder",
      "assertion_line": "99",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java",
        "src/main/java/org/joda/time/tz/ZoneInfoCompiler.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "68",
            "69",
            "70",
            "71",
            "72"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "68",
            "69",
            "70",
            "71"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java b/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java\nindex 64da5ea..6efe071 100644\n--- a/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java\n+++ b/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java\n@@ -65,11 +65,10 @@\n \n     static Chronology cLenientISO;\n \n-    static ThreadLocal\u003cBoolean\u003e cVerbose \u003d new ThreadLocal\u003cBoolean\u003e() {\n-        protected Boolean initialValue() {\n-            return Boolean.FALSE;\n-        }\n-    };\n+    static ThreadLocal\u003cBoolean\u003e cVerbose \u003d new ThreadLocal\u003cBoolean\u003e();\n+    static {\n+        cVerbose.set(Boolean.FALSE);\n+    }\n \n     /**\n      * Gets a flag indicating that verbose logging is required.\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "Initializer [2367,2418]"
        },
        {
          "type": "delete-tree",
          "from": "AnonymousClassDeclaration [2362,2456]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}