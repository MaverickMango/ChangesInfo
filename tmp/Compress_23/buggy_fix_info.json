{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.sevenz.SevenZFileTest::testCompressedHeaderWithNonDefaultDictionarySize",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.sevenz.Coders",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "23",
  "workingDir": "../bugs/Compress_23_tmp",
  "bug_name": "Compress_23",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.sevenz.SevenZFileTest",
      "test_function": "testCompressedHeaderWithNonDefaultDictionarySize",
      "assertion_line": "79",
      "exception": "org.tukaani.xz.UnsupportedOptionsException",
      "message": "LZMA dictionary is too big for this implementation"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java",
        "src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.sevenz.Coders\\$LZMADecoder:decode:[final InputStream in, final Coder coder, byte[] password]:InputStream"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.sevenz.Coders\\$LZMADecoder:decode:[final InputStream in, final Coder coder, byte[] password]:InputStream"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "112"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "112"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java b/src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java\nindex 5e4f3e9..0bc5a1e 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java\n@@ -109,7 +109,7 @@\n             byte propsByte \u003d coder.properties[0];\n             long dictSize \u003d coder.properties[1];\n             for (int i \u003d 1; i \u003c 4; i++) {\n-                dictSize |\u003d (coder.properties[i + 1] \u0026 0xffl) \u003c\u003c (8 * i);\n+                dictSize |\u003d (coder.properties[i + 1] \u003c\u003c (8 * i));\n             }\n             if (dictSize \u003e LZMAInputStream.DICT_SIZE_MAX) {\n                 throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [4395,4444]"
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [4395,4452]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}