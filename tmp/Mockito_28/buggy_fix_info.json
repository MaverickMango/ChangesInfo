{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest::mock_should_be_injected_once_and_in_the_best_matching_type",
    "test.dir": "test",
    "clz.modified": "org.mockito.internal.configuration.DefaultInjectionEngine",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Mockito",
  "id": "28",
  "workingDir": "../bugs/Mockito_28_tmp",
  "bug_name": "Mockito_28",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest",
      "test_function": "mock_should_be_injected_once_and_in_the_best_matching_type",
      "assertion_line": "33",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected same:\u003cjava.lang.Object@1a6aecec\u003e was not:\u003cmockedBean\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/org/mockito/internal/configuration/DefaultInjectionEngine.java",
        "src/org/mockito/internal/configuration/DefaultInjectionEngine.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.mockito.internal.configuration.DefaultInjectionEngine:injectMockCandidate:[Class\u003c?\u003e awaitingInjectionClazz, Set\u003cObject\u003e mocks, Object fieldInstance]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.mockito.internal.configuration.DefaultInjectionEngine:injectMockCandidate:[Class\u003c?\u003e awaitingInjectionClazz, Set\u003cObject\u003e mocks, Object fieldInstance]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "93",
            "94"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "93"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\nindex 846fbf7..213ebf3 100644\n--- a/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n+++ b/src/org/mockito/internal/configuration/DefaultInjectionEngine.java\n@@ -90,8 +90,7 @@\n \r\n     private void injectMockCandidate(Class\u003c?\u003e awaitingInjectionClazz, Set\u003cObject\u003e mocks, Object fieldInstance) {\r\n         for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\r\n-            Object injected \u003d mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\r\n-            mocks.remove(injected);\r\n+            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\r\n         }\r\n     }\r\n \r\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "ExpressionStatement [3805,3883]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [3805,3811]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: injected [3812,3820]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationFragment [3812,3900]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationStatement [3805,3901]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [3915,3938]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}