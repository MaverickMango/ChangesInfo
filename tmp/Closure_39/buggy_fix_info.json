{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.rhino.jstype.RecordTypeTest::testRecursiveRecord,com.google.javascript.rhino.jstype.RecordTypeTest::testLongToString",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.rhino.jstype.PrototypeObjectType",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "39",
  "workingDir": "../bugs/Closure_39_tmp",
  "bug_name": "Closure_39",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.rhino.jstype.RecordTypeTest",
      "test_function": "testRecursiveRecord",
      "assertion_line": "59",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c{loop: [?], number: number, st...\u003e but was:\u003c{loop: [{...}], number: number, st...\u003e"
    },
    {
      "test_class": "com.google.javascript.rhino.jstype.RecordTypeTest",
      "test_function": "testLongToString",
      "assertion_line": "76",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c...number, a4: number, [a5: number, a6: number]}\u003e but was:\u003c...number, a4: number, [...]}\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java",
        "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.rhino.jstype.PrototypeObjectType:toStringHelper:[boolean forAnnotations]:String"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.rhino.jstype.PrototypeObjectType:toStringHelper:[boolean forAnnotations]:String"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "380",
            "383",
            "394"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "380",
            "383",
            "394"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\nindex f4b537d..dffe3a5 100644\n--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\n@@ -377,10 +377,10 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toStringHelper(forAnnotations));\n+        sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (!forAnnotations \u0026\u0026 i \u003d\u003d MAX_PRETTY_PRINTED_PROPERTIES) {\n+        if (i \u003d\u003d MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n         }\n@@ -391,7 +391,7 @@\n       prettyPrint \u003d true;\n       return sb.toString();\n     } else {\n-      return forAnnotations ? \"?\" : \"{...}\";\n+      return \"{...}\";\n     }\n   }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_ARGUMENTS [12151,12165]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "PrefixExpression [12195,12210]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [12211,12213]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [12195,12248]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: forAnnotations [12421,12435]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "StringLiteral: \"?\" [12438,12441]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [12421,12451]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}