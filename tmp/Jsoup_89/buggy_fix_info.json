{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.nodes.AttributeTest::settersOnOrphanAttribute",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Attribute",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "89",
  "workingDir": "../bugs/Jsoup_89_tmp",
  "bug_name": "Jsoup_89",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.nodes.AttributeTest",
      "test_function": "settersOnOrphanAttribute",
      "assertion_line": "44",
      "exception": "java.lang.NullPointerException",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Attribute.java",
        "src/main/java/org/jsoup/nodes/Attribute.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Attribute:setValue:[String val]:String"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Attribute:setValue:[String val]:String"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "88",
            "90"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "88"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Attribute.java b/src/main/java/org/jsoup/nodes/Attribute.java\nindex 8a51d10..4ff695d 100644\n--- a/src/main/java/org/jsoup/nodes/Attribute.java\n+++ b/src/main/java/org/jsoup/nodes/Attribute.java\n@@ -85,9 +85,8 @@\n      @param val the new attribute value; must not be null\n      */\n     public String setValue(String val) {\n-        String oldVal \u003d this.val;\n+        String oldVal \u003d parent.get(this.key);\n         if (parent !\u003d null) {\n-            oldVal \u003d parent.get(this.key); // trust the container more\n             int i \u003d parent.indexOfKey(this.key);\n             if (i !\u003d Attributes.NotFound)\n                 parent.vals[i] \u003d val;\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "VariableDeclarationStatement [2820,2857]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "SimpleType [2820,2826]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "VariableDeclarationFragment [2827,2856]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [2820,2845]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ASSIGNMENT_OPERATOR: \u003d [2895,2896]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Assignment [2888,2917]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ExpressionStatement [2888,2918]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}