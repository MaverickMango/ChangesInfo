{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.mockito.internal.invocation.InvocationMatcherTest::should_capture_arguments_when_args_count_does_NOT_match,org.mockito.internal.util.reflection.FieldInitializerTest::can_instantiate_class_with_parameterized_constructor,org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_report_failure_if_constructor_throws_exception,org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_fail_if_an_argument_instance_type_do_not_match_wanted_type,org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_instantiate_type_with_vararg_constructor,org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_instantiate_type_if_resolver_provide_matching_types,org.mockitousage.basicapi.ResetTest::shouldRemoveAllStubbing,org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyWithNullVarArgArray,org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyWithAnyObject,org.mockitousage.basicapi.UsingVarargsTest::shouldStubBooleanVarargs,org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg,org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyBooleanVarargs,org.mockitousage.basicapi.UsingVarargsTest::shouldStubCorrectlyWhenMixedVarargsUsed,org.mockitousage.basicapi.UsingVarargsTest::shouldStubStringVarargs,org.mockitousage.basicapi.UsingVarargsTest::shouldStubCorrectlyWhenDoubleStringAndMixedVarargsUsed,org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyStringVarargs,org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyObjectVarargs,org.mockitousage.bugs.VarargsErrorWhenCallingRealMethodTest::shouldNotThrowAnyException,org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest::shouldVerifyCorrectlyWithAnyVarargs,org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest::shouldVerifyCorrectlyNumberOfInvocationsUsingAnyVarargAndEqualArgument,org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest::shouldStubUsingAnyVarargs,org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest::shouldVerifyUsingMatchers,org.mockitousage.stubbing.BasicStubbingTest::test_stub_only_not_verifiable,org.mockitousage.stubbing.BasicStubbingTest::should_evaluate_latest_stubbing_first,org.mockitousage.stubbing.DeprecatedStubbingTest::shouldEvaluateLatestStubbingFirst,org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest::shouldUseEqualsToVerifyMethodVarargs",
    "test.dir": "test",
    "clz.modified": "org.mockito.internal.invocation.InvocationMatcher",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Mockito",
  "id": "1",
  "workingDir": "../bugs/Mockito_1_tmp",
  "bug_name": "Mockito_1",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.mockito.internal.invocation.InvocationMatcherTest",
      "test_function": "should_capture_arguments_when_args_count_does_NOT_match",
      "assertion_line": "170",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockito.internal.util.reflection.FieldInitializerTest",
      "test_function": "can_instantiate_class_with_parameterized_constructor",
      "assertion_line": "162",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
      "test_function": "should_report_failure_if_constructor_throws_exception",
      "assertion_line": "101",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
      "test_function": "should_fail_if_an_argument_instance_type_do_not_match_wanted_type",
      "assertion_line": "89",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
      "test_function": "should_instantiate_type_with_vararg_constructor",
      "assertion_line": "113",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
      "test_function": "should_instantiate_type_if_resolver_provide_matching_types",
      "assertion_line": "75",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.ResetTest",
      "test_function": "shouldRemoveAllStubbing",
      "assertion_line": "48",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldVerifyWithNullVarArgArray",
      "assertion_line": "129",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldVerifyWithAnyObject",
      "assertion_line": "121",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldStubBooleanVarargs",
      "assertion_line": "65",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldMatchEasilyEmptyVararg",
      "assertion_line": "174",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldVerifyBooleanVarargs",
      "assertion_line": "109",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldStubCorrectlyWhenMixedVarargsUsed",
      "assertion_line": "150",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldStubStringVarargs",
      "assertion_line": "41",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldStubCorrectlyWhenDoubleStringAndMixedVarargsUsed",
      "assertion_line": "163",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldVerifyStringVarargs",
      "assertion_line": "81",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.basicapi.UsingVarargsTest",
      "test_function": "shouldVerifyObjectVarargs",
      "assertion_line": "95",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.VarargsErrorWhenCallingRealMethodTest",
      "test_function": "shouldNotThrowAnyException",
      "assertion_line": "26",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest",
      "test_function": "shouldVerifyCorrectlyWithAnyVarargs",
      "assertion_line": "30",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest",
      "test_function": "shouldVerifyCorrectlyNumberOfInvocationsUsingAnyVarargAndEqualArgument",
      "assertion_line": "40",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest",
      "test_function": "shouldStubUsingAnyVarargs",
      "assertion_line": "56",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest",
      "test_function": "shouldVerifyUsingMatchers",
      "assertion_line": "65",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.stubbing.BasicStubbingTest",
      "test_function": "test_stub_only_not_verifiable",
      "assertion_line": "104",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.stubbing.BasicStubbingTest",
      "test_function": "should_evaluate_latest_stubbing_first",
      "assertion_line": "31",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.stubbing.DeprecatedStubbingTest",
      "test_function": "shouldEvaluateLatestStubbingFirst",
      "assertion_line": "31",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest",
      "test_function": "shouldUseEqualsToVerifyMethodVarargs",
      "assertion_line": "158",
      "exception": "java.lang.UnsupportedOperationException",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/org/mockito/internal/invocation/InvocationMatcher.java",
        "src/org/mockito/internal/invocation/InvocationMatcher.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.mockito.internal.invocation.InvocationMatcher:captureArgumentsFrom:[Invocation invocation]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.mockito.internal.invocation.InvocationMatcher:captureArgumentsFrom:[Invocation invocation]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "133",
            "134"
          ],
          "num": 12
        },
        {
          "qualified_names": [
            "123"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/org/mockito/internal/invocation/InvocationMatcher.java b/src/org/mockito/internal/invocation/InvocationMatcher.java\nindex d45e4c6..7b877b1 100644\n--- a/src/org/mockito/internal/invocation/InvocationMatcher.java\n+++ b/src/org/mockito/internal/invocation/InvocationMatcher.java\n@@ -120,18 +120,7 @@\n     public void captureArgumentsFrom(Invocation invocation) {\n         if (invocation.getMethod().isVarArgs()) {\n             int indexOfVararg \u003d invocation.getRawArguments().length - 1;\n-            for (int position \u003d 0; position \u003c indexOfVararg; position++) {\n-                Matcher m \u003d matchers.get(position);\n-                if (m instanceof CapturesArguments) {\n-                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n-                }\n-            }\n-            for (int position \u003d indexOfVararg; position \u003c matchers.size(); position++) {\n-                Matcher m \u003d matchers.get(position);\n-                if (m instanceof CapturesArguments) {\n-                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);\n-                }\n-            }\n+            throw new UnsupportedOperationException();\n \n         } else {\n             for (int position \u003d 0; position \u003c matchers.size(); position++) {\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ThrowStatement [4295,4337]"
        },
        {
          "type": "delete-tree",
          "from": "ForStatement [4295,4602]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ForStatement [4615,4942]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}