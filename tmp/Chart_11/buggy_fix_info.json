{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jfree.chart.util.junit.ShapeUtilitiesTests::testEqualGeneralPaths",
    "test.dir": "tests",
    "clz.modified": "org.jfree.chart.util.ShapeUtilities",
    "src.dir": "source"
  },
  "timeoutSecond": 100,
  "proj": "Chart",
  "id": "11",
  "workingDir": "../bugs/Chart_11_tmp",
  "bug_name": "Chart_11",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jfree.chart.util.junit.ShapeUtilitiesTests",
      "test_function": "testEqualGeneralPaths",
      "assertion_line": "212",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "source/org/jfree/chart/util/ShapeUtilities.java",
        "source/org/jfree/chart/util/ShapeUtilities.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jfree.chart.util.ShapeUtilities:equal:[GeneralPath p1, GeneralPath p2]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jfree.chart.util.ShapeUtilities:equal:[GeneralPath p1, GeneralPath p2]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "275"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "275"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/source/org/jfree/chart/util/ShapeUtilities.java b/source/org/jfree/chart/util/ShapeUtilities.java\nindex f49ecb5..31aa6c6 100644\n--- a/source/org/jfree/chart/util/ShapeUtilities.java\n+++ b/source/org/jfree/chart/util/ShapeUtilities.java\n@@ -272,7 +272,7 @@\n             return false;\n         }\n         PathIterator iterator1 \u003d p1.getPathIterator(null);\n-        PathIterator iterator2 \u003d p2.getPathIterator(null);\n+        PathIterator iterator2 \u003d p1.getPathIterator(null);\n         double[] d1 \u003d new double[6];\n         double[] d2 \u003d new double[6];\n         boolean done \u003d iterator1.isDone() \u0026\u0026 iterator2.isDone();\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}