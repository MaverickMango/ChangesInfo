{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest::testConstrainedRosenWithMoreInterpolationPoints",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.optimization.direct.BOBYQAOptimizer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "38",
  "workingDir": "../bugs/Math_38_tmp",
  "bug_name": "Math_38",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest",
      "test_function": "testConstrainedRosenWithMoreInterpolationPoints",
      "assertion_line": "255",
      "exception": "org.apache.commons.math.optimization.direct.BOBYQAOptimizer$PathIsExploredException",
      "message": "If this exception is thrown, just remove it from the code prelim (at line 1752)"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java",
        "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.optimization.direct.BOBYQAOptimizer:prelim:[double[] lowerBound, double[] upperBound]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.optimization.direct.BOBYQAOptimizer:prelim:[double[] lowerBound, double[] upperBound]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1660",
            "1662",
            "1663",
            "1752"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "1660",
            "1662",
            "1663",
            "1752"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java\nindex ba3fe26..592a2e8 100644\n--- a/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java\n@@ -1657,10 +1657,10 @@\n                     final int tmp2 \u003d jpt;\n                     jpt \u003d ipt - n;\n                     ipt \u003d tmp2;\n-//                     throw new PathIsExploredException(); // XXX\n+                    throw new PathIsExploredException(); // XXX\n                 }\n-                final int iptMinus1 \u003d ipt - 1;\n-                final int jptMinus1 \u003d jpt - 1;\n+                final int iptMinus1 \u003d ipt;\n+                final int jptMinus1 \u003d jpt;\n                 interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1));\n                 interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1));\n             }\n@@ -1749,7 +1749,7 @@\n                 final int ih \u003d ipt * (ipt - 1) / 2 + jpt - 1;\n                 final double tmp \u003d interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1);\n                 modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp);\n-//                 throw new PathIsExploredException(); // XXX\n+                throw new PathIsExploredException(); // XXX\n             }\n         } while (getEvaluations() \u003c npt);\n     } // prelim\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ThrowStatement [83032,83068]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ThrowStatement [77570,77606]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: - [77677,77678]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 1 [77679,77680]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [77673,77680]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: - [77724,77725]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 1 [77726,77727]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [77720,77727]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}