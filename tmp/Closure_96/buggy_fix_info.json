{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments16",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.TypeCheck",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "96",
  "workingDir": "../bugs/Closure_96_tmp",
  "bug_name": "Closure_96",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testFunctionArguments16",
      "assertion_line": "1362",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected a warning"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/TypeCheck.java",
        "src/com/google/javascript/jscomp/TypeCheck.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypeCheck:visitParameterList:[NodeTraversal t, Node call, FunctionType functionType]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypeCheck:visitParameterList:[NodeTraversal t, Node call, FunctionType functionType]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1409",
            "1410",
            "1413",
            "1415"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "1409"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/TypeCheck.java b/src/com/google/javascript/jscomp/TypeCheck.java\nindex b05fbc4..8077e0d 100644\n--- a/src/com/google/javascript/jscomp/TypeCheck.java\n+++ b/src/com/google/javascript/jscomp/TypeCheck.java\n@@ -1406,13 +1406,10 @@\n     Node parameter \u003d null;\n     Node argument \u003d null;\n     while (arguments.hasNext() \u0026\u0026\n-           (parameters.hasNext() ||\n-            parameter !\u003d null \u0026\u0026 parameter.isVarArgs())) {\n+           parameters.hasNext()) {\n       // If there are no parameters left in the list, then the while loop\n       // above implies that this must be a var_args function.\n-      if (parameters.hasNext()) {\n         parameter \u003d parameters.next();\n-      }\n       argument \u003d arguments.next();\n       ordinal++;\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: || [48361,48363]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [48376,48418]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [48340,48418]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ParenthesizedExpression [48339,48419]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [48569,48589]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [48591,48639]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [48565,48639]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}