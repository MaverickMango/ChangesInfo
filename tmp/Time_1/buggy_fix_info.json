{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.joda.time.TestPartial_Constructors::testConstructorEx7_TypeArray_intArray",
    "test.dir": "src/test/java",
    "clz.modified": "org.joda.time.field.UnsupportedDurationField,org.joda.time.Partial",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Time",
  "id": "1",
  "workingDir": "../bugs/Time_1_tmp",
  "bug_name": "Time_1",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.joda.time.TestPartial_Constructors",
      "test_function": "testConstructorEx7_TypeArray_intArray",
      "assertion_line": "284",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/joda/time/Partial.java",
        "src/main/java/org/joda/time/Partial.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.joda.time.Partial:Partial:[DateTimeFieldType[] types, int[] values, Chronology chronology]:null"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.joda.time.Partial:Partial:[DateTimeFieldType[] types, int[] values, Chronology chronology]:null"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "230"
          ],
          "num": 10
        },
        {
          "qualified_names": [
            "221"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java\nindex 6ff2771..3b84fdc 100644\n--- a/src/main/java/org/joda/time/Partial.java\n+++ b/src/main/java/org/joda/time/Partial.java\n@@ -214,20 +214,11 @@\n             DateTimeFieldType loopType \u003d types[i];\n             DurationField loopUnitField \u003d loopType.getDurationType().getField(iChronology);\n             if (i \u003e 0) {\n-                if (loopUnitField.isSupported() \u003d\u003d false) {\n-                    if (lastUnitField.isSupported()) {\n-                        throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n-                                        types[i - 1].getName() + \" \u003c \" + loopType.getName());\n-                    } else {\n-                        throw new IllegalArgumentException(\"Types array must not contain duplicate unsupported: \" +\n-                                        types[i - 1].getName() + \" and \" + loopType.getName());\n-                    }\n-                }\n                 int compare \u003d lastUnitField.compareTo(loopUnitField);\n                 if (compare \u003c 0) {\n                     throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                             types[i - 1].getName() + \" \u003c \" + loopType.getName());\n-                } else if (compare \u003d\u003d 0 \u0026\u0026 lastUnitField.equals(loopUnitField)) {\n+                } else if (compare \u003d\u003d 0) {\n                     if (types[i - 1].getRangeDurationType() \u003d\u003d null) {\n                         if (loopType.getRangeDurationType() \u003d\u003d null) {\n                             throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [8317,8901]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [9236,9238]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [9239,9274]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [9223,9274]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/joda/time/field/UnsupportedDurationField.java",
        "src/main/java/org/joda/time/field/UnsupportedDurationField.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.joda.time.field.UnsupportedDurationField:compareTo:[DurationField durationField]:int"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.joda.time.field.UnsupportedDurationField:compareTo:[DurationField durationField]:int"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "226"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "227",
            "228",
            "229"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/main/java/org/joda/time/field/UnsupportedDurationField.java b/src/main/java/org/joda/time/field/UnsupportedDurationField.java\nindex bf44e01..7e0ce57 100644\n--- a/src/main/java/org/joda/time/field/UnsupportedDurationField.java\n+++ b/src/main/java/org/joda/time/field/UnsupportedDurationField.java\n@@ -224,6 +224,9 @@\n      * @return zero always\n      */\n     public int compareTo(DurationField durationField) {\n+        if (durationField.isSupported()) {\n+            return 1;\n+        }\n         return 0;\n     }\n \n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "IfStatement [5773,5839]"
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}