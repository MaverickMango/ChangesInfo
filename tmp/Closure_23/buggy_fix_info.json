{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.PeepholeFoldConstantsTest::testFoldGetElem",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.PeepholeFoldConstants",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "23",
  "workingDir": "../bugs/Closure_23_tmp",
  "bug_name": "Closure_23",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
      "test_function": "testFoldGetElem",
      "assertion_line": "765",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Unexpected error(s): JSC_INDEX_OUT_OF_BOUNDS_ERROR. Array index out of bounds: NUMBER 0.0 1 [source_file: testcode] at testcode line 1 : 10 expected:\u003c0\u003e but was:\u003c1\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "src/com/google/javascript/jscomp/PeepholeFoldConstants.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.PeepholeFoldConstants:tryFoldArrayAccess:[Node n, Node left, Node right]:Node"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.PeepholeFoldConstants:tryFoldArrayAccess:[Node n, Node left, Node right]:Node"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1451",
            "1452",
            "1453",
            "1454",
            "1455",
            "1456",
            "1458"
          ],
          "num": 7
        },
        {
          "qualified_names": [
            "1451"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\nindex 7a0313c..f777b1c 100644\n--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\n@@ -1448,14 +1448,8 @@\n \n     Node current \u003d left.getFirstChild();\n     Node elem \u003d null;\n-    for (int i \u003d 0; current !\u003d null; i++) {\n-      if (i !\u003d intIndex) {\n-        if (mayHaveSideEffects(current)) {\n-          return n;\n-        }\n-      } else {\n+    for (int i \u003d 0; current !\u003d null \u0026\u0026 i \u003c intIndex; i++) {\n         elem \u003d current;\n-      }\n \n       current \u003d current.getNext();\n     }\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "ForStatement [40856,40977]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "VariableDeclarationExpression [40861,40870]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [40872,40903]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "PostfixExpression [40905,40908]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [40906,40919]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [40921,41003]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [41009,41042]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [40902,41042]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationExpression [40861,40870]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [40872,40887]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "PostfixExpression [40889,40892]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ForStatement [40856,41084]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}