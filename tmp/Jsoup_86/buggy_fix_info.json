{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.parser.XmlTreeBuilderTest::handlesLTinScript",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Comment",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "86",
  "workingDir": "../bugs/Jsoup_86_tmp",
  "bug_name": "Jsoup_86",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.parser.XmlTreeBuilderTest",
      "test_function": "handlesLTinScript",
      "assertion_line": "245",
      "exception": "java.lang.IndexOutOfBoundsException",
      "message": "Index: 0, Size: 0"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Comment.java",
        "src/main/java/org/jsoup/nodes/Comment.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Comment:asXmlDeclaration:[]:XmlDeclaration"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Comment:asXmlDeclaration:[]:XmlDeclaration"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "78"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "78"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Comment.java b/src/main/java/org/jsoup/nodes/Comment.java\nindex d983385..d0669fe 100644\n--- a/src/main/java/org/jsoup/nodes/Comment.java\n+++ b/src/main/java/org/jsoup/nodes/Comment.java\n@@ -75,7 +75,7 @@\n         String data \u003d getData();\n         Document doc \u003d Jsoup.parse(\"\u003c\" + data.substring(1, data.length() -1) + \"\u003e\", baseUri(), Parser.xmlParser());\n         XmlDeclaration decl \u003d null;\n-        if (doc.children().size() \u003e 0) {\n+        if (doc.childNodeSize() \u003e 0) {\n             Element el \u003d doc.child(0);\n             decl \u003d new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith(\"!\"));\n             decl.attributes().addAll(el.attributes());\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_RECEIVER [2064,2078]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: size [2079,2083]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [2064,2085]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}