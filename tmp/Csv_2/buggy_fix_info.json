{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.csv.CSVRecordTest::testGetStringInconsistentRecord",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.csv.CSVRecord",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Csv",
  "id": "2",
  "workingDir": "../bugs/Csv_2_tmp",
  "bug_name": "Csv_2",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.csv.CSVRecordTest",
      "test_function": "testGetStringInconsistentRecord",
      "assertion_line": "69",
      "exception": "java.lang.Exception",
      "message": "Unexpected exception, expected\u003cjava.lang.IllegalArgumentException\u003e but was\u003cjava.lang.ArrayIndexOutOfBoundsException\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/csv/CSVRecord.java",
        "src/main/java/org/apache/commons/csv/CSVRecord.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.csv.CSVRecord:get:[final String name]:String"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.csv.CSVRecord:get:[final String name]:String"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "85",
            "87",
            "88",
            "89",
            "90",
            "91",
            "92"
          ],
          "num": 7
        },
        {
          "qualified_names": [
            "84"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/csv/CSVRecord.java b/src/main/java/org/apache/commons/csv/CSVRecord.java\nindex fd633c2..dc52017 100644\n--- a/src/main/java/org/apache/commons/csv/CSVRecord.java\n+++ b/src/main/java/org/apache/commons/csv/CSVRecord.java\n@@ -82,14 +82,7 @@\n                     \"No header mapping was specified, the record values can\u0027t be accessed by name\");\n         }\n         final Integer index \u003d mapping.get(name);\n-        try {\n             return index !\u003d null ? values[index.intValue()] : null;\n-        } catch (ArrayIndexOutOfBoundsException e) {\n-            throw new IllegalArgumentException(\n-                    String.format(\n-                            \"Index for header \u0027%s\u0027 is %d but CSVRecord only has %d values!\",\n-                            name, index.intValue(), values.length));\n-        }\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [2772,2851]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "CatchClause [2852,3149]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "TryStatement [2768,3149]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}