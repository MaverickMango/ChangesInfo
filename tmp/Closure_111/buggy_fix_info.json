{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest::testGoogIsArray2",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "111",
  "workingDir": "../bugs/Closure_111_tmp",
  "bug_name": "Closure_111",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest",
      "test_function": "testGoogIsArray2",
      "assertion_line": "206",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected: Array"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java",
        "src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [],
          "num": 0
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "54",
            "55"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "54"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\nindex e3c599d..1706e34 100644\n--- a/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n+++ b/src/com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java\n@@ -51,8 +51,7 @@\n       new RestrictByTrueTypeOfResultVisitor() {\n         @Override\n         protected JSType caseTopType(JSType topType) {\n-          return topType.isAllType() ?\n-              getNativeType(ARRAY_TYPE) : topType;\n+          return topType;\n         }\n \n         @Override\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [2131,2150]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [2167,2192]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [2131,2202]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}