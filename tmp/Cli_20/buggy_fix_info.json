{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.cli.PosixParserTest::testStop3",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.cli.PosixParser",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Cli",
  "id": "20",
  "workingDir": "../bugs/Cli_20_tmp",
  "bug_name": "Cli_20",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.cli.PosixParserTest",
      "test_function": "testStop3",
      "assertion_line": "169",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Confirm  3 extra args: 7"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/cli/PosixParser.java",
        "src/java/org/apache/commons/cli/PosixParser.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.cli.PosixParser:flatten:[Options options, String[] arguments, boolean stopAtNonOption]:String[]"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.cli.PosixParser:flatten:[Options options, String[] arguments, boolean stopAtNonOption]:String[]"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "114",
            "115",
            "116",
            "117",
            "119",
            "123",
            "124",
            "125",
            "126"
          ],
          "num": 9
        },
        {
          "qualified_names": [
            "114",
            "116",
            "117",
            "121"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/cli/PosixParser.java b/src/java/org/apache/commons/cli/PosixParser.java\nindex a93b73f..7998f07 100644\n--- a/src/java/org/apache/commons/cli/PosixParser.java\n+++ b/src/java/org/apache/commons/cli/PosixParser.java\n@@ -111,19 +111,14 @@\n             // handle long option --foo or --foo\u003dbar\n             if (token.startsWith(\"--\"))\n             {\n-                int pos \u003d token.indexOf(\u0027\u003d\u0027);\n-                String opt \u003d pos \u003d\u003d -1 ? token : token.substring(0, pos); // --foo\n-\n-                if (!options.hasOption(opt) \u0026\u0026 stopAtNonOption)\n+                if (token.indexOf(\u0027\u003d\u0027) !\u003d -1)\n                 {\n-                    process(token);\n+                    tokens.add(token.substring(0, token.indexOf(\u0027\u003d\u0027)));\n+                    tokens.add(token.substring(token.indexOf(\u0027\u003d\u0027) + 1, token.length()));\n                 }\n                 else\n                 {\n-                    tokens.add(opt);\n-                    if (pos !\u003d -1) {\n-                        tokens.add(token.substring(pos + 1));\n-                    }\n+                    tokens.add(token);\n                 }\n             }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodInvocation [4543,4561]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [4825,4843]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "NumberLiteral: 1 [4566,4567]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodInvocation [4618,4656]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "MethodInvocation [4730,4744]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "PrimitiveType: int [4539,4542]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: pos [4543,4546]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationFragment [4543,4567]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "VariableDeclarationStatement [4539,4568]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [4585,4642]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [4674,4696]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: stopAtNonOption [4700,4715]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: opt [4859,4862]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: pos [4953,4956]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [4755,4770]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [4889,4898]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [4900,4985]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [4885,4985]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}