{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.joda.time.chrono.TestGJChronology::testLeapYearRulesConstruction",
    "test.dir": "src/test/java",
    "clz.modified": "org.joda.time.chrono.GJChronology",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Time",
  "id": "18",
  "workingDir": "../bugs/Time_18_tmp",
  "bug_name": "Time_18",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.joda.time.chrono.TestGJChronology",
      "test_function": "testLeapYearRulesConstruction",
      "assertion_line": "496",
      "exception": "org.joda.time.IllegalFieldValueException",
      "message": "Value 29 for dayOfMonth must be in the range [1,28]"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/joda/time/chrono/GJChronology.java",
        "src/main/java/org/joda/time/chrono/GJChronology.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.joda.time.chrono.GJChronology:getDateTimeMillis:[int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond]:long"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.joda.time.chrono.GJChronology:getDateTimeMillis:[int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond]:long"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "364",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378"
          ],
          "num": 12
        },
        {
          "qualified_names": [
            "363"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/joda/time/chrono/GJChronology.java b/src/main/java/org/joda/time/chrono/GJChronology.java\nindex 0a19aa6..29e559d 100644\n--- a/src/main/java/org/joda/time/chrono/GJChronology.java\n+++ b/src/main/java/org/joda/time/chrono/GJChronology.java\n@@ -361,21 +361,9 @@\n \n         // Assume date is Gregorian.\n         long instant;\n-        try {\n             instant \u003d iGregorianChronology.getDateTimeMillis\n                 (year, monthOfYear, dayOfMonth,\n                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-        } catch (IllegalFieldValueException ex) {\n-            if (monthOfYear !\u003d 2 || dayOfMonth !\u003d 29) {\n-                throw ex;\n-            }\n-            instant \u003d iGregorianChronology.getDateTimeMillis\n-                (year, monthOfYear, 28,\n-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n-            if (instant \u003e\u003d iCutoverMillis) {\n-                throw ex;\n-            }\n-        }\n         if (instant \u003c iCutoverMillis) {\n             // Maybe it\u0027s Julian.\n             instant \u003d iJulianChronology.getDateTimeMillis\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [13622,13817]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "CatchClause [13818,14224]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "TryStatement [13618,14224]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}