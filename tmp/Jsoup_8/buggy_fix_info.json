{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.nodes.ElementTest::parentlessToString",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Node",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "8",
  "workingDir": "../bugs/Jsoup_8_tmp",
  "bug_name": "Jsoup_8",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.nodes.ElementTest",
      "test_function": "parentlessToString",
      "assertion_line": "422",
      "exception": "java.lang.NullPointerException",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Node.java",
        "src/main/java/org/jsoup/nodes/Node.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Node:outerHtml:[StringBuilder accum]:void",
            "org.jsoup.nodes.Node:getOutputSettings:[]:Document.OutputSettings"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Node:outerHtml:[StringBuilder accum]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "363",
            "367",
            "368",
            "369"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "363"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Node.java b/src/main/java/org/jsoup/nodes/Node.java\nindex 71e6ff0..084ce12 100644\n--- a/src/main/java/org/jsoup/nodes/Node.java\n+++ b/src/main/java/org/jsoup/nodes/Node.java\n@@ -360,13 +360,10 @@\n     }\n \n     protected void outerHtml(StringBuilder accum) {\n-        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(this);\n+        new NodeTraversor(new OuterHtmlVisitor(accum, ownerDocument().outputSettings())).traverse(this);\n     }\n \n     // if this node has no document (or parent), retrieve the default output settings\n-    private Document.OutputSettings getOutputSettings() {\n-        return ownerDocument() !\u003d null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();\n-    }\n \n     /**\n      Get the outer HTML of this node.\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Modifier: private [11483,11490]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [11491,11514]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: getOutputSettings [11515,11532]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [11552,11575]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [11613,11648]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [11552,11648]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ReturnStatement [11545,11649]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [11535,11655]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodDeclaration [11483,11655]",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "multi-move-tree",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [
        "org.jsoup.nodes.Node:getOutputSettings:[]:Document.OutputSettings"
      ],
      "num": 1
    }
  }
}