{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.joda.time.TestDuration_Basics::testToPeriod_fixedZone,org.joda.time.TestPeriod_Constructors::testConstructor_long_fixedZone",
    "test.dir": "src/test/java",
    "clz.modified": "org.joda.time.base.BasePeriod",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Time",
  "id": "22",
  "workingDir": "../bugs/Time_22_tmp",
  "bug_name": "Time_22",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.joda.time.TestDuration_Basics",
      "test_function": "testToPeriod_fixedZone",
      "assertion_line": "483",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c0\u003e but was:\u003c64\u003e"
    },
    {
      "test_class": "org.joda.time.TestPeriod_Constructors",
      "test_function": "testConstructor_long_fixedZone",
      "assertion_line": "188",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c0\u003e but was:\u003c64\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/joda/time/base/BasePeriod.java",
        "src/main/java/org/joda/time/base/BasePeriod.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.joda.time.base.BasePeriod:BasePeriod:[long duration]:null"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.joda.time.base.BasePeriod:BasePeriod:[long duration]:null"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "222",
            "224",
            "225",
            "226",
            "227",
            "228"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "222"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/joda/time/base/BasePeriod.java b/src/main/java/org/joda/time/base/BasePeriod.java\nindex a5dcb74..679b734 100644\n--- a/src/main/java/org/joda/time/base/BasePeriod.java\n+++ b/src/main/java/org/joda/time/base/BasePeriod.java\n@@ -219,13 +219,8 @@\n      * @param duration  the duration, in milliseconds\n      */\n     protected BasePeriod(long duration) {\n-        super();\n+        this(duration, null, null);\n         // bug [3264409]\n-        iType \u003d PeriodType.time();\n-        int[] values \u003d ISOChronology.getInstanceUTC().get(this, duration);\n-        iType \u003d PeriodType.standard();\n-        iValues \u003d new int[8];\n-        System.arraycopy(values, 0, iValues, 4, 4);\n     }\n \n     /**\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ConstructorInvocation [9862,9889]"
        },
        {
          "type": "delete-node",
          "from": "SuperConstructorInvocation [9862,9870]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [9904,9930]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [9939,10005]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [10014,10044]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [10053,10074]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [10083,10126]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}