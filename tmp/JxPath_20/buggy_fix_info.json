{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.jxpath.ri.compiler.JXPath149Test::testComplexOperationWithVariables",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "JxPath",
  "id": "20",
  "workingDir": "../bugs/JxPath_20_tmp",
  "bug_name": "JxPath_20",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.jxpath.ri.compiler.JXPath149Test",
      "test_function": "testComplexOperationWithVariables",
      "assertion_line": "29",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Evaluating \u003c$a + $b \u003c\u003d $c\u003e expected:\u003ctrue\u003e but was:\u003cfalse\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java",
        "src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression:compute:[Object left, Object right]:boolean",
            "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression:containsMatch:[Object value, Iterator it]:boolean"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression:compute:[Object left, Object right]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "88",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "num": 10
        },
        {
          "qualified_names": [
            "88",
            "137"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java\nindex 2e68f5a..65ed1ed 100644\n--- a/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java\n+++ b/src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java\n@@ -85,7 +85,7 @@\n             return containsMatch((Iterator) left, right);\n         }\n         if (right instanceof Iterator) {\n-            return containsMatch(left, (Iterator) right);\n+            return containsMatch((Iterator) right, left);\n         }\n         double ld \u003d InfoSetUtil.doubleValue(left);\n         if (Double.isNaN(ld)) {\n@@ -135,15 +135,6 @@\n      * @param value to look for\n      * @return whether a match was found\n      */\n-    private boolean containsMatch(Object value, Iterator it) {\n-        while (it.hasNext()) {\n-            Object element \u003d it.next();\n-            if (compute(value, element)) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n \n     /**\n      * Learn whether there is an intersection between two Iterators.\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [4205,4655]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [
        "org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression:containsMatch:[Object value, Iterator it]:boolean"
      ],
      "num": 1
    }
  }
}