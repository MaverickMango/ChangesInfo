{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.jsontype.TypeRefinementForMapTest::testMapKeyRefinement1384",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.type.TypeFactory",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "59",
  "workingDir": "../bugs/JacksonDatabind_59_tmp",
  "bug_name": "JacksonDatabind_59",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.jsontype.TypeRefinementForMapTest",
      "test_function": "testMapKeyRefinement1384",
      "assertion_line": "125",
      "exception": "com.fasterxml.jackson.databind.JsonMappingException",
      "message": "Can not find a (Map) Key deserializer for type [simple type, class com.fasterxml.jackson.databind.jsontype.TypeRefinementForMapTest$CompoundKey]"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/JavaType.java",
        "src/main/java/com/fasterxml/jackson/databind/JavaType.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.JavaType:withHandlersFrom:[JavaType src]:JavaType"
          ],
          "num": 1
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151"
          ],
          "num": 12
        },
        {
          "qualified_names": [
            "139"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/JavaType.java b/src/main/java/com/fasterxml/jackson/databind/JavaType.java\nindex 292cc39..4ac467b 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/JavaType.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/JavaType.java\n@@ -137,18 +137,6 @@\n      *\n      * @since 2.8.4\n      */\n-    public JavaType withHandlersFrom(JavaType src) {\n-        JavaType type \u003d this;\n-        Object h \u003d src.getTypeHandler();\n-        if (h !\u003d _typeHandler) {\n-            type \u003d type.withTypeHandler(h);\n-        }\n-        h \u003d src.getValueHandler();\n-        if (h !\u003d _valueHandler) {\n-            type \u003d type.withValueHandler(h);\n-        }\n-        return type;\n-    }\n \n     /**\n      * Mutant factory method that may be called on structured types\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [4387,4998]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java",
        "src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.type.CollectionLikeType:withHandlersFrom:[JavaType src]:JavaType"
          ],
          "num": 1
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147"
          ],
          "num": 12
        },
        {
          "qualified_names": [
            "135"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java b/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java\nindex f355160..be19bdf 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/CollectionLikeType.java\n@@ -133,18 +133,6 @@\n                 _valueHandler, _typeHandler, _asStatic);\n     }\n \n-    @Override\n-    public JavaType withHandlersFrom(JavaType src) {\n-        JavaType type \u003d super.withHandlersFrom(src);\n-        JavaType srcCt \u003d src.getContentType();\n-        if (srcCt !\u003d null) {\n-            JavaType ct \u003d _elementType.withHandlersFrom(srcCt);\n-            if (ct !\u003d _elementType) {\n-                type \u003d type.withContentType(ct);\n-            }\n-        }\n-        return type;\n-    }\n     \n     @Override\n     public CollectionLikeType withStaticTyping() {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [4854,5247]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java",
        "src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.type.MapLikeType:withHandlersFrom:[JavaType src]:JavaType"
          ],
          "num": 1
        },
        {
          "qualified_names": [],
          "num": 0
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "148",
            "149",
            "150",
            "151",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169"
          ],
          "num": 21
        },
        {
          "qualified_names": [
            "147"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java b/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java\nindex f1d1ee0..e10ae4c 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/MapLikeType.java\n@@ -145,28 +145,7 @@\n                 _valueHandler, _typeHandler, _asStatic);\n     }\n \n-    @Override\n-    public JavaType withHandlersFrom(JavaType src) {\n-        JavaType type \u003d super.withHandlersFrom(src);\n-        JavaType srcKeyType \u003d src.getKeyType();\n         // \"withKeyType()\" not part of JavaType, hence must verify:\n-        if (type instanceof MapLikeType) {\n-            if (srcKeyType !\u003d null) {\n-                JavaType ct \u003d _keyType.withHandlersFrom(srcKeyType);\n-                if (ct !\u003d _keyType) {\n-                    type \u003d ((MapLikeType) type).withKeyType(ct);\n-                }\n-            }\n-        }\n-        JavaType srcCt \u003d src.getContentType();\n-        if (srcCt !\u003d null) {\n-            JavaType ct \u003d _valueType.withHandlersFrom(srcCt);\n-            if (ct !\u003d _valueType) {\n-                type \u003d type.withContentType(ct);\n-            }\n-        }\n-        return type;\n-    }\n \n     @Override\n     public MapLikeType withStaticTyping() {\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [5075,5875]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java",
        "src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.type.TypeFactory:constructSpecializedType:[JavaType baseType, Class\u003c?\u003e subclass]:JavaType"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.type.TypeFactory:constructSpecializedType:[JavaType baseType, Class\u003c?\u003e subclass]:JavaType"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "428"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "427"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\nindex b8acda8..8bf10e8 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java\n@@ -425,7 +425,6 @@\n \n         // 25-Sep-2016, tatu: As per [databind#1384] also need to ensure handlers get\n         //   copied as well\n-        newType \u003d newType.withHandlersFrom(baseType);\n         return newType;\n \n         // 20-Oct-2015, tatu: Old simplistic approach\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [16630,16675]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [
        "com.fasterxml.jackson.databind.type.MapLikeType:withHandlersFrom:[JavaType src]:JavaType",
        "com.fasterxml.jackson.databind.type.CollectionLikeType:withHandlersFrom:[JavaType src]:JavaType",
        "com.fasterxml.jackson.databind.JavaType:withHandlersFrom:[JavaType src]:JavaType"
      ],
      "num": 3
    }
  }
}