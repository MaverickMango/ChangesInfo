{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.nodes.EntitiesTest::escape,org.jsoup.nodes.EntitiesTest::caseSensitive",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.nodes.Entities",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "4",
  "workingDir": "../bugs/Jsoup_4_tmp",
  "bug_name": "Jsoup_4",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.nodes.EntitiesTest",
      "test_function": "escape",
      "assertion_line": "17",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c...ello \u0026amp;\u0026lt;\u0026gt; \u0026[A]ring; \u0026aring; \u0026#960;...\u003e but was:\u003c...ello \u0026amp;\u0026lt;\u0026gt; \u0026[a]ring; \u0026aring; \u0026#960;...\u003e"
    },
    {
      "test_class": "org.jsoup.nodes.EntitiesTest",
      "test_function": "caseSensitive",
      "assertion_line": "32",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c\u0026[U]uml; \u0026uuml; \u0026amp; \u0026a...\u003e but was:\u003c\u0026[u]uml; \u0026uuml; \u0026amp; \u0026a...\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/nodes/Entities.java",
        "src/main/java/org/jsoup/nodes/Entities.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.nodes.Entities:unescape:[String string]:String"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.nodes.Entities:unescape:[String string]:String"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "64",
            "2235",
            "2240"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "64",
            "2235",
            "2240"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/nodes/Entities.java b/src/main/java/org/jsoup/nodes/Entities.java\nindex ad825d3..4d016ff 100644\n--- a/src/main/java/org/jsoup/nodes/Entities.java\n+++ b/src/main/java/org/jsoup/nodes/Entities.java\n@@ -61,7 +61,7 @@\n                 } catch (NumberFormatException e) {\n                 } // skip\n             } else {\n-                String name \u003d m.group(1);\n+                String name \u003d m.group(1).toLowerCase();\n                 if (full.containsKey(name))\n                     charval \u003d full.get(name);\n             }\n@@ -2232,12 +2232,12 @@\n \n         for (Object[] entity : baseArray) {\n             Character c \u003d Character.valueOf((char) ((Integer) entity[1]).intValue());\n-            baseByVal.put(c, ((String) entity[0]));\n+            baseByVal.put(c, ((String) entity[0]).toLowerCase());\n         }\n         for (Object[] entity : fullArray) {\n             Character c \u003d Character.valueOf((char) ((Integer) entity[1]).intValue());\n             full.put((String) entity[0], c);\n-            fullByVal.put(c, ((String) entity[0]));\n+            fullByVal.put(c, ((String) entity[0]).toLowerCase());\n         }\n     }\n \n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "MethodInvocation [75163,75197]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "MethodInvocation [75414,75448]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "MethodInvocation [2349,2373]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "METHOD_INVOCATION_RECEIVER [75163,75183]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: toLowerCase [75184,75195]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "METHOD_INVOCATION_RECEIVER [75414,75434]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: toLowerCase [75435,75446]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "METHOD_INVOCATION_RECEIVER [2349,2359]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "SimpleName: toLowerCase [2360,2371]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}