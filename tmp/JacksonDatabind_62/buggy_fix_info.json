{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.creators.ArrayDelegatorCreatorForCollectionTest::testUnmodifiable",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "62",
  "workingDir": "../bugs/JacksonDatabind_62_tmp",
  "bug_name": "JacksonDatabind_62",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.creators.ArrayDelegatorCreatorForCollectionTest",
      "test_function": "testUnmodifiable",
      "assertion_line": "28",
      "exception": "java.lang.IllegalStateException",
      "message": "No default constructor for [collection type; class java.util.Collections$UnmodifiableSet, contains [simple type, class java.lang.Object]]"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer:createContextual:[DeserializationContext ctxt, BeanProperty property]:CollectionDeserializer"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer:createContextual:[DeserializationContext ctxt, BeanProperty property]:CollectionDeserializer"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "184",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191"
          ],
          "num": 8
        },
        {
          "qualified_names": [
            "183"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java\nindex 33d8878..7f58b7a 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java\n@@ -181,14 +181,6 @@\n                             +\") returned true for \u0027canCreateUsingDelegate()\u0027, but null for \u0027getDelegateType()\u0027\");\n                 }\n                 delegateDeser \u003d findDeserializer(ctxt, delegateType, property);\n-            } else if (_valueInstantiator.canCreateUsingArrayDelegate()) {\n-                JavaType delegateType \u003d _valueInstantiator.getArrayDelegateType(ctxt.getConfig());\n-                if (delegateType \u003d\u003d null) {\n-                    throw new IllegalArgumentException(\"Invalid array-delegate-creator definition for \"+_collectionType\n-                            +\": value instantiator (\"+_valueInstantiator.getClass().getName()\n-                            +\") returned true for \u0027canCreateUsingArrayDelegate()\u0027, but null for \u0027getArrayDelegateType()\u0027\");\n-                }\n-                delegateDeser \u003d findDeserializer(ctxt, delegateType, property);\n             }\n         }\n         // [databind#1043]: allow per-property allow-wrapping of single overrides:\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [7019,7667]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}