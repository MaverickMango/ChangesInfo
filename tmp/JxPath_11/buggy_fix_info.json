{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest::testNamespaceMapping,org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest::testNamespaceMapping",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator,org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "JxPath",
  "id": "11",
  "workingDir": "../bugs/JxPath_11_tmp",
  "bug_name": "JxPath_11",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
      "test_function": "testNamespaceMapping",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Evaluating \u003cvendor[1]/product[1]/rate:amount[1]/@rate:discount\u003e expected:\u003c10%\u003e but was:\u003c20%\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java",
        "src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator:getAttribute:[Element element, QName name]:Attr"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator:getAttribute:[Element element, QName name]:Attr"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "22",
            "112",
            "113",
            "114"
          ],
          "num": 4
        },
        {
          "qualified_names": [
            "21",
            "111"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java\nindex f9785f6..f4c2ac6 100644\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java\n@@ -19,7 +19,6 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-import org.apache.commons.jxpath.ri.NamespaceResolver;\n import org.apache.commons.jxpath.ri.QName;\n import org.apache.commons.jxpath.ri.model.NodeIterator;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n@@ -109,9 +108,7 @@\n         String testNS \u003d null;\n \n         if (testPrefix !\u003d null) {\n-            NamespaceResolver nsr \u003d parent.getNamespaceResolver();\n-            testNS \u003d nsr \u003d\u003d null ? null : nsr.getNamespaceURI(testPrefix);\n-            testNS \u003d testNS \u003d\u003d null ? parent.getNamespaceURI(testPrefix) : testNS;\n+            testNS \u003d parent.getNamespaceURI(testPrefix);\n         }\n \n         if (testNS !\u003d null) {\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [903,957]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [3782,3836]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [3849,3911]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [3933,3947]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: testNS [3987,3993]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [3933,3993]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java",
        "src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator:JDOMAttributeIterator:[NodePointer parent, QName name]:null"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator:JDOMAttributeIterator:[NodePointer parent, QName name]:null"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "23",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "67",
            "124"
          ],
          "num": 11
        },
        {
          "qualified_names": [
            "22",
            "53",
            "133"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java\nindex 84c0afd..cfa6da3 100644\n--- a/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java\n@@ -20,7 +20,6 @@\n import java.util.Collections;\n import java.util.List;\n \n-import org.apache.commons.jxpath.ri.NamespaceResolver;\n import org.apache.commons.jxpath.ri.QName;\n import org.apache.commons.jxpath.ri.model.NodeIterator;\n import org.apache.commons.jxpath.ri.model.NodePointer;\n@@ -50,21 +49,12 @@\n                     ns \u003d Namespace.XML_NAMESPACE;\n                 }\n                 else {\n-                    NamespaceResolver nsr \u003d parent.getNamespaceResolver();\n-                    if (nsr !\u003d null) {\n-                        String uri \u003d nsr.getNamespaceURI(prefix);\n-                        if (uri !\u003d null) {\n-                            ns \u003d Namespace.getNamespace(prefix, uri);\n-                        }\n-                    }\n-                    if (ns \u003d\u003d null) {\n                         ns \u003d element.getNamespace(prefix);\n                         if (ns \u003d\u003d null) {\n                             // TBD: no attributes\n                             attributes \u003d Collections.EMPTY_LIST;\n                             return;\n                         }\n-                    }\n                 }\n             }\n             else {\n@@ -121,4 +111,4 @@\n         this.position \u003d position;\n         return position \u003e\u003d 1 \u0026\u0026 position \u003c\u003d attributes.size();\n     }\n-}\n\\ No newline at end of file\n+}\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [934,988]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [1963,2017]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [2038,2283]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [2308,2318]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [2320,2621]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [2304,2621]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}