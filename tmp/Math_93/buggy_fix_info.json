{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.util.MathUtilsTest::testFactorial",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.math.util.MathUtils",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "93",
  "workingDir": "../bugs/Math_93_tmp",
  "bug_name": "Math_93",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.util.MathUtilsTest",
      "test_function": "testFactorial",
      "assertion_line": "237",
      "exception": "junit.framework.AssertionFailedError",
      "message": "17!  expected:\u003c3.55687428096E14\u003e but was:\u003c3.55687428096001E14\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/math/util/MathUtils.java",
        "src/java/org/apache/commons/math/util/MathUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.util.MathUtils:factorialDouble:[final int n]:double",
            "org.apache.commons.math.util.MathUtils:factorial:[final int n]:long",
            "org.apache.commons.math.util.MathUtils:factorialLog:[final int n]:double"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "org.apache.commons.math.util.MathUtils:factorial:[final int n]:long",
            "org.apache.commons.math.util.MathUtils:factorialLog:[final int n]:double",
            "org.apache.commons.math.util.MathUtils:gcd:[int u, int v]:int"
          ],
          "num": 3
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "345",
            "346",
            "347",
            "348",
            "379",
            "380",
            "381",
            "402",
            "403",
            "404"
          ],
          "num": 10
        },
        {
          "qualified_names": [
            "345",
            "346",
            "380",
            "406"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java\nindex 1389d5a..7d8aa4d 100644\n--- a/src/java/org/apache/commons/math/util/MathUtils.java\n+++ b/src/java/org/apache/commons/math/util/MathUtils.java\n@@ -342,10 +342,8 @@\n      * @throws IllegalArgumentException if n \u003c 0\n      */\n     public static long factorial(final int n) {\n-        if (n \u003c 0) {\n-            throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for n!\");\n-        }\n-        if (n \u003e 20) {\n+        long result \u003d Math.round(factorialDouble(n));\n+        if (result \u003d\u003d Long.MAX_VALUE) {\n             throw new ArithmeticException(\n                     \"factorial value is too large to fit in a long\");\n         }\n@@ -376,9 +374,6 @@\n         if (n \u003c 0) {\n             throw new IllegalArgumentException(\"must have n \u003e\u003d 0 for n!\");\n         }\n-        if (n \u003c 21) {\n-            return factorial(n);\n-        }\n         return Math.floor(Math.exp(factorialLog(n)) + 0.5);\n     }\n \n@@ -399,9 +394,6 @@\n         if (n \u003c 0) {\n             throw new IllegalArgumentException(\"must have n \u003e 0 for n!\");\n         }\n-        if (n \u003c 21) {\n-            return Math.log(factorial(n));\n-        }\n         double logSum \u003d 0;\n         for (int i \u003d 2; i \u003c\u003d n; i++) {\n             logSum +\u003d Math.log((double)i);\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "VariableDeclarationStatement [11770,11815]"
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "QualifiedName: Long.MAX_VALUE [11838,11852]"
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [11770,11867]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 20 [11884,11886]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [13027,13083]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [13694,13760]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "org.apache.commons.math.util.MathUtils:gcd:[int u, int v]:int"
      ],
      "num": 1
    },
    "delete_functions": {
      "qualified_names": [
        "org.apache.commons.math.util.MathUtils:factorialDouble:[final int n]:double"
      ],
      "num": 1
    }
  }
}