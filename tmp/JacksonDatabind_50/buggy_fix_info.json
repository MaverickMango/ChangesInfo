{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.objectid.ObjectWithCreator1261Test::testObjectIds1261",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.deser.BeanDeserializer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "50",
  "workingDir": "../bugs/JacksonDatabind_50_tmp",
  "bug_name": "JacksonDatabind_50",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.objectid.ObjectWithCreator1261Test",
      "test_function": "testObjectIds1261",
      "assertion_line": "76",
      "exception": "com.fasterxml.jackson.databind.JsonMappingException",
      "message": "Can not deserialize instance of com.fasterxml.jackson.databind.objectid.ObjectWithCreator1261Test$Child out of START_ARRAY token"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BeanDeserializer:_deserializeUsingPropertyBased:[final JsonParser p, final DeserializationContext ctxt]:Object",
            "com.fasterxml.jackson.databind.deser.BeanDeserializer\\$BeanReferring:BeanReferring:[UnresolvedForwardReference ref, Class\u003c?\u003e valueType, PropertyValueBuffer buffer, SettableBeanProperty prop]:null",
            "com.fasterxml.jackson.databind.deser.BeanDeserializer\\$BeanReferring:handleResolvedForwardReference:[Object id, Object value]:void",
            "com.fasterxml.jackson.databind.deser.BeanDeserializer:handleUnresolvedReference:[JsonParser p, SettableBeanProperty prop, PropertyValueBuffer buffer, UnresolvedForwardReference reference]:BeanReferring",
            "com.fasterxml.jackson.databind.deser.BeanDeserializer\\$BeanReferring:setBean:[Object bean]:void"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BeanDeserializer:_deserializeUsingPropertyBased:[final JsonParser p, final DeserializationContext ctxt]:Object",
            "com.fasterxml.jackson.databind.deser.BeanDeserializer:deserializeFromNull:[JsonParser p, DeserializationContext ctxt]:Object",
            "com.fasterxml.jackson.databind.deser.BeanDeserializer:_deserializeWithErrorWrapping:[JsonParser p, DeserializationContext ctxt, SettableBeanProperty prop]:Object"
          ],
          "num": 3
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "9",
            "388",
            "431",
            "433",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "475",
            "476",
            "477",
            "478",
            "479",
            "494",
            "495",
            "496",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "958",
            "959",
            "960",
            "962",
            "963",
            "964",
            "966",
            "967",
            "968",
            "969",
            "970",
            "971",
            "973",
            "974",
            "975",
            "976",
            "977"
          ],
          "num": 42
        },
        {
          "qualified_names": [
            "8",
            "388",
            "432",
            "484",
            "508",
            "982"
          ],
          "num": 6
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\nindex 8360b51..21bd128 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n@@ -6,7 +6,6 @@\n import com.fasterxml.jackson.core.*;\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.deser.impl.*;\n-import com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring;\n import com.fasterxml.jackson.databind.util.NameTransformer;\n import com.fasterxml.jackson.databind.util.TokenBuffer;\n \n@@ -385,7 +384,6 @@\n         TokenBuffer unknown \u003d null;\n \n         JsonToken t \u003d p.getCurrentToken();\n-        List\u003cBeanReferring\u003e referrings \u003d null;\n         for (; t \u003d\u003d JsonToken.FIELD_NAME; t \u003d p.nextToken()) {\n             String propName \u003d p.getCurrentName();\n             p.nextToken(); // to point to value\n@@ -428,18 +426,10 @@\n             // regular property? needs buffering\n             SettableBeanProperty prop \u003d _beanProperties.find(propName);\n             if (prop !\u003d null) {\n-                try {\n                     buffer.bufferProperty(prop, _deserializeWithErrorWrapping(p, ctxt, prop));\n-                } catch (UnresolvedForwardReference reference) {\n                     // 14-Jun-2016, tatu: As per [databind#1261], looks like we need additional\n                     //    handling of forward references here. Not exactly sure why existing\n                     //    facilities did not cover, but this does appear to solve the problem\n-                    BeanReferring referring \u003d handleUnresolvedReference(p, prop, buffer, reference);\n-                    if (referrings \u003d\u003d null) {\n-                        referrings \u003d new ArrayList\u003cBeanReferring\u003e();\n-                    }\n-                    referrings.add(referring);\n-                }\n                 continue;\n             }\n             // Things marked as ignorable should not be passed to any setter\n@@ -472,11 +462,6 @@\n             wrapInstantiationProblem(e, ctxt);\n             bean \u003d null; // never gets here\n         }\n-        if (referrings !\u003d null) {\n-            for (BeanReferring referring : referrings) {\n-               referring.setBean(bean);\n-            }\n-        }\n         if (unknown !\u003d null) {\n             // polymorphic?\n             if (bean.getClass() !\u003d _beanType.getRawClass()) {\n@@ -491,16 +476,6 @@\n     /**\n      * @since 2.8\n      */\n-    private BeanReferring handleUnresolvedReference(JsonParser p,\n-            SettableBeanProperty prop, PropertyValueBuffer buffer,\n-            UnresolvedForwardReference reference)\n-        throws JsonMappingException\n-    {\n-        BeanReferring referring \u003d new BeanReferring(reference, prop.getType().getRawClass(),\n-                buffer, prop);\n-        reference.getRoid().appendReferring(referring);\n-        return referring;\n-    }\n \n     protected final Object _deserializeWithErrorWrapping(JsonParser p,\n             DeserializationContext ctxt, SettableBeanProperty prop)\n@@ -955,24 +930,7 @@\n     /**\n      * @since 2.8\n      */\n-    static class BeanReferring extends Referring {\n-        private final SettableBeanProperty _prop;\n-        private Object _bean;\n \n-        public void setBean(Object bean) {\n-            _bean \u003d bean;\n-        }\n \n-        BeanReferring(UnresolvedForwardReference ref,\n-                Class\u003c?\u003e valueType, PropertyValueBuffer buffer, SettableBeanProperty prop)\n-        {\n-            super(ref, valueType);\n-            _prop \u003d prop;\n-        }\n \n-        @Override\n-        public void handleResolvedForwardReference(Object id, Object value) throws IOException {\n-            _prop.set(_bean, value);\n-        }\n-    }\n }\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "Javadoc [18049,18078]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [226,302]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [14182,14220]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [16247,16361]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "CatchClause [16362,16994]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "TryStatement [16243,16994]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [18206,18352]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [18718,19184]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "TypeDeclaration [38619,39255]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "com.fasterxml.jackson.databind.deser.BeanDeserializer:deserializeFromNull:[JsonParser p, DeserializationContext ctxt]:Object",
        "com.fasterxml.jackson.databind.deser.BeanDeserializer:_deserializeWithErrorWrapping:[JsonParser p, DeserializationContext ctxt, SettableBeanProperty prop]:Object"
      ],
      "num": 2
    },
    "delete_functions": {
      "qualified_names": [
        "com.fasterxml.jackson.databind.deser.BeanDeserializer:handleUnresolvedReference:[JsonParser p, SettableBeanProperty prop, PropertyValueBuffer buffer, UnresolvedForwardReference reference]:BeanReferring",
        "com.fasterxml.jackson.databind.deser.BeanDeserializer\\$BeanReferring:BeanReferring:[UnresolvedForwardReference ref, Class\u003c?\u003e valueType, PropertyValueBuffer buffer, SettableBeanProperty prop]:null",
        "com.fasterxml.jackson.databind.deser.BeanDeserializer\\$BeanReferring:setBean:[Object bean]:void",
        "com.fasterxml.jackson.databind.deser.BeanDeserializer\\$BeanReferring:handleResolvedForwardReference:[Object id, Object value]:void"
      ],
      "num": 4
    }
  }
}