{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.CommandLineRunnerTest::testGetMsgWiringNoWarnings",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.CommandLineRunner",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "107",
  "workingDir": "../bugs/Closure_107_tmp",
  "bug_name": "Closure_107",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.CommandLineRunnerTest",
      "test_function": "testGetMsgWiringNoWarnings",
      "assertion_line": "395",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected no warnings or errors"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/CommandLineRunner.java",
        "src/com/google/javascript/jscomp/CommandLineRunner.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.CommandLineRunner:createOptions:[]:CompilerOptions"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.CommandLineRunner:createOptions:[]:CompilerOptions"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "862"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "861"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/CommandLineRunner.java b/src/com/google/javascript/jscomp/CommandLineRunner.java\nindex 3aae2e7..93b3547 100644\n--- a/src/com/google/javascript/jscomp/CommandLineRunner.java\n+++ b/src/com/google/javascript/jscomp/CommandLineRunner.java\n@@ -859,7 +859,6 @@\n       // so we might as well inline it. But shut off the i18n warnings,\n       // because the user didn\u0027t really ask for i18n.\n       options.messageBundle \u003d new EmptyMessageBundle();\n-      options.setWarningLevel(JsMessageVisitor.MSG_CONVENTIONS, CheckLevel.OFF);\n     }\n \n     return options;\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [33535,33609]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}