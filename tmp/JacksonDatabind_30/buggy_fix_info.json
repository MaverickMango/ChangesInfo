{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.jsontype.TestExternalId::testBigDecimal965",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.util.TokenBuffer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "30",
  "workingDir": "../bugs/JacksonDatabind_30_tmp",
  "bug_name": "JacksonDatabind_30",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.jsontype.TestExternalId",
      "test_function": "testBigDecimal965",
      "assertion_line": "564",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Expected BigDecimal \u003d -10000000000.0000000001; got back BigDecimal \u003d -1.0E+10"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java",
        "src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ObjectMapper:valueToTree:[Object fromValue]:T",
            "com.fasterxml.jackson.databind.ObjectMapper:_convert:[Object fromValue, JavaType toValueType]:Object"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ObjectMapper:valueToTree:[Object fromValue]:T",
            "com.fasterxml.jackson.databind.ObjectMapper:_convert:[Object fromValue, JavaType toValueType]:Object"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "2510",
            "2511",
            "2512",
            "3429",
            "3430",
            "3431"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "2509",
            "3431"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\nindex 2fd10fb..caa09c3 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java\n@@ -2507,9 +2507,6 @@\n     {\n         if (fromValue \u003d\u003d null) return null;\n         TokenBuffer buf \u003d new TokenBuffer(this, false);\n-        if (isEnabled(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS)) {\n-            buf \u003d buf.forceUseOfBigDecimal(true);\n-        }\n         JsonNode result;\n         try {\n             writeValue(buf, fromValue);\n@@ -3426,9 +3423,6 @@\n         \n         // Then use TokenBuffer, which is a JsonGenerator:\n         TokenBuffer buf \u003d new TokenBuffer(this, false);\n-        if (isEnabled(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS)) {\n-            buf \u003d buf.forceUseOfBigDecimal(true);\n-        }\n         try {\n             // inlined \u0027writeValue\u0027 with minor changes:\n             // first: disable wrapping when writing\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [97440,97567]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [135291,135418]",
          "to": ""
        }
      ]
    },
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java",
        "src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.util.TokenBuffer:forceUseOfBigDecimal:[boolean b]:TokenBuffer",
            "com.fasterxml.jackson.databind.util.TokenBuffer:TokenBuffer:[JsonParser p, DeserializationContext ctxt]:null",
            "com.fasterxml.jackson.databind.util.TokenBuffer:copyCurrentEvent:[JsonParser p]:void"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.util.TokenBuffer:copyCurrentStructure:[JsonParser jp]:void",
            "com.fasterxml.jackson.databind.util.TokenBuffer:copyCurrentEvent:[JsonParser p]:void"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "80",
            "189",
            "190",
            "196",
            "197",
            "198",
            "199",
            "966",
            "972",
            "973",
            "983"
          ],
          "num": 11
        },
        {
          "qualified_names": [
            "79",
            "189",
            "972",
            "992"
          ],
          "num": 4
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\nindex fc3600a..39d9e71 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java\n@@ -77,7 +77,6 @@\n      *\n      * @since 2.7\n      */\n-    protected boolean _forceBigDecimal;\n     \n     /*\n     /**********************************************************\n@@ -186,17 +185,11 @@\n         _hasNativeTypeIds \u003d p.canReadTypeId();\n         _hasNativeObjectIds \u003d p.canReadObjectId();\n         _mayHaveNativeIds \u003d _hasNativeTypeIds | _hasNativeObjectIds;\n-        _forceBigDecimal \u003d (ctxt \u003d\u003d null) ? false\n-                : ctxt.isEnabled(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n     }\n \n     /**\n      * @since 2.7\n      */\n-    public TokenBuffer forceUseOfBigDecimal(boolean b) {\n-        _forceBigDecimal \u003d b;\n-        return this;\n-    }\n \n     @Override\n     public Version version() {\n@@ -963,14 +956,11 @@\n             }\n             break;\n         case VALUE_NUMBER_FLOAT:\n-            if (_forceBigDecimal) {\n                 /* 10-Oct-2015, tatu: Ideally we would first determine whether underlying\n                  *   number is already decoded into a number (in which case might as well\n                  *   access as number); or is still retained as text (in which case we\n                  *   should further defer decoding that may not need BigDecimal):\n                  */\n-                writeNumber(p.getDecimalValue());\n-            } else {\n                 switch (p.getNumberType()) {\n                 case BIG_DECIMAL:\n                     writeNumber(p.getDecimalValue());\n@@ -980,7 +970,6 @@\n                     break;\n                 default:\n                     writeNumber(p.getDoubleValue());\n-                }\n             }\n             break;\n         case VALUE_TRUE:\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "Javadoc [5558,5587]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "FieldDeclaration [2196,2391]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [5595,5721]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [5733,5876]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: _forceBigDecimal [29775,29791]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [29793,30227]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [30233,30611]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [29771,30611]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [
        "com.fasterxml.jackson.databind.util.TokenBuffer:copyCurrentStructure:[JsonParser jp]:void"
      ],
      "num": 1
    },
    "delete_functions": {
      "qualified_names": [
        "com.fasterxml.jackson.databind.util.TokenBuffer:forceUseOfBigDecimal:[boolean b]:TokenBuffer",
        "com.fasterxml.jackson.databind.util.TokenBuffer:TokenBuffer:[JsonParser p, DeserializationContext ctxt]:null"
      ],
      "num": 2
    }
  }
}