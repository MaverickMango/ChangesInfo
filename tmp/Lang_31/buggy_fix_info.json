{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAnyCharArrayWithSupplementaryChars,org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAnyStringWithSupplementaryChars",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.lang3.StringUtils",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Lang",
  "id": "31",
  "workingDir": "../bugs/Lang_31_tmp",
  "bug_name": "Lang_31",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
      "test_function": "testContainsAnyCharArrayWithSupplementaryChars",
      "assertion_line": "696",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e"
    },
    {
      "test_class": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
      "test_function": "testContainsAnyStringWithSupplementaryChars",
      "assertion_line": "680",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cfalse\u003e but was:\u003ctrue\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "src/main/java/org/apache/commons/lang3/StringUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.lang3.StringUtils:containsAny:[CharSequence cs, char[] searchChars]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.lang3.StringUtils:containsAny:[CharSequence cs, char[] searchChars]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1446",
            "1447",
            "1452",
            "1454",
            "1455",
            "1456",
            "1457",
            "1460"
          ],
          "num": 8
        },
        {
          "qualified_names": [
            "1445"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/lang3/StringUtils.java b/src/main/java/org/apache/commons/lang3/StringUtils.java\nindex 4aac02d..a90b067 100644\n--- a/src/main/java/org/apache/commons/lang3/StringUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/StringUtils.java\n@@ -1443,21 +1443,13 @@\n \t\t}\n \t\tint csLength \u003d cs.length();\n \t\tint searchLength \u003d searchChars.length;\n-\t\tint csLastIndex \u003d csLength - 1;\n-\t\tint searchLastIndex \u003d searchLength - 1;\n \t\tfor (int i \u003d 0; i \u003c csLength; i++) {\n \t\t\tchar ch \u003d cs.charAt(i);\n \t\t\tfor (int j \u003d 0; j \u003c searchLength; j++) {\n \t\t\t\tif (searchChars[j] \u003d\u003d ch) {\n-\t\t\t\t\tif (i \u003c csLastIndex \u0026\u0026 j \u003c searchLastIndex \u0026\u0026 ch \u003e\u003d Character.MIN_HIGH_SURROGATE \u0026\u0026 ch \u003c\u003d Character.MAX_HIGH_SURROGATE) {\n \t\t\t\t\t\t// ch is a supplementary character\n-\t\t\t\t\t\tif (searchChars[j + 1] \u003d\u003d cs.charAt(i + 1)) {\n-\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t} else {\n \t\t\t\t\t\t// ch is in the Basic Multilingual Plane\n \t\t\t\t\t\treturn true;\n-\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [57413,57444]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [57447,57486]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [57638,57752]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [57807,57845]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [57847,57876]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [57803,57876]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [57754,57883]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [57889,57963]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [57634,57963]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}