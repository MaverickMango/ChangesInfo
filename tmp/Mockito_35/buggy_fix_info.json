{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntPassed,org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntegerPassed,org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntegerPassedToEq,org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntegerPassedToSame",
    "test.dir": "test",
    "clz.modified": "org.mockito.Matchers",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Mockito",
  "id": "35",
  "workingDir": "../bugs/Mockito_35_tmp",
  "bug_name": "Mockito_35",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
      "test_function": "shouldNotThrowNPEWhenIntPassed",
      "assertion_line": "38",
      "exception": "java.lang.NullPointerException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
      "test_function": "shouldNotThrowNPEWhenIntegerPassed",
      "assertion_line": "31",
      "exception": "java.lang.NullPointerException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
      "test_function": "shouldNotThrowNPEWhenIntegerPassedToEq",
      "assertion_line": "45",
      "exception": "java.lang.NullPointerException",
      "message": ""
    },
    {
      "test_class": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
      "test_function": "shouldNotThrowNPEWhenIntegerPassedToSame",
      "assertion_line": "52",
      "exception": "java.lang.NullPointerException",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/org/mockito/Matchers.java",
        "src/org/mockito/Matchers.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.mockito.Matchers:isA:[Class\u003cT\u003e clazz]:T",
            "org.mockito.Matchers:same:[T value]:T",
            "org.mockito.Matchers:eq:[T value]:T"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "org.mockito.Matchers:same:[T value]:T",
            "org.mockito.Matchers:isA:[Class\u003cT\u003e clazz]:T",
            "org.mockito.Matchers:eq:[T value]:T"
          ],
          "num": 3
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "362",
            "479",
            "516"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "362",
            "479",
            "516"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/org/mockito/Matchers.java b/src/org/mockito/Matchers.java\nindex 7a89556..16f1b5b 100644\n--- a/src/org/mockito/Matchers.java\n+++ b/src/org/mockito/Matchers.java\n@@ -359,7 +359,7 @@\n      * @return \u003ccode\u003enull\u003c/code\u003e.\r\n      */\r\n     public static \u003cT\u003e T isA(Class\u003cT\u003e clazz) {\r\n-        return reportMatcher(new InstanceOf(clazz)).\u003cT\u003ereturnFor(clazz);\r\n+        return reportMatcher(new InstanceOf(clazz)).\u003cT\u003ereturnNull();\r\n     }\r\n \r\n     /**\r\n@@ -476,7 +476,7 @@\n      * @return \u003ccode\u003enull\u003c/code\u003e.\r\n      */\r\n     public static \u003cT\u003e T eq(T value) {\r\n-        return (T) reportMatcher(new Equals(value)).\u003cT\u003ereturnFor((Class) value.getClass());\r\n+        return reportMatcher(new Equals(value)).\u003cT\u003ereturnNull();\r\n     }  \r\n \r\n     /**\r\n@@ -513,7 +513,7 @@\n      * @return \u003ccode\u003enull\u003c/code\u003e.\r\n      */\r\n     public static \u003cT\u003e T same(T value) {\r\n-        return (T) reportMatcher(new Same(value)).\u003cT\u003ereturnFor((Class) value.getClass());\r\n+        return reportMatcher(new Same(value)).\u003cT\u003ereturnNull();\r\n     }\r\n \r\n     /**\r\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_ARGUMENTS [10945,10950]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_ARGUMENTS [14186,14210]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [14137,14138]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "CastExpression [14136,14211]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_ARGUMENTS [15603,15627]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "SimpleType [15556,15557]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "CastExpression [15555,15628]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}