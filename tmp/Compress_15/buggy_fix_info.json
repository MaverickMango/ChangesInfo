{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest::testNullCommentEqualsEmptyComment",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "15",
  "workingDir": "../bugs/Compress_15_tmp",
  "bug_name": "Compress_15",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest",
      "test_function": "testNullCommentEqualsEmptyComment",
      "assertion_line": "250",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cfoo\u003e but was:\u003cfoo\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java",
        "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:equals:[Object obj]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:equals:[Object obj]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "669",
            "670",
            "671",
            "672",
            "675"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "669",
            "670",
            "671",
            "672",
            "673"
          ],
          "num": 5
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\nindex 166ca75..1833227 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java\n@@ -666,13 +666,13 @@\n         String myComment \u003d getComment();\n         String otherComment \u003d other.getComment();\n         if (myComment \u003d\u003d null) {\n-            myComment \u003d \"\";\n-        }\n-        if (otherComment \u003d\u003d null) {\n-            otherComment \u003d \"\";\n+            if (otherComment !\u003d null) {\n+                return false;\n+            }\n+        } else if (!myComment.equals(otherComment)) {\n+            return false;\n         }\n         return getTime() \u003d\u003d other.getTime()\n-            \u0026\u0026 myComment.equals(otherComment)\n             \u0026\u0026 getInternalAttributes() \u003d\u003d other.getInternalAttributes()\n             \u0026\u0026 getPlatform() \u003d\u003d other.getPlatform()\n             \u0026\u0026 getExternalAttributes() \u003d\u003d other.getExternalAttributes()\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "IfStatement [21228,21426]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "InfixExpression [21232,21249]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "Block [21251,21346]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "IfStatement [21352,21426]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "ReturnStatement [21309,21322]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ExpressionStatement [21339,21357]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [21228,21290]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [21424,21426]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [21427,21457]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [21383,22122]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}