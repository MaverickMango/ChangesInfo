{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.mockitousage.bugs.InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest::shouldInjectUsingPropertySetterIfAvailable",
    "test.dir": "test",
    "clz.modified": "org.mockito.internal.configuration.injection.FinalMockCandidateFilter",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Mockito",
  "id": "15",
  "workingDir": "../bugs/Mockito_15_tmp",
  "bug_name": "Mockito_15",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.mockitousage.bugs.InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest",
      "test_function": "shouldInjectUsingPropertySetterIfAvailable",
      "assertion_line": "25",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java",
        "src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.mockito.internal.configuration.injection.FinalMockCandidateFilter:filterCandidate:[final Collection\u003cObject\u003e mocks, final Field field, final Object fieldInstance]:OngoingInjecter"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.mockito.internal.configuration.injection.FinalMockCandidateFilter:filterCandidate:[final Collection\u003cObject\u003e mocks, final Field field, final Object fieldInstance]:OngoingInjecter"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "4",
            "26",
            "28"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "3",
            "26"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java b/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java\nindex 673de91..637c450 100644\n--- a/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java\n+++ b/src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java\n@@ -1,7 +1,6 @@\n package org.mockito.internal.configuration.injection;\r\n \r\n import org.mockito.exceptions.base.MockitoException;\r\n-import org.mockito.internal.util.reflection.BeanPropertySetter;\r\n import org.mockito.internal.util.reflection.FieldSetter;\r\n \r\n import java.lang.reflect.Field;\r\n@@ -23,9 +22,7 @@\n             return new OngoingInjecter() {\r\n                 public boolean thenInject() {\r\n                     try {\r\n-                        if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {\r\n                             new FieldSetter(fieldInstance, field).set(matchingMock);\r\n-                        }\r\n                     } catch (Exception e) {\r\n                         throw new MockitoException(\"Problems injecting dependency in \" + field.getName(), e);\r\n                     }\r\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ImportDeclaration [111,174]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "PrefixExpression [1084,1147]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [1149,1263]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [1080,1263]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}