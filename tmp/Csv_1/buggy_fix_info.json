{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.csv.CSVParserTest::testGetLineNumberWithCR",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.csv.ExtendedBufferedReader",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Csv",
  "id": "1",
  "workingDir": "../bugs/Csv_1_tmp",
  "bug_name": "Csv_1",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.csv.CSVParserTest",
      "test_function": "testGetLineNumberWithCR",
      "assertion_line": "510",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c1\u003e but was:\u003c0\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java",
        "src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.csv.ExtendedBufferedReader:read:[]:int"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.csv.ExtendedBufferedReader:read:[]:int"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "58"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "58"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java b/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\nindex 219fe68..563ece1 100644\n--- a/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n+++ b/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java\n@@ -55,7 +55,7 @@\n     @Override\n     public int read() throws IOException {\n         int current \u003d super.read();\n-        if (current \u003d\u003d \u0027\\r\u0027 || (current \u003d\u003d \u0027\\n\u0027 \u0026\u0026 lastChar !\u003d \u0027\\r\u0027)) {\n+        if (current \u003d\u003d \u0027\\n\u0027) {\n             lineCounter++;\n         }\n         lastChar \u003d current;\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [1798,1813]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: || [1814,1816]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u0026\u0026 [1834,1836]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [1837,1853]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [1818,1853]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ParenthesizedExpression [1817,1854]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [1798,1854]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}