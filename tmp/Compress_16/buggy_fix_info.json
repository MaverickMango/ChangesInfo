{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest::aiffFilesAreNoTARs",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.ArchiveStreamFactory",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "16",
  "workingDir": "../bugs/Compress_16_tmp",
  "bug_name": "Compress_16",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest",
      "test_function": "aiffFilesAreNoTARs",
      "assertion_line": "56",
      "exception": "junit.framework.AssertionFailedError",
      "message": "created an input stream for a non-archive"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java",
        "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.ArchiveStreamFactory:createArchiveInputStream:[final InputStream in]:ArchiveInputStream"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.ArchiveStreamFactory:createArchiveInputStream:[final InputStream in]:ArchiveInputStream"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "244",
            "246"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "244"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\nindex 90820df..37dfbe0 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n@@ -241,9 +241,8 @@\n                 try {\n                     TarArchiveInputStream tais \u003d new TarArchiveInputStream(new ByteArrayInputStream(tarheader));\n                     // COMPRESS-191 - verify the header checksum\n-                    if (tais.getNextTarEntry().isCheckSumOK()) {\n+                    tais.getNextEntry();\n                         return new TarArchiveInputStream(in);\n-                    }\n                 } catch (Exception e) { // NOPMD\n                     // can generate IllegalArgumentException as well\n                     // as IOException\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [9658,9678]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [9662,9699]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [9701,9786]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [9658,9786]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}