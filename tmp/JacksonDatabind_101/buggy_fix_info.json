{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.struct.TestUnwrapped::testIssue2088UnwrappedFieldsAfterLastCreatorProp",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.deser.BeanDeserializer",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "101",
  "workingDir": "../bugs/JacksonDatabind_101_tmp",
  "bug_name": "JacksonDatabind_101",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.struct.TestUnwrapped",
      "test_function": "testIssue2088UnwrappedFieldsAfterLastCreatorProp",
      "assertion_line": "254",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c4\u003e but was:\u003c0\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java",
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BeanDeserializer:deserializeUsingPropertyBasedWithUnwrapped:[JsonParser p, DeserializationContext ctxt]:Object"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.deser.BeanDeserializer:deserializeUsingPropertyBasedWithUnwrapped:[JsonParser p, DeserializationContext ctxt]:Object"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "776",
            "777",
            "778",
            "779",
            "780"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "771"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\nindex 88051e7..8cdccde 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n@@ -768,16 +768,12 @@\n                     // if so, need to copy all remaining tokens into buffer\n                     while (t \u003d\u003d JsonToken.FIELD_NAME) {\n                         // NOTE: do NOT skip name as it needs to be copied; `copyCurrentStructure` does that\n+                        p.nextToken();\n                         tokens.copyCurrentStructure(p);\n                         t \u003d p.nextToken();\n                     }\n                     // 28-Aug-2018, tatu: Let\u0027s add sanity check here, easier to catch off-by-some\n                     //    problems if we maintain invariants\n-                    if (t !\u003d JsonToken.END_OBJECT) {\n-                        ctxt.reportWrongTokenException(this, JsonToken.END_OBJECT, \n-                                \"Attempted to unwrap \u0027%s\u0027 value\",\n-                                handledType().getName());\n-                    }\n                     tokens.writeEndObject();\n                     if (bean.getClass() !\u003d _beanType.getRawClass()) {\n                         // !!! 08-Jul-2011, tatu: Could probably support; but for now\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [30817,30831]"
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [31094,31356]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}