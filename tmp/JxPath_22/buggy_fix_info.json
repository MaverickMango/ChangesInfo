{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.jxpath.ri.model.JXPath154Test::testInnerEmptyNamespaceDOM",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "JxPath",
  "id": "22",
  "workingDir": "../bugs/JxPath_22_tmp",
  "bug_name": "JxPath_22",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.jxpath.ri.model.JXPath154Test",
      "test_function": "testInnerEmptyNamespaceDOM",
      "assertion_line": "21",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c/b:foo[1]/[test[1]]\u003e but was:\u003c/b:foo[1]/[node()[2]]\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java",
        "src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer:getNamespaceURI:[Node node]:String"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer:getNamespaceURI:[Node node]:String"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "689",
            "690",
            "696"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "689",
            "694",
            "696"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\nindex f1a1b2b..f8e3b1a 100644\n--- a/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n+++ b/src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java\n@@ -686,14 +686,14 @@\n                 if (aNode.getNodeType() \u003d\u003d Node.ELEMENT_NODE) {\n                     Attr attr \u003d ((Element) aNode).getAttributeNode(qname);\n                     if (attr !\u003d null) {\n-                        uri \u003d attr.getValue();\n-                        break;\n+                        return attr.getValue();\n                     }\n                 }\n                 aNode \u003d aNode.getParentNode();\n             }\n+            return null;\n         }\n-        return \"\".equals(uri) ? null : uri;\n+        return uri;\n     }\n \n     public Object getValue() {\n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ReturnStatement [23305,23316]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "ReturnStatement [23137,23160]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: uri [23137,23140]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ASSIGNMENT_OPERATOR: \u003d [23141,23142]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Assignment [23137,23158]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ExpressionStatement [23137,23159]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "BreakStatement [23184,23190]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [23317,23331]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: uri [23341,23344]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [23317,23344]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}