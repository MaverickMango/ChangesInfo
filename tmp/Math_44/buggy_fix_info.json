{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.ode.events.EventStateTest::testIssue695",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.math.ode.AbstractIntegrator",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "44",
  "workingDir": "../bugs/Math_44_tmp",
  "bug_name": "Math_44",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.ode.events.EventStateTest",
      "test_function": "testIssue695",
      "assertion_line": "120",
      "exception": "junit.framework.AssertionFailedError",
      "message": "going backard in time! (7.796578226186635 \u003c 10.99)"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java",
        "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.ode.AbstractIntegrator:acceptStep:[final AbstractStepInterpolator interpolator, final double[] y, final double[] yDot, final double tEnd]:double"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.ode.AbstractIntegrator:acceptStep:[final AbstractStepInterpolator interpolator, final double[] y, final double[] yDot, final double tEnd]:double"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "279",
            "333",
            "334",
            "335",
            "345",
            "346",
            "347"
          ],
          "num": 7
        },
        {
          "qualified_names": [
            "280",
            "331",
            "346"
          ],
          "num": 3
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java b/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java\nindex 8f315e3..544124f 100644\n--- a/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java\n+++ b/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java\n@@ -277,6 +277,7 @@\n \n             double previousT \u003d interpolator.getGlobalPreviousTime();\n             final double currentT \u003d interpolator.getGlobalCurrentTime();\n+            resetOccurred \u003d false;\n \n             // initialize the events states if needed\n             if (! statesInitialized) {\n@@ -330,9 +331,6 @@\n                 if (isLastStep) {\n                     // the event asked to stop integration\n                     System.arraycopy(eventY, 0, y, 0, y.length);\n-                    for (final EventState remaining : occuringEvents) {\n-                        remaining.stepAccepted(eventT, eventY);\n-                    }\n                     return eventT;\n                 }\n \n@@ -342,9 +340,6 @@\n                     System.arraycopy(eventY, 0, y, 0, y.length);\n                     computeDerivatives(eventT, y, yDot);\n                     resetOccurred \u003d true;\n-                    for (final EventState remaining : occuringEvents) {\n-                        remaining.stepAccepted(eventT, eventY);\n-                    }\n                     return eventT;\n                 }\n \n",
      "operations": [
        {
          "type": "insert-tree",
          "from": "",
          "to": "ExpressionStatement [10663,10685]"
        },
        {
          "type": "delete-tree",
          "from": "EnhancedForStatement [12929,13066]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "EnhancedForStatement [13509,13646]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}