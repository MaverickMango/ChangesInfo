{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.parser.HtmlParserTest::handlesControlCodeInAttributeName,org.jsoup.safety.CleanerTest::handlesControlCharactersAfterTagName",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.parser.Token",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "59",
  "workingDir": "../bugs/Jsoup_59_tmp",
  "bug_name": "Jsoup_59",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.parser.HtmlParserTest",
      "test_function": "handlesControlCodeInAttributeName",
      "assertion_line": "946",
      "exception": "java.lang.IllegalArgumentException",
      "message": "String must not be empty"
    },
    {
      "test_class": "org.jsoup.safety.CleanerTest",
      "test_function": "handlesControlCharactersAfterTagName",
      "assertion_line": "283",
      "exception": "java.lang.IllegalArgumentException",
      "message": "String must not be empty"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/parser/Token.java",
        "src/main/java/org/jsoup/parser/Token.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.parser.Token\\$Tag:newAttribute:[]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.parser.Token\\$Tag:newAttribute:[]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "107",
            "117"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "106",
            "117"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/parser/Token.java b/src/main/java/org/jsoup/parser/Token.java\nindex af51432..7dcfa2b 100644\n--- a/src/main/java/org/jsoup/parser/Token.java\n+++ b/src/main/java/org/jsoup/parser/Token.java\n@@ -104,7 +104,6 @@\n             if (pendingAttributeName !\u003d null) {\n                 // the tokeniser has skipped whitespace control chars, but trimming could collapse to empty for other control codes, so verify here\n                 pendingAttributeName \u003d pendingAttributeName.trim();\n-                if (pendingAttributeName.length() \u003e 0) {\n                     Attribute attribute;\n                     if (hasPendingAttributeValue)\n                         attribute \u003d new Attribute(pendingAttributeName,\n@@ -114,7 +113,6 @@\n                     else\n                         attribute \u003d new BooleanAttribute(pendingAttributeName);\n                     attributes.put(attribute);\n-                }\n             }\n             pendingAttributeName \u003d null;\n             hasEmptyAttributeValue \u003d false;\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [3471,3504]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [3506,4095]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [3467,4095]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}