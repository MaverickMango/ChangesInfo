{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.google.javascript.jscomp.TypeCheckTest::testIssue1058,com.google.javascript.jscomp.TypeCheckTest::testTemplatized11",
    "test.dir": "test",
    "clz.modified": "com.google.javascript.jscomp.TypeInference",
    "src.dir": "src"
  },
  "timeoutSecond": 100,
  "proj": "Closure",
  "id": "112",
  "workingDir": "../bugs/Closure_112_tmp",
  "bug_name": "Closure_112",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testIssue1058",
      "assertion_line": "12160",
      "exception": "junit.framework.AssertionFailedError",
      "message": "unexpected warnings(s):"
    },
    {
      "test_class": "com.google.javascript.jscomp.TypeCheckTest",
      "test_function": "testTemplatized11",
      "assertion_line": "12141",
      "exception": "junit.framework.AssertionFailedError",
      "message": "unexpected warnings(s):"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/TypeInference.java",
        "src/com/google/javascript/jscomp/TypeInference.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypeInference:inferTemplatedTypesForCall:[Node n, FunctionType fnType]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "com.google.javascript.jscomp.TypeInference:inferTemplatedTypesForCall:[Node n, FunctionType fnType]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1192",
            "1193",
            "1194",
            "1196",
            "1197",
            "1198",
            "1199",
            "1200"
          ],
          "num": 8
        },
        {
          "qualified_names": [
            "1192",
            "1193"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java\nindex 4b30d57..4c24e2f 100644\n--- a/src/com/google/javascript/jscomp/TypeInference.java\n+++ b/src/com/google/javascript/jscomp/TypeInference.java\n@@ -1189,15 +1189,9 @@\n     }\n \n     // Try to infer the template types\n-    Map\u003cTemplateType, JSType\u003e inferred \u003d Maps.filterKeys(\n-        inferTemplateTypesFromParameters(fnType, n),\n-        new Predicate\u003cTemplateType\u003e() {\n+    Map\u003cTemplateType, JSType\u003e inferred \u003d \n+        inferTemplateTypesFromParameters(fnType, n);\n \n-          @Override\n-          public boolean apply(TemplateType key) {\n-            return keys.contains(key);\n-          }}\n-        );\n \n     // Replace all template types. If we couldn\u0027t find a replacement, we\n     // replace it with UNKNOWN.\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "METHOD_INVOCATION_RECEIVER [42145,42149]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: filterKeys [42150,42160]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ClassInstanceCreation [42223,42378]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "METHOD_INVOCATION_ARGUMENTS [42170,42378]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "MethodInvocation [42145,42388]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}