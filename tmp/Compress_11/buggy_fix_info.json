{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest::shortTextFilesAreNoTARs",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.compress.archivers.ArchiveStreamFactory",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Compress",
  "id": "11",
  "workingDir": "../bugs/Compress_11_tmp",
  "bug_name": "Compress_11",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest",
      "test_function": "shortTextFilesAreNoTARs",
      "assertion_line": "36",
      "exception": "junit.framework.AssertionFailedError",
      "message": "created an input stream for a non-archive"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java",
        "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.ArchiveStreamFactory:createArchiveInputStream:[final InputStream in]:ArchiveInputStream"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.compress.archivers.ArchiveStreamFactory:createArchiveInputStream:[final InputStream in]:ArchiveInputStream"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "240",
            "250"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "239",
            "250"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\nindex c831b60..a30cd5a 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java\n@@ -237,7 +237,6 @@\n                 return new TarArchiveInputStream(in);\n             }\n             // COMPRESS-117 - improve auto-recognition\n-            if (signatureLength \u003e\u003d 512) {\n             try {\n                 TarArchiveInputStream tais \u003d new TarArchiveInputStream(new ByteArrayInputStream(tarheader));\n                 tais.getNextEntry();\n@@ -247,7 +246,6 @@\n                 // autodetection, simply not a TAR\n                 // ignored\n             }\n-            }\n         } catch (IOException e) {\n             throw new ArchiveException(\"Could not use reset and mark operations.\", e);\n         }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [9436,9458]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [9460,9910]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [9432,9910]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}