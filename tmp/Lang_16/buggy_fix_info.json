{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.lang3.math.NumberUtilsTest::testCreateNumber",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.lang3.math.NumberUtils",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Lang",
  "id": "16",
  "workingDir": "../bugs/Lang_16_tmp",
  "bug_name": "Lang_16",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.lang3.math.NumberUtilsTest",
      "test_function": "testCreateNumber",
      "assertion_line": "197",
      "exception": "java.lang.NumberFormatException",
      "message": "0Xfade is not a valid number."
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "src/main/java/org/apache/commons/lang3/math/NumberUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.lang3.math.NumberUtils:createNumber:[String str]:Number"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.lang3.math.NumberUtils:createNumber:[String str]:Number"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "458"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "458"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex 5b7891a..882358f 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -455,7 +455,7 @@\n             // a wrong value.\n             return null;\n         }\n-        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {\n+        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n             return createInteger(str);\n         }   \n         char lastChar \u003d str.charAt(str.length() - 1);\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "MethodInvocation [16313,16333]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodInvocation [16337,16358]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}