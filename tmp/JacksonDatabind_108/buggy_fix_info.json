{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "com.fasterxml.jackson.databind.node.EmptyContentAsTreeTest::testNullFromEOFWithParserAndReader",
    "test.dir": "src/test/java",
    "clz.modified": "com.fasterxml.jackson.databind.ObjectReader",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "JacksonDatabind",
  "id": "108",
  "workingDir": "../bugs/JacksonDatabind_108_tmp",
  "bug_name": "JacksonDatabind_108",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "com.fasterxml.jackson.databind.node.EmptyContentAsTreeTest",
      "test_function": "testNullFromEOFWithParserAndReader",
      "assertion_line": "62",
      "exception": "junit.framework.AssertionFailedError",
      "message": "Should get `null` for reads with `JsonParser`, instead got: com.fasterxml.jackson.databind.node.MissingNode"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/com/fasterxml/jackson/databind/ObjectReader.java",
        "src/main/java/com/fasterxml/jackson/databind/ObjectReader.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ObjectReader:readTree:[JsonParser p]:T",
            "com.fasterxml.jackson.databind.ObjectReader:_bindAsTreeOrNull:[JsonParser p]:JsonNode"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "com.fasterxml.jackson.databind.ObjectReader:readTree:[JsonParser p]:T"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1169",
            "1707",
            "1708",
            "1709",
            "1710",
            "1711",
            "1712",
            "1713",
            "1714",
            "1715",
            "1716",
            "1717",
            "1718",
            "1719",
            "1720",
            "1721",
            "1722",
            "1723",
            "1724",
            "1725",
            "1726",
            "1727",
            "1728",
            "1729",
            "1730",
            "1731",
            "1732",
            "1733",
            "1734",
            "1735",
            "1736"
          ],
          "num": 31
        },
        {
          "qualified_names": [
            "1169",
            "1706"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java b/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java\nindex 71d11c8..ae5f431 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java\n@@ -1166,7 +1166,7 @@\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public \u003cT extends TreeNode\u003e T readTree(JsonParser p) throws IOException {\n-        return (T) _bindAsTreeOrNull(p);\n+        return (T) _bindAsTree(p);\n     }\n \n     @Override\n@@ -1704,36 +1704,6 @@\n      * Same as {@link #_bindAsTree} except end-of-input is reported by returning\n      * {@code null}, not \"missing node\"\n      */\n-    protected final JsonNode _bindAsTreeOrNull(JsonParser p) throws IOException\n-    {\n-        _config.initialize(p);\n-        if (_schema !\u003d null) {\n-            p.setSchema(_schema);\n-        }\n-        JsonToken t \u003d p.getCurrentToken();\n-        if (t \u003d\u003d null) {\n-            t \u003d p.nextToken();\n-            if (t \u003d\u003d null) {\n-                return null;\n-            }\n-        }\n-        final JsonNode resultNode;\n-        if (t \u003d\u003d JsonToken.VALUE_NULL) {\n-            resultNode \u003d _config.getNodeFactory().nullNode();\n-        } else {\n-            final DeserializationContext ctxt \u003d createDeserializationContext(p);\n-            final JsonDeserializer\u003cObject\u003e deser \u003d _findTreeDeserializer(ctxt);\n-            if (_unwrapRoot) {\n-                resultNode \u003d (JsonNode) _unwrapAndDeserialize(p, ctxt, JSON_NODE_TYPE, deser);\n-            } else {\n-                resultNode \u003d (JsonNode) deser.deserialize(p, ctxt);\n-                if (_config.isEnabled(DeserializationFeature.FAIL_ON_TRAILING_TOKENS)) {\n-                    _verifyNoTrailingTokens(p, ctxt, JSON_NODE_TYPE);\n-                }\n-            }\n-        }\n-        return resultNode;\n-    }\n     \n     /**\n      * @since 2.1\n",
      "operations": [
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "MethodDeclaration [61152,62422]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [
        "com.fasterxml.jackson.databind.ObjectReader:_bindAsTreeOrNull:[JsonParser p]:JsonNode"
      ],
      "num": 1
    }
  }
}