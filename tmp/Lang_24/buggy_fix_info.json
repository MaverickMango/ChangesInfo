{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.lang3.math.NumberUtilsTest::testIsNumber",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.lang3.math.NumberUtils",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Lang",
  "id": "24",
  "workingDir": "../bugs/Lang_24_tmp",
  "bug_name": "Lang_24",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.lang3.math.NumberUtilsTest",
      "test_function": "testIsNumber",
      "assertion_line": "1145",
      "exception": "junit.framework.AssertionFailedError",
      "message": "isNumber(String) LANG-664 failed"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "src/main/java/org/apache/commons/lang3/math/NumberUtils.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.lang3.math.NumberUtils:isNumber:[String str]:boolean"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.lang3.math.NumberUtils:isNumber:[String str]:boolean"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "1413"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "1413"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\nindex d9b3c6d..4a1d845 100644\n--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java\n@@ -1410,7 +1410,7 @@\n             if (chars[i] \u003d\u003d \u0027l\u0027\n                 || chars[i] \u003d\u003d \u0027L\u0027) {\n                 // not allowing L with an exponent or decimal point\n-                return foundDigit \u0026\u0026 !hasExp \u0026\u0026 !hasDecPoint;\n+                return foundDigit \u0026\u0026 !hasExp;\n             }\n             // last character is illegal\n             return false;\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "PrefixExpression [47672,47684]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}