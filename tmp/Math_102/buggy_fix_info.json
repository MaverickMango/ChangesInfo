{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.math.stat.inference.ChiSquareFactoryTest::testChiSquareLargeTestStatistic,org.apache.commons.math.stat.inference.ChiSquareFactoryTest::testChiSquare,org.apache.commons.math.stat.inference.ChiSquareTestTest::testChiSquareLargeTestStatistic,org.apache.commons.math.stat.inference.ChiSquareTestTest::testChiSquare,org.apache.commons.math.stat.inference.TestUtilsTest::testChiSquareLargeTestStatistic,org.apache.commons.math.stat.inference.TestUtilsTest::testChiSquare",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.math.stat.inference.ChiSquareTestImpl",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Math",
  "id": "102",
  "workingDir": "../bugs/Math_102_tmp",
  "bug_name": "Math_102",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.math.stat.inference.ChiSquareFactoryTest",
      "test_function": "testChiSquareLargeTestStatistic",
      "exception": "junit.framework.AssertionFailedError",
      "message": "chi-square test statistic expected:\u003c114875.90421929007\u003e but was:\u003c3624883.3429077636\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java",
        "src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare:[double[] expected, long[] observed]:double"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare:[double[] expected, long[] observed]:double"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "74",
            "75",
            "76",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "89",
            "90",
            "91",
            "92",
            "95"
          ],
          "num": 17
        },
        {
          "qualified_names": [
            "73"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\nindex 984d56d..c87b010 100644\n--- a/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n+++ b/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java\n@@ -71,28 +71,11 @@\n             throw new IllegalArgumentException(\n                 \"observed counts must be non-negative and expected counts must be postive\");\n         }\n-        double sumExpected \u003d 0d;\n-        double sumObserved \u003d 0d;\n-        for (int i \u003d 0; i \u003c observed.length; i++) {\n-            sumExpected +\u003d expected[i];\n-            sumObserved +\u003d observed[i];\n-        }\n-        double ratio \u003d 1.0d;\n-        boolean rescale \u003d false;\n-        if (Math.abs(sumExpected - sumObserved) \u003e 10E-6) {\n-            ratio \u003d sumObserved / sumExpected;\n-            rescale \u003d true;\n-        }\n         double sumSq \u003d 0.0d;\n         double dev \u003d 0.0d;\n         for (int i \u003d 0; i \u003c observed.length; i++) {\n-            if (rescale) {\n-                dev \u003d ((double) observed[i] - ratio * expected[i]);\n-                sumSq +\u003d dev * dev / (ratio * expected[i]);\n-            } else {\n                 dev \u003d ((double) observed[i] - expected[i]);\n                 sumSq +\u003d dev * dev / expected[i];\n-            }\n         }\n         return sumSq;\n     }\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [2936,2960]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [2969,2993]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "ForStatement [3002,3135]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [3144,3164]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [3173,3197]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [3206,3341]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: rescale [3466,3473]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [3475,3618]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [3624,3749]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [3462,3749]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}