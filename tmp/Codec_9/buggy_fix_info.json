{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.codec.binary.Base64Test::testCodec112",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.codec.binary.Base64",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Codec",
  "id": "9",
  "workingDir": "../bugs/Codec_9_tmp",
  "bug_name": "Codec_9",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.codec.binary.Base64Test",
      "test_function": "testCodec112",
      "assertion_line": "343",
      "exception": "java.lang.IllegalArgumentException",
      "message": "Input array too big, the output array would be bigger (6) than the specified maxium size of 4"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/codec/binary/Base64.java",
        "src/java/org/apache/commons/codec/binary/Base64.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.codec.binary.Base64:encodeBase64:[byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize]:byte[]"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.codec.binary.Base64:encodeBase64:[byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize]:byte[]"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "827"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "827"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/codec/binary/Base64.java b/src/java/org/apache/commons/codec/binary/Base64.java\nindex e81b7e9..2cd0163 100644\n--- a/src/java/org/apache/commons/codec/binary/Base64.java\n+++ b/src/java/org/apache/commons/codec/binary/Base64.java\n@@ -824,7 +824,7 @@\n             return binaryData;\n         }\n \n-        long len \u003d getEncodeLength(binaryData, isChunked ? MIME_CHUNK_SIZE : 0, CHUNK_SEPARATOR);\n+        long len \u003d getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);\n         if (len \u003e maxResultSize) {\n             throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +\n                 len +\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "SimpleName: isChunked [32934,32943]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 0 [32964,32965]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "ConditionalExpression [32934,32965]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}