{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.jsoup.helper.HttpConnectionTest::sameHeadersCombineWithComma",
    "test.dir": "src/test/java",
    "clz.modified": "org.jsoup.helper.HttpConnection",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Jsoup",
  "id": "48",
  "workingDir": "../bugs/Jsoup_48_tmp",
  "bug_name": "Jsoup_48",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.jsoup.helper.HttpConnectionTest",
      "test_function": "sameHeadersCombineWithComma",
      "assertion_line": "63",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003cno-cache[, no-store]\u003e but was:\u003cno-cache[]\u003e"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/jsoup/helper/HttpConnection.java",
        "src/main/java/org/jsoup/helper/HttpConnection.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.jsoup.helper.HttpConnection\\$Response:processResponseHeaders:[Map\u003cString,List\u003cString\u003e\u003e resHeaders]:void"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.jsoup.helper.HttpConnection\\$Response:processResponseHeaders:[Map\u003cString,List\u003cString\u003e\u003e resHeaders]:void"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "773",
            "775",
            "776",
            "777",
            "778",
            "779",
            "780",
            "781",
            "782",
            "783",
            "784"
          ],
          "num": 11
        },
        {
          "qualified_names": [
            "773"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/jsoup/helper/HttpConnection.java b/src/main/java/org/jsoup/helper/HttpConnection.java\nindex a215b56..f8fd9dd 100644\n--- a/src/main/java/org/jsoup/helper/HttpConnection.java\n+++ b/src/main/java/org/jsoup/helper/HttpConnection.java\n@@ -770,18 +770,8 @@\n                             cookie(cookieName, cookieVal);\n                     }\n                 } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\n-                    if (values.size() \u003d\u003d 1)\n+                    if (!values.isEmpty())\n                         header(name, values.get(0));\n-                    else if (values.size() \u003e 1) {\n-                        StringBuilder accum \u003d new StringBuilder();\n-                        for (int i \u003d 0; i \u003c values.size(); i++) {\n-                            final String val \u003d values.get(i);\n-                            if (i !\u003d 0)\n-                                accum.append(\", \");\n-                            accum.append(val);\n-                        }\n-                        header(name, accum.toString());\n-                    }\n                 }\n             }\n         }\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "PrefixExpression [28854,28871]"
        },
        {
          "type": "insert-node",
          "from": "",
          "to": "PREFIX_EXPRESSION_OPERATOR: ! [28854,28855]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "INFIX_EXPRESSION_OPERATOR: \u003d\u003d [28868,28870]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "NumberLiteral: 1 [28871,28872]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "InfixExpression [28854,28872]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "IfStatement [28952,29414]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}