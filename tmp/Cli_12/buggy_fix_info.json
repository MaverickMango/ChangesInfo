{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.cli.GnuParserTest::testShortWithEqual,org.apache.commons.cli.GnuParserTest::testLongWithEqualSingleDash,org.apache.commons.cli.GnuParserTest::testLongWithEqual",
    "test.dir": "src/test",
    "clz.modified": "org.apache.commons.cli.GnuParser",
    "src.dir": "src/java"
  },
  "timeoutSecond": 100,
  "proj": "Cli",
  "id": "12",
  "workingDir": "../bugs/Cli_12_tmp",
  "bug_name": "Cli_12",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.cli.GnuParserTest",
      "test_function": "testShortWithEqual",
      "assertion_line": "209",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c[]bar\u003e but was:\u003c[\u003d]bar\u003e"
    },
    {
      "test_class": "org.apache.commons.cli.GnuParserTest",
      "test_function": "testLongWithEqualSingleDash",
      "assertion_line": "248",
      "exception": "junit.framework.ComparisonFailure",
      "message": "expected:\u003c[]bar\u003e but was:\u003c[oo\u003d]bar\u003e"
    },
    {
      "test_class": "org.apache.commons.cli.GnuParserTest",
      "test_function": "testLongWithEqual",
      "assertion_line": "233",
      "exception": "org.apache.commons.cli.UnrecognizedOptionException",
      "message": "Unrecognized option: --foo\u003dbar"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/java/org/apache/commons/cli/GnuParser.java",
        "src/java/org/apache/commons/cli/GnuParser.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.cli.GnuParser:flatten:[Options options, String[] arguments, boolean stopAtNonOption]:String[]"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.cli.GnuParser:flatten:[Options options, String[] arguments, boolean stopAtNonOption]:String[]"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "81",
            "84",
            "85",
            "86",
            "87",
            "88"
          ],
          "num": 6
        },
        {
          "qualified_names": [
            "81"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/java/org/apache/commons/cli/GnuParser.java b/src/java/org/apache/commons/cli/GnuParser.java\nindex 1590fc3..0de035f 100644\n--- a/src/java/org/apache/commons/cli/GnuParser.java\n+++ b/src/java/org/apache/commons/cli/GnuParser.java\n@@ -78,14 +78,9 @@\n                 }\n                 else\n                 {\n-                    if (opt.indexOf(\u0027\u003d\u0027) !\u003d -1 \u0026\u0026 options.hasOption(opt.substring(0, opt.indexOf(\u0027\u003d\u0027))))\n+                    if (options.hasOption(arg.substring(0, 2)))\n                     {\n                         // the format is --foo\u003dvalue or -foo\u003dvalue\n-                        tokens.add(arg.substring(0, arg.indexOf(\u0027\u003d\u0027))); // --foo\n-                        tokens.add(arg.substring(arg.indexOf(\u0027\u003d\u0027) + 1)); // value\n-                    }\n-                    else if (options.hasOption(arg.substring(0, 2)))\n-                    {\n                         // the format is a special properties option (-Dproperty\u003dvalue)\n                         tokens.add(arg.substring(0, 2)); // -D\n                         tokens.add(arg.substring(2)); // property\u003dvalue\n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [2810,2889]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "Block [2911,3164]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [2806,3664]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}