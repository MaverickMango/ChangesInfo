{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "properties": {
    "trigger.tests": "org.apache.commons.csv.CSVPrinterTest::testHeader",
    "test.dir": "src/test/java",
    "clz.modified": "org.apache.commons.csv.CSVPrinter",
    "src.dir": "src/main/java"
  },
  "timeoutSecond": 100,
  "proj": "Csv",
  "id": "10",
  "workingDir": "../bugs/Csv_10_tmp",
  "bug_name": "Csv_10",
  "derive": "defects4j",
  "trigger_tests": [
    {
      "test_class": "org.apache.commons.csv.CSVPrinterTest",
      "test_function": "testHeader",
      "assertion_line": "495",
      "exception": "junit.framework.AssertionFailedError",
      "message": "expected:\u003c[C1,C2,C3"
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/main/java/org/apache/commons/csv/CSVPrinter.java",
        "src/main/java/org/apache/commons/csv/CSVPrinter.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "org.apache.commons.csv.CSVPrinter:CSVPrinter:[final Appendable out, final CSVFormat format]:null"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "org.apache.commons.csv.CSVPrinter:CSVPrinter:[final Appendable out, final CSVFormat format]:null"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "70",
            "71",
            "72"
          ],
          "num": 3
        },
        {
          "qualified_names": [
            "69"
          ],
          "num": 1
        }
      ],
      "diff": "diff --git a/src/main/java/org/apache/commons/csv/CSVPrinter.java b/src/main/java/org/apache/commons/csv/CSVPrinter.java\nindex d2968b5..94e5852 100644\n--- a/src/main/java/org/apache/commons/csv/CSVPrinter.java\n+++ b/src/main/java/org/apache/commons/csv/CSVPrinter.java\n@@ -67,9 +67,6 @@\n         this.format.validate();\n         // TODO: Is it a good idea to do this here instead of on the first call to a print method?\n         // It seems a pain to have to track whether the header has already been printed or not.\n-        if (format.getHeader() !\u003d null) {\n-            this.printRecord((Object[]) format.getHeader());\n-        }\n     }\n \n     // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n",
      "operations": [
        {
          "type": "delete-tree",
          "from": "IfStatement [2696,2800]",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}