===
insert-tree
---
ImportDeclaration [1038,1071]
    QualifiedName: java.io.ObjectStreamClass [1045,1070]
to
CompilationUnit [0,7438]
at 7
===
insert-tree
---
TypeDeclaration [8393,10669]
    Javadoc [8393,9126]
        TagElement [8404,9118]
            TextElement: <p>Custom specialization of the standard JDK  [8404,8449]
            TagElement [8449,8482]
                QualifiedName: java.io.ObjectInputStream [8456,8481]
            TextElement: that uses a custom  <code>ClassLoader</code> to resolve a class. [8490,8554]
            TextElement: If the specified <code>ClassLoader</code> is not able to resolve the class, [8562,8637]
            TextElement: the context classloader of the current thread will be used. [8645,8704]
            TextElement: This way, the standard deserialization work also in web-application [8712,8779]
            TextElement: containers and application servers, no matter in which of the [8787,8848]
            TextElement: <code>ClassLoader</code> the particular class that encapsulates [8856,8919]
            TextElement: serialization/deserialization lives. </p> [8927,8968]
            TextElement: <p>For more in-depth information about the problem for which this [8984,9049]
            TextElement: class here is a workaround, see the JIRA issue LANG-626. </p> [9057,9118]
    Modifier: static [9132,9138]
    TYPE_DECLARATION_KIND: class [9139,9144]
    SimpleName: ClassLoaderAwareObjectInputStream [9145,9178]
    SimpleType [9187,9204]
        SimpleName: ObjectInputStream [9187,9204]
    FieldDeclaration [9215,9247]
        Modifier: private [9215,9222]
        SimpleType [9223,9234]
            SimpleName: ClassLoader [9223,9234]
        VariableDeclarationFragment [9235,9246]
            SimpleName: classLoader [9235,9246]
    MethodDeclaration [9257,9709]
        Javadoc [9257,9521]
            TagElement [9272,9284]
                TextElement: Constructor. [9272,9284]
            TagElement [9296,9335]
                SimpleName: in [9303,9305]
                TextElement:  The <code>InputStream</code>. [9305,9335]
            TagElement [9347,9384]
                SimpleName: classLoader [9354,9365]
                TextElement:  classloader to use [9365,9384]
            TagElement [9396,9467]
                SimpleName: IOException [9404,9415]
                TextElement:  if an I/O error occurs while reading stream header. [9415,9467]
            TagElement [9479,9509]
                QualifiedName: java.io.ObjectInputStream [9484,9509]
        Modifier: public [9530,9536]
        SimpleName: ClassLoaderAwareObjectInputStream [9537,9570]
        SingleVariableDeclaration [9571,9585]
            SimpleType [9571,9582]
                SimpleName: InputStream [9571,9582]
            SimpleName: in [9583,9585]
        SingleVariableDeclaration [9587,9610]
            SimpleType [9587,9598]
                SimpleName: ClassLoader [9587,9598]
            SimpleName: classLoader [9599,9610]
        SimpleType [9619,9630]
            SimpleName: IOException [9619,9630]
        Block [9631,9709]
            SuperConstructorInvocation [9645,9655]
                SimpleName: in [9651,9653]
            ExpressionStatement [9668,9699]
                Assignment [9668,9698]
                    FieldAccess [9668,9684]
                        ThisExpression [9668,9672]
                        SimpleName: classLoader [9673,9684]
                    ASSIGNMENT_OPERATOR: = [9685,9686]
                    SimpleName: classLoader [9687,9698]
    MethodDeclaration [9719,10662]
        Javadoc [9719,10238]
            TagElement [9734,9903]
                TextElement: Overriden version that uses the parametrized <code>ClassLoader</code> or the <code>ClassLoader</code> [9734,9835]
                TextElement: of the current <code>Thread</code> to resolve the class. [9847,9903]
            TagElement [9915,9979]
                SimpleName: desc [9922,9926]
                TextElement:  An instance of class <code>ObjectStreamClass</code>. [9926,9979]
            TagElement [9991,10062]
                TextElement:  A <code>Class</code> object corresponding to <code>desc</code>. [9998,10062]
            TagElement [10074,10135]
                SimpleName: IOException [10082,10093]
                TextElement:  Any of the usual Input/Output exceptions. [10093,10135]
            TagElement [10147,10226]
                SimpleName: ClassNotFoundException [10155,10177]
                TextElement:  If class of a serialized object cannot be found. [10177,10226]
        MarkerAnnotation [10247,10256]
            SimpleName: Override [10248,10256]
        Modifier: protected [10265,10274]
        ParameterizedType [10275,10283]
            SimpleType [10275,10280]
                SimpleName: Class [10275,10280]
            WildcardType [10281,10282]
        SimpleName: resolveClass [10284,10296]
        SingleVariableDeclaration [10297,10319]
            SimpleType [10297,10314]
                SimpleName: ObjectStreamClass [10297,10314]
            SimpleName: desc [10315,10319]
        SimpleType [10328,10339]
            SimpleName: IOException [10328,10339]
        SimpleType [10341,10363]
            SimpleName: ClassNotFoundException [10341,10363]
        Block [10364,10662]
            VariableDeclarationStatement [10378,10407]
                SimpleType [10378,10384]
                    SimpleName: String [10378,10384]
                VariableDeclarationFragment [10385,10406]
                    SimpleName: name [10385,10389]
                    MethodInvocation [10392,10406]
                        METHOD_INVOCATION_RECEIVER [10392,10396]
                            SimpleName: desc [10392,10396]
                        SimpleName: getName [10397,10404]
            TryStatement [10420,10652]
                Block [10424,10503]
                    ReturnStatement [10442,10489]
                        MethodInvocation [10449,10488]
                            METHOD_INVOCATION_RECEIVER [10449,10454]
                                SimpleName: Class [10449,10454]
                            SimpleName: forName [10455,10462]
                            METHOD_INVOCATION_ARGUMENTS [10463,10487]
                                SimpleName: name [10463,10467]
                                BooleanLiteral: false [10469,10474]
                                SimpleName: classLoader [10476,10487]
                CatchClause [10504,10652]
                    SingleVariableDeclaration [10511,10536]
                        SimpleType [10511,10533]
                            SimpleName: ClassNotFoundException [10511,10533]
                        SimpleName: ex [10534,10536]
                    Block [10538,10652]
                        ReturnStatement [10556,10638]
                            MethodInvocation [10563,10637]
                                METHOD_INVOCATION_RECEIVER [10563,10568]
                                    SimpleName: Class [10563,10568]
                                SimpleName: forName [10569,10576]
                                METHOD_INVOCATION_ARGUMENTS [10577,10636]
                                    SimpleName: name [10577,10581]
                                    BooleanLiteral: false [10583,10588]
                                    MethodInvocation [10590,10636]
                                        METHOD_INVOCATION_RECEIVER [10590,10612]
                                            MethodInvocation [10590,10612]
                                                METHOD_INVOCATION_RECEIVER [10590,10596]
                                                    SimpleName: Thread [10590,10596]
                                                SimpleName: currentThread [10597,10610]
                                        SimpleName: getContextClassLoader [10613,10634]
to
TypeDeclaration [1097,7437]
at 10
===
insert-node
---
IfStatement [2830,2886]
to
Block [2786,3122]
at 0
===
insert-tree
---
VariableDeclarationStatement [2942,3007]
    SimpleType [2942,2962]
        SimpleName: ByteArrayInputStream [2942,2962]
    VariableDeclarationFragment [2963,3006]
        SimpleName: bais [2963,2967]
        ClassInstanceCreation [2970,3006]
            SimpleType [2974,2994]
                SimpleName: ByteArrayInputStream [2974,2994]
            SimpleName: objectData [2995,3005]
to
Block [2786,3122]
at 2
===
insert-tree
---
VariableDeclarationStatement [3017,3061]
    SimpleType [3017,3050]
        SimpleName: ClassLoaderAwareObjectInputStream [3017,3050]
    VariableDeclarationFragment [3051,3060]
        SimpleName: in [3051,3053]
        NullLiteral [3056,3060]
to
Block [2786,3122]
at 3
===
insert-tree
---
TryStatement [3070,4069]
    Block [3074,3494]
        ExpressionStatement [3132,3217]
            Assignment [3132,3216]
                SimpleName: in [3132,3134]
                ASSIGNMENT_OPERATOR: = [3135,3136]
                ClassInstanceCreation [3137,3216]
                    SimpleType [3141,3174]
                        SimpleName: ClassLoaderAwareObjectInputStream [3141,3174]
                    SimpleName: bais [3175,3179]
                    MethodInvocation [3181,3215]
                        METHOD_INVOCATION_RECEIVER [3181,3198]
                            MethodInvocation [3181,3198]
                                METHOD_INVOCATION_RECEIVER [3181,3187]
                                    SimpleName: object [3181,3187]
                                SimpleName: getClass [3188,3196]
                        SimpleName: getClassLoader [3199,3213]
        ReturnStatement [3456,3483]
            CastExpression [3463,3482]
                SimpleType [3464,3465]
                    SimpleName: T [3464,3465]
                MethodInvocation [3467,3482]
                    METHOD_INVOCATION_RECEIVER [3467,3469]
                        SimpleName: in [3467,3469]
                    SimpleName: readObject [3470,3480]
    CatchClause [3495,3649]
        SingleVariableDeclaration [3502,3527]
            SimpleType [3502,3524]
                SimpleName: ClassNotFoundException [3502,3524]
            SimpleName: ex [3525,3527]
        Block [3529,3649]
            ThrowStatement [3543,3639]
                ClassInstanceCreation [3549,3638]
                    SimpleType [3553,3575]
                        SimpleName: SerializationException [3553,3575]
                    StringLiteral: "ClassNotFoundException while reading cloned object data" [3576,3633]
                    SimpleName: ex [3635,3637]
    CatchClause [3650,3782]
        SingleVariableDeclaration [3657,3671]
            SimpleType [3657,3668]
                SimpleName: IOException [3657,3668]
            SimpleName: ex [3669,3671]
        Block [3673,3782]
            ThrowStatement [3687,3772]
                ClassInstanceCreation [3693,3771]
                    SimpleType [3697,3719]
                        SimpleName: SerializationException [3697,3719]
                    StringLiteral: "IOException while reading cloned object data" [3720,3766]
                    SimpleName: ex [3768,3770]
    Block [3791,4069]
        TryStatement [3805,4059]
            Block [3809,3908]
                IfStatement [3827,3894]
                    InfixExpression [3831,3841]
                        SimpleName: in [3831,3833]
                        INFIX_EXPRESSION_OPERATOR: != [3834,3836]
                        NullLiteral [3837,3841]
                    Block [3843,3894]
                        ExpressionStatement [3865,3876]
                            MethodInvocation [3865,3875]
                                METHOD_INVOCATION_RECEIVER [3865,3867]
                                    SimpleName: in [3865,3867]
                                SimpleName: close [3868,3873]
            CatchClause [3909,4059]
                SingleVariableDeclaration [3916,3930]
                    SimpleType [3916,3927]
                        SimpleName: IOException [3916,3927]
                    SimpleName: ex [3928,3930]
                Block [3932,4059]
                    ThrowStatement [3950,4045]
                        ClassInstanceCreation [3956,4044]
                            SimpleType [3960,3982]
                                SimpleName: SerializationException [3960,3982]
                            StringLiteral: "IOException on closing cloned object data InputStream." [3983,4039]
                            SimpleName: ex [4041,4043]
to
Block [2786,3122]
at 4
===
insert-tree
---
InfixExpression [2834,2848]
    SimpleName: object [2834,2840]
    INFIX_EXPRESSION_OPERATOR: == [2841,2843]
    NullLiteral [2844,2848]
to
IfStatement [2830,2886]
at 0
===
insert-node
---
Block [2850,2886]
to
IfStatement [2830,2886]
at 1
===
insert-tree
---
ArrayType [2895,2901]
    PrimitiveType: byte [2895,2899]
    Dimension [2899,2901]
to
VariableDeclarationStatement [3002,3093]
at 0
===
move-tree
---
ReturnStatement [3102,3116]
    SimpleName: result [3109,3115]
to
Block [2850,2886]
at 0
===
update-node
---
SimpleName: result [3049,3055]
replace result by objectData
===
move-tree
---
MethodInvocation [3074,3091]
    SimpleName: serialize [3074,3083]
    METHOD_INVOCATION_ARGUMENTS [3084,3090]
        SimpleName: object [3084,3090]
to
VariableDeclarationFragment [3049,3092]
at 1
===
insert-node
---
NullLiteral [2871,2875]
to
ReturnStatement [3102,3116]
at 0
===
delete-node
---
SimpleName: result [3109,3115]
===
===
delete-tree
---
SingleMemberAnnotation [3002,3032]
    SimpleName: SuppressWarnings [3003,3019]
    StringLiteral: "unchecked" [3020,3031]
===
delete-node
---
Modifier: final [3041,3046]
===
===
delete-tree
---
SimpleType [3047,3048]
    SimpleName: T [3047,3048]
===
delete-tree
---
SimpleType [3059,3060]
    SimpleName: T [3059,3060]
===
delete-node
---
SimpleName: deserialize [3062,3073]
===
===
delete-node
---
METHOD_INVOCATION_ARGUMENTS [3074,3091]
===
===
delete-node
---
MethodInvocation [3062,3092]
===
===
delete-node
---
CastExpression [3058,3092]
===
