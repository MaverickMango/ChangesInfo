diff --git a/src/java/org/apache/commons/math/util/MathUtils.java b/src/java/org/apache/commons/math/util/MathUtils.java
index c5342ae..df71405 100644
--- a/src/java/org/apache/commons/math/util/MathUtils.java
+++ b/src/java/org/apache/commons/math/util/MathUtils.java
@@ -409,7 +409,7 @@
      * @since 1.1
      */
     public static int gcd(int u, int v) {
-        if (u * v == 0) {
+        if ((u == 0) || (v == 0)) {
             return (Math.abs(u) + Math.abs(v));
         }
         // keep u and v negative, as negative integers range down to
diff --git a/src/site/xdoc/changes.xml b/src/site/xdoc/changes.xml
index 8e0dc75..388df56 100644
--- a/src/site/xdoc/changes.xml
+++ b/src/site/xdoc/changes.xml
@@ -39,6 +39,9 @@
   </properties>
   <body>
     <release version="2.0" date="TBD" description="TBD">
+      <action dev="luc" type="fix" issue="MATH-238" due-to="Chritian Semrau">
+        Fixed an error in gcd computation for large values.
+      </action>
       <action dev="luc" type="add" >
         Added method to walk matrix entries with or without changing them in the
         visitor design pattern sense. Three different orders can be used, row by row,
diff --git a/src/test/org/apache/commons/math/util/MathUtilsTest.java b/src/test/org/apache/commons/math/util/MathUtilsTest.java
index 0aad8f5..dd99e91 100644
--- a/src/test/org/apache/commons/math/util/MathUtilsTest.java
+++ b/src/test/org/apache/commons/math/util/MathUtilsTest.java
@@ -291,6 +291,9 @@
         assertEquals(1, MathUtils.gcd(-a, c));
         assertEquals(1, MathUtils.gcd(a, -c));
         assertEquals(1, MathUtils.gcd(-a, -c));
+
+        assertEquals(3 * (1<<15), MathUtils.gcd(3 * (1<<20), 9 * (1<<15)));
+
     }
 
     public void testHash() {
