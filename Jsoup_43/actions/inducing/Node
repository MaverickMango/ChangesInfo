===
insert-tree
---
Javadoc [19093,19429]
    TagElement [19104,19305]
        TextElement: Check if this node is equal to another node. A node is considered equal if its attributes and content equal the [19104,19215]
        TextElement: other node; particularly its position in the tree does not influence its equality. [19223,19305]
    TagElement [19313,19348]
        SimpleName: o [19320,19321]
        TextElement:  other object to compare to [19321,19348]
    TagElement [19356,19421]
        TextElement:  true if the content of this node is the same as the other [19363,19421]
to
MethodDeclaration [19089,19264]
at 0
===
insert-tree
---
Javadoc [19840,20282]
    TagElement [19851,20203]
        TextElement: Calculates a hash code for this node, which includes iterating all its attributes, and recursing into any child [19851,19962]
        TextElement: nodes. This means that a node's hashcode is based on it and its child content, and not its parent or place in the [19970,20083]
        TextElement: tree. So two nodes with the same content, regardless of their position in the tree, will have the same hashcode. [20091,20203]
    TagElement [20211,20242]
        TextElement:  the calculated hashcode [20218,20242]
    TagElement [20250,20274]
        MethodRef [20255,20274]
            SimpleName: Node [20255,20259]
            SimpleName: equals [20260,20266]
            MethodRefParameter [20267,20273]
                SimpleType [20267,20273]
                    SimpleName: Object [20267,20273]
to
MethodDeclaration [19270,19561]
at 0
===
insert-tree
---
IfStatement [19490,19517]
    InfixExpression [19494,19503]
        ThisExpression [19494,19498]
        INFIX_EXPRESSION_OPERATOR: == [19499,19501]
        SimpleName: o [19502,19503]
    ReturnStatement [19505,19517]
        BooleanLiteral: true [19512,19516]
to
Block [19135,19264]
at 0
===
insert-tree
---
IfStatement [19526,19584]
    InfixExpression [19530,19569]
        InfixExpression [19530,19539]
            SimpleName: o [19530,19531]
            INFIX_EXPRESSION_OPERATOR: == [19532,19534]
            NullLiteral [19535,19539]
        INFIX_EXPRESSION_OPERATOR: || [19540,19542]
        InfixExpression [19543,19569]
            MethodInvocation [19543,19553]
                SimpleName: getClass [19543,19551]
            INFIX_EXPRESSION_OPERATOR: != [19554,19556]
            MethodInvocation [19557,19569]
                METHOD_INVOCATION_RECEIVER [19557,19558]
                    SimpleName: o [19557,19558]
                SimpleName: getClass [19559,19567]
    ReturnStatement [19571,19584]
        BooleanLiteral: false [19578,19583]
to
Block [19135,19264]
at 1
===
insert-tree
---
VariableDeclarationStatement [19594,19615]
    SimpleType [19594,19598]
        SimpleName: Node [19594,19598]
    VariableDeclarationFragment [19599,19614]
        SimpleName: node [19599,19603]
        CastExpression [19606,19614]
            SimpleType [19607,19611]
                SimpleName: Node [19607,19611]
            SimpleName: o [19613,19614]
to
Block [19135,19264]
at 2
===
insert-tree
---
IfStatement [19625,19726]
    ConditionalExpression [19629,19711]
        InfixExpression [19629,19647]
            SimpleName: childNodes [19629,19639]
            INFIX_EXPRESSION_OPERATOR: != [19640,19642]
            NullLiteral [19643,19647]
        PrefixExpression [19650,19685]
            PREFIX_EXPRESSION_OPERATOR: ! [19650,19651]
            MethodInvocation [19651,19685]
                METHOD_INVOCATION_RECEIVER [19651,19661]
                    SimpleName: childNodes [19651,19661]
                SimpleName: equals [19662,19668]
                METHOD_INVOCATION_ARGUMENTS [19669,19684]
                    QualifiedName: node.childNodes [19669,19684]
        InfixExpression [19688,19711]
            QualifiedName: node.childNodes [19688,19703]
            INFIX_EXPRESSION_OPERATOR: != [19704,19706]
            NullLiteral [19707,19711]
    ReturnStatement [19713,19726]
        BooleanLiteral: false [19720,19725]
to
Block [19135,19264]
at 3
===
insert-tree
---
ReturnStatement [19735,19828]
    PrefixExpression [19742,19827]
        PREFIX_EXPRESSION_OPERATOR: ! [19742,19743]
        ParenthesizedExpression [19743,19827]
            ConditionalExpression [19744,19826]
                InfixExpression [19744,19762]
                    SimpleName: attributes [19744,19754]
                    INFIX_EXPRESSION_OPERATOR: != [19755,19757]
                    NullLiteral [19758,19762]
                PrefixExpression [19765,19800]
                    PREFIX_EXPRESSION_OPERATOR: ! [19765,19766]
                    MethodInvocation [19766,19800]
                        METHOD_INVOCATION_RECEIVER [19766,19776]
                            SimpleName: attributes [19766,19776]
                        SimpleName: equals [19777,19783]
                        METHOD_INVOCATION_ARGUMENTS [19784,19799]
                            QualifiedName: node.attributes [19784,19799]
                InfixExpression [19803,19826]
                    QualifiedName: node.attributes [19803,19818]
                    INFIX_EXPRESSION_OPERATOR: != [19819,19821]
                    NullLiteral [19822,19826]
to
Block [19135,19264]
at 4
===
insert-tree
---
VariableDeclarationStatement [20333,20393]
    PrimitiveType: int [20333,20336]
    VariableDeclarationFragment [20337,20392]
        SimpleName: result [20337,20343]
        ConditionalExpression [20346,20392]
            InfixExpression [20346,20364]
                SimpleName: childNodes [20346,20356]
                INFIX_EXPRESSION_OPERATOR: != [20357,20359]
                NullLiteral [20360,20364]
            MethodInvocation [20367,20388]
                METHOD_INVOCATION_RECEIVER [20367,20377]
                    SimpleName: childNodes [20367,20377]
                SimpleName: hashCode [20378,20386]
            NumberLiteral: 0 [20391,20392]
to
Block [19306,19561]
at 0
===
delete-tree
---
ReturnStatement [19241,19258]
    InfixExpression [19248,19257]
        ThisExpression [19248,19252]
        INFIX_EXPRESSION_OPERATOR: == [19253,19255]
        SimpleName: o [19256,19257]
===
delete-tree
---
VariableDeclarationStatement [19316,19376]
    PrimitiveType: int [19316,19319]
    VariableDeclarationFragment [19320,19375]
        SimpleName: result [19320,19326]
        ConditionalExpression [19329,19375]
            InfixExpression [19329,19347]
                SimpleName: parentNode [19329,19339]
                INFIX_EXPRESSION_OPERATOR: != [19340,19342]
                NullLiteral [19343,19347]
            MethodInvocation [19350,19371]
                METHOD_INVOCATION_RECEIVER [19350,19360]
                    SimpleName: parentNode [19350,19360]
                SimpleName: hashCode [19361,19369]
            NumberLiteral: 0 [19374,19375]
