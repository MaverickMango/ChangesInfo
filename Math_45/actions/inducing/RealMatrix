===
insert-node
---
Javadoc [9003,9537]
to
MethodDeclaration [8502,9059]
at 0
===
insert-node
---
Javadoc [11394,11692]
to
MethodDeclaration [10733,11151]
at 0
===
insert-node
---
Javadoc [12270,12598]
to
MethodDeclaration [11663,12111]
at 0
===
insert-node
---
Javadoc [12640,13161]
to
MethodDeclaration [12117,12646]
at 0
===
insert-node
---
Javadoc [13215,13620]
to
MethodDeclaration [12652,13268]
at 0
===
insert-tree
---
TagElement [7092,7212]
    QualifiedName: org.apache.commons.math.exception.ZeroException [7100,7147]
    TextElement:  if [7147,7150]
    TagElement [7157,7174]
        TextElement:  subMatrix [7163,7173]
    TextElement:  does not contain at least one column. [7174,7212]
to
Javadoc [6230,7272]
at 4
===
insert-tree
---
TagElement [7219,7382]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [7227,7280]
    TextElement:  if [7280,7283]
    TagElement [7290,7307]
        TextElement:  subMatrix [7296,7306]
    TextElement:  does not fit into this matrix from element in [7307,7353]
    TagElement [7360,7381]
        TextElement:  (row, column) [7366,7380]
    TextElement: . [7381,7382]
to
Javadoc [6230,7272]
at 5
===
insert-tree
---
TagElement [7389,7556]
    QualifiedName: org.apache.commons.math.exception.DimensionMismatchException [7397,7457]
    TextElement: if  [7464,7467]
    TagElement [7467,7484]
        TextElement:  subMatrix [7473,7483]
    TextElement:  is not rectangular. [7484,7504]
    TextElement: (not all rows have the same length) or empty. [7511,7556]
to
Javadoc [6230,7272]
at 6
===
insert-tree
---
TagElement [7563,7670]
    QualifiedName: org.apache.commons.math.exception.NullArgumentException [7571,7626]
    TextElement:  if [7626,7629]
    TagElement [7636,7653]
        TextElement:  subMatrix [7642,7652]
    TextElement:  is  [7653,7657]
    TagElement [7657,7669]
        TextElement:  null [7663,7668]
    TextElement: . [7669,7670]
to
Javadoc [6230,7272]
at 7
===
insert-node
---
TagElement [8233,8331]
to
Javadoc [7643,8116]
at 2
===
insert-tree
---
TagElement [8338,8444]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [8346,8399]
    TextElement:  if the [8399,8406]
    TextElement: specified row index is invalid. [8413,8444]
to
Javadoc [7643,8116]
at 3
===
move-tree
---
TagElement [8512,8619]
    TextElement: Sets the entries in column number <code>column</code> [8512,8565]
    TextElement: as a column matrix.  Column indices start at 0. [8572,8619]
to
Javadoc [9003,9537]
at 0
===
move-tree
---
TagElement [8632,8666]
    SimpleName: column [8639,8645]
    TextElement:  the column to be set [8645,8666]
to
Javadoc [9003,9537]
at 1
===
insert-node
---
TagElement [9159,9260]
to
Javadoc [9003,9537]
at 2
===
insert-tree
---
TagElement [9267,9376]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [9275,9328]
    TextElement:  if [9328,9331]
    TextElement: the specified column index is invalid. [9338,9376]
to
Javadoc [9003,9537]
at 3
===
insert-node
---
TagElement [9383,9530]
to
Javadoc [9003,9537]
at 4
===
insert-node
---
TagElement [10975,11061]
to
Javadoc [10197,10670]
at 2
===
insert-tree
---
TagElement [11068,11177]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [11076,11129]
    TextElement:  if the [11129,11136]
    TextElement: specified column index is invalid. [11143,11177]
to
Javadoc [10197,10670]
at 3
===
insert-tree
---
TagElement [11405,11475]
    TextElement: Get the entries at the given row index. [11405,11444]
    TextElement: Row indices start at 0. [11452,11475]
to
Javadoc [11394,11692]
at 0
===
move-tree
---
TagElement [10962,10994]
    SimpleName: row [10969,10972]
    TextElement:  the row to be fetched [10972,10994]
to
Javadoc [11394,11692]
at 1
===
insert-tree
---
TagElement [11527,11567]
    TextElement:  the array of entries in the row. [11534,11567]
to
Javadoc [11394,11692]
at 2
===
insert-tree
---
TagElement [11575,11684]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [11583,11636]
    TextElement:  if the [11636,11643]
    TextElement: specified row index is not valid. [11651,11684]
to
Javadoc [11394,11692]
at 3
===
insert-node
---
TagElement [11874,11959]
to
Javadoc [11157,11615]
at 2
===
insert-tree
---
TagElement [11967,12074]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [11975,12028]
    TextElement:  if the [12028,12035]
    TextElement: specified row index is invalid. [12043,12074]
to
Javadoc [11157,11615]
at 3
===
insert-tree
---
TagElement [12281,12369]
    TextElement: Get the entries at the given column index as an array. [12281,12335]
    TextElement: Column indices start at 0. [12343,12369]
to
Javadoc [12270,12598]
at 0
===
move-tree
---
TagElement [11904,11942]
    SimpleName: column [11911,11917]
    TextElement:  the column to be fetched [11917,11942]
to
Javadoc [12270,12598]
at 1
===
insert-tree
---
TagElement [12427,12470]
    TextElement:  the array of entries in the column. [12434,12470]
to
Javadoc [12270,12598]
at 2
===
insert-tree
---
TagElement [12478,12590]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [12486,12539]
    TextElement:  if the [12539,12546]
    TextElement: specified column index is not valid. [12554,12590]
to
Javadoc [12270,12598]
at 3
===
insert-tree
---
TagElement [12651,12753]
    TextElement: Set the entries at the given column index [12651,12692]
    TextElement: as a column matrix array.  Column indices start at 0. [12700,12753]
to
Javadoc [12640,13161]
at 0
===
move-tree
---
TagElement [12251,12285]
    SimpleName: column [12258,12264]
    TextElement:  the column to be set [12264,12285]
to
Javadoc [12640,13161]
at 1
===
insert-node
---
TagElement [12807,12892]
to
Javadoc [12640,13161]
at 2
===
insert-tree
---
TagElement [12900,13010]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [12908,12961]
    TextElement:  if the [12961,12968]
    TextElement: specified column index is invalid. [12976,13010]
to
Javadoc [12640,13161]
at 3
===
move-tree
---
TagElement [12455,12590]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [12463,12529]
    TextElement: if the array size does not match one instance column. [12537,12590]
to
Javadoc [12640,13161]
at 4
===
insert-tree
---
TagElement [13226,13314]
    TextElement: Get the entry in the specified row and column. [13226,13272]
    TextElement: Row and column indices start at 0. [13280,13314]
to
Javadoc [13215,13620]
at 0
===
move-tree
---
TagElement [12992,13039]
    SimpleName: row [12999,13002]
    TextElement:   row location of entry to be fetched [13002,13039]
to
Javadoc [13215,13620]
at 1
===
move-tree
---
TagElement [13047,13100]
    SimpleName: column [13054,13060]
    TextElement:   column location of entry to be fetched [13060,13100]
to
Javadoc [13215,13620]
at 2
===
insert-tree
---
TagElement [13445,13495]
    TextElement:  the matrix entry at  [13452,13473]
    TagElement [13473,13494]
        TextElement:  (row, column) [13479,13493]
    TextElement: . [13494,13495]
to
Javadoc [13215,13620]
at 3
===
insert-tree
---
TagElement [13503,13612]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [13511,13564]
    TextElement:  if the [13564,13571]
    TextElement: row or column index is not valid. [13579,13612]
to
Javadoc [13215,13620]
at 4
===
insert-node
---
TagElement [13679,13767]
to
Javadoc [13274,13869]
at 0
===
insert-tree
---
TagElement [13934,14042]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [13942,13995]
    TextElement:  if [13995,13998]
    TextElement: the row or column index is not valid [14006,14042]
to
Javadoc [13274,13869]
at 5
===
insert-node
---
TagElement [14139,14229]
to
Javadoc [13929,14548]
at 0
===
insert-tree
---
TagElement [14410,14519]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [14418,14471]
    TextElement:  if [14471,14474]
    TextElement: the row or column index is not valid. [14482,14519]
to
Javadoc [13929,14548]
at 5
===
insert-node
---
TagElement [14622,14712]
to
Javadoc [14614,15240]
at 0
===
insert-tree
---
TagElement [14900,15009]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [14908,14961]
    TextElement:  if [14961,14964]
    TextElement: the row or column index is not valid. [14972,15009]
to
Javadoc [14614,15240]
at 5
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [4299,4352]
to
TagElement [4291,4352]
at 0
===
update-node
---
TextElement:   if the indices are not valid [4322,4352]
replace   if the indices are not valid by  if
===
insert-node
---
TextElement: the indices are not valid. [4363,4389]
to
TagElement [4291,4352]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [4796,4849]
to
TagElement [4751,4824]
at 0
===
update-node
---
TextElement:  if row or column selections are not valid [4782,4824]
replace  if row or column selections are not valid by  if
===
insert-node
---
TextElement: the indices are not valid. [4859,4885]
to
TagElement [4751,4824]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [5426,5479]
to
TagElement [5357,5417]
at 0
===
update-node
---
TextElement:  if the indices are not valid [5388,5417]
replace  if the indices are not valid by  if the
===
insert-node
---
TextElement: indices are not valid. [5493,5515]
to
TagElement [5357,5417]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [6115,6168]
to
TagElement [5989,6049]
at 0
===
update-node
---
TextElement:  if the indices are not valid [6020,6049]
replace  if the indices are not valid by  if the
===
insert-node
---
TextElement: indices are not valid. [6183,6205]
to
TagElement [5989,6049]
at 3
===
update-node
---
TextElement: Returns the entries in row number <code>row</code> [7353,7403]
replace Returns the entries in row number <code>row</code> by Geet the entries at the given row index
===
update-node
---
TextElement:  the row to be fetched [7474,7496]
replace  the row to be fetched by  Row to be fetched.
===
update-node
---
TextElement:  row matrix [7510,7521]
replace  row matrix by  row Matrix.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [7945,7998]
to
TagElement [7528,7594]
at 0
===
update-node
---
TextElement:  if the specified row index is invalid [7556,7594]
replace  if the specified row index is invalid by  if
===
insert-node
---
TextElement: the specified row index is invalid. [8008,8043]
to
TagElement [7528,7594]
at 3
===
update-node
---
TextElement: Sets the entries in row number <code>row</code> [7653,7700]
replace Sets the entries in row number <code>row</code> by Set the entries at the given row index
===
update-node
---
TextElement:  the row to be set [7771,7789]
replace  the row to be set by  Row to be set.
===
move-tree
---
SimpleName: matrix [7803,7809]
to
TagElement [8233,8331]
at 0
===
insert-node
---
TextElement:  Row matrix (must have one row and the same number of [8246,8299]
to
TagElement [8233,8331]
at 1
===
insert-node
---
TextElement: columns as the instance). [8306,8331]
to
TagElement [8233,8331]
at 2
===
update-node
---
TextElement: Returns the entries in column number <code>column</code> [8182,8238]
replace Returns the entries in column number <code>column</code> by Get the entries at the given column index
===
update-node
---
TextElement:  the column to be fetched [8318,8343]
replace  the column to be fetched by  Column to be fetched.
===
update-node
---
TextElement:  column matrix [8357,8371]
replace  column matrix by  column Matrix.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [8847,8900]
to
TagElement [8378,8447]
at 0
===
update-node
---
TextElement:  if the specified column index is invalid [8406,8447]
replace  if the specified column index is invalid by  if
===
insert-node
---
TextElement: the specified column index is invalid. [8910,8948]
to
TagElement [8378,8447]
at 3
===
update-node
---
TextElement: Sets the entries in column number <code>column</code> [8512,8565]
replace Sets the entries in column number <code>column</code> by Set the entries at the given column index
===
update-node
---
TextElement:  the column to be set [8645,8666]
replace  the column to be set by  Column to be set.
===
move-tree
---
SimpleName: matrix [8680,8686]
to
TagElement [9159,9260]
at 0
===
insert-node
---
TextElement:  Column matrix (must have one column and the same number [9172,9228]
to
TagElement [9159,9260]
at 1
===
insert-node
---
TextElement: of rows as the instance). [9235,9260]
to
TagElement [9159,9260]
at 2
===
move-tree
---
QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [8864,8930]
to
TagElement [9383,9530]
at 0
===
insert-node
---
TextElement: if the  [9464,9471]
to
TagElement [9383,9530]
at 1
===
insert-tree
---
TagElement [9471,9485]
    TextElement:  matrix [9477,9484]
to
TagElement [9383,9530]
at 2
===
insert-node
---
TextElement:  dimensions do not match one instance column. [9485,9530]
to
TagElement [9383,9530]
at 3
===
update-node
---
TextElement:  the row to be fetched [9191,9213]
replace  the row to be fetched by  Row to be fetched.
===
update-node
---
TextElement:  row vector [9227,9238]
replace  row vector by  a row vector.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [9788,9841]
to
TagElement [9245,9311]
at 0
===
update-node
---
TextElement:  if the specified row index is invalid [9273,9311]
replace  if the specified row index is invalid by  if
===
insert-node
---
TextElement: the specified row index is invalid. [9851,9886]
to
TagElement [9245,9311]
at 3
===
update-node
---
TextElement: Sets the entries in row number <code>row</code> [9370,9417]
replace Sets the entries in row number <code>row</code> by Set the entries at the given row index.
===
update-node
---
TextElement:  the row to be set [9484,9502]
replace  the row to be set by  Row to be set.
===
update-node
---
TextElement: as the instance) [9578,9594]
replace as the instance) by as the instance).
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [10174,10227]
to
TagElement [9601,9667]
at 0
===
update-node
---
TextElement:  if the specified row index is invalid [9629,9667]
replace  if the specified row index is invalid by  if
===
insert-node
---
TextElement: the specified row index is invalid. [10237,10272]
to
TagElement [9601,9667]
at 3
===
update-node
---
TextElement: Returns the entries in column number <code>column</code> [9884,9940]
replace Returns the entries in column number <code>column</code> by Get the entries at the given column index
===
update-node
---
TextElement:  the column to be fetched [10013,10038]
replace  the column to be fetched by  Column to be fetched.
===
update-node
---
TextElement:  column vector [10052,10066]
replace  column vector by  a column vector.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [10671,10724]
to
TagElement [10073,10142]
at 0
===
update-node
---
TextElement:  if the specified column index is invalid [10101,10142]
replace  if the specified column index is invalid by  if
===
insert-node
---
TextElement: the specified column index is invalid [10734,10771]
to
TagElement [10073,10142]
at 3
===
update-node
---
TextElement: Sets the entries in column number <code>column</code> [10207,10260]
replace Sets the entries in column number <code>column</code> by Set the entries at the given column index
===
update-node
---
TextElement:  the column to be set [10333,10354]
replace  the column to be set by  Column to be set.
===
move-tree
---
SimpleName: vector [10368,10374]
to
TagElement [10975,11061]
at 0
===
insert-node
---
TextElement:  column vector (must have the same number of rows as [10988,11040]
to
TagElement [10975,11061]
at 1
===
insert-node
---
TextElement: the instance). [11047,11061]
to
TagElement [10975,11061]
at 2
===
update-node
---
TextElement:  the row to be fetched [10972,10994]
replace  the row to be fetched by  Row to be fetched.
===
update-node
---
TextElement: Sets the entries in row number <code>row</code> [11168,11215]
replace Sets the entries in row number <code>row</code> by Set the entries at the given row index
===
update-node
---
TextElement:  the row to be set [11289,11307]
replace  the row to be set by  Row to be set.
===
move-tree
---
SimpleName: array [11322,11327]
to
TagElement [11874,11959]
at 0
===
insert-node
---
TextElement:  Row matrix (must have the same number of columns as [11886,11938]
to
TagElement [11874,11959]
at 1
===
insert-node
---
TextElement: the instance) [11946,11959]
to
TagElement [11874,11959]
at 2
===
update-node
---
TextElement:  the column to be fetched [11917,11942]
replace  the column to be fetched by  Column to be fetched.
===
update-node
---
TextElement:  the column to be set [12264,12285]
replace  the column to be set by  Column to be set.
===
move-tree
---
SimpleName: array [12300,12305]
to
TagElement [12807,12892]
at 0
===
insert-node
---
TextElement:  Column array (must have the same number of rows as [12819,12870]
to
TagElement [12807,12892]
at 1
===
insert-node
---
TextElement: the instance). [12878,12892]
to
TagElement [12807,12892]
at 2
===
update-node
---
TextElement:   row location of entry to be fetched [13002,13039]
replace   row location of entry to be fetched by  Row location of entry to be fetched.
===
update-node
---
TextElement:   column location of entry to be fetched [13060,13100]
replace   column location of entry to be fetched by  Column location of entry to be fetched.
===
move-tree
---
TextElement: Set the entry in the specified row and column. [13285,13331]
to
TagElement [13679,13767]
at 0
===
insert-node
---
TextElement: Row and column indices start at 0. [13733,13767]
to
TagElement [13679,13767]
at 1
===
update-node
---
TextElement:   row location of entry to be set [13620,13653]
replace   row location of entry to be set by  Row location of entry to be set.
===
update-node
---
TextElement:   column location of entry to be set [13674,13710]
replace   column location of entry to be set by  Column location of entry to be set.
===
update-node
---
TextElement:  matrix entry to be set in row,column [13730,13767]
replace  matrix entry to be set in row,column by  matrix entry to be set.
===
move-tree
---
TextElement: Change an entry in the specified row and column. [13940,13988]
to
TagElement [14139,14229]
at 0
===
insert-node
---
TextElement: Row and column indices start at 0. [14195,14229]
to
TagElement [14139,14229]
at 1
===
update-node
---
TextElement:   row location of entry to be set [14277,14310]
replace   row location of entry to be set by  Row location of entry to be set.
===
update-node
---
TextElement:   column location of entry to be set [14331,14367]
replace   column location of entry to be set by  Column location of entry to be set.
===
update-node
---
TextElement:  value to add to the current matrix entry in row,column [14391,14446]
replace  value to add to the current matrix entry in row,column by  value to add to the matrix entry.
===
move-tree
---
TextElement: Change an entry in the specified row and column. [14625,14673]
to
TagElement [14622,14712]
at 0
===
insert-node
---
TextElement: Row and column indices start at 0. [14678,14712]
to
TagElement [14622,14712]
at 1
===
update-node
---
TextElement:   row location of entry to be set [14962,14995]
replace   row location of entry to be set by  Row location of entry to be set.
===
update-node
---
TextElement:   column location of entry to be set [15016,15052]
replace   column location of entry to be set by  Column location of entry to be set.
===
update-node
---
TextElement:  multiplication factor for the current matrix entry in row,column [15073,15138]
replace  multiplication factor for the current matrix entry in row,column by  Multiplication factor for the matrix entry.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [21236,21289]
to
TagElement [21445,21506]
at 0
===
update-node
---
TextElement:   if the indices are not valid [21476,21506]
replace   if the indices are not valid by  if
===
insert-node
---
TextElement: the indices are not valid. [21300,21326]
to
TagElement [21445,21506]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [22929,22982]
to
TagElement [23105,23166]
at 0
===
update-node
---
TextElement:   if the indices are not valid [23136,23166]
replace   if the indices are not valid by  if
===
insert-node
---
TextElement: the indices are not valid. [22993,23019]
to
TagElement [23105,23166]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [27349,27402]
to
TagElement [27500,27561]
at 0
===
update-node
---
TextElement:   if the indices are not valid [27531,27561]
replace   if the indices are not valid by  if
===
insert-node
---
TextElement: the indices are not valid. [27413,27439]
to
TagElement [27500,27561]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [29056,29109]
to
TagElement [29174,29235]
at 0
===
update-node
---
TextElement:   if the indices are not valid [29205,29235]
replace   if the indices are not valid by  if
===
insert-node
---
TextElement: the indices are not valid. [29120,29146]
to
TagElement [29174,29235]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [33413,33466]
to
TagElement [33506,33567]
at 0
===
update-node
---
TextElement:   if the indices are not valid [33537,33567]
replace   if the indices are not valid by  if
===
insert-node
---
TextElement: the indices are not valid. [33477,33503]
to
TagElement [33506,33567]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [35109,35162]
to
TagElement [35169,35230]
at 0
===
update-node
---
TextElement:   if the indices are not valid [35200,35230]
replace   if the indices are not valid by  if the
===
insert-node
---
TextElement: indices are not valid. [35177,35199]
to
TagElement [35169,35230]
at 3
===
delete-node
---
SimpleName: MatrixIndexException [4302,4322]
===
===
delete-node
---
SimpleName: MatrixIndexException [4762,4782]
===
===
delete-node
---
SimpleName: MatrixIndexException [5368,5388]
===
===
delete-node
---
SimpleName: MatrixIndexException [6000,6020]
===
===
delete-tree
---
TagElement [6932,7043]
    SimpleName: MatrixIndexException [6940,6960]
    TextElement:   if subMatrix does not fit into this [6960,6997]
    TextElement: matrix from element in (row, column) [7007,7043]
===
delete-tree
---
TagElement [7050,7179]
    SimpleName: IllegalArgumentException [7058,7082]
    TextElement:  if <code>subMatrix</code> is not rectangular [7082,7127]
    TextElement: (not all rows have the same length) or empty [7135,7179]
===
delete-tree
---
TagElement [7186,7248]
    SimpleName: NullPointerException [7194,7214]
    TextElement:  if <code>subMatrix</code> is null [7214,7248]
===
delete-node
---
SimpleName: MatrixIndexException [7536,7556]
===
===
delete-node
---
TextElement:  row matrix (must have one row and the same number of columns [7809,7870]
===
===
delete-node
---
TextElement: as the instance) [7877,7893]
===
===
delete-node
---
TagElement [7796,7893]
===
===
delete-tree
---
TagElement [7900,7966]
    SimpleName: MatrixIndexException [7908,7928]
    TextElement:  if the specified row index is invalid [7928,7966]
===
delete-node
---
SimpleName: MatrixIndexException [8386,8406]
===
===
delete-node
---
TextElement:  column matrix (must have one column and the same number of rows [8686,8750]
===
===
delete-node
---
TextElement: as the instance) [8757,8773]
===
===
delete-node
---
TagElement [8673,8773]
===
===
delete-tree
---
TagElement [8780,8849]
    SimpleName: MatrixIndexException [8788,8808]
    TextElement:  if the specified column index is invalid [8808,8849]
===
delete-node
---
TextElement: if the matrix dimensions do not match one instance column. [8937,8995]
===
===
delete-node
---
TagElement [8856,8995]
===
===
delete-node
---
Javadoc [8502,9002]
===
===
delete-node
---
SimpleName: MatrixIndexException [9253,9273]
===
===
delete-node
---
SimpleName: MatrixIndexException [9609,9629]
===
===
delete-node
---
SimpleName: MatrixIndexException [10081,10101]
===
===
delete-node
---
TextElement:  column vector (must have the same number of rows as the instance) [10374,10440]
===
===
delete-node
---
TagElement [10361,10440]
===
===
delete-tree
---
TagElement [10447,10516]
    SimpleName: MatrixIndexException [10455,10475]
    TextElement:  if the specified column index is invalid [10475,10516]
===
delete-tree
---
TagElement [10744,10947]
    TextElement: Returns the entries in row number <code>row</code> as an array. [10744,10807]
    TextElement: <p> [10815,10818]
    TextElement: Row indices start at 0.  A <code>MatrixIndexException</code> is thrown [10826,10896]
    TextElement: unless  [10904,10911]
    TagElement [10911,10942]
        TextElement:  0 <= row < rowDimension [10917,10941]
    TextElement: .</p> [10942,10947]
===
delete-tree
---
TagElement [11002,11037]
    TextElement:  array of entries in the row [11009,11037]
===
delete-tree
---
TagElement [11045,11113]
    SimpleName: MatrixIndexException [11053,11073]
    TextElement:  if the specified row index is not valid [11073,11113]
===
delete-node
---
Javadoc [10733,11121]
===
===
delete-node
---
TextElement:  row matrix (must have the same number of columns as the instance) [11327,11393]
===
===
delete-node
---
TagElement [11315,11393]
===
===
delete-tree
---
TagElement [11401,11467]
    SimpleName: MatrixIndexException [11409,11429]
    TextElement:  if the specified row index is invalid [11429,11467]
===
delete-tree
---
TagElement [11674,11889]
    TextElement: Returns the entries in column number <code>col</code> as an array. [11674,11740]
    TextElement: <p> [11748,11751]
    TextElement: Column indices start at 0.  A <code>MatrixIndexException</code> is thrown [11759,11832]
    TextElement: unless  [11840,11847]
    TagElement [11847,11884]
        TextElement:  0 <= column < columnDimension [11853,11883]
    TextElement: .</p> [11884,11889]
===
delete-tree
---
TagElement [11950,11988]
    TextElement:  array of entries in the column [11957,11988]
===
delete-tree
---
TagElement [11996,12067]
    SimpleName: MatrixIndexException [12004,12024]
    TextElement:  if the specified column index is not valid [12024,12067]
===
delete-node
---
Javadoc [11663,12075]
===
===
delete-tree
---
TagElement [12128,12236]
    TextElement: Sets the entries in column number <code>column</code> [12128,12181]
    TextElement: as a column matrix.  Column indices start at 0. [12189,12236]
===
delete-node
---
TextElement:  column array (must have the same number of rows as the instance) [12305,12370]
===
===
delete-node
---
TagElement [12293,12370]
===
===
delete-tree
---
TagElement [12378,12447]
    SimpleName: MatrixIndexException [12386,12406]
    TextElement:  if the specified column index is invalid [12406,12447]
===
delete-node
---
Javadoc [12117,12598]
===
===
delete-tree
---
TagElement [12663,12977]
    TextElement: Returns the entry in the specified row and column. [12663,12713]
    TextElement: <p> [12721,12724]
    TextElement: Row and column indices start at 0 and must satisfy [12732,12782]
    TextElement: <ul> [12790,12794]
    TextElement: <li> [12802,12806]
    TagElement [12806,12837]
        TextElement:  0 <= row < rowDimension [12812,12836]
    TextElement: </li> [12837,12842]
    TextElement: <li> [12850,12854]
    TagElement [12854,12891]
        TextElement:  0 <= column < columnDimension [12860,12890]
    TextElement: </li> [12891,12896]
    TextElement: </ul> [12904,12909]
    TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [12917,12977]
===
delete-tree
---
TagElement [13108,13142]
    TextElement:  matrix entry in row,column [13115,13142]
===
delete-tree
---
TagElement [13150,13218]
    SimpleName: MatrixIndexException [13158,13178]
    TextElement:  if the row or column index is not valid [13178,13218]
===
delete-node
---
Javadoc [12652,13226]
===
===
delete-node
---
TextElement: <p> [13339,13342]
===
===
delete-node
---
TextElement: Row and column indices start at 0 and must satisfy [13350,13400]
===
===
delete-node
---
TextElement: <ul> [13408,13412]
===
===
delete-node
---
TextElement: <li> [13420,13424]
===
===
delete-tree
---
TagElement [13424,13455]
    TextElement:  0 <= row < rowDimension [13430,13454]
===
delete-node
---
TextElement: </li> [13455,13460]
===
===
delete-node
---
TextElement: <li> [13468,13472]
===
===
delete-tree
---
TagElement [13472,13509]
    TextElement:  0 <= column < columnDimension [13478,13508]
===
delete-node
---
TextElement: </li> [13509,13514]
===
===
delete-node
---
TextElement: </ul> [13522,13527]
===
===
delete-node
---
TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [13535,13595]
===
===
delete-node
---
TagElement [13285,13595]
===
===
delete-tree
---
TagElement [13775,13843]
    SimpleName: MatrixIndexException [13783,13803]
    TextElement:  if the row or column index is not valid [13803,13843]
===
delete-node
---
TextElement: <p> [13996,13999]
===
===
delete-node
---
TextElement: Row and column indices start at 0 and must satisfy [14007,14057]
===
===
delete-node
---
TextElement: <ul> [14065,14069]
===
===
delete-node
---
TextElement: <li> [14077,14081]
===
===
delete-tree
---
TagElement [14081,14112]
    TextElement:  0 <= row < rowDimension [14087,14111]
===
delete-node
---
TextElement: </li> [14112,14117]
===
===
delete-node
---
TextElement: <li> [14125,14129]
===
===
delete-tree
---
TagElement [14129,14166]
    TextElement:  0 <= column < columnDimension [14135,14165]
===
delete-node
---
TextElement: </li> [14166,14171]
===
===
delete-node
---
TextElement: </ul> [14179,14184]
===
===
delete-node
---
TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [14192,14252]
===
===
delete-node
---
TagElement [13940,14252]
===
===
delete-tree
---
TagElement [14454,14522]
    SimpleName: MatrixIndexException [14462,14482]
    TextElement:  if the row or column index is not valid [14482,14522]
===
delete-node
---
TextElement: <p> [14681,14684]
===
===
delete-node
---
TextElement: Row and column indices start at 0 and must satisfy [14692,14742]
===
===
delete-node
---
TextElement: <ul> [14750,14754]
===
===
delete-node
---
TextElement: <li> [14762,14766]
===
===
delete-tree
---
TagElement [14766,14797]
    TextElement:  0 <= row < rowDimension [14772,14796]
===
delete-node
---
TextElement: </li> [14797,14802]
===
===
delete-node
---
TextElement: <li> [14810,14814]
===
===
delete-tree
---
TagElement [14814,14851]
    TextElement:  0 <= column < columnDimension [14820,14850]
===
delete-node
---
TextElement: </li> [14851,14856]
===
===
delete-node
---
TextElement: </ul> [14864,14869]
===
===
delete-node
---
TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [14877,14937]
===
===
delete-node
---
TagElement [14625,14937]
===
===
delete-tree
---
TagElement [15146,15214]
    SimpleName: MatrixIndexException [15154,15174]
    TextElement:  if the row or column index is not valid [15174,15214]
===
delete-node
---
SimpleName: MatrixIndexException [21456,21476]
===
===
delete-node
---
SimpleName: MatrixIndexException [23116,23136]
===
===
delete-node
---
SimpleName: MatrixIndexException [27511,27531]
===
===
delete-node
---
SimpleName: MatrixIndexException [29185,29205]
===
===
delete-node
---
SimpleName: MatrixIndexException [33517,33537]
===
===
delete-node
---
SimpleName: MatrixIndexException [35180,35200]
===
