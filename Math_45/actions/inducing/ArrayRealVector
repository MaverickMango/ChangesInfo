===
insert-tree
---
ImportDeclaration [926,989]
    QualifiedName: org.apache.commons.math.exception.NullArgumentException [933,988]
to
CompilationUnit [0,36515]
at 4
===
insert-tree
---
ImportDeclaration [990,1058]
    QualifiedName: org.apache.commons.math.exception.DimensionMismatchException [997,1057]
to
CompilationUnit [0,36515]
at 5
===
insert-tree
---
ImportDeclaration [1059,1126]
    QualifiedName: org.apache.commons.math.exception.NumberIsTooLargeException [1066,1125]
to
CompilationUnit [0,36515]
at 6
===
insert-tree
---
ImportDeclaration [1127,1192]
    QualifiedName: org.apache.commons.math.exception.MathArithmeticException [1134,1191]
to
CompilationUnit [0,36515]
at 7
===
insert-node
---
Javadoc [3123,3786]
to
MethodDeclaration [2872,3572]
at 0
===
insert-node
---
Javadoc [4967,5319]
to
MethodDeclaration [4396,4997]
at 0
===
insert-node
---
Javadoc [22127,22411]
to
MethodDeclaration [21136,21513]
at 0
===
insert-node
---
Javadoc [28578,28890]
to
MethodDeclaration [27840,28248]
at 0
===
insert-tree
---
Javadoc [34594,34783]
    TagElement [34605,34659]
        TextElement: Check if any coordinate of this vector is  [34605,34647]
        TagElement [34647,34658]
            TextElement:  NaN [34653,34657]
        TextElement: . [34658,34659]
    TagElement [34674,34775]
        TextElement:   [34681,34682]
        TagElement [34682,34694]
            TextElement:  true [34688,34693]
        TextElement:  if any coordinate of this vector is  [34694,34731]
        TagElement [34731,34742]
            TextElement:  NaN [34737,34741]
        TextElement: , [34742,34743]
        TagElement [34751,34764]
            TextElement:  false [34757,34763]
        TextElement:  otherwise. [34764,34775]
to
MethodDeclaration [34006,34349]
at 0
===
insert-tree
---
Javadoc [34966,35211]
    TagElement [34977,35065]
        TextElement: Check whether any coordinate of this vector is infinite and none [34977,35041]
        TextElement: are  [35049,35053]
        TagElement [35053,35064]
            TextElement:  NaN [35059,35063]
        TextElement: . [35064,35065]
    TagElement [35080,35203]
        TextElement:   [35087,35088]
        TagElement [35088,35100]
            TextElement:  true [35094,35099]
        TextElement:  if any coordinate of this vector is infinite and [35100,35149]
        TextElement: none are  [35157,35166]
        TagElement [35166,35177]
            TextElement:  NaN [35172,35176]
        TextElement: ,  [35177,35179]
        TagElement [35179,35192]
            TextElement:  false [35185,35191]
        TextElement:  otherwise. [35192,35203]
to
MethodDeclaration [34355,34829]
at 0
===
insert-node
---
Javadoc [35465,36215]
to
MethodDeclaration [34835,36208]
at 0
===
insert-node
---
Javadoc [36819,36963]
to
MethodDeclaration [36214,36511]
at 0
===
move-tree
---
TextElement: into this vector.</p> [2093,2114]
to
TagElement [1674,2114]
at 6
===
insert-tree
---
TagElement [2977,3036]
    SimpleName: NullArgumentException [2985,3006]
    TextElement:  if  [3006,3010]
    TagElement [3010,3019]
        TextElement:  d [3016,3018]
    TextElement:  is  [3019,3023]
    TagElement [3023,3035]
        TextElement:  null [3029,3034]
    TextElement: . [3035,3036]
to
Javadoc [2682,2793]
at 2
===
insert-node
---
TagElement [3134,3511]
to
Javadoc [3123,3786]
at 0
===
move-tree
---
TagElement [3284,3312]
    SimpleName: d [3291,3292]
    TextElement:  data for new vector [3292,3312]
to
Javadoc [3123,3786]
at 1
===
insert-node
---
TagElement [3567,3672]
to
Javadoc [3123,3786]
at 2
===
insert-tree
---
TagElement [3680,3739]
    SimpleName: NullArgumentException [3688,3709]
    TextElement:  if  [3709,3713]
    TagElement [3713,3722]
        TextElement:  d [3719,3721]
    TextElement:  is  [3722,3726]
    TagElement [3726,3738]
        TextElement:  null [3732,3737]
    TextElement: . [3738,3739]
to
Javadoc [3123,3786]
at 3
===
move-tree
---
TagElement [3424,3455]
    MethodRef [3429,3455]
        SimpleName: ArrayRealVector [3430,3445]
        MethodRefParameter [3446,3454]
            ArrayType [3446,3454]
                PrimitiveType: double [3446,3452]
                Dimension [3452,3454]
to
Javadoc [3123,3786]
at 4
===
insert-tree
---
IfStatement [3855,3928]
    InfixExpression [3859,3868]
        SimpleName: d [3859,3860]
        INFIX_EXPRESSION_OPERATOR: == [3861,3863]
        NullLiteral [3864,3868]
    Block [3870,3928]
        ThrowStatement [3884,3918]
            ClassInstanceCreation [3890,3917]
                SimpleType [3894,3915]
                    SimpleName: NullArgumentException [3894,3915]
to
Block [3522,3572]
at 0
===
insert-tree
---
TagElement [4161,4220]
    SimpleName: NullArgumentException [4169,4190]
    TextElement:  if  [4190,4194]
    TagElement [4194,4203]
        TextElement:  d [4200,4202]
    TextElement:  is  [4203,4207]
    TagElement [4207,4219]
        TextElement:  null [4213,4218]
    TextElement: . [4219,4220]
to
Javadoc [3578,3758]
at 4
===
insert-tree
---
TagElement [4228,4326]
    SimpleName: NumberIsTooLargeException [4236,4261]
    TextElement:  if the size of  [4261,4277]
    TagElement [4277,4286]
        TextElement:  d [4283,4285]
    TextElement:  is less [4286,4294]
    TextElement: than  [4302,4307]
    TagElement [4307,4325]
        TextElement:  pos + size [4313,4324]
    TextElement: . [4325,4326]
to
Javadoc [3578,3758]
at 5
===
insert-tree
---
IfStatement [4403,4476]
    InfixExpression [4407,4416]
        SimpleName: d [4407,4408]
        INFIX_EXPRESSION_OPERATOR: == [4409,4411]
        NullLiteral [4412,4416]
    Block [4418,4476]
        ThrowStatement [4432,4466]
            ClassInstanceCreation [4438,4465]
                SimpleType [4442,4463]
                    SimpleName: NullArgumentException [4442,4463]
to
Block [3817,4117]
at 0
===
insert-tree
---
TagElement [4978,5019]
    TextElement: Construct a vector from part of an array. [4978,5019]
to
Javadoc [4967,5319]
at 0
===
move-tree
---
TagElement [4461,4487]
    SimpleName: d [4468,4469]
    TextElement:  array of Doubles. [4469,4487]
to
Javadoc [4967,5319]
at 1
===
move-tree
---
TagElement [4495,4529]
    SimpleName: pos [4502,4505]
    TextElement:  position of first entry [4505,4529]
to
Javadoc [4967,5319]
at 2
===
move-tree
---
TagElement [4537,4574]
    SimpleName: size [4544,4548]
    TextElement:  number of entries to copy [4548,4574]
to
Javadoc [4967,5319]
at 3
===
insert-tree
---
TagElement [5146,5205]
    SimpleName: NullArgumentException [5154,5175]
    TextElement:  if  [5175,5179]
    TagElement [5179,5188]
        TextElement:  d [5185,5187]
    TextElement:  is  [5188,5192]
    TagElement [5192,5204]
        TextElement:  null [5198,5203]
    TextElement: . [5204,5205]
to
Javadoc [4967,5319]
at 4
===
insert-tree
---
TagElement [5213,5311]
    SimpleName: NumberIsTooLargeException [5221,5246]
    TextElement:  if the size of  [5246,5262]
    TagElement [5262,5271]
        TextElement:  d [5268,5270]
    TextElement:  is less [5271,5279]
    TextElement: than  [5287,5292]
    TagElement [5292,5310]
        TextElement:  pos + size [5298,5309]
    TextElement: . [5310,5311]
to
Javadoc [4967,5319]
at 5
===
insert-tree
---
IfStatement [5388,5461]
    InfixExpression [5392,5401]
        SimpleName: d [5392,5393]
        INFIX_EXPRESSION_OPERATOR: == [5394,5396]
        NullLiteral [5397,5401]
    Block [5403,5461]
        ThrowStatement [5417,5451]
            ClassInstanceCreation [5423,5450]
                SimpleType [5427,5448]
                    SimpleName: NullArgumentException [5427,5448]
to
Block [4641,4997]
at 0
===
insert-tree
---
TagElement [5853,5912]
    SimpleName: NullArgumentException [5861,5882]
    TextElement:  if  [5882,5886]
    TagElement [5886,5895]
        TextElement:  v [5892,5894]
    TextElement:  is  [5895,5899]
    TagElement [5899,5911]
        TextElement:  null [5905,5910]
    TextElement: . [5911,5912]
to
Javadoc [5003,5111]
at 2
===
insert-tree
---
IfStatement [5972,6045]
    InfixExpression [5976,5985]
        SimpleName: v [5976,5977]
        INFIX_EXPRESSION_OPERATOR: == [5978,5980]
        NullLiteral [5981,5985]
    Block [5987,6045]
        ThrowStatement [6001,6035]
            ClassInstanceCreation [6007,6034]
                SimpleType [6011,6032]
                    SimpleName: NullArgumentException [6011,6032]
to
Block [5153,5300]
at 0
===
insert-tree
---
TagElement [6313,6372]
    SimpleName: NullArgumentException [6321,6342]
    TextElement:  if  [6342,6346]
    TagElement [6346,6355]
        TextElement:  v [6352,6354]
    TextElement:  is  [6355,6359]
    TagElement [6359,6371]
        TextElement:  null [6365,6370]
    TextElement: . [6371,6372]
to
Javadoc [5306,5414]
at 2
===
move-tree
---
TagElement [21147,21171]
    TextElement: Compute the dot product. [21147,21171]
to
Javadoc [22127,22411]
at 0
===
move-tree
---
TagElement [21179,21236]
    SimpleName: v [21186,21187]
    TextElement:  vector with which dot product should be computed [21187,21236]
to
Javadoc [22127,22411]
at 1
===
insert-tree
---
TagElement [22242,22304]
    TextElement:  the scalar dot product between instance and  [22249,22294]
    TagElement [22294,22303]
        TextElement:  v [22300,22302]
    TextElement: . [22303,22304]
to
Javadoc [22127,22411]
at 2
===
insert-tree
---
TagElement [22312,22403]
    SimpleName: DimensionMismatchException [22320,22346]
    TextElement:  if  [22346,22350]
    TagElement [22350,22359]
        TextElement:  v [22356,22358]
    TextElement:  is not the same [22359,22375]
    TextElement: size as this vector. [22383,22403]
to
Javadoc [22127,22411]
at 3
===
move-tree
---
TagElement [27844,27910]
    TextElement: Find the orthogonal projection of this vector onto another vector. [27844,27910]
to
Javadoc [28578,28890]
at 0
===
move-tree
---
TagElement [27918,27971]
    SimpleName: v [27925,27926]
    TextElement:  vector onto which instance must be projected [27926,27971]
to
Javadoc [28578,28890]
at 1
===
insert-tree
---
TagElement [28732,28783]
    TextElement:  Projection of this instance onto  [28739,28773]
    TagElement [28773,28782]
        TextElement:  v [28779,28781]
    TextElement: . [28782,28783]
to
Javadoc [28578,28890]
at 2
===
insert-tree
---
TagElement [28791,28882]
    SimpleName: DimensionMismatchException [28799,28825]
    TextElement:  if  [28825,28829]
    TagElement [28829,28838]
        TextElement:  v [28835,28837]
    TextElement:  is not the same size as [28838,28862]
    TextElement: this vector. [28870,28882]
to
Javadoc [28578,28890]
at 3
===
insert-node
---
TagElement [35476,35947]
to
Javadoc [35465,36215]
at 0
===
move-tree
---
TagElement [35419,35467]
    SimpleName: other [35426,35431]
    TextElement:  Object to test for equality to this [35431,35467]
to
Javadoc [35465,36215]
at 1
===
insert-tree
---
TagElement [36011,36207]
    TextElement:   [36018,36019]
    TagElement [36019,36031]
        TextElement:  true [36025,36030]
    TextElement:  if two vector objects are equal,  [36031,36065]
    TagElement [36065,36078]
        TextElement:  false [36071,36077]
    TextElement:  if [36078,36081]
    TagElement [36089,36102]
        TextElement:  other [36095,36101]
    TextElement:  is null, not an instance of  [36102,36131]
    TagElement [36131,36149]
        TextElement:  RealVector [36137,36148]
    TextElement: , or [36149,36153]
    TextElement: not equal to this  [36161,36179]
    TagElement [36179,36197]
        TextElement:  RealVector [36185,36196]
    TextElement:  instance. [36197,36207]
to
Javadoc [35465,36215]
at 2
===
insert-node
---
TagElement [36830,36920]
to
Javadoc [36819,36963]
at 0
===
insert-tree
---
TagElement [36935,36955]
    TextElement:  a hash code. [36942,36955]
to
Javadoc [36819,36963]
at 1
===
update-node
---
TextElement: <p>Zero-length vectors may be used to initialized construction of vectors [1706,1779]
replace <p>Zero-length vectors may be used to initialized construction of vectors by Zero-length vectors may be used to initialized construction of vectors
===
update-node
---
TextElement: or one of the <code>append</code> method ( [1936,1978]
replace or one of the <code>append</code> method ( by or one of the 
===
insert-tree
---
TagElement [2158,2172]
    TextElement:  append [2164,2171]
to
TagElement [1674,2114]
at 6
===
update-node
---
TextElement: into this vector.</p> [2093,2114]
replace into this vector.</p> by  method (
===
insert-node
---
TextElement: into this vector. [2296,2313]
to
TagElement [1674,2114]
at 14
===
update-node
---
TextElement: Construct a (size)-length vector of zeros. [2206,2248]
replace Construct a (size)-length vector of zeros. by Construct a vector of zeroes.
===
update-node
---
TextElement:  size of the vector [2267,2286]
replace  size of the vector by  Size of the vector.
===
update-node
---
TextElement: Construct an (size)-length vector with preset values. [2389,2442]
replace Construct an (size)-length vector with preset values. by Construct a vector with preset values.
===
update-node
---
TextElement:  size of the vector [2461,2480]
replace  size of the vector by  Size of the vector
===
update-node
---
TextElement:  fill the vector with this scalar value [2501,2540]
replace  fill the vector with this scalar value by  All entries will be set with this value.
===
update-node
---
TextElement:  array of doubles. [2767,2785]
replace  array of doubles. by  Array.
===
move-tree
---
TextElement: Create a new ArrayRealVector using the input array as the underlying [2883,2951]
to
TagElement [3134,3511]
at 0
===
move-tree
---
TextElement: data array. [2959,2970]
to
TagElement [3134,3511]
at 1
===
insert-node
---
TextElement: If an array is built specially in order to be embedded in a [3229,3288]
to
TagElement [3134,3511]
at 2
===
insert-node
---
TextElement: ArrayRealVector and not used directly, the  [3296,3339]
to
TagElement [3134,3511]
at 3
===
insert-tree
---
TagElement [3339,3356]
    TextElement:  copyArray [3345,3355]
to
TagElement [3134,3511]
at 4
===
insert-node
---
TextElement:  may be [3356,3363]
to
TagElement [3134,3511]
at 5
===
insert-node
---
TextElement: set to  [3371,3378]
to
TagElement [3134,3511]
at 6
===
insert-tree
---
TagElement [3378,3391]
    TextElement:  false [3384,3390]
to
TagElement [3134,3511]
at 7
===
insert-node
---
TextElement: . This will prevent the copying and improve [3391,3434]
to
TagElement [3134,3511]
at 8
===
insert-node
---
TextElement: performance as no new array will be built and no data will be copied. [3442,3511]
to
TagElement [3134,3511]
at 9
===
update-node
---
TextElement:  data for new vector [3292,3312]
replace  data for new vector by  Data for the new vector.
===
move-tree
---
SimpleName: copyArray [3327,3336]
to
TagElement [3567,3672]
at 0
===
insert-node
---
TextElement:  if  [3583,3587]
to
TagElement [3567,3672]
at 1
===
insert-tree
---
TagElement [3587,3599]
    TextElement:  true [3593,3598]
to
TagElement [3567,3672]
at 2
===
insert-node
---
TextElement: , the input array will be copied, [3599,3632]
to
TagElement [3567,3672]
at 3
===
insert-node
---
TextElement: otherwise it will be referenced. [3640,3672]
to
TagElement [3567,3672]
at 4
===
update-node
---
TextElement:  array of doubles. [3645,3663]
replace  array of doubles. by  Array.
===
update-node
---
TextElement:  position of first entry [3681,3705]
replace  position of first entry by  Position of first entry.
===
update-node
---
TextElement:  number of entries to copy [3724,3750]
replace  number of entries to copy by  Number of entries to copy.
===
update-node
---
TextElement:  array of Doubles. [4469,4487]
replace  array of Doubles. by  Array.
===
update-node
---
TextElement:  position of first entry [4505,4529]
replace  position of first entry by  Position of first entry.
===
update-node
---
TextElement:  number of entries to copy [4548,4574]
replace  number of entries to copy by  Number of entries to copy.
===
update-node
---
TextElement:  vector to copy [5088,5103]
replace  vector to copy by  vector to copy.
===
update-node
---
TextElement:  vector to copy [5391,5406]
replace  vector to copy by  Vector to copy.
===
update-node
---
TextElement:  vector to copy [5563,5578]
replace  vector to copy by  Vector to copy.
===
update-node
---
TextElement:  if true perform a deep copy otherwise perform a shallow copy [5597,5658]
replace  if true perform a deep copy otherwise perform a shallow copy by  If 
===
insert-tree
---
TagElement [6575,6587]
    TextElement:  true [6581,6586]
to
TagElement [5586,5658]
at 2
===
insert-node
---
TextElement:  perform a deep copy, otherwise perform a [6587,6628]
to
TagElement [5586,5658]
at 3
===
insert-node
---
TextElement: shallow copy. [6636,6649]
to
TagElement [5586,5658]
at 4
===
update-node
---
TextElement:  vector with which dot product should be computed [21187,21236]
replace  vector with which dot product should be computed by  Vector with which dot product should be computed
===
update-node
---
TextElement: <p>This method computes the distance consistent with the [23087,23143]
replace <p>This method computes the distance consistent with the by This method computes the distance consistent with the
===
update-node
---
TextElement: elements differences, or euclidian distance.</p> [23213,23261]
replace elements differences, or euclidian distance.</p> by elements differences, or euclidian distance.
===
update-node
---
TextElement:  distance between two vectors. [23330,23360]
replace  distance between two vectors. by  the distance between two vectors.
===
update-node
---
SimpleName: IllegalArgumentException [23379,23403]
replace IllegalArgumentException by DimensionMismatchException
===
update-node
---
TextElement:  if v is not the same size as this [23403,23437]
replace  if v is not the same size as this by  if 
===
insert-tree
---
TagElement [24399,24408]
    TextElement:  v [24405,24407]
to
TagElement [23368,23437]
at 2
===
insert-node
---
TextElement:  is not the same size as [24408,24432]
to
TagElement [23368,23437]
at 3
===
insert-node
---
TextElement: this vector. [24440,24452]
to
TagElement [23368,23437]
at 4
===
update-node
---
TextElement: <p>This method computes the distance consistent with [24668,24720]
replace <p>This method computes the distance consistent with by This method computes the distance consistent with
===
update-node
---
TextElement: elements differences.</p> [24794,24819]
replace elements differences.</p> by elements differences.
===
update-node
---
TextElement:  vector to which distance is requested [24835,24873]
replace  vector to which distance is requested by  Vector to which distance is requested.
===
update-node
---
TextElement:  distance between two vectors. [24888,24918]
replace  distance between two vectors. by  the distance between two vectors.
===
update-node
---
SimpleName: IllegalArgumentException [24937,24961]
replace IllegalArgumentException by DimensionMismatchException
===
update-node
---
TextElement:  if v is not the same size as this [24961,24995]
replace  if v is not the same size as this by  if 
===
insert-tree
---
TagElement [25904,25913]
    TextElement:  v [25910,25912]
to
TagElement [24926,24995]
at 2
===
insert-node
---
TextElement:  is not the same size [25913,25934]
to
TagElement [24926,24995]
at 3
===
insert-node
---
TextElement: as this vector. [25942,25957]
to
TagElement [24926,24995]
at 4
===
update-node
---
TextElement: <p>This method computes the distance consistent with [26272,26324]
replace <p>This method computes the distance consistent with by This method computes the distance consistent with
===
update-node
---
TextElement: elements differences.</p> [26404,26429]
replace elements differences.</p> by elements differences.
===
update-node
---
TextElement:  vector to which distance is requested [26445,26483]
replace  vector to which distance is requested by  Vector to which distance is requested.
===
update-node
---
TextElement:  distance between two vectors. [26498,26528]
replace  distance between two vectors. by  the distance between two vectors.
===
update-node
---
TextElement:  if v is not the same size as this [26571,26605]
replace  if v is not the same size as this by  if 
===
insert-tree
---
TagElement [27462,27471]
    TextElement:  v [27468,27470]
to
TagElement [26536,26605]
at 2
===
insert-node
---
TextElement:  is not the same size as this [27471,27500]
to
TagElement [26536,26605]
at 3
===
update-node
---
TextElement:  vector onto which instance must be projected [27926,27971]
replace  vector onto which instance must be projected by  Vector onto which instance must be projected.
===
update-node
---
TextElement:  vector to append to this one. [30334,30364]
replace  vector to append to this one. by  Vector to append to this one.
===
update-node
---
TextElement:  a new vector [30379,30392]
replace  a new vector by  a new vector.
===
update-node
---
TextElement:  index of first element to be set. [32392,32426]
replace  index of first element to be set. by  Index of first element to be set.
===
update-node
---
TextElement:  vector containing the values to set. [32442,32479]
replace  vector containing the values to set. by  Vector containing the values to set.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [33263,33316]
to
TagElement [32487,32571]
at 0
===
update-node
---
TextElement:  if the index is [32518,32534]
replace  if the index is by if the index is inconsistent with vector size.
===
update-node
---
TextElement:  vector to compare instance with [33149,33181]
replace  vector to compare instance with by  Vector to compare instance with.
===
update-node
---
SimpleName: IllegalArgumentException [33200,33224]
replace IllegalArgumentException by DimensionMismatchException
===
update-node
---
TextElement: have the same dimension [33254,33277]
replace have the same dimension by have the same dimension.
===
update-node
---
TextElement:  expected dimension. [33551,33571]
replace  expected dimension. by  Expected dimension.
===
update-node
---
SimpleName: IllegalArgumentException [33590,33614]
replace IllegalArgumentException by DimensionMismatchException
===
update-node
---
TextElement: inconsistent with vector size [33642,33671]
replace inconsistent with vector size by inconsistent with vector size.
===
move-tree
---
TextElement: Test for the equality of two real vectors. [34846,34888]
to
TagElement [35476,35947]
at 0
===
move-tree
---
TextElement: If all coordinates of two real vectors are exactly the same, and none are [34907,34980]
to
TagElement [35476,35947]
at 1
===
insert-tree
---
TagElement [35607,35618]
    TextElement:  NaN [35613,35617]
to
TagElement [35476,35947]
at 2
===
insert-node
---
TextElement: , the two real vectors are considered to be equal. [35618,35668]
to
TagElement [35476,35947]
at 3
===
insert-tree
---
TagElement [35676,35687]
    TextElement:  NaN [35682,35686]
to
TagElement [35476,35947]
at 4
===
insert-node
---
TextElement:  coordinates are considered to affect globally the vector [35687,35744]
to
TagElement [35476,35947]
at 5
===
move-tree
---
TextElement: and be equals to each other - i.e, if either (or all) coordinates of the [35173,35245]
to
TagElement [35476,35947]
at 6
===
insert-node
---
TextElement: real vector are equal to  [35832,35857]
to
TagElement [35476,35947]
at 7
===
insert-tree
---
TagElement [35857,35868]
    TextElement:  NaN [35863,35867]
to
TagElement [35476,35947]
at 8
===
insert-node
---
TextElement: , the real vector is equal to [35868,35897]
to
TagElement [35476,35947]
at 9
===
insert-node
---
TextElement: a vector with all  [35905,35923]
to
TagElement [35476,35947]
at 10
===
insert-tree
---
TagElement [35923,35934]
    TextElement:  NaN [35929,35933]
to
TagElement [35476,35947]
at 11
===
insert-node
---
TextElement:  coordinates. [35934,35947]
to
TagElement [35476,35947]
at 12
===
update-node
---
TextElement:  Object to test for equality to this [35431,35467]
replace  Object to test for equality to this by  Object to test for equality.
===
move-tree
---
TextElement: Get a hashCode for the real vector. [36225,36260]
to
TagElement [36830,36920]
at 0
===
insert-node
---
TextElement: All  [36873,36877]
to
TagElement [36830,36920]
at 1
===
insert-tree
---
TagElement [36877,36888]
    TextElement:  NaN [36883,36887]
to
TagElement [36830,36920]
at 2
===
insert-node
---
TextElement:  values have the same hash code. [36888,36920]
to
TagElement [36830,36920]
at 3
===
insert-tree
---
ThrowStatement [4526,4590]
    ClassInstanceCreation [4532,4589]
        SimpleType [4536,4561]
            SimpleName: NumberIsTooLargeException [4536,4561]
        InfixExpression [4562,4572]
            SimpleName: pos [4562,4565]
            INFIX_EXPRESSION_OPERATOR: + [4566,4567]
            SimpleName: size [4568,4572]
        QualifiedName: d.length [4574,4582]
        BooleanLiteral: true [4584,4588]
to
Block [3854,4029]
at 0
===
insert-tree
---
ThrowStatement [5511,5575]
    ClassInstanceCreation [5517,5574]
        SimpleType [5521,5546]
            SimpleName: NumberIsTooLargeException [5521,5546]
        InfixExpression [5547,5557]
            SimpleName: pos [5547,5550]
            INFIX_EXPRESSION_OPERATOR: + [5551,5552]
            SimpleName: size [5553,5557]
        QualifiedName: d.length [5559,5567]
        BooleanLiteral: true [5569,5573]
to
Block [4678,4853]
at 0
===
insert-tree
---
ThrowStatement [27913,27975]
    ClassInstanceCreation [27919,27974]
        SimpleType [27923,27946]
            SimpleName: MathArithmeticException [27923,27946]
        QualifiedName: LocalizedFormats.ZERO_NORM [27947,27973]
to
Block [27071,27176]
at 0
===
insert-tree
---
ThrowStatement [28168,28230]
    ClassInstanceCreation [28174,28229]
        SimpleType [28178,28201]
            SimpleName: MathArithmeticException [28178,28201]
        QualifiedName: LocalizedFormats.ZERO_NORM [28202,28228]
to
Block [27372,27503]
at 0
===
insert-tree
---
ThrowStatement [34519,34572]
    ClassInstanceCreation [34525,34571]
        SimpleType [34529,34555]
            SimpleName: DimensionMismatchException [34529,34555]
        QualifiedName: data.length [34556,34567]
        SimpleName: n [34569,34570]
to
Block [33814,33994]
at 0
===
delete-tree
---
ImportDeclaration [926,978]
    QualifiedName: org.apache.commons.math.MathRuntimeException [933,977]
===
delete-node
---
TextElement: <p>If an array is built specially in order to be embedded in a [2978,3040]
===
===
delete-node
---
TextElement: ArrayRealVector and not used directly, the <code>copyArray</code> may be [3048,3120]
===
===
delete-node
---
TextElement: set to <code>false</code. This will prevent the copying and improve [3128,3195]
===
===
delete-node
---
TextElement: performance as no new array will be built and no data will be copied.</p> [3203,3276]
===
===
delete-node
---
TagElement [2883,3276]
===
===
delete-node
---
TextElement:  if true, the input array will be copied, otherwise [3336,3387]
===
===
delete-node
---
TextElement: it will be referenced [3395,3416]
===
===
delete-node
---
TagElement [3320,3416]
===
===
delete-node
---
Javadoc [2872,3463]
===
===
delete-tree
---
ThrowStatement [3868,4019]
    MethodInvocation [3874,4018]
        METHOD_INVOCATION_RECEIVER [3874,3894]
            SimpleName: MathRuntimeException [3874,3894]
        SimpleName: createIllegalArgumentException [3895,3925]
        METHOD_INVOCATION_ARGUMENTS [3945,4017]
            QualifiedName: LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY [3945,3996]
            SimpleName: pos [3998,4001]
            SimpleName: size [4003,4007]
            QualifiedName: d.length [4009,4017]
===
delete-tree
---
TagElement [4407,4453]
    TextElement: Construct a vector from part of a Double array [4407,4453]
===
delete-node
---
Javadoc [4396,4582]
===
===
delete-tree
---
ThrowStatement [4692,4843]
    MethodInvocation [4698,4842]
        METHOD_INVOCATION_RECEIVER [4698,4718]
            SimpleName: MathRuntimeException [4698,4718]
        SimpleName: createIllegalArgumentException [4719,4749]
        METHOD_INVOCATION_ARGUMENTS [4769,4841]
            QualifiedName: LocalizedFormats.POSITION_SIZE_MISMATCH_INPUT_ARRAY [4769,4820]
            SimpleName: pos [4822,4825]
            SimpleName: size [4827,4831]
            QualifiedName: d.length [4833,4841]
===
delete-tree
---
TagElement [21244,21297]
    TextElement:  the scalar dot product between instance and v [21251,21297]
===
delete-tree
---
TagElement [21305,21374]
    SimpleName: IllegalArgumentException [21316,21340]
    TextElement:  if v is not the same size as this [21340,21374]
===
delete-node
---
Javadoc [21136,21382]
===
===
delete-tree
---
SimpleType [21446,21470]
    SimpleName: IllegalArgumentException [21446,21470]
===
delete-tree
---
SimpleType [23660,23684]
    SimpleName: IllegalArgumentException [23660,23684]
===
delete-tree
---
SimpleType [23830,23854]
    SimpleName: IllegalArgumentException [23830,23854]
===
delete-tree
---
SimpleType [25220,25244]
    SimpleName: IllegalArgumentException [25220,25244]
===
delete-tree
---
SimpleType [25394,25418]
    SimpleName: IllegalArgumentException [25394,25418]
===
delete-tree
---
SimpleType [26832,26856]
    SimpleName: IllegalArgumentException [26832,26856]
===
delete-tree
---
SimpleType [26987,27006]
    SimpleName: ArithmeticException [26987,27006]
===
delete-tree
---
ThrowStatement [27085,27166]
    MethodInvocation [27091,27165]
        METHOD_INVOCATION_RECEIVER [27091,27111]
            SimpleName: MathRuntimeException [27091,27111]
        SimpleName: createArithmeticException [27112,27137]
        METHOD_INVOCATION_ARGUMENTS [27138,27164]
            QualifiedName: LocalizedFormats.ZERO_NORM [27138,27164]
===
delete-tree
---
SimpleType [27288,27307]
    SimpleName: ArithmeticException [27288,27307]
===
delete-tree
---
ThrowStatement [27386,27493]
    MethodInvocation [27392,27492]
        METHOD_INVOCATION_RECEIVER [27392,27412]
            SimpleName: MathRuntimeException [27392,27412]
        SimpleName: createArithmeticException [27413,27438]
        METHOD_INVOCATION_ARGUMENTS [27439,27491]
            QualifiedName: LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR [27439,27491]
===
delete-tree
---
TagElement [27979,28020]
    TextElement:  projection of the instance onto v [27986,28020]
===
delete-tree
---
TagElement [28028,28094]
    SimpleName: IllegalArgumentException [28036,28060]
    TextElement:  if v is not the same size as this [28060,28094]
===
delete-node
---
Javadoc [27840,28102]
===
===
delete-tree
---
SimpleType [29837,29857]
    SimpleName: MatrixIndexException [29837,29857]
===
delete-node
---
SimpleName: MatrixIndexException [32498,32518]
===
===
delete-node
---
TextElement: inconsistent with vector size [32542,32571]
===
===
delete-tree
---
SimpleType [32645,32665]
    SimpleName: MatrixIndexException [32645,32665]
===
delete-tree
---
SimpleType [33370,33394]
    SimpleName: IllegalArgumentException [33370,33394]
===
delete-tree
---
SimpleType [33757,33781]
    SimpleName: IllegalArgumentException [33757,33781]
===
delete-tree
---
ThrowStatement [33828,33984]
    MethodInvocation [33834,33983]
        METHOD_INVOCATION_RECEIVER [33834,33854]
            SimpleName: MathRuntimeException [33834,33854]
        SimpleName: createIllegalArgumentException [33855,33885]
        METHOD_INVOCATION_ARGUMENTS [33907,33982]
            QualifiedName: LocalizedFormats.VECTOR_LENGTH_MISMATCH [33907,33946]
            QualifiedName: data.length [33968,33979]
            SimpleName: n [33981,33982]
===
delete-tree
---
Javadoc [34006,34172]
    TagElement [34017,34086]
        TextElement: Returns true if any coordinate of this vector is NaN; false otherwise [34017,34086]
    TagElement [34094,34164]
        TextElement:   true if any coordinate of this vector is NaN; false otherwise [34101,34164]
===
delete-tree
---
Javadoc [34355,34579]
    TagElement [34366,34464]
        TextElement: Returns true if any coordinate of this vector is infinite and none are NaN; [34366,34441]
        TextElement: false otherwise [34449,34464]
    TagElement [34472,34571]
        TextElement:   true if any coordinate of this vector is infinite and none are NaN; [34479,34548]
        TextElement: false otherwise [34556,34571]
===
delete-node
---
TextElement: <p> [34896,34899]
===
===
delete-node
---
TextElement: <code>Double.NaN</code>, the two real vectors are considered to be equal. [34988,35061]
===
===
delete-node
---
TextElement: </p> [35069,35073]
===
===
delete-node
---
TextElement: <p> [35081,35084]
===
===
delete-node
---
TextElement: <code>NaN</code> coordinates are considered to affect globally the vector [35092,35165]
===
===
delete-node
---
TextElement: real vector are equal to <code>Double.NaN</code>, the real vector is equal to [35253,35330]
===
===
delete-node
---
TextElement: a vector with all <code>Double.NaN</code> coordinates. [35338,35392]
===
===
delete-node
---
TextElement: </p> [35400,35404]
===
===
delete-node
---
TagElement [34846,35404]
===
===
delete-tree
---
TagElement [35475,35647]
    TextElement:  true if two vector objects are equal, false if [35482,35529]
    TextElement: object is null, not an instance of RealVector, or [35545,35594]
    TextElement: not equal to this RealVector instance [35610,35647]
===
delete-node
---
Javadoc [34835,35662]
===
===
delete-node
---
TextElement: <p>All NaN values have the same hash code.</p> [36268,36314]
===
===
delete-node
---
TagElement [36225,36314]
===
===
delete-tree
---
TagElement [36322,36363]
    TextElement:  a hash code value for this object [36329,36363]
===
delete-node
---
Javadoc [36214,36371]
===
