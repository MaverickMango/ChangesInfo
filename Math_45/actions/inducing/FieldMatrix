===
insert-tree
---
Javadoc [2058,2149]
    TagElement [2069,2096]
        TextElement: Make a (deep) copy of this. [2069,2096]
    TagElement [2111,2141]
        TextElement:  a copy of this matrix. [2118,2141]
to
MethodDeclaration [2000,2110]
at 0
===
insert-node
---
Javadoc [2182,2454]
to
MethodDeclaration [2116,2355]
at 0
===
insert-node
---
Javadoc [2502,2785]
to
MethodDeclaration [2361,2601]
at 0
===
insert-node
---
Javadoc [2839,2991]
to
MethodDeclaration [2608,2801]
at 0
===
insert-node
---
Javadoc [3032,3182]
to
MethodDeclaration [2807,3008]
at 0
===
insert-node
---
Javadoc [3228,3480]
to
MethodDeclaration [3014,3315]
at 0
===
insert-node
---
Javadoc [3533,3854]
to
MethodDeclaration [3321,3626]
at 0
===
insert-node
---
Javadoc [4649,5056]
to
MethodDeclaration [4343,4797]
at 0
===
insert-node
---
Javadoc [7874,8138]
to
MethodDeclaration [7219,7518]
at 0
===
insert-node
---
Javadoc [8184,8664]
to
MethodDeclaration [7523,8050]
at 0
===
insert-node
---
Javadoc [8723,9008]
to
MethodDeclaration [8055,8384]
at 0
===
insert-node
---
Javadoc [9060,9564]
to
MethodDeclaration [8389,8949]
at 0
===
insert-node
---
Javadoc [9629,9888]
to
MethodDeclaration [8954,9249]
at 0
===
insert-node
---
Javadoc [10458,10740]
to
MethodDeclaration [9771,10093]
at 0
===
insert-node
---
Javadoc [10792,11275]
to
MethodDeclaration [10098,10631]
at 0
===
insert-node
---
Javadoc [11341,11619]
to
MethodDeclaration [10637,11050]
at 0
===
insert-node
---
Javadoc [11650,12123]
to
MethodDeclaration [11056,11551]
at 0
===
insert-node
---
Javadoc [12166,12461]
to
MethodDeclaration [11557,12000]
at 0
===
insert-node
---
Javadoc [13035,13386]
to
MethodDeclaration [12536,13147]
at 0
===
insert-node
---
Javadoc [13856,14271]
to
MethodDeclaration [13803,14505]
at 0
===
insert-node
---
Javadoc [14332,14752]
to
MethodDeclaration [14511,15192]
at 0
===
move-tree
---
TagElement [2127,2157]
    TextElement: Compute the sum of this and m. [2127,2157]
to
Javadoc [2182,2454]
at 0
===
move-tree
---
TagElement [2172,2202]
    SimpleName: m [2179,2180]
    TextElement:     matrix to be added [2180,2202]
to
Javadoc [2182,2454]
at 1
===
insert-tree
---
TagElement [2274,2307]
    TextElement:   [2281,2282]
    TagElement [2282,2294]
        TextElement:  this [2288,2293]
    TextElement:  +  [2294,2297]
    TagElement [2297,2306]
        TextElement:  m [2303,2305]
    TextElement: . [2306,2307]
to
Javadoc [2182,2454]
at 2
===
insert-tree
---
TagElement [2315,2446]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [2323,2389]
    TextElement: if  [2397,2400]
    TagElement [2400,2409]
        TextElement:  m [2406,2408]
    TextElement:  is not the same size as this matrix. [2409,2446]
to
Javadoc [2182,2454]
at 3
===
insert-tree
---
TagElement [2513,2549]
    TextElement: Subtract  [2513,2522]
    TagElement [2522,2531]
        TextElement:  m [2528,2530]
    TextElement:  from this matrix. [2531,2549]
to
Javadoc [2502,2785]
at 0
===
move-tree
---
TagElement [2408,2443]
    SimpleName: m [2415,2416]
    TextElement:     matrix to be subtracted [2416,2443]
to
Javadoc [2502,2785]
at 1
===
insert-tree
---
TagElement [2605,2638]
    TextElement:   [2612,2613]
    TagElement [2613,2625]
        TextElement:  this [2619,2624]
    TextElement:  -  [2625,2628]
    TagElement [2628,2637]
        TextElement:  m [2634,2636]
    TextElement: . [2637,2638]
to
Javadoc [2502,2785]
at 2
===
insert-tree
---
TagElement [2646,2777]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [2654,2720]
    TextElement: if  [2728,2731]
    TagElement [2731,2740]
        TextElement:  m [2737,2739]
    TextElement:  is not the same size as this matrix. [2740,2777]
to
Javadoc [2502,2785]
at 3
===
insert-tree
---
TagElement [2850,2886]
    TextElement: Increment each entry of this matrix. [2850,2886]
to
Javadoc [2839,2991]
at 0
===
move-tree
---
TagElement [2687,2730]
    SimpleName: d [2694,2695]
    TextElement:     value to be added to each entry [2695,2730]
to
Javadoc [2839,2991]
at 1
===
insert-tree
---
TagElement [2950,2983]
    TextElement:   [2957,2958]
    TagElement [2958,2967]
        TextElement:  d [2964,2966]
    TextElement:  +  [2967,2970]
    TagElement [2970,2982]
        TextElement:  this [2976,2981]
    TextElement: . [2982,2983]
to
Javadoc [2839,2991]
at 2
===
insert-tree
---
TagElement [3043,3076]
    TextElement: Multiply each entry by  [3043,3066]
    TagElement [3066,3075]
        TextElement:  d [3072,3074]
    TextElement: . [3075,3076]
to
Javadoc [3032,3182]
at 0
===
move-tree
---
TagElement [2888,2932]
    SimpleName: d [2895,2896]
    TextElement:     value to multiply all entries by [2896,2932]
to
Javadoc [3032,3182]
at 1
===
insert-tree
---
TagElement [3141,3174]
    TextElement:   [3148,3149]
    TagElement [3149,3158]
        TextElement:  d [3155,3157]
    TextElement:  *  [3158,3161]
    TagElement [3161,3173]
        TextElement:  this [3167,3172]
    TextElement: . [3173,3174]
to
Javadoc [3032,3182]
at 2
===
insert-tree
---
TagElement [3239,3277]
    TextElement: Postmultiply this matrix by  [3239,3267]
    TagElement [3267,3276]
        TextElement:  m [3273,3275]
    TextElement: . [3276,3277]
to
Javadoc [3228,3480]
at 0
===
move-tree
---
TagElement [3088,3125]
    SimpleName: m [3095,3096]
    TextElement:     matrix to postmultiply by [3096,3125]
to
Javadoc [3228,3480]
at 1
===
insert-tree
---
TagElement [3336,3369]
    TextElement:   [3343,3344]
    TagElement [3344,3356]
        TextElement:  this [3350,3355]
    TextElement:  *  [3356,3359]
    TagElement [3359,3368]
        TextElement:  m [3365,3367]
    TextElement: . [3368,3369]
to
Javadoc [3228,3480]
at 2
===
move-tree
---
TagElement [3161,3260]
    SimpleName: IllegalArgumentException [3173,3197]
    TextElement: if columnDimension(this) != rowDimension(m) [3217,3260]
to
Javadoc [3228,3480]
at 3
===
insert-tree
---
TagElement [3544,3581]
    TextElement: Premultiply this matrix by  [3544,3571]
    TagElement [3571,3580]
        TextElement:  m [3577,3579]
    TextElement: . [3580,3581]
to
Javadoc [3533,3854]
at 0
===
move-tree
---
TagElement [3397,3433]
    SimpleName: m [3404,3405]
    TextElement:     matrix to premultiply by [3405,3433]
to
Javadoc [3533,3854]
at 1
===
insert-tree
---
TagElement [3638,3671]
    TextElement:   [3645,3646]
    TagElement [3646,3655]
        TextElement:  m [3652,3654]
    TextElement:  *  [3655,3658]
    TagElement [3658,3670]
        TextElement:  this [3664,3669]
    TextElement: . [3670,3671]
to
Javadoc [3533,3854]
at 2
===
insert-tree
---
TagElement [3679,3846]
    QualifiedName: org.apache.commons.math.exception.DimensionMismatchException [3687,3747]
    TextElement: if the number of columns of  [3755,3783]
    TagElement [3783,3792]
        TextElement:  m [3789,3791]
    TextElement:  differ from the number of rows [3792,3823]
    TextElement: of this matrix. [3831,3846]
to
Javadoc [3533,3854]
at 3
===
insert-tree
---
TagElement [4659,4738]
    TextElement: Get a submatrix. Rows and columns are indicated [4659,4706]
    TextElement: counting from 0 to n - 1. [4713,4738]
to
Javadoc [4649,5056]
at 0
===
move-tree
---
TagElement [4444,4485]
    SimpleName: selectedRows [4451,4463]
    TextElement:  Array of row indices. [4463,4485]
to
Javadoc [4649,5056]
at 1
===
move-tree
---
TagElement [4492,4539]
    SimpleName: selectedColumns [4499,4514]
    TextElement:  Array of column indices. [4514,4539]
to
Javadoc [4649,5056]
at 2
===
insert-tree
---
TagElement [4853,4932]
    TextElement:  the matrix containing the data in the [4860,4898]
    TextElement: specified rows and columns. [4905,4932]
to
Javadoc [4649,5056]
at 3
===
insert-tree
---
TagElement [4939,5049]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [4947,5000]
    TextElement: if row or column selections are not valid. [5007,5049]
to
Javadoc [4649,5056]
at 4
===
insert-tree
---
TagElement [7214,7390]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [7222,7288]
    TextElement: if  [7295,7298]
    TagElement [7298,7315]
        TextElement:  subMatrix [7304,7314]
    TextElement:  does not fit into this matrix from element in [7315,7361]
    TagElement [7368,7389]
        TextElement:  (row, column) [7374,7388]
    TextElement: . [7389,7390]
to
Javadoc [6113,7155]
at 4
===
insert-tree
---
TagElement [7397,7508]
    QualifiedName: org.apache.commons.math.exception.ZeroException [7405,7452]
    TextElement:  if a row or column [7452,7471]
    TextElement: of  [7478,7481]
    TagElement [7481,7498]
        TextElement:  subMatrix [7487,7497]
    TextElement:  is empty. [7498,7508]
to
Javadoc [6113,7155]
at 5
===
insert-tree
---
TagElement [7515,7672]
    QualifiedName: org.apache.commons.math.exception.DimensionMismatchException [7523,7583]
    TextElement: if  [7590,7593]
    TagElement [7593,7610]
        TextElement:  subMatrix [7599,7609]
    TextElement:  is not rectangular (not all rows have the same [7610,7657]
    TextElement: length). [7664,7672]
to
Javadoc [6113,7155]
at 6
===
insert-tree
---
TagElement [7679,7786]
    QualifiedName: org.apache.commons.math.exception.NullArgumentException [7687,7742]
    TextElement: if  [7749,7752]
    TagElement [7752,7769]
        TextElement:  subMatrix [7758,7768]
    TextElement:  is  [7769,7773]
    TagElement [7773,7785]
        TextElement:  null [7779,7784]
    TextElement: . [7785,7786]
to
Javadoc [6113,7155]
at 7
===
insert-tree
---
TagElement [7884,7948]
    TextElement: Get the entries in row number  [7884,7914]
    TagElement [7914,7925]
        TextElement:  row [7920,7924]
    TextElement: as a row matrix. [7932,7948]
to
Javadoc [7874,8138]
at 0
===
move-tree
---
TagElement [7340,7372]
    SimpleName: row [7347,7350]
    TextElement:  the row to be fetched [7350,7372]
to
Javadoc [7874,8138]
at 1
===
insert-tree
---
TagElement [7997,8018]
    TextElement:  a row matrix. [8004,8018]
to
Javadoc [7874,8138]
at 2
===
insert-tree
---
TagElement [8025,8131]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [8033,8086]
    TextElement: if the specified row index is invalid. [8093,8131]
to
Javadoc [7874,8138]
at 3
===
insert-tree
---
TagElement [8194,8258]
    TextElement: Set the entries in row number  [8194,8224]
    TagElement [8224,8235]
        TextElement:  row [8230,8234]
    TextElement: as a row matrix. [8242,8258]
to
Javadoc [8184,8664]
at 0
===
move-tree
---
TagElement [7641,7669]
    SimpleName: row [7648,7651]
    TextElement:  the row to be set [7651,7669]
to
Javadoc [8184,8664]
at 1
===
insert-node
---
TagElement [8303,8401]
to
Javadoc [8184,8664]
at 2
===
insert-tree
---
TagElement [8408,8514]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [8416,8469]
    TextElement: if the specified row index is invalid. [8476,8514]
to
Javadoc [8184,8664]
at 3
===
move-tree
---
TagElement [7853,7989]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [7861,7927]
    TextElement: if the matrix dimensions do not match one instance row. [7934,7989]
to
Javadoc [8184,8664]
at 4
===
insert-tree
---
TagElement [8733,8806]
    TextElement: Get the entries in column number  [8733,8766]
    TagElement [8766,8780]
        TextElement:  column [8772,8779]
    TextElement: as a column matrix. [8787,8806]
to
Javadoc [8723,9008]
at 0
===
move-tree
---
TagElement [8188,8226]
    SimpleName: column [8195,8201]
    TextElement:  the column to be fetched [8201,8226]
to
Javadoc [8723,9008]
at 1
===
insert-tree
---
TagElement [8861,8885]
    TextElement:  a column matrix. [8868,8885]
to
Javadoc [8723,9008]
at 2
===
insert-tree
---
TagElement [8892,9001]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [8900,8953]
    TextElement: if the specified column index is invalid. [8960,9001]
to
Javadoc [8723,9008]
at 3
===
insert-tree
---
TagElement [9070,9143]
    TextElement: Set the entries in column number  [9070,9103]
    TagElement [9103,9117]
        TextElement:  column [9109,9116]
    TextElement: as a column matrix. [9124,9143]
to
Javadoc [9060,9564]
at 0
===
move-tree
---
TagElement [8519,8553]
    SimpleName: column [8526,8532]
    TextElement:  the column to be set [8532,8553]
to
Javadoc [9060,9564]
at 1
===
insert-node
---
TagElement [9194,9295]
to
Javadoc [9060,9564]
at 2
===
insert-tree
---
TagElement [9302,9411]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [9310,9363]
    TextElement: if the specified column index is invalid. [9370,9411]
to
Javadoc [9060,9564]
at 3
===
move-tree
---
TagElement [8743,8882]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [8751,8817]
    TextElement: if the matrix dimensions do not match one instance column. [8824,8882]
to
Javadoc [9060,9564]
at 4
===
insert-tree
---
TagElement [9639,9699]
    TextElement: Get the entries in row number  [9639,9669]
    TagElement [9669,9680]
        TextElement:  row [9675,9679]
    TextElement: as a vector. [9687,9699]
to
Javadoc [9629,9888]
at 0
===
move-tree
---
TagElement [9071,9103]
    SimpleName: row [9078,9081]
    TextElement:  the row to be fetched [9081,9103]
to
Javadoc [9629,9888]
at 1
===
insert-tree
---
TagElement [9747,9768]
    TextElement:  a row vector. [9754,9768]
to
Javadoc [9629,9888]
at 2
===
insert-tree
---
TagElement [9775,9881]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [9783,9836]
    TextElement: if the specified row index is invalid. [9843,9881]
to
Javadoc [9629,9888]
at 3
===
insert-tree
---
TagElement [9944,10004]
    TextElement: Set the entries in row number  [9944,9974]
    TagElement [9974,9985]
        TextElement:  row [9980,9984]
    TextElement: as a vector. [9992,10004]
to
Javadoc [9254,9712]
at 0
===
insert-tree
---
TagElement [10142,10248]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [10150,10203]
    TextElement: if the specified row index is invalid. [10210,10248]
to
Javadoc [9254,9712]
at 4
===
insert-tree
---
TagElement [10468,10538]
    TextElement: Returns the entries in column number  [10468,10505]
    TagElement [10505,10519]
        TextElement:  column [10511,10518]
    TextElement: as a vector. [10526,10538]
to
Javadoc [10458,10740]
at 0
===
move-tree
---
TagElement [9897,9935]
    SimpleName: column [9904,9910]
    TextElement:  the column to be fetched [9910,9935]
to
Javadoc [10458,10740]
at 1
===
insert-tree
---
TagElement [10593,10617]
    TextElement:  a column vector. [10600,10617]
to
Javadoc [10458,10740]
at 2
===
insert-tree
---
TagElement [10624,10733]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [10632,10685]
    TextElement: if the specified column index is invalid. [10692,10733]
to
Javadoc [10458,10740]
at 3
===
insert-tree
---
TagElement [10802,10868]
    TextElement: Set the entries in column number  [10802,10835]
    TagElement [10835,10849]
        TextElement:  column [10841,10848]
    TextElement: as a vector. [10856,10868]
to
Javadoc [10792,11275]
at 0
===
move-tree
---
TagElement [10221,10255]
    SimpleName: column [10228,10234]
    TextElement:  the column to be set [10234,10255]
to
Javadoc [10792,11275]
at 1
===
insert-node
---
TagElement [10919,11005]
to
Javadoc [10792,11275]
at 2
===
insert-tree
---
TagElement [11012,11121]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [11020,11073]
    TextElement: if the specified column index is invalid. [11080,11121]
to
Javadoc [10792,11275]
at 3
===
move-tree
---
TagElement [10424,10564]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [10432,10498]
    TextElement: if the vector dimension does not match one instance column. [10505,10564]
to
Javadoc [10792,11275]
at 4
===
insert-tree
---
TagElement [11352,11406]
    TextElement: Get the entries in row number  [11352,11382]
    TagElement [11382,11393]
        TextElement:  row [11388,11392]
    TextElement:  as an array. [11393,11406]
to
Javadoc [11341,11619]
at 0
===
move-tree
---
TagElement [10866,10898]
    SimpleName: row [10873,10876]
    TextElement:  the row to be fetched [10876,10898]
to
Javadoc [11341,11619]
at 1
===
insert-tree
---
TagElement [11458,11494]
    TextElement:  array of entries in the row. [11465,11494]
to
Javadoc [11341,11619]
at 2
===
insert-tree
---
TagElement [11502,11611]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [11510,11563]
    TextElement: if the specified row index is not valid. [11571,11611]
to
Javadoc [11341,11619]
at 3
===
insert-tree
---
TagElement [11661,11726]
    TextElement: Set the entries in row number  [11661,11691]
    TagElement [11691,11702]
        TextElement:  row [11697,11701]
    TextElement: as a row matrix. [11710,11726]
to
Javadoc [11650,12123]
at 0
===
move-tree
---
TagElement [11178,11206]
    SimpleName: row [11185,11188]
    TextElement:  the row to be set [11188,11206]
to
Javadoc [11650,12123]
at 1
===
insert-node
---
TagElement [11774,11860]
to
Javadoc [11650,12123]
at 2
===
insert-tree
---
TagElement [11868,11975]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [11876,11929]
    TextElement: if the specified row index is invalid. [11937,11975]
to
Javadoc [11650,12123]
at 3
===
move-tree
---
TagElement [11374,11506]
    QualifiedName: org.apache.commons.math.exception.MatrixDimensionMismatchException [11382,11448]
    TextElement: if the array size does not match one instance row. [11456,11506]
to
Javadoc [11650,12123]
at 4
===
insert-tree
---
TagElement [12177,12234]
    TextElement: Get the entries in column number  [12177,12210]
    TagElement [12210,12221]
        TextElement:  col [12216,12220]
    TextElement:  as an array. [12221,12234]
to
Javadoc [12166,12461]
at 0
===
move-tree
---
TagElement [11798,11836]
    SimpleName: column [11805,11811]
    TextElement:  the column to be fetched [11811,11836]
to
Javadoc [12166,12461]
at 1
===
move-tree
---
TagElement [11844,11882]
    TextElement:  array of entries in the column [11851,11882]
to
Javadoc [12166,12461]
at 2
===
insert-tree
---
TagElement [12341,12453]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [12349,12402]
    TextElement: if the specified column index is not valid. [12410,12453]
to
Javadoc [12166,12461]
at 3
===
insert-tree
---
TagElement [12509,12583]
    TextElement: Set the entries in column number  [12509,12542]
    TagElement [12542,12556]
        TextElement:  column [12548,12555]
    TextElement: as a column matrix. [12564,12583]
to
Javadoc [12006,12487]
at 0
===
insert-tree
---
TagElement [12725,12835]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [12733,12786]
    TextElement: if the specified column index is invalid. [12794,12835]
to
Javadoc [12006,12487]
at 4
===
insert-node
---
TagElement [13046,13096]
to
Javadoc [13035,13386]
at 0
===
move-tree
---
TagElement [12876,12923]
    SimpleName: row [12883,12886]
    TextElement:   row location of entry to be fetched [12886,12923]
to
Javadoc [13035,13386]
at 1
===
move-tree
---
TagElement [12931,12984]
    SimpleName: column [12938,12944]
    TextElement:   column location of entry to be fetched [12944,12984]
to
Javadoc [13035,13386]
at 2
===
move-tree
---
TagElement [12992,13026]
    TextElement:  matrix entry in row,column [12999,13026]
to
Javadoc [13035,13386]
at 3
===
insert-tree
---
TagElement [13269,13378]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [13277,13330]
    TextElement: if the row or column index is not valid. [13338,13378]
to
Javadoc [13035,13386]
at 4
===
insert-node
---
TagElement [13440,13486]
to
Javadoc [13153,13748]
at 0
===
insert-tree
---
TagElement [13666,13775]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [13674,13727]
    TextElement: if the row or column index is not valid. [13735,13775]
to
Javadoc [13153,13748]
at 5
===
insert-node
---
TagElement [13867,13915]
to
Javadoc [13856,14271]
at 0
===
move-tree
---
TagElement [14141,14184]
    SimpleName: row [14148,14151]
    TextElement:   row location of entry to be set [14151,14184]
to
Javadoc [13856,14271]
at 1
===
move-tree
---
TagElement [14192,14241]
    SimpleName: column [14199,14205]
    TextElement:   column location of entry to be set [14205,14241]
to
Javadoc [13856,14271]
at 2
===
insert-node
---
TagElement [14038,14128]
to
Javadoc [13856,14271]
at 3
===
insert-tree
---
TagElement [14136,14245]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [14144,14197]
    TextElement: if the row or column index is not valid. [14205,14245]
to
Javadoc [13856,14271]
at 4
===
move-tree
---
TagElement [14404,14414]
    TextElement:  2.0 [14410,14414]
to
Javadoc [13856,14271]
at 5
===
insert-node
---
TagElement [14343,14391]
to
Javadoc [14332,14752]
at 0
===
move-tree
---
TagElement [14849,14892]
    SimpleName: row [14856,14859]
    TextElement:   row location of entry to be set [14859,14892]
to
Javadoc [14332,14752]
at 1
===
move-tree
---
TagElement [14900,14949]
    SimpleName: column [14907,14913]
    TextElement:   column location of entry to be set [14913,14949]
to
Javadoc [14332,14752]
at 2
===
insert-node
---
TagElement [14514,14609]
to
Javadoc [14332,14752]
at 3
===
insert-tree
---
TagElement [14617,14726]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [14625,14678]
    TextElement: if the row or column index is not valid. [14686,14726]
to
Javadoc [14332,14752]
at 4
===
move-tree
---
TagElement [15119,15129]
    TextElement:  2.0 [15125,15129]
to
Javadoc [14332,14752]
at 5
===
update-node
---
TextElement:  type of field elements of the matrix [1398,1435]
replace  type of field elements of the matrix by  the type of field elements of the matrix.
===
update-node
---
TextElement: Create a new FieldMatrix<T> of the same type as the instance with the supplied [1485,1563]
replace Create a new FieldMatrix<T> of the same type as the instance with the supplied by Create a new FieldMatrix<T> of the same type as the instance with
===
update-node
---
TextElement: row and column dimensions. [1571,1597]
replace row and column dimensions. by the supplied row and column dimensions.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.NotStrictlyPositiveException [1829,1891]
to
TagElement [1809,1884]
at 0
===
update-node
---
TextElement:  if row or column dimension is not positive [1841,1884]
replace  if row or column dimension is not positive by if row or column dimension is not positive.
===
update-node
---
TextElement:     matrix to be added [2180,2202]
replace     matrix to be added by  Matrix to be added.
===
update-node
---
TextElement:     matrix to be subtracted [2416,2443]
replace     matrix to be subtracted by  Matrix to be subtracted.
===
update-node
---
TextElement:     value to be added to each entry [2695,2730]
replace     value to be added to each entry by  Value to be added to each entry.
===
update-node
---
TextElement:     value to multiply all entries by [2896,2932]
replace     value to multiply all entries by by  Value to multiply all entries by.
===
update-node
---
TextElement:     matrix to postmultiply by [3096,3125]
replace     matrix to postmultiply by by   Matrix to postmultiply by.
===
update-node
---
TextElement:     matrix to premultiply by [3405,3433]
replace     matrix to premultiply by by  Matrix to premultiply by.
===
update-node
---
TextElement:     2-dimensional array of entries [3715,3749]
replace     2-dimensional array of entries by  a 2-dimensional array of entries.
===
update-node
---
TextElement: Gets a submatrix. Rows and columns are indicated [3795,3843]
replace Gets a submatrix. Rows and columns are indicated by Get a submatrix. Rows and columns are indicated
===
update-node
---
TextElement: counting from 0 to n-1. [3851,3874]
replace counting from 0 to n-1. by counting from 0 to n - 1.
===
update-node
---
TextElement:  The subMatrix containing the data of the [4088,4129]
replace  The subMatrix containing the data of the by  the matrix containing the data of the
===
update-node
---
TextElement: specified rows and columns [4145,4171]
replace specified rows and columns by specified rows and columns.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [4456,4509]
to
TagElement [4179,4240]
at 0
===
update-node
---
TextElement:   if the indices are not valid [4210,4240]
replace   if the indices are not valid by if the indices are not valid.
===
update-node
---
TextElement:  Initial row index [4918,4936]
replace  Initial row index by  Initial row index.
===
update-node
---
TextElement:  Final row index (inclusive) [4956,4984]
replace  Final row index (inclusive) by  Final row index (inclusive).
===
update-node
---
TextElement:  Initial column index [5009,5030]
replace  Initial column index by  Initial column index.
===
update-node
---
TextElement:  Final column index (inclusive) [5053,5084]
replace  Final column index (inclusive) by  Final column index (inclusive).
===
update-node
---
TextElement: (if larger than rows/columns counts, only the upper-left part will be used) [5169,5244]
replace (if larger than rows/columns counts, only the upper-left part will be used) by (if larger than rows/columns counts, only the upper-left part will be used).
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [5598,5651]
to
TagElement [5251,5311]
at 0
===
update-node
---
TextElement:  if the indices are not valid [5282,5311]
replace  if the indices are not valid by if the indices are not valid.
===
update-node
---
TextElement:  if the destination array is too small [5353,5391]
replace  if the destination array is too small by  if the destination array is too small.
===
update-node
---
TextElement: counting from 0 to n-1. [5585,5608]
replace counting from 0 to n-1. by counting from 0 to n - 1.
===
update-node
---
TextElement:  The arrays where the submatrix data should be copied [5739,5792]
replace  The arrays where the submatrix data should be copied by  Arrays where the submatrix data should be copied
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [6260,6313]
to
TagElement [5879,5939]
at 0
===
update-node
---
TextElement:  if the indices are not valid [5910,5939]
replace  if the indices are not valid by if the indices are not valid.
===
update-node
---
TextElement: Replace the submatrix starting at <code>row, column</code> using data in [6123,6195]
replace Replace the submatrix starting at <code>row, column</code> using data in by Replace the submatrix starting at 
===
insert-tree
---
TagElement [6566,6587]
    TextElement:  (row, column) [6572,6586]
to
TagElement [6123,6578]
at 1
===
update-node
---
TextElement: the input <code>subMatrix</code> array. Indexes are 0-based. [6202,6262]
replace the input <code>subMatrix</code> array. Indexes are 0-based. by  using data in
===
insert-node
---
TextElement: the input  [6608,6618]
to
TagElement [6123,6578]
at 3
===
insert-tree
---
TagElement [6618,6635]
    TextElement:  subMatrix [6624,6634]
to
TagElement [6123,6578]
at 4
===
insert-node
---
TextElement:  array. Indexes are 0-based. [6635,6663]
to
TagElement [6123,6578]
at 5
===
update-node
---
TextElement:   array containing the submatrix replacement data [6607,6656]
replace   array containing the submatrix replacement data by  Array containing the submatrix replacement data.
===
update-node
---
TextElement:   row coordinate of the top, left element to be replaced [6673,6729]
replace   row coordinate of the top, left element to be replaced by  Row coordinate of the top-left element to be replaced.
===
update-node
---
TextElement:   column coordinate of the top, left element to be replaced [6749,6808]
replace   column coordinate of the top, left element to be replaced by  Column coordinate of the top-left element to be replaced.
===
update-node
---
TextElement:  the row to be fetched [7350,7372]
replace  the row to be fetched by  Row to be fetched.
===
update-node
---
TextElement:  the row to be set [7651,7669]
replace  the row to be set by  Row to be set.
===
move-tree
---
SimpleName: matrix [7683,7689]
to
TagElement [8303,8401]
at 0
===
insert-node
---
TextElement:  Row matrix (must have one row and the same number [8316,8366]
to
TagElement [8303,8401]
at 1
===
insert-node
---
TextElement: of columns as the instance). [8373,8401]
to
TagElement [8303,8401]
at 2
===
update-node
---
TextElement:  the column to be fetched [8201,8226]
replace  the column to be fetched by  Column to be fetched.
===
update-node
---
TextElement:  the column to be set [8532,8553]
replace  the column to be set by  Column to be set.
===
move-tree
---
SimpleName: matrix [8567,8573]
to
TagElement [9194,9295]
at 0
===
insert-node
---
TextElement:  column matrix (must have one column and the same [9207,9256]
to
TagElement [9194,9295]
at 1
===
insert-node
---
TextElement: number of rows as the instance). [9263,9295]
to
TagElement [9194,9295]
at 2
===
update-node
---
TextElement:  the row to be fetched [9081,9103]
replace  the row to be fetched by  Row to be fetched
===
update-node
---
TextElement:  the row to be set [9378,9396]
replace  the row to be set by  Row to be set.
===
update-node
---
TextElement: as the instance) [9472,9488]
replace as the instance) by as the instance).
===
update-node
---
TextElement:  the column to be fetched [9910,9935]
replace  the column to be fetched by  Column to be fetched.
===
update-node
---
TextElement:  the column to be set [10234,10255]
replace  the column to be set by  Column to be set.
===
move-tree
---
SimpleName: vector [10269,10275]
to
TagElement [10919,11005]
at 0
===
insert-node
---
TextElement:  Column vector (must have the same number of rows [10932,10981]
to
TagElement [10919,11005]
at 1
===
insert-node
---
TextElement: as the instance). [10988,11005]
to
TagElement [10919,11005]
at 2
===
update-node
---
TextElement:  the row to be fetched [10876,10898]
replace  the row to be fetched by  Row to be fetched.
===
update-node
---
TextElement:  the row to be set [11188,11206]
replace  the row to be set by  Row to be set.
===
move-tree
---
SimpleName: array [11221,11226]
to
TagElement [11774,11860]
at 0
===
insert-node
---
TextElement:  Row matrix (must have the same number of columns as [11786,11838]
to
TagElement [11774,11860]
at 1
===
insert-node
---
TextElement: the instance). [11846,11860]
to
TagElement [11774,11860]
at 2
===
move-tree
---
TextElement: Returns the entry in the specified row and column. [12547,12597]
to
TagElement [13046,13096]
at 0
===
move-tree
---
TextElement: Set the entry in the specified row and column. [13164,13210]
to
TagElement [13440,13486]
at 0
===
move-tree
---
TextElement: Change an entry in the specified row and column. [13814,13862]
to
TagElement [13867,13915]
at 0
===
update-node
---
TextElement:   row location of entry to be set [14151,14184]
replace   row location of entry to be set by  Row location of entry to be set.
===
update-node
---
TextElement:   column location of entry to be set [14205,14241]
replace   column location of entry to be set by  Column location of entry to be set.
===
move-tree
---
SimpleName: increment [14256,14265]
to
TagElement [14038,14128]
at 0
===
insert-node
---
TextElement:  Value to add to the current matrix entry in [14054,14098]
to
TagElement [14038,14128]
at 1
===
insert-tree
---
TagElement [14106,14127]
    TextElement:  (row, column) [14112,14126]
to
TagElement [14038,14128]
at 2
===
insert-node
---
TextElement: . [14127,14128]
to
TagElement [14038,14128]
at 3
===
move-tree
---
TextElement: Change an entry in the specified row and column. [14522,14570]
to
TagElement [14343,14391]
at 0
===
update-node
---
TextElement:   row location of entry to be set [14859,14892]
replace   row location of entry to be set by  Row location of entry to be set.
===
update-node
---
TextElement:   column location of entry to be set [14913,14949]
replace   column location of entry to be set by  Column location of entry to be set.
===
move-tree
---
SimpleName: factor [14964,14970]
to
TagElement [14514,14609]
at 0
===
insert-node
---
TextElement:  Multiplication factor for the current matrix entry [14527,14578]
to
TagElement [14514,14609]
at 1
===
insert-node
---
TextElement: in  [14586,14589]
to
TagElement [14514,14609]
at 2
===
insert-tree
---
TagElement [14589,14609]
    TextElement:  (row,column) [14595,14608]
to
TagElement [14514,14609]
at 3
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [19667,19720]
to
TagElement [20044,20105]
at 0
===
update-node
---
TextElement:   if the indices are not valid [20075,20105]
replace   if the indices are not valid by if the indices are not valid.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [21370,21423]
to
TagElement [21710,21771]
at 0
===
update-node
---
TextElement:   if the indices are not valid [21741,21771]
replace   if the indices are not valid by if the indices are not valid.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [25830,25883]
to
TagElement [26133,26194]
at 0
===
update-node
---
TextElement:   if the indices are not valid [26164,26194]
replace   if the indices are not valid by if the indices are not valid.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [27547,27600]
to
TagElement [27813,27874]
at 0
===
update-node
---
TextElement:   if the indices are not valid [27844,27874]
replace   if the indices are not valid by if the indices are not valid.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [31944,31997]
to
TagElement [32173,32234]
at 0
===
update-node
---
TextElement:   if the indices are not valid [32204,32234]
replace   if the indices are not valid by if the indices are not valid.
===
insert-node
---
QualifiedName: org.apache.commons.math.exception.OutOfRangeException [33650,33703]
to
TagElement [33842,33903]
at 0
===
update-node
---
TextElement:   if the indices are not valid [33873,33903]
replace   if the indices are not valid by if the indices are not valid.
===
delete-node
---
SimpleName: IllegalArgumentException [1817,1841]
===
===
delete-tree
---
Javadoc [2000,2083]
    TagElement [2011,2041]
        TextElement: Returns a (deep) copy of this. [2011,2041]
    TagElement [2056,2075]
        TextElement:  matrix copy [2063,2075]
===
delete-tree
---
TagElement [2210,2230]
    TextElement:      this + m [2217,2230]
===
delete-tree
---
TagElement [2238,2305]
    SimpleName: IllegalArgumentException [2247,2271]
    TextElement:  if m is not the same size as this [2271,2305]
===
delete-node
---
Javadoc [2116,2313]
===
===
delete-tree
---
TagElement [2372,2393]
    TextElement: Compute this minus m. [2372,2393]
===
delete-tree
---
TagElement [2451,2471]
    TextElement:      this + m [2458,2471]
===
delete-tree
---
TagElement [2479,2546]
    SimpleName: IllegalArgumentException [2488,2512]
    TextElement:  if m is not the same size as this [2512,2546]
===
delete-node
---
Javadoc [2361,2554]
===
===
delete-tree
---
TagElement [2619,2672]
    TextElement: Returns the result of adding d to each entry of this. [2619,2672]
===
delete-tree
---
TagElement [2738,2758]
    TextElement:      d + this [2745,2758]
===
delete-node
---
Javadoc [2608,2766]
===
===
delete-tree
---
TagElement [2818,2873]
    TextElement: Returns the result multiplying each entry of this by d. [2818,2873]
===
delete-tree
---
TagElement [2940,2960]
    TextElement:      d * this [2947,2960]
===
delete-node
---
Javadoc [2807,2968]
===
===
delete-tree
---
TagElement [3025,3073]
    TextElement: Returns the result of postmultiplying this by m. [3025,3073]
===
delete-tree
---
TagElement [3133,3153]
    TextElement:      this * m [3140,3153]
===
delete-node
---
Javadoc [3014,3268]
===
===
delete-tree
---
TagElement [3332,3389]
    TextElement: Returns the result premultiplying this by <code>m</code>. [3332,3389]
===
delete-tree
---
TagElement [3441,3461]
    TextElement:      m * this [3448,3461]
===
delete-tree
---
TagElement [3469,3568]
    SimpleName: IllegalArgumentException [3481,3505]
    TextElement: if rowDimension(this) != columnDimension(m) [3525,3568]
===
delete-node
---
Javadoc [3321,3576]
===
===
delete-node
---
SimpleName: MatrixIndexException [4190,4210]
===
===
delete-tree
---
TagElement [4353,4431]
    TextElement: Gets a submatrix. Rows and columns are indicated [4353,4401]
    TextElement: counting from 0 to n-1. [4408,4431]
===
delete-tree
---
TagElement [4546,4635]
    TextElement:  The subMatrix containing the data in the [4553,4594]
    TextElement: specified rows and columns [4609,4635]
===
delete-tree
---
TagElement [4642,4715]
    SimpleName: MatrixIndexException [4653,4673]
    TextElement:  if row or column selections are not valid [4673,4715]
===
delete-node
---
Javadoc [4343,4722]
===
===
delete-node
---
SimpleName: MatrixIndexException [5262,5282]
===
===
delete-node
---
SimpleName: MatrixIndexException [5890,5910]
===
===
delete-tree
---
TagElement [6815,6926]
    SimpleName: MatrixIndexException [6823,6843]
    TextElement:   if subMatrix does not fit into this [6843,6880]
    TextElement: matrix from element in (row, column) [6890,6926]
===
delete-tree
---
TagElement [6933,7062]
    SimpleName: IllegalArgumentException [6941,6965]
    TextElement:  if <code>subMatrix</code> is not rectangular [6965,7010]
    TextElement: (not all rows have the same length) or empty [7018,7062]
===
delete-tree
---
TagElement [7069,7131]
    SimpleName: NullPointerException [7077,7097]
    TextElement:  if <code>subMatrix</code> is null [7097,7131]
===
delete-tree
---
TagElement [7229,7327]
    TextElement: Returns the entries in row number <code>row</code> [7229,7279]
    TextElement: as a row matrix.  Row indices start at 0. [7286,7327]
===
delete-tree
---
TagElement [7379,7397]
    TextElement:  row matrix [7386,7397]
===
delete-tree
---
TagElement [7404,7470]
    SimpleName: MatrixIndexException [7412,7432]
    TextElement:  if the specified row index is invalid [7432,7470]
===
delete-node
---
Javadoc [7219,7477]
===
===
delete-tree
---
TagElement [7533,7628]
    TextElement: Sets the entries in row number <code>row</code> [7533,7580]
    TextElement: as a row matrix.  Row indices start at 0. [7587,7628]
===
delete-node
---
TextElement:  row matrix (must have one row and the same number of columns [7689,7750]
===
===
delete-node
---
TextElement: as the instance) [7757,7773]
===
===
delete-node
---
TagElement [7676,7773]
===
===
delete-tree
---
TagElement [7780,7846]
    SimpleName: MatrixIndexException [7788,7808]
    TextElement:  if the specified row index is invalid [7808,7846]
===
delete-node
---
Javadoc [7523,7996]
===
===
delete-tree
---
TagElement [8065,8175]
    TextElement: Returns the entries in column number <code>column</code> [8065,8121]
    TextElement: as a column matrix.  Column indices start at 0. [8128,8175]
===
delete-tree
---
TagElement [8233,8254]
    TextElement:  column matrix [8240,8254]
===
delete-tree
---
TagElement [8261,8330]
    SimpleName: MatrixIndexException [8269,8289]
    TextElement:  if the specified column index is invalid [8289,8330]
===
delete-node
---
Javadoc [8055,8337]
===
===
delete-tree
---
TagElement [8399,8506]
    TextElement: Sets the entries in column number <code>column</code> [8399,8452]
    TextElement: as a column matrix.  Column indices start at 0. [8459,8506]
===
delete-node
---
TextElement:  column matrix (must have one column and the same number of rows [8573,8637]
===
===
delete-node
---
TextElement: as the instance) [8644,8660]
===
===
delete-node
---
TagElement [8560,8660]
===
===
delete-tree
---
TagElement [8667,8736]
    SimpleName: MatrixIndexException [8675,8695]
    TextElement:  if the specified column index is invalid [8695,8736]
===
delete-node
---
Javadoc [8389,8889]
===
===
delete-tree
---
TagElement [8964,9058]
    TextElement: Returns the entries in row number <code>row</code> [8964,9014]
    TextElement: as a vector.  Row indices start at 0. [9021,9058]
===
delete-tree
---
TagElement [9110,9128]
    TextElement:  row vector [9117,9128]
===
delete-tree
---
TagElement [9135,9201]
    SimpleName: MatrixIndexException [9143,9163]
    TextElement:  if the specified row index is invalid [9163,9201]
===
delete-node
---
Javadoc [8954,9208]
===
===
delete-tree
---
TagElement [9264,9355]
    TextElement: Sets the entries in row number <code>row</code> [9264,9311]
    TextElement: as a vector.  Row indices start at 0. [9318,9355]
===
delete-tree
---
TagElement [9495,9561]
    SimpleName: MatrixIndexException [9503,9523]
    TextElement:  if the specified row index is invalid [9523,9561]
===
delete-tree
---
TagElement [9781,9884]
    TextElement: Returns the entries in column number <code>column</code> [9781,9837]
    TextElement: as a vector.  Column indices start at 0. [9844,9884]
===
delete-tree
---
TagElement [9942,9963]
    TextElement:  column vector [9949,9963]
===
delete-tree
---
TagElement [9970,10039]
    SimpleName: MatrixIndexException [9978,9998]
    TextElement:  if the specified column index is invalid [9998,10039]
===
delete-node
---
Javadoc [9771,10046]
===
===
delete-tree
---
TagElement [10108,10208]
    TextElement: Sets the entries in column number <code>column</code> [10108,10161]
    TextElement: as a vector.  Column indices start at 0. [10168,10208]
===
delete-node
---
TextElement:  column vector (must have the same number of rows as the instance) [10275,10341]
===
===
delete-node
---
TagElement [10262,10341]
===
===
delete-tree
---
TagElement [10348,10417]
    SimpleName: MatrixIndexException [10356,10376]
    TextElement:  if the specified column index is invalid [10376,10417]
===
delete-node
---
Javadoc [10098,10571]
===
===
delete-tree
---
TagElement [10648,10851]
    TextElement: Returns the entries in row number <code>row</code> as an array. [10648,10711]
    TextElement: <p> [10719,10722]
    TextElement: Row indices start at 0.  A <code>MatrixIndexException</code> is thrown [10730,10800]
    TextElement: unless  [10808,10815]
    TagElement [10815,10846]
        TextElement:  0 <= row < rowDimension [10821,10845]
    TextElement: .</p> [10846,10851]
===
delete-tree
---
TagElement [10906,10941]
    TextElement:  array of entries in the row [10913,10941]
===
delete-tree
---
TagElement [10949,11017]
    SimpleName: MatrixIndexException [10957,10977]
    TextElement:  if the specified row index is not valid [10977,11017]
===
delete-node
---
Javadoc [10637,11025]
===
===
delete-tree
---
TagElement [11067,11163]
    TextElement: Sets the entries in row number <code>row</code> [11067,11114]
    TextElement: as a row matrix.  Row indices start at 0. [11122,11163]
===
delete-node
---
TextElement:  row matrix (must have the same number of columns as the instance) [11226,11292]
===
===
delete-node
---
TagElement [11214,11292]
===
===
delete-tree
---
TagElement [11300,11366]
    SimpleName: MatrixIndexException [11308,11328]
    TextElement:  if the specified row index is invalid [11328,11366]
===
delete-node
---
Javadoc [11056,11514]
===
===
delete-tree
---
TagElement [11568,11783]
    TextElement: Returns the entries in column number <code>col</code> as an array. [11568,11634]
    TextElement: <p> [11642,11645]
    TextElement: Column indices start at 0.  A <code>MatrixIndexException</code> is thrown [11653,11726]
    TextElement: unless  [11734,11741]
    TagElement [11741,11778]
        TextElement:  0 <= column < columnDimension [11747,11777]
    TextElement: .</p> [11778,11783]
===
delete-tree
---
TagElement [11890,11961]
    SimpleName: MatrixIndexException [11898,11918]
    TextElement:  if the specified column index is not valid [11918,11961]
===
delete-node
---
Javadoc [11557,11969]
===
===
delete-tree
---
TagElement [12017,12125]
    TextElement: Sets the entries in column number <code>column</code> [12017,12070]
    TextElement: as a column matrix.  Column indices start at 0. [12078,12125]
===
delete-tree
---
TagElement [12267,12336]
    SimpleName: MatrixIndexException [12275,12295]
    TextElement:  if the specified column index is invalid [12295,12336]
===
delete-node
---
TextElement: <p> [12605,12608]
===
===
delete-node
---
TextElement: Row and column indices start at 0 and must satisfy [12616,12666]
===
===
delete-node
---
TextElement: <ul> [12674,12678]
===
===
delete-node
---
TextElement: <li> [12686,12690]
===
===
delete-tree
---
TagElement [12690,12721]
    TextElement:  0 <= row < rowDimension [12696,12720]
===
delete-node
---
TextElement: </li> [12721,12726]
===
===
delete-node
---
TextElement: <li> [12734,12738]
===
===
delete-tree
---
TagElement [12738,12775]
    TextElement:  0 <= column < columnDimension [12744,12774]
===
delete-node
---
TextElement: </li> [12775,12780]
===
===
delete-node
---
TextElement: </ul> [12788,12793]
===
===
delete-node
---
TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [12801,12861]
===
===
delete-node
---
TagElement [12547,12861]
===
===
delete-tree
---
TagElement [13034,13102]
    SimpleName: MatrixIndexException [13042,13062]
    TextElement:  if the row or column index is not valid [13062,13102]
===
delete-node
---
Javadoc [12536,13110]
===
===
delete-node
---
TextElement: <p> [13218,13221]
===
===
delete-node
---
TextElement: Row and column indices start at 0 and must satisfy [13229,13279]
===
===
delete-node
---
TextElement: <ul> [13287,13291]
===
===
delete-node
---
TextElement: <li> [13299,13303]
===
===
delete-tree
---
TagElement [13303,13334]
    TextElement:  0 <= row < rowDimension [13309,13333]
===
delete-node
---
TextElement: </li> [13334,13339]
===
===
delete-node
---
TextElement: <li> [13347,13351]
===
===
delete-tree
---
TagElement [13351,13388]
    TextElement:  0 <= column < columnDimension [13357,13387]
===
delete-node
---
TextElement: </li> [13388,13393]
===
===
delete-node
---
TextElement: </ul> [13401,13406]
===
===
delete-node
---
TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [13414,13474]
===
===
delete-node
---
TagElement [13164,13474]
===
===
delete-tree
---
TagElement [13654,13722]
    SimpleName: MatrixIndexException [13662,13682]
    TextElement:  if the row or column index is not valid [13682,13722]
===
delete-node
---
TextElement: <p> [13870,13873]
===
===
delete-node
---
TextElement: Row and column indices start at 0 and must satisfy [13881,13931]
===
===
delete-node
---
TextElement: <ul> [13939,13943]
===
===
delete-node
---
TextElement: <li> [13951,13955]
===
===
delete-tree
---
TagElement [13955,13986]
    TextElement:  0 <= row < rowDimension [13961,13985]
===
delete-node
---
TextElement: </li> [13986,13991]
===
===
delete-node
---
TextElement: <li> [13999,14003]
===
===
delete-tree
---
TagElement [14003,14040]
    TextElement:  0 <= column < columnDimension [14009,14039]
===
delete-node
---
TextElement: </li> [14040,14045]
===
===
delete-node
---
TextElement: </ul> [14053,14058]
===
===
delete-node
---
TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [14066,14126]
===
===
delete-node
---
TagElement [13814,14126]
===
===
delete-node
---
TextElement:  value to add to the current matrix entry in row,column [14265,14320]
===
===
delete-node
---
TagElement [14249,14320]
===
===
delete-tree
---
TagElement [14328,14396]
    SimpleName: MatrixIndexException [14336,14356]
    TextElement:  if the row or column index is not valid [14356,14396]
===
delete-node
---
Javadoc [13803,14422]
===
===
delete-tree
---
SimpleType [14484,14504]
    SimpleName: MatrixIndexException [14484,14504]
===
delete-node
---
TextElement: <p> [14578,14581]
===
===
delete-node
---
TextElement: Row and column indices start at 0 and must satisfy [14589,14639]
===
===
delete-node
---
TextElement: <ul> [14647,14651]
===
===
delete-node
---
TextElement: <li> [14659,14663]
===
===
delete-tree
---
TagElement [14663,14694]
    TextElement:  0 <= row < rowDimension [14669,14693]
===
delete-node
---
TextElement: </li> [14694,14699]
===
===
delete-node
---
TextElement: <li> [14707,14711]
===
===
delete-tree
---
TagElement [14711,14748]
    TextElement:  0 <= column < columnDimension [14717,14747]
===
delete-node
---
TextElement: </li> [14748,14753]
===
===
delete-node
---
TextElement: </ul> [14761,14766]
===
===
delete-node
---
TextElement: otherwise a <code>MatrixIndexException</code> is thrown.</p> [14774,14834]
===
===
delete-node
---
TagElement [14522,14834]
===
===
delete-node
---
TextElement:  multiplication factor for the current matrix entry in row,column [14970,15035]
===
===
delete-node
---
TagElement [14957,15035]
===
===
delete-tree
---
TagElement [15043,15111]
    SimpleName: MatrixIndexException [15051,15071]
    TextElement:  if the row or column index is not valid [15071,15111]
===
delete-node
---
Javadoc [14511,15137]
===
===
delete-node
---
SimpleName: MatrixIndexException [20055,20075]
===
===
delete-node
---
SimpleName: MatrixIndexException [21721,21741]
===
===
delete-node
---
SimpleName: MatrixIndexException [26144,26164]
===
===
delete-node
---
SimpleName: MatrixIndexException [27824,27844]
===
===
delete-node
---
SimpleName: MatrixIndexException [32184,32204]
===
===
delete-node
---
SimpleName: MatrixIndexException [33853,33873]
===
