===
insert-tree
---
ImportDeclaration [1136,1197]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [1143,1196]
to
CompilationUnit [0,38487]
at 10
===
insert-tree
---
ImportDeclaration [1198,1253]
    QualifiedName: org.apache.commons.math.exception.ZeroException [1205,1252]
to
CompilationUnit [0,38487]
at 11
===
insert-tree
---
ImportDeclaration [1254,1321]
    QualifiedName: org.apache.commons.math.exception.NumberIsTooSmallException [1261,1320]
to
CompilationUnit [0,38487]
at 12
===
insert-tree
---
ImportDeclaration [1322,1385]
    QualifiedName: org.apache.commons.math.exception.NullArgumentException [1329,1384]
to
CompilationUnit [0,38487]
at 13
===
insert-tree
---
MethodDeclaration [13641,14112]
    Javadoc [13641,13904]
        TagElement [13652,13686]
            TextElement: Check if matrix indices are valid. [13652,13686]
        TagElement [13701,13717]
            SimpleName: m [13708,13709]
            TextElement:  Matrix. [13709,13717]
        TagElement [13725,13755]
            SimpleName: row [13732,13735]
            TextElement:  Row index to check. [13735,13755]
        TagElement [13763,13799]
            SimpleName: column [13770,13776]
            TextElement:  Column index to check. [13776,13799]
        TagElement [13807,13896]
            SimpleName: OutOfRangeException [13815,13834]
            TextElement:  if  [13834,13838]
            TagElement [13838,13849]
                TextElement:  row [13844,13848]
            TextElement:  or  [13849,13853]
            TagElement [13853,13867]
                TextElement:  column [13859,13866]
            TextElement:  is not [13867,13874]
            TextElement: a valid index. [13882,13896]
    Modifier: public [13909,13915]
    Modifier: static [13916,13922]
    PrimitiveType: void [13923,13927]
    SimpleName: checkMatrixIndex [13928,13944]
    SingleVariableDeclaration [13945,13962]
        Modifier: final [13945,13950]
        SimpleType [13951,13960]
            SimpleName: AnyMatrix [13951,13960]
        SimpleName: m [13961,13962]
    SingleVariableDeclaration [14004,14017]
        Modifier: final [14004,14009]
        PrimitiveType: int [14010,14013]
        SimpleName: row [14014,14017]
    SingleVariableDeclaration [14019,14035]
        Modifier: final [14019,14024]
        PrimitiveType: int [14025,14028]
        SimpleName: column [14029,14035]
    Block [14037,14112]
        ExpressionStatement [14047,14069]
            MethodInvocation [14047,14068]
                SimpleName: checkRowIndex [14047,14060]
                METHOD_INVOCATION_ARGUMENTS [14061,14067]
                    SimpleName: m [14061,14062]
                    SimpleName: row [14064,14067]
        ExpressionStatement [14078,14106]
            MethodInvocation [14078,14105]
                SimpleName: checkColumnIndex [14078,14094]
                METHOD_INVOCATION_ARGUMENTS [14095,14104]
                    SimpleName: m [14095,14096]
                    SimpleName: column [14098,14104]
to
TypeDeclaration [1333,38486]
at 27
===
insert-node
---
Javadoc [9208,9498]
to
MethodDeclaration [12445,12861]
at 0
===
insert-tree
---
TagElement [4512,4659]
    QualifiedName: org.apache.commons.math.exception.DimensionMismatchException [4520,4580]
    TextElement: if  [4588,4591]
    TagElement [4591,4603]
        TextElement:  data [4597,4602]
    TextElement:  is not rectangular (not all rows have the same length). [4603,4659]
to
Javadoc [3688,4567]
at 3
===
insert-tree
---
TagElement [4667,4717]
    SimpleName: ZeroException [4675,4688]
    TextElement:  if a row or column is empty. [4688,4717]
to
Javadoc [3688,4567]
at 4
===
insert-tree
---
TagElement [4725,4820]
    SimpleName: NullArgumentException [4733,4754]
    TextElement:  if either  [4754,4765]
    TagElement [4765,4777]
        TextElement:  data [4771,4776]
    TextElement:  or  [4777,4781]
    TagElement [4781,4796]
        TextElement:  data[0] [4787,4795]
    TextElement: is  [4804,4807]
    TagElement [4807,4819]
        TextElement:  null [4813,4818]
    TextElement: . [4819,4820]
to
Javadoc [3688,4567]
at 5
===
insert-tree
---
IfStatement [4942,5049]
    InfixExpression [4946,4989]
        InfixExpression [4946,4958]
            SimpleName: data [4946,4950]
            INFIX_EXPRESSION_OPERATOR: == [4951,4953]
            NullLiteral [4954,4958]
        INFIX_EXPRESSION_OPERATOR: || [4959,4961]
        InfixExpression [4974,4989]
            ArrayAccess [4974,4981]
                SimpleName: data [4974,4978]
                NumberLiteral: 0 [4979,4980]
            INFIX_EXPRESSION_OPERATOR: == [4982,4984]
            NullLiteral [4985,4989]
    Block [4991,5049]
        ThrowStatement [5005,5039]
            ClassInstanceCreation [5011,5038]
                SimpleType [5015,5036]
                    SimpleName: NullArgumentException [5015,5036]
to
Block [4631,4770]
at 0
===
insert-tree
---
TagElement [5786,5933]
    QualifiedName: org.apache.commons.math.exception.DimensionMismatchException [5794,5854]
    TextElement: if  [5862,5865]
    TagElement [5865,5877]
        TextElement:  data [5871,5876]
    TextElement:  is not rectangular (not all rows have the same length). [5877,5933]
to
Javadoc [4776,5673]
at 4
===
insert-tree
---
TagElement [5941,5991]
    SimpleName: ZeroException [5949,5962]
    TextElement:  if a row or column is empty. [5962,5991]
to
Javadoc [4776,5673]
at 5
===
insert-tree
---
TagElement [5999,6094]
    SimpleName: NullArgumentException [6007,6028]
    TextElement:  if either  [6028,6039]
    TagElement [6039,6051]
        TextElement:  data [6045,6050]
    TextElement:  or  [6051,6055]
    TagElement [6055,6070]
        TextElement:  data[0] [6061,6069]
    TextElement: is  [6078,6081]
    TagElement [6081,6093]
        TextElement:  null [6087,6092]
    TextElement: . [6093,6094]
to
Javadoc [4776,5673]
at 6
===
insert-tree
---
IfStatement [6270,6377]
    InfixExpression [6274,6317]
        InfixExpression [6274,6286]
            SimpleName: data [6274,6278]
            INFIX_EXPRESSION_OPERATOR: == [6279,6281]
            NullLiteral [6282,6286]
        INFIX_EXPRESSION_OPERATOR: || [6287,6289]
        InfixExpression [6302,6317]
            ArrayAccess [6302,6309]
                SimpleName: data [6302,6306]
                NumberLiteral: 0 [6307,6308]
            INFIX_EXPRESSION_OPERATOR: == [6310,6312]
            NullLiteral [6313,6317]
    Block [6319,6377]
        ThrowStatement [6333,6367]
            ClassInstanceCreation [6339,6366]
                SimpleType [6343,6364]
                    SimpleName: NullArgumentException [6343,6364]
to
Block [5765,5912]
at 0
===
move-tree
---
TagElement [12456,12521]
    TextElement: Creates a  [12456,12466]
    TagElement [12466,12484]
        SimpleName: RealVector [12473,12483]
    TextElement:  using the data from the input array. [12484,12521]
to
Javadoc [9208,9498]
at 0
===
move-tree
---
TagElement [12536,12562]
    SimpleName: data [12543,12547]
    TextElement:  the input data [12547,12562]
to
Javadoc [9208,9498]
at 1
===
move-tree
---
TagElement [12570,12602]
    TextElement:  a data.length RealVector [12577,12602]
to
Javadoc [9208,9498]
at 2
===
insert-tree
---
TagElement [9373,9420]
    SimpleName: ZeroException [9381,9394]
    TextElement:  if  [9394,9398]
    TagElement [9398,9410]
        TextElement:  data [9404,9409]
    TextElement:  is empty. [9410,9420]
to
Javadoc [9208,9498]
at 3
===
insert-tree
---
TagElement [9428,9490]
    SimpleName: NullArgumentException [9436,9457]
    TextElement:  if  [9457,9461]
    TagElement [9461,9473]
        TextElement:  data [9467,9472]
    TextElement:  is  [9473,9477]
    TagElement [9477,9489]
        TextElement:  null [9483,9488]
    TextElement: . [9489,9490]
to
Javadoc [9208,9498]
at 4
===
insert-tree
---
IfStatement [9570,9646]
    InfixExpression [9574,9586]
        SimpleName: data [9574,9578]
        INFIX_EXPRESSION_OPERATOR: == [9579,9581]
        NullLiteral [9582,9586]
    Block [9588,9646]
        ThrowStatement [9602,9636]
            ClassInstanceCreation [9608,9635]
                SimpleType [9612,9633]
                    SimpleName: NullArgumentException [9612,9633]
to
Block [12806,12861]
at 0
===
insert-tree
---
TagElement [9922,9969]
    SimpleName: ZeroException [9930,9943]
    TextElement:  if  [9943,9947]
    TagElement [9947,9959]
        TextElement:  data [9953,9958]
    TextElement:  is empty. [9959,9969]
to
Javadoc [12867,13217]
at 4
===
insert-tree
---
TagElement [9977,10039]
    SimpleName: NullArgumentException [9985,10006]
    TextElement:  if  [10006,10010]
    TagElement [10010,10022]
        TextElement:  data [10016,10021]
    TextElement:  is  [10022,10026]
    TagElement [10026,10038]
        TextElement:  null [10032,10037]
    TextElement: . [10038,10039]
to
Javadoc [12867,13217]
at 5
===
insert-tree
---
IfStatement [10153,10229]
    InfixExpression [10157,10169]
        SimpleName: data [10157,10161]
        INFIX_EXPRESSION_OPERATOR: == [10162,10164]
        NullLiteral [10165,10169]
    Block [10171,10229]
        ThrowStatement [10185,10219]
            ClassInstanceCreation [10191,10218]
                SimpleType [10195,10216]
                    SimpleName: NullArgumentException [10195,10216]
to
Block [13313,13372]
at 0
===
insert-tree
---
TagElement [10482,10532]
    SimpleName: ZeroException [10490,10503]
    TextElement:  if  [10503,10507]
    TagElement [10507,10522]
        TextElement:  rowData [10513,10521]
    TextElement:  is empty. [10522,10532]
to
Javadoc [13378,13708]
at 3
===
insert-tree
---
TagElement [10540,10605]
    SimpleName: NullArgumentException [10548,10569]
    TextElement:  if  [10569,10573]
    TagElement [10573,10588]
        TextElement:  rowData [10579,10587]
    TextElement:  is  [10588,10592]
    TagElement [10592,10604]
        TextElement:  null [10598,10603]
    TextElement: . [10604,10605]
to
Javadoc [13378,13708]
at 4
===
insert-tree
---
IfStatement [10691,10770]
    InfixExpression [10695,10710]
        SimpleName: rowData [10695,10702]
        INFIX_EXPRESSION_OPERATOR: == [10703,10705]
        NullLiteral [10706,10710]
    Block [10712,10770]
        ThrowStatement [10726,10760]
            ClassInstanceCreation [10732,10759]
                SimpleType [10736,10757]
                    SimpleName: NullArgumentException [10736,10757]
to
Block [13776,13994]
at 0
===
insert-tree
---
TagElement [11233,11283]
    SimpleName: ZeroException [11241,11254]
    TextElement:  if  [11254,11258]
    TagElement [11258,11273]
        TextElement:  rowData [11264,11272]
    TextElement:  is empty. [11273,11283]
to
Javadoc [14000,14381]
at 4
===
insert-tree
---
TagElement [11291,11356]
    SimpleName: NullArgumentException [11299,11320]
    TextElement:  if  [11320,11324]
    TagElement [11324,11339]
        TextElement:  rowData [11330,11338]
    TextElement:  is  [11339,11343]
    TagElement [11343,11355]
        TextElement:  null [11349,11354]
    TextElement: . [11355,11356]
to
Javadoc [14000,14381]
at 5
===
insert-tree
---
IfStatement [11484,11563]
    InfixExpression [11488,11503]
        SimpleName: rowData [11488,11495]
        INFIX_EXPRESSION_OPERATOR: == [11496,11498]
        NullLiteral [11499,11503]
    Block [11505,11563]
        ThrowStatement [11519,11553]
            ClassInstanceCreation [11525,11552]
                SimpleType [11529,11550]
                    SimpleName: NullArgumentException [11529,11550]
to
Block [14491,14882]
at 0
===
insert-tree
---
TagElement [12121,12174]
    SimpleName: ZeroException [12129,12142]
    TextElement:  if  [12142,12146]
    TagElement [12146,12164]
        TextElement:  columnData [12152,12163]
    TextElement:  is empty. [12164,12174]
to
Javadoc [17142,17484]
at 3
===
insert-tree
---
TagElement [12182,12250]
    SimpleName: NullArgumentException [12190,12211]
    TextElement:  if  [12211,12215]
    TagElement [12215,12233]
        TextElement:  columnData [12221,12232]
    TextElement:  is  [12233,12237]
    TagElement [12237,12249]
        TextElement:  null [12243,12248]
    TextElement: . [12249,12250]
to
Javadoc [17142,17484]
at 4
===
insert-tree
---
IfStatement [12342,12424]
    InfixExpression [12346,12364]
        SimpleName: columnData [12346,12356]
        INFIX_EXPRESSION_OPERATOR: == [12357,12359]
        NullLiteral [12360,12364]
    Block [12366,12424]
        ThrowStatement [12380,12414]
            ClassInstanceCreation [12386,12413]
                SimpleType [12390,12411]
                    SimpleName: NullArgumentException [12390,12411]
to
Block [17558,17782]
at 0
===
insert-tree
---
TagElement [12900,12947]
    SimpleName: ZeroException [12908,12921]
    TextElement:  if  [12921,12925]
    TagElement [12925,12937]
        TextElement:  data [12931,12936]
    TextElement:  is empty. [12937,12947]
to
Javadoc [17788,18181]
at 4
===
insert-tree
---
TagElement [12955,13023]
    SimpleName: NullArgumentException [12963,12984]
    TextElement:  if  [12984,12988]
    TagElement [12988,13006]
        TextElement:  columnData [12994,13005]
    TextElement:  is  [13006,13010]
    TagElement [13010,13022]
        TextElement:  null [13016,13021]
    TextElement: . [13022,13023]
to
Javadoc [17788,18181]
at 5
===
insert-tree
---
IfStatement [13157,13239]
    InfixExpression [13161,13179]
        SimpleName: columnData [13161,13171]
        INFIX_EXPRESSION_OPERATOR: == [13172,13174]
        NullLiteral [13175,13179]
    Block [13181,13239]
        ThrowStatement [13195,13229]
            ClassInstanceCreation [13201,13228]
                SimpleType [13205,13226]
                    SimpleName: NullArgumentException [13205,13226]
to
Block [18297,18694]
at 0
===
insert-node
---
TagElement [15146,15262]
to
Javadoc [22168,22585]
at 0
===
insert-tree
---
TagElement [15536,15641]
    SimpleName: NumberIsTooSmallException [15544,15569]
    TextElement:  if  [15569,15573]
    TagElement [15573,15598]
        TextElement:  endRow < startRow [15579,15597]
    TextElement:  or [15598,15601]
    TagElement [15609,15640]
        TextElement:  endColumn < startColumn [15615,15639]
    TextElement: . [15640,15641]
to
Javadoc [22168,22585]
at 8
===
insert-tree
---
TagElement [16748,16853]
    SimpleName: NullArgumentException [16756,16777]
    TextElement:  if  [16777,16781]
    TagElement [16781,16801]
        TextElement:  selectedRows [16787,16800]
    TextElement:  or [16801,16804]
    TagElement [16812,16835]
        TextElement:  selectedColumns [16818,16834]
    TextElement:  are  [16835,16840]
    TagElement [16840,16852]
        TextElement:  null [16846,16851]
    TextElement: . [16852,16853]
to
Javadoc [23390,23755]
at 4
===
insert-tree
---
TagElement [16861,16946]
    SimpleName: ZeroException [16869,16882]
    TextElement:  if the row or column selections are empty (zero [16882,16930]
    TextElement: length). [16938,16946]
to
Javadoc [23390,23755]
at 5
===
insert-tree
---
IfStatement [17246,17330]
    InfixExpression [17250,17270]
        SimpleName: selectedRows [17250,17262]
        INFIX_EXPRESSION_OPERATOR: == [17263,17265]
        NullLiteral [17266,17270]
    Block [17272,17330]
        ThrowStatement [17286,17320]
            ClassInstanceCreation [17292,17319]
                SimpleType [17296,17317]
                    SimpleName: NullArgumentException [17296,17317]
to
Block [23952,24478]
at 0
===
insert-tree
---
IfStatement [17339,17426]
    InfixExpression [17343,17366]
        SimpleName: selectedColumns [17343,17358]
        INFIX_EXPRESSION_OPERATOR: == [17359,17361]
        NullLiteral [17362,17366]
    Block [17368,17426]
        ThrowStatement [17382,17416]
            ClassInstanceCreation [17388,17415]
                SimpleType [17392,17413]
                    SimpleName: NullArgumentException [17392,17413]
to
Block [23952,24478]
at 1
===
move-tree
---
IfStatement [24031,24173]
    InfixExpression [24035,24059]
        QualifiedName: selectedRows.length [24035,24054]
        INFIX_EXPRESSION_OPERATOR: == [24055,24057]
        NumberLiteral: 0 [24058,24059]
    Block [24061,24173]
        ThrowStatement [24079,24159]
            ClassInstanceCreation [24085,24158]
                SimpleType [24089,24109]
                    SimpleName: MatrixIndexException [24089,24109]
                QualifiedName: LocalizedFormats.EMPTY_SELECTED_ROW_INDEX_ARRAY [24110,24157]
to
Block [23952,24478]
at 2
===
insert-node
---
IfStatement [17571,17704]
to
Block [23952,24478]
at 3
===
update-node
---
TextElement:   RealMatrix containing the values of the array [5316,5363]
replace   RealMatrix containing the values of the array by  a matrix containing the values of the array.
===
update-node
---
TextElement: Creates a row  [13389,13403]
replace Creates a row  by Create a row 
===
update-node
---
TextElement: Creates a row  [14011,14025]
replace Creates a row  by Create a row 
===
update-node
---
TextElement:  matrix containing the submatrix [21148,21180]
replace  matrix containing the submatrix by  Matrix.
===
update-node
---
TextElement:  row index to check [21198,21217]
replace  row index to check by  Row index to check.
===
update-node
---
SimpleName: MatrixIndexException [21236,21256]
replace MatrixIndexException by OutOfRangeException
===
update-node
---
TextElement:  if index is not valid [21256,21278]
replace  if index is not valid by  if 
===
insert-tree
---
TagElement [14267,14278]
    TextElement:  row [14273,14277]
to
TagElement [21225,21278]
at 2
===
insert-node
---
TextElement:  is not a valid index. [14278,14300]
to
TagElement [21225,21278]
at 3
===
update-node
---
TextElement:  matrix containing the submatrix [21655,21687]
replace  matrix containing the submatrix by  Matrix.
===
update-node
---
TextElement:  column index to check [21708,21730]
replace  column index to check by  Column index to check.
===
update-node
---
SimpleName: MatrixIndexException [21749,21769]
replace MatrixIndexException by OutOfRangeException
===
update-node
---
TextElement:  if index is not valid [21769,21791]
replace  if index is not valid by  if 
===
insert-tree
---
TagElement [14772,14786]
    TextElement:  column [14778,14785]
to
TagElement [21738,21791]
at 2
===
insert-node
---
TextElement:  is not a valid index. [14786,14808]
to
TagElement [21738,21791]
at 3
===
move-tree
---
TextElement: Check if submatrix ranges indices are valid. [22179,22223]
to
TagElement [15146,15262]
at 0
===
insert-node
---
TextElement: Rows and columns are indicated counting from 0 to  [15198,15248]
to
TagElement [15146,15262]
at 1
===
insert-tree
---
TagElement [15248,15261]
    TextElement:  n - 1 [15254,15260]
to
TagElement [15146,15262]
at 2
===
insert-node
---
TextElement: . [15261,15262]
to
TagElement [15146,15262]
at 3
===
update-node
---
TextElement:  matrix containing the submatrix [22308,22340]
replace  matrix containing the submatrix by  Matrix.
===
update-node
---
TextElement:  Initial row index [22363,22381]
replace  Initial row index by  Initial row index.
===
update-node
---
TextElement:  Final row index [22402,22418]
replace  Final row index by  Final row index.
===
update-node
---
TextElement:  Initial column index [22444,22465]
replace  Initial column index by  Initial column index.
===
update-node
---
TextElement:  Final column index [22489,22508]
replace  Final column index by  Final column index.
===
update-node
---
SimpleName: MatrixIndexException [22527,22547]
replace MatrixIndexException by OutOfRangeException
===
update-node
---
TextElement:   if the indices are not valid [22547,22577]
replace   if the indices are not valid by  if the indices are invalid.
===
move-tree
---
INFIX_EXPRESSION_OPERATOR: > [22909,22910]
to
InfixExpression [22900,22917]
at 2
===
move-tree
---
SimpleName: startRow [22900,22908]
to
InfixExpression [22900,22917]
at 2
===
move-tree
---
INFIX_EXPRESSION_OPERATOR: > [23189,23190]
to
InfixExpression [23177,23200]
at 2
===
move-tree
---
SimpleName: startColumn [23177,23188]
to
InfixExpression [23177,23200]
at 2
===
update-node
---
TextElement:  matrix containing the submatrix [23530,23562]
replace  matrix containing the submatrix by  Matrix.
===
update-node
---
SimpleName: MatrixIndexException [23685,23705]
replace MatrixIndexException by OutOfRangeException
===
update-node
---
TextElement:  if row or column selections are not valid [23705,23747]
replace  if row or column selections are not valid by  if row or column selections are not valid.
===
insert-tree
---
InfixExpression [17575,17602]
    QualifiedName: selectedColumns.length [17575,17597]
    INFIX_EXPRESSION_OPERATOR: == [17598,17600]
    NumberLiteral: 0 [17601,17602]
to
IfStatement [17571,17704]
at 0
===
move-tree
---
Block [24017,24279]
    IfStatement [24031,24173]
        InfixExpression [24035,24059]
            QualifiedName: selectedRows.length [24035,24054]
            INFIX_EXPRESSION_OPERATOR: == [24055,24057]
            NumberLiteral: 0 [24058,24059]
        Block [24061,24173]
            ThrowStatement [24079,24159]
                ClassInstanceCreation [24085,24158]
                    SimpleType [24089,24109]
                        SimpleName: MatrixIndexException [24089,24109]
                    QualifiedName: LocalizedFormats.EMPTY_SELECTED_ROW_INDEX_ARRAY [24110,24157]
    ThrowStatement [24186,24269]
        ClassInstanceCreation [24192,24268]
            SimpleType [24196,24216]
                SimpleName: MatrixIndexException [24196,24216]
            QualifiedName: LocalizedFormats.EMPTY_SELECTED_COLUMN_INDEX_ARRAY [24217,24267]
to
IfStatement [17571,17704]
at 1
===
insert-tree
---
ThrowStatement [11644,11706]
    ClassInstanceCreation [11650,11705]
        SimpleType [11654,11667]
            SimpleName: ZeroException [11654,11667]
        QualifiedName: LocalizedFormats.AT_LEAST_ONE_COLUMN [11668,11704]
to
Block [14559,14679]
at 0
===
update-node
---
INFIX_EXPRESSION_OPERATOR: > [22909,22910]
replace > by <
===
update-node
---
INFIX_EXPRESSION_OPERATOR: > [23189,23190]
replace > by <
===
move-tree
---
SimpleName: startRow [23053,23061]
to
ClassInstanceCreation [22939,23070]
at 3
===
move-tree
---
SimpleName: startColumn [23342,23353]
to
ClassInstanceCreation [23222,23365]
at 3
===
update-node
---
QualifiedName: LocalizedFormats.ROW_INDEX_OUT_OF_RANGE [21456,21495]
replace LocalizedFormats.ROW_INDEX_OUT_OF_RANGE by LocalizedFormats.ROW_INDEX
===
update-node
---
QualifiedName: LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE [22020,22062]
replace LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE by LocalizedFormats.COLUMN_INDEX
===
insert-node
---
BooleanLiteral: false [16145,16150]
to
ClassInstanceCreation [22939,23070]
at 4
===
insert-node
---
BooleanLiteral: false [16457,16462]
to
ClassInstanceCreation [23222,23365]
at 4
===
update-node
---
SimpleName: MatrixIndexException [21435,21455]
replace MatrixIndexException by OutOfRangeException
===
update-node
---
SimpleName: MatrixIndexException [21999,22019]
replace MatrixIndexException by OutOfRangeException
===
update-node
---
SimpleName: MatrixIndexException [22943,22963]
replace MatrixIndexException by NumberIsTooSmallException
===
update-node
---
SimpleName: MatrixIndexException [23226,23246]
replace MatrixIndexException by NumberIsTooSmallException
===
update-node
---
SimpleName: MatrixIndexException [24089,24109]
replace MatrixIndexException by ZeroException
===
update-node
---
SimpleName: MatrixIndexException [24196,24216]
replace MatrixIndexException by ZeroException
===
delete-tree
---
ImportDeclaration [974,1002]
    QualifiedName: java.math.BigDecimal [981,1001]
===
delete-tree
---
TagElement [4291,4416]
    SimpleName: IllegalArgumentException [4299,4323]
    TextElement:  if <code>data</code> is not rectangular [4323,4363]
    TextElement: (not all rows have the same length) or empty [4372,4416]
===
delete-tree
---
TagElement [4424,4519]
    SimpleName: NullPointerException [4432,4452]
    TextElement:  if either <code>data</code> or [4452,4483]
    TextElement: <code>data[0]</code> is null [4491,4519]
===
delete-tree
---
TagElement [5371,5496]
    SimpleName: IllegalArgumentException [5379,5403]
    TextElement:  if <code>data</code> is not rectangular [5403,5443]
    TextElement: (not all rows have the same length) or empty [5452,5496]
===
delete-tree
---
TagElement [5504,5599]
    SimpleName: NullPointerException [5512,5532]
    TextElement:  if either <code>data</code> or [5532,5563]
    TextElement: <code>data[0]</code> is null [5571,5599]
===
delete-tree
---
MethodDeclaration [7431,8196]
    Javadoc [7431,7788]
        TagElement [7442,7501]
            TextElement: Returns <code>dimension x dimension</code> identity matrix. [7442,7501]
        TagElement [7516,7573]
            SimpleName: dimension [7523,7532]
            TextElement:  dimension of identity matrix to generate [7532,7573]
        TagElement [7581,7604]
            TextElement:  identity matrix [7588,7604]
        TagElement [7612,7673]
            SimpleName: IllegalArgumentException [7620,7644]
            TextElement:  if dimension is not positive [7644,7673]
        TagElement [7681,7691]
            TextElement:  1.1 [7687,7691]
        TagElement [7699,7780]
            TextElement:  since 2.0, replaced by  [7710,7734]
            TagElement [7734,7780]
                MethodRef [7741,7779]
                    SimpleName: createFieldIdentityMatrix [7742,7767]
                    MethodRefParameter [7768,7773]
                        SimpleType [7768,7773]
                            SimpleName: Field [7768,7773]
                    MethodRefParameter [7775,7778]
                        PrimitiveType: int [7775,7778]
    MarkerAnnotation [7793,7804]
        SimpleName: Deprecated [7794,7804]
    Modifier: public [7809,7815]
    Modifier: static [7816,7822]
    SimpleType [7823,7832]
        SimpleName: BigMatrix [7823,7832]
    SimpleName: createBigIdentityMatrix [7833,7856]
    SingleVariableDeclaration [7857,7870]
        PrimitiveType: int [7857,7860]
        SimpleName: dimension [7861,7870]
    Block [7872,8196]
        VariableDeclarationStatement [7882,7944]
            Modifier: final [7882,7887]
            ArrayType [7888,7902]
                SimpleType [7888,7898]
                    SimpleName: BigDecimal [7888,7898]
                Dimension [7898,7900]
                Dimension [7900,7902]
            VariableDeclarationFragment [7903,7943]
                SimpleName: d [7903,7904]
                ArrayCreation [7907,7943]
                    ArrayType [7911,7943]
                        SimpleType [7911,7921]
                            SimpleName: BigDecimal [7911,7921]
                        Dimension [7921,7932]
                            SimpleName: dimension [7922,7931]
                        Dimension [7932,7943]
                            SimpleName: dimension [7933,7942]
        ForStatement [7953,8146]
            VariableDeclarationExpression [7958,7969]
                PrimitiveType: int [7958,7961]
                VariableDeclarationFragment [7962,7969]
                    SimpleName: row [7962,7965]
                    NumberLiteral: 0 [7968,7969]
            InfixExpression [7971,7986]
                SimpleName: row [7971,7974]
                INFIX_EXPRESSION_OPERATOR: < [7975,7976]
                SimpleName: dimension [7977,7986]
            PostfixExpression [7988,7993]
                SimpleName: row [7988,7991]
                POSTFIX_EXPRESSION_OPERATOR: ++ [7991,7993]
            Block [7995,8146]
                VariableDeclarationStatement [8009,8042]
                    Modifier: final [8009,8014]
                    ArrayType [8015,8027]
                        SimpleType [8015,8025]
                            SimpleName: BigDecimal [8015,8025]
                        Dimension [8025,8027]
                    VariableDeclarationFragment [8028,8041]
                        SimpleName: dRow [8028,8032]
                        ArrayAccess [8035,8041]
                            SimpleName: d [8035,8036]
                            SimpleName: row [8037,8040]
                ExpressionStatement [8055,8093]
                    MethodInvocation [8055,8092]
                        METHOD_INVOCATION_RECEIVER [8055,8061]
                            SimpleName: Arrays [8055,8061]
                        SimpleName: fill [8062,8066]
                        METHOD_INVOCATION_ARGUMENTS [8067,8091]
                            SimpleName: dRow [8067,8071]
                            QualifiedName: BigMatrixImpl.ZERO [8073,8091]
                ExpressionStatement [8106,8136]
                    Assignment [8106,8135]
                        ArrayAccess [8106,8115]
                            SimpleName: dRow [8106,8110]
                            SimpleName: row [8111,8114]
                        ASSIGNMENT_OPERATOR: = [8116,8117]
                        QualifiedName: BigMatrixImpl.ONE [8118,8135]
        ReturnStatement [8155,8190]
            ClassInstanceCreation [8162,8189]
                SimpleType [8166,8179]
                    SimpleName: BigMatrixImpl [8166,8179]
                SimpleName: d [8180,8181]
                BooleanLiteral: false [8183,8188]
===
delete-tree
---
MethodDeclaration [9368,10018]
    Javadoc [9368,9893]
        TagElement [9379,9514]
            TextElement: Returns a  [9379,9389]
            TagElement [9389,9406]
                SimpleName: BigMatrix [9396,9405]
            TextElement:  whose entries are the the values in the [9406,9446]
            TextElement: the input array.  The input array is copied, not referenced. [9454,9514]
        TagElement [9529,9552]
            SimpleName: data [9536,9540]
            TextElement:  input array [9540,9552]
        TagElement [9560,9614]
            TextElement:   RealMatrix containing the values of the array [9567,9614]
        TagElement [9622,9747]
            SimpleName: IllegalArgumentException [9630,9654]
            TextElement:  if <code>data</code> is not rectangular [9654,9694]
            TextElement: (not all rows have the same length) or empty [9703,9747]
        TagElement [9755,9799]
            SimpleName: NullPointerException [9763,9783]
            TextElement:  if data is null [9783,9799]
        TagElement [9807,9885]
            TextElement:  since 2.0 replaced by  [9818,9841]
            TagElement [9841,9885]
                MethodRef [9848,9884]
                    SimpleName: createFieldMatrix [9849,9866]
                    MethodRefParameter [9867,9883]
                        ArrayType [9867,9883]
                            SimpleType [9867,9879]
                                SimpleName: FieldElement [9867,9879]
                            Dimension [9879,9881]
                            Dimension [9881,9883]
    MarkerAnnotation [9898,9909]
        SimpleName: Deprecated [9899,9909]
    Modifier: public [9914,9920]
    Modifier: static [9921,9927]
    SimpleType [9928,9937]
        SimpleName: BigMatrix [9928,9937]
    SimpleName: createBigMatrix [9938,9953]
    SingleVariableDeclaration [9954,9969]
        ArrayType [9954,9964]
            PrimitiveType: double [9954,9960]
            Dimension [9960,9962]
            Dimension [9962,9964]
        SimpleName: data [9965,9969]
    Block [9971,10018]
        ReturnStatement [9981,10012]
            ClassInstanceCreation [9988,10011]
                SimpleType [9992,10005]
                    SimpleName: BigMatrixImpl [9992,10005]
                SimpleName: data [10006,10010]
===
delete-tree
---
MethodDeclaration [10024,10678]
    Javadoc [10024,10549]
        TagElement [10035,10170]
            TextElement: Returns a  [10035,10045]
            TagElement [10045,10062]
                SimpleName: BigMatrix [10052,10061]
            TextElement:  whose entries are the the values in the [10062,10102]
            TextElement: the input array.  The input array is copied, not referenced. [10110,10170]
        TagElement [10185,10208]
            SimpleName: data [10192,10196]
            TextElement:  input array [10196,10208]
        TagElement [10216,10270]
            TextElement:   RealMatrix containing the values of the array [10223,10270]
        TagElement [10278,10403]
            SimpleName: IllegalArgumentException [10286,10310]
            TextElement:  if <code>data</code> is not rectangular [10310,10350]
            TextElement: (not all rows have the same length) or empty [10359,10403]
        TagElement [10411,10455]
            SimpleName: NullPointerException [10419,10439]
            TextElement:  if data is null [10439,10455]
        TagElement [10463,10541]
            TextElement:  since 2.0 replaced by  [10474,10497]
            TagElement [10497,10541]
                MethodRef [10504,10540]
                    SimpleName: createFieldMatrix [10505,10522]
                    MethodRefParameter [10523,10539]
                        ArrayType [10523,10539]
                            SimpleType [10523,10535]
                                SimpleName: FieldElement [10523,10535]
                            Dimension [10535,10537]
                            Dimension [10537,10539]
    MarkerAnnotation [10554,10565]
        SimpleName: Deprecated [10555,10565]
    Modifier: public [10570,10576]
    Modifier: static [10577,10583]
    SimpleType [10584,10593]
        SimpleName: BigMatrix [10584,10593]
    SimpleName: createBigMatrix [10594,10609]
    SingleVariableDeclaration [10610,10629]
        ArrayType [10610,10624]
            SimpleType [10610,10620]
                SimpleName: BigDecimal [10610,10620]
            Dimension [10620,10622]
            Dimension [10622,10624]
        SimpleName: data [10625,10629]
    Block [10631,10678]
        ReturnStatement [10641,10672]
            ClassInstanceCreation [10648,10671]
                SimpleType [10652,10665]
                    SimpleName: BigMatrixImpl [10652,10665]
                SimpleName: data [10666,10670]
===
delete-tree
---
MethodDeclaration [10684,11783]
    Javadoc [10684,11624]
        TagElement [10695,11086]
            TextElement: Returns a  [10695,10705]
            TagElement [10705,10722]
                SimpleName: BigMatrix [10712,10721]
            TextElement:  whose entries are the the values in the [10722,10762]
            TextElement: the input array. [10770,10786]
            TextElement: <p>If an array is built specially in order to be embedded in a [10794,10856]
            TextElement: BigMatrix and not used directly, the <code>copyArray</code> may be [10864,10930]
            TextElement: set to <code>false</code. This will prevent the copying and improve [10938,11005]
            TextElement: performance as no new array will be built and no data will be copied.</p> [11013,11086]
        TagElement [11094,11125]
            SimpleName: data [11101,11105]
            TextElement:  data for new matrix [11105,11125]
        TagElement [11133,11229]
            SimpleName: copyArray [11140,11149]
            TextElement:  if true, the input array will be copied, otherwise [11149,11200]
            TextElement: it will be referenced [11208,11229]
        TagElement [11237,11290]
            TextElement:   BigMatrix containing the values of the array [11244,11290]
        TagElement [11298,11423]
            SimpleName: IllegalArgumentException [11306,11330]
            TextElement:  if <code>data</code> is not rectangular [11330,11370]
            TextElement: (not all rows have the same length) or empty [11379,11423]
        TagElement [11431,11488]
            SimpleName: NullPointerException [11439,11459]
            TextElement:  if <code>data</code> is null [11459,11488]
        TagElement [11496,11530]
            MethodRef [11501,11530]
                SimpleName: createRealMatrix [11502,11518]
                MethodRefParameter [11519,11529]
                    ArrayType [11519,11529]
                        PrimitiveType: double [11519,11525]
                        Dimension [11525,11527]
                        Dimension [11527,11529]
        TagElement [11538,11616]
            TextElement:  since 2.0 replaced by  [11549,11572]
            TagElement [11572,11616]
                MethodRef [11579,11615]
                    SimpleName: createFieldMatrix [11580,11597]
                    MethodRefParameter [11598,11614]
                        ArrayType [11598,11614]
                            SimpleType [11598,11610]
                                SimpleName: FieldElement [11598,11610]
                            Dimension [11610,11612]
                            Dimension [11612,11614]
    MarkerAnnotation [11629,11640]
        SimpleName: Deprecated [11630,11640]
    Modifier: public [11645,11651]
    Modifier: static [11652,11658]
    SimpleType [11659,11668]
        SimpleName: BigMatrix [11659,11668]
    SimpleName: createBigMatrix [11669,11684]
    SingleVariableDeclaration [11685,11704]
        ArrayType [11685,11699]
            SimpleType [11685,11695]
                SimpleName: BigDecimal [11685,11695]
            Dimension [11695,11697]
            Dimension [11697,11699]
        SimpleName: data [11700,11704]
    SingleVariableDeclaration [11706,11723]
        PrimitiveType: boolean [11706,11713]
        SimpleName: copyArray [11714,11723]
    Block [11725,11783]
        ReturnStatement [11735,11777]
            ClassInstanceCreation [11742,11776]
                SimpleType [11746,11759]
                    SimpleName: BigMatrixImpl [11746,11759]
                SimpleName: data [11760,11764]
                SimpleName: copyArray [11766,11775]
===
delete-tree
---
MethodDeclaration [11789,12439]
    Javadoc [11789,12314]
        TagElement [11800,11935]
            TextElement: Returns a  [11800,11810]
            TagElement [11810,11827]
                SimpleName: BigMatrix [11817,11826]
            TextElement:  whose entries are the the values in the [11827,11867]
            TextElement: the input array.  The input array is copied, not referenced. [11875,11935]
        TagElement [11950,11973]
            SimpleName: data [11957,11961]
            TextElement:  input array [11961,11973]
        TagElement [11981,12035]
            TextElement:   RealMatrix containing the values of the array [11988,12035]
        TagElement [12043,12168]
            SimpleName: IllegalArgumentException [12051,12075]
            TextElement:  if <code>data</code> is not rectangular [12075,12115]
            TextElement: (not all rows have the same length) or empty [12124,12168]
        TagElement [12176,12220]
            SimpleName: NullPointerException [12184,12204]
            TextElement:  if data is null [12204,12220]
        TagElement [12228,12306]
            TextElement:  since 2.0 replaced by  [12239,12262]
            TagElement [12262,12306]
                MethodRef [12269,12305]
                    SimpleName: createFieldMatrix [12270,12287]
                    MethodRefParameter [12288,12304]
                        ArrayType [12288,12304]
                            SimpleType [12288,12300]
                                SimpleName: FieldElement [12288,12300]
                            Dimension [12300,12302]
                            Dimension [12302,12304]
    MarkerAnnotation [12319,12330]
        SimpleName: Deprecated [12320,12330]
    Modifier: public [12335,12341]
    Modifier: static [12342,12348]
    SimpleType [12349,12358]
        SimpleName: BigMatrix [12349,12358]
    SimpleName: createBigMatrix [12359,12374]
    SingleVariableDeclaration [12375,12390]
        ArrayType [12375,12385]
            SimpleType [12375,12381]
                SimpleName: String [12375,12381]
            Dimension [12381,12383]
            Dimension [12383,12385]
        SimpleName: data [12386,12390]
    Block [12392,12439]
        ReturnStatement [12402,12433]
            ClassInstanceCreation [12409,12432]
                SimpleType [12413,12426]
                    SimpleName: BigMatrixImpl [12413,12426]
                SimpleName: data [12427,12431]
===
delete-tree
---
TagElement [12610,12672]
    SimpleName: IllegalArgumentException [12618,12642]
    TextElement:  if <code>data</code> is empty [12642,12672]
===
delete-tree
---
TagElement [12680,12736]
    SimpleName: NullPointerException [12688,12708]
    TextElement:  if <code>data</code>is null [12708,12736]
===
delete-node
---
Javadoc [12445,12744]
===
===
delete-tree
---
TagElement [13083,13145]
    SimpleName: IllegalArgumentException [13091,13115]
    TextElement:  if <code>data</code> is empty [13115,13145]
===
delete-tree
---
TagElement [13153,13209]
    SimpleName: NullPointerException [13161,13181]
    TextElement:  if <code>data</code>is null [13181,13209]
===
delete-tree
---
TagElement [13568,13633]
    SimpleName: IllegalArgumentException [13576,13600]
    TextElement:  if <code>rowData</code> is empty [13600,13633]
===
delete-tree
---
TagElement [13641,13700]
    SimpleName: NullPointerException [13649,13669]
    TextElement:  if <code>rowData</code>is null [13669,13700]
===
delete-tree
---
TagElement [14241,14306]
    SimpleName: IllegalArgumentException [14249,14273]
    TextElement:  if <code>rowData</code> is empty [14273,14306]
===
delete-tree
---
TagElement [14314,14373]
    SimpleName: NullPointerException [14322,14342]
    TextElement:  if <code>rowData</code>is null [14342,14373]
===
delete-tree
---
ThrowStatement [14573,14669]
    MethodInvocation [14579,14668]
        METHOD_INVOCATION_RECEIVER [14579,14599]
            SimpleName: MathRuntimeException [14579,14599]
        SimpleName: createIllegalArgumentException [14600,14630]
        METHOD_INVOCATION_ARGUMENTS [14631,14667]
            QualifiedName: LocalizedFormats.AT_LEAST_ONE_COLUMN [14631,14667]
===
delete-tree
---
MethodDeclaration [14888,15648]
    Javadoc [14888,15303]
        TagElement [14899,14974]
            TextElement: Creates a row  [14899,14913]
            TagElement [14913,14930]
                SimpleName: BigMatrix [14920,14929]
            TextElement:  using the data from the input [14930,14960]
            TextElement: array. [14968,14974]
        TagElement [14989,15022]
            SimpleName: rowData [14996,15003]
            TextElement:  the input row data [15003,15022]
        TagElement [15030,15068]
            TextElement:  a 1 x rowData.length BigMatrix [15037,15068]
        TagElement [15076,15141]
            SimpleName: IllegalArgumentException [15084,15108]
            TextElement:  if <code>rowData</code> is empty [15108,15141]
        TagElement [15149,15208]
            SimpleName: NullPointerException [15157,15177]
            TextElement:  if <code>rowData</code>is null [15177,15208]
        TagElement [15216,15295]
            TextElement:  since 2.0 replaced by  [15227,15250]
            TagElement [15250,15295]
                MethodRef [15257,15294]
                    SimpleName: createRowFieldMatrix [15258,15278]
                    MethodRefParameter [15279,15293]
                        ArrayType [15279,15293]
                            SimpleType [15279,15291]
                                SimpleName: FieldElement [15279,15291]
                            Dimension [15291,15293]
    MarkerAnnotation [15308,15319]
        SimpleName: Deprecated [15309,15319]
    Modifier: public [15324,15330]
    Modifier: static [15331,15337]
    SimpleType [15338,15347]
        SimpleName: BigMatrix [15338,15347]
    SimpleName: createRowBigMatrix [15348,15366]
    SingleVariableDeclaration [15367,15383]
        ArrayType [15367,15375]
            PrimitiveType: double [15367,15373]
            Dimension [15373,15375]
        SimpleName: rowData [15376,15383]
    Block [15385,15648]
        VariableDeclarationStatement [15395,15428]
            Modifier: final [15395,15400]
            PrimitiveType: int [15401,15404]
            VariableDeclarationFragment [15405,15427]
                SimpleName: nCols [15405,15410]
                QualifiedName: rowData.length [15413,15427]
        VariableDeclarationStatement [15437,15490]
            Modifier: final [15437,15442]
            ArrayType [15443,15457]
                SimpleType [15443,15453]
                    SimpleName: BigDecimal [15443,15453]
                Dimension [15453,15455]
                Dimension [15455,15457]
            VariableDeclarationFragment [15458,15489]
                SimpleName: data [15458,15462]
                ArrayCreation [15465,15489]
                    ArrayType [15469,15489]
                        SimpleType [15469,15479]
                            SimpleName: BigDecimal [15469,15479]
                        Dimension [15479,15482]
                            NumberLiteral: 1 [15480,15481]
                        Dimension [15482,15489]
                            SimpleName: nCols [15483,15488]
        ForStatement [15499,15595]
            VariableDeclarationExpression [15504,15513]
                PrimitiveType: int [15504,15507]
                VariableDeclarationFragment [15508,15513]
                    SimpleName: i [15508,15509]
                    NumberLiteral: 0 [15512,15513]
            InfixExpression [15515,15524]
                SimpleName: i [15515,15516]
                INFIX_EXPRESSION_OPERATOR: < [15517,15518]
                SimpleName: nCols [15519,15524]
            PrefixExpression [15526,15529]
                PREFIX_EXPRESSION_OPERATOR: ++ [15526,15528]
                SimpleName: i [15528,15529]
            Block [15531,15595]
                ExpressionStatement [15545,15585]
                    Assignment [15545,15584]
                        ArrayAccess [15545,15555]
                            ArrayAccess [15545,15552]
                                SimpleName: data [15545,15549]
                                NumberLiteral: 0 [15550,15551]
                            SimpleName: i [15553,15554]
                        ASSIGNMENT_OPERATOR: = [15556,15557]
                        ClassInstanceCreation [15558,15584]
                            SimpleType [15562,15572]
                                SimpleName: BigDecimal [15562,15572]
                            ArrayAccess [15573,15583]
                                SimpleName: rowData [15573,15580]
                                SimpleName: i [15581,15582]
        ReturnStatement [15604,15642]
            ClassInstanceCreation [15611,15641]
                SimpleType [15615,15628]
                    SimpleName: BigMatrixImpl [15615,15628]
                SimpleName: data [15629,15633]
                BooleanLiteral: false [15635,15640]
===
delete-tree
---
MethodDeclaration [15654,16370]
    Javadoc [15654,16069]
        TagElement [15665,15740]
            TextElement: Creates a row  [15665,15679]
            TagElement [15679,15696]
                SimpleName: BigMatrix [15686,15695]
            TextElement:  using the data from the input [15696,15726]
            TextElement: array. [15734,15740]
        TagElement [15755,15788]
            SimpleName: rowData [15762,15769]
            TextElement:  the input row data [15769,15788]
        TagElement [15796,15834]
            TextElement:  a 1 x rowData.length BigMatrix [15803,15834]
        TagElement [15842,15907]
            SimpleName: IllegalArgumentException [15850,15874]
            TextElement:  if <code>rowData</code> is empty [15874,15907]
        TagElement [15915,15974]
            SimpleName: NullPointerException [15923,15943]
            TextElement:  if <code>rowData</code>is null [15943,15974]
        TagElement [15982,16061]
            TextElement:  since 2.0 replaced by  [15993,16016]
            TagElement [16016,16061]
                MethodRef [16023,16060]
                    SimpleName: createRowFieldMatrix [16024,16044]
                    MethodRefParameter [16045,16059]
                        ArrayType [16045,16059]
                            SimpleType [16045,16057]
                                SimpleName: FieldElement [16045,16057]
                            Dimension [16057,16059]
    MarkerAnnotation [16074,16085]
        SimpleName: Deprecated [16075,16085]
    Modifier: public [16090,16096]
    Modifier: static [16097,16103]
    SimpleType [16104,16113]
        SimpleName: BigMatrix [16104,16113]
    SimpleName: createRowBigMatrix [16114,16132]
    SingleVariableDeclaration [16133,16153]
        ArrayType [16133,16145]
            SimpleType [16133,16143]
                SimpleName: BigDecimal [16133,16143]
            Dimension [16143,16145]
        SimpleName: rowData [16146,16153]
    Block [16155,16370]
        VariableDeclarationStatement [16165,16198]
            Modifier: final [16165,16170]
            PrimitiveType: int [16171,16174]
            VariableDeclarationFragment [16175,16197]
                SimpleName: nCols [16175,16180]
                QualifiedName: rowData.length [16183,16197]
        VariableDeclarationStatement [16207,16260]
            Modifier: final [16207,16212]
            ArrayType [16213,16227]
                SimpleType [16213,16223]
                    SimpleName: BigDecimal [16213,16223]
                Dimension [16223,16225]
                Dimension [16225,16227]
            VariableDeclarationFragment [16228,16259]
                SimpleName: data [16228,16232]
                ArrayCreation [16235,16259]
                    ArrayType [16239,16259]
                        SimpleType [16239,16249]
                            SimpleName: BigDecimal [16239,16249]
                        Dimension [16249,16252]
                            NumberLiteral: 1 [16250,16251]
                        Dimension [16252,16259]
                            SimpleName: nCols [16253,16258]
        ExpressionStatement [16269,16317]
            MethodInvocation [16269,16316]
                METHOD_INVOCATION_RECEIVER [16269,16275]
                    SimpleName: System [16269,16275]
                SimpleName: arraycopy [16276,16285]
                METHOD_INVOCATION_ARGUMENTS [16286,16315]
                    SimpleName: rowData [16286,16293]
                    NumberLiteral: 0 [16295,16296]
                    ArrayAccess [16298,16305]
                        SimpleName: data [16298,16302]
                        NumberLiteral: 0 [16303,16304]
                    NumberLiteral: 0 [16307,16308]
                    SimpleName: nCols [16310,16315]
        ReturnStatement [16326,16364]
            ClassInstanceCreation [16333,16363]
                SimpleType [16337,16350]
                    SimpleName: BigMatrixImpl [16337,16350]
                SimpleName: data [16351,16355]
                BooleanLiteral: false [16357,16362]
===
delete-tree
---
MethodDeclaration [16376,17136]
    Javadoc [16376,16791]
        TagElement [16387,16462]
            TextElement: Creates a row  [16387,16401]
            TagElement [16401,16418]
                SimpleName: BigMatrix [16408,16417]
            TextElement:  using the data from the input [16418,16448]
            TextElement: array. [16456,16462]
        TagElement [16477,16510]
            SimpleName: rowData [16484,16491]
            TextElement:  the input row data [16491,16510]
        TagElement [16518,16556]
            TextElement:  a 1 x rowData.length BigMatrix [16525,16556]
        TagElement [16564,16629]
            SimpleName: IllegalArgumentException [16572,16596]
            TextElement:  if <code>rowData</code> is empty [16596,16629]
        TagElement [16637,16696]
            SimpleName: NullPointerException [16645,16665]
            TextElement:  if <code>rowData</code>is null [16665,16696]
        TagElement [16704,16783]
            TextElement:  since 2.0 replaced by  [16715,16738]
            TagElement [16738,16783]
                MethodRef [16745,16782]
                    SimpleName: createRowFieldMatrix [16746,16766]
                    MethodRefParameter [16767,16781]
                        ArrayType [16767,16781]
                            SimpleType [16767,16779]
                                SimpleName: FieldElement [16767,16779]
                            Dimension [16779,16781]
    MarkerAnnotation [16796,16807]
        SimpleName: Deprecated [16797,16807]
    Modifier: public [16812,16818]
    Modifier: static [16819,16825]
    SimpleType [16826,16835]
        SimpleName: BigMatrix [16826,16835]
    SimpleName: createRowBigMatrix [16836,16854]
    SingleVariableDeclaration [16855,16871]
        ArrayType [16855,16863]
            SimpleType [16855,16861]
                SimpleName: String [16855,16861]
            Dimension [16861,16863]
        SimpleName: rowData [16864,16871]
    Block [16873,17136]
        VariableDeclarationStatement [16883,16916]
            Modifier: final [16883,16888]
            PrimitiveType: int [16889,16892]
            VariableDeclarationFragment [16893,16915]
                SimpleName: nCols [16893,16898]
                QualifiedName: rowData.length [16901,16915]
        VariableDeclarationStatement [16925,16978]
            Modifier: final [16925,16930]
            ArrayType [16931,16945]
                SimpleType [16931,16941]
                    SimpleName: BigDecimal [16931,16941]
                Dimension [16941,16943]
                Dimension [16943,16945]
            VariableDeclarationFragment [16946,16977]
                SimpleName: data [16946,16950]
                ArrayCreation [16953,16977]
                    ArrayType [16957,16977]
                        SimpleType [16957,16967]
                            SimpleName: BigDecimal [16957,16967]
                        Dimension [16967,16970]
                            NumberLiteral: 1 [16968,16969]
                        Dimension [16970,16977]
                            SimpleName: nCols [16971,16976]
        ForStatement [16987,17083]
            VariableDeclarationExpression [16992,17001]
                PrimitiveType: int [16992,16995]
                VariableDeclarationFragment [16996,17001]
                    SimpleName: i [16996,16997]
                    NumberLiteral: 0 [17000,17001]
            InfixExpression [17003,17012]
                SimpleName: i [17003,17004]
                INFIX_EXPRESSION_OPERATOR: < [17005,17006]
                SimpleName: nCols [17007,17012]
            PrefixExpression [17014,17017]
                PREFIX_EXPRESSION_OPERATOR: ++ [17014,17016]
                SimpleName: i [17016,17017]
            Block [17019,17083]
                ExpressionStatement [17033,17073]
                    Assignment [17033,17072]
                        ArrayAccess [17033,17043]
                            ArrayAccess [17033,17040]
                                SimpleName: data [17033,17037]
                                NumberLiteral: 0 [17038,17039]
                            SimpleName: i [17041,17042]
                        ASSIGNMENT_OPERATOR: = [17044,17045]
                        ClassInstanceCreation [17046,17072]
                            SimpleType [17050,17060]
                                SimpleName: BigDecimal [17050,17060]
                            ArrayAccess [17061,17071]
                                SimpleName: rowData [17061,17068]
                                SimpleName: i [17069,17070]
        ReturnStatement [17092,17130]
            ClassInstanceCreation [17099,17129]
                SimpleType [17103,17116]
                    SimpleName: BigMatrixImpl [17103,17116]
                SimpleName: data [17117,17121]
                BooleanLiteral: false [17123,17128]
===
delete-tree
---
TagElement [17338,17406]
    SimpleName: IllegalArgumentException [17346,17370]
    TextElement:  if <code>columnData</code> is empty [17370,17406]
===
delete-tree
---
TagElement [17414,17476]
    SimpleName: NullPointerException [17422,17442]
    TextElement:  if <code>columnData</code>is null [17442,17476]
===
delete-tree
---
TagElement [18035,18103]
    SimpleName: IllegalArgumentException [18043,18067]
    TextElement:  if <code>columnData</code> is empty [18067,18103]
===
delete-tree
---
TagElement [18111,18173]
    SimpleName: NullPointerException [18119,18139]
    TextElement:  if <code>columnData</code>is null [18139,18173]
===
delete-tree
---
MethodDeclaration [18700,19497]
    Javadoc [18700,19130]
        TagElement [18711,18789]
            TextElement: Creates a column  [18711,18728]
            TagElement [18728,18745]
                SimpleName: BigMatrix [18735,18744]
            TextElement:  using the data from the input [18745,18775]
            TextElement: array. [18783,18789]
        TagElement [18804,18844]
            SimpleName: columnData [18811,18821]
            TextElement:   the input column data [18821,18844]
        TagElement [18852,18886]
            TextElement:  a columnData x 1 BigMatrix [18859,18886]
        TagElement [18894,18962]
            SimpleName: IllegalArgumentException [18902,18926]
            TextElement:  if <code>columnData</code> is empty [18926,18962]
        TagElement [18970,19032]
            SimpleName: NullPointerException [18978,18998]
            TextElement:  if <code>columnData</code>is null [18998,19032]
        TagElement [19040,19122]
            TextElement:  since 2.0 replaced by  [19051,19074]
            TagElement [19074,19122]
                MethodRef [19081,19121]
                    SimpleName: createColumnFieldMatrix [19082,19105]
                    MethodRefParameter [19106,19120]
                        ArrayType [19106,19120]
                            SimpleType [19106,19118]
                                SimpleName: FieldElement [19106,19118]
                            Dimension [19118,19120]
    MarkerAnnotation [19135,19146]
        SimpleName: Deprecated [19136,19146]
    Modifier: public [19151,19157]
    Modifier: static [19158,19164]
    SimpleType [19165,19174]
        SimpleName: BigMatrix [19165,19174]
    SimpleName: createColumnBigMatrix [19175,19196]
    SingleVariableDeclaration [19197,19216]
        ArrayType [19197,19205]
            PrimitiveType: double [19197,19203]
            Dimension [19203,19205]
        SimpleName: columnData [19206,19216]
    Block [19218,19497]
        VariableDeclarationStatement [19228,19264]
            Modifier: final [19228,19233]
            PrimitiveType: int [19234,19237]
            VariableDeclarationFragment [19238,19263]
                SimpleName: nRows [19238,19243]
                QualifiedName: columnData.length [19246,19263]
        VariableDeclarationStatement [19273,19326]
            Modifier: final [19273,19278]
            ArrayType [19279,19293]
                SimpleType [19279,19289]
                    SimpleName: BigDecimal [19279,19289]
                Dimension [19289,19291]
                Dimension [19291,19293]
            VariableDeclarationFragment [19294,19325]
                SimpleName: data [19294,19298]
                ArrayCreation [19301,19325]
                    ArrayType [19305,19325]
                        SimpleType [19305,19315]
                            SimpleName: BigDecimal [19305,19315]
                        Dimension [19315,19322]
                            SimpleName: nRows [19316,19321]
                        Dimension [19322,19325]
                            NumberLiteral: 1 [19323,19324]
        ForStatement [19335,19444]
            VariableDeclarationExpression [19340,19351]
                PrimitiveType: int [19340,19343]
                VariableDeclarationFragment [19344,19351]
                    SimpleName: row [19344,19347]
                    NumberLiteral: 0 [19350,19351]
            InfixExpression [19353,19364]
                SimpleName: row [19353,19356]
                INFIX_EXPRESSION_OPERATOR: < [19357,19358]
                SimpleName: nRows [19359,19364]
            PostfixExpression [19366,19371]
                SimpleName: row [19366,19369]
                POSTFIX_EXPRESSION_OPERATOR: ++ [19369,19371]
            Block [19373,19444]
                ExpressionStatement [19387,19434]
                    Assignment [19387,19433]
                        ArrayAccess [19387,19399]
                            ArrayAccess [19387,19396]
                                SimpleName: data [19387,19391]
                                SimpleName: row [19392,19395]
                            NumberLiteral: 0 [19397,19398]
                        ASSIGNMENT_OPERATOR: = [19400,19401]
                        ClassInstanceCreation [19402,19433]
                            SimpleType [19406,19416]
                                SimpleName: BigDecimal [19406,19416]
                            ArrayAccess [19417,19432]
                                SimpleName: columnData [19417,19427]
                                SimpleName: row [19428,19431]
        ReturnStatement [19453,19491]
            ClassInstanceCreation [19460,19490]
                SimpleType [19464,19477]
                    SimpleName: BigMatrixImpl [19464,19477]
                SimpleName: data [19478,19482]
                BooleanLiteral: false [19484,19489]
===
delete-tree
---
MethodDeclaration [19503,20288]
    Javadoc [19503,19933]
        TagElement [19514,19592]
            TextElement: Creates a column  [19514,19531]
            TagElement [19531,19548]
                SimpleName: BigMatrix [19538,19547]
            TextElement:  using the data from the input [19548,19578]
            TextElement: array. [19586,19592]
        TagElement [19607,19647]
            SimpleName: columnData [19614,19624]
            TextElement:   the input column data [19624,19647]
        TagElement [19655,19689]
            TextElement:  a columnData x 1 BigMatrix [19662,19689]
        TagElement [19697,19765]
            SimpleName: IllegalArgumentException [19705,19729]
            TextElement:  if <code>columnData</code> is empty [19729,19765]
        TagElement [19773,19835]
            SimpleName: NullPointerException [19781,19801]
            TextElement:  if <code>columnData</code>is null [19801,19835]
        TagElement [19843,19925]
            TextElement:  since 2.0 replaced by  [19854,19877]
            TagElement [19877,19925]
                MethodRef [19884,19924]
                    SimpleName: createColumnFieldMatrix [19885,19908]
                    MethodRefParameter [19909,19923]
                        ArrayType [19909,19923]
                            SimpleType [19909,19921]
                                SimpleName: FieldElement [19909,19921]
                            Dimension [19921,19923]
    MarkerAnnotation [19938,19949]
        SimpleName: Deprecated [19939,19949]
    Modifier: public [19954,19960]
    Modifier: static [19961,19967]
    SimpleType [19968,19977]
        SimpleName: BigMatrix [19968,19977]
    SimpleName: createColumnBigMatrix [19978,19999]
    SingleVariableDeclaration [20000,20023]
        ArrayType [20000,20012]
            SimpleType [20000,20010]
                SimpleName: BigDecimal [20000,20010]
            Dimension [20010,20012]
        SimpleName: columnData [20013,20023]
    Block [20025,20288]
        VariableDeclarationStatement [20035,20071]
            Modifier: final [20035,20040]
            PrimitiveType: int [20041,20044]
            VariableDeclarationFragment [20045,20070]
                SimpleName: nRows [20045,20050]
                QualifiedName: columnData.length [20053,20070]
        VariableDeclarationStatement [20080,20133]
            Modifier: final [20080,20085]
            ArrayType [20086,20100]
                SimpleType [20086,20096]
                    SimpleName: BigDecimal [20086,20096]
                Dimension [20096,20098]
                Dimension [20098,20100]
            VariableDeclarationFragment [20101,20132]
                SimpleName: data [20101,20105]
                ArrayCreation [20108,20132]
                    ArrayType [20112,20132]
                        SimpleType [20112,20122]
                            SimpleName: BigDecimal [20112,20122]
                        Dimension [20122,20129]
                            SimpleName: nRows [20123,20128]
                        Dimension [20129,20132]
                            NumberLiteral: 1 [20130,20131]
        ForStatement [20142,20235]
            VariableDeclarationExpression [20147,20158]
                PrimitiveType: int [20147,20150]
                VariableDeclarationFragment [20151,20158]
                    SimpleName: row [20151,20154]
                    NumberLiteral: 0 [20157,20158]
            InfixExpression [20160,20171]
                SimpleName: row [20160,20163]
                INFIX_EXPRESSION_OPERATOR: < [20164,20165]
                SimpleName: nRows [20166,20171]
            PostfixExpression [20173,20178]
                SimpleName: row [20173,20176]
                POSTFIX_EXPRESSION_OPERATOR: ++ [20176,20178]
            Block [20180,20235]
                ExpressionStatement [20194,20225]
                    Assignment [20194,20224]
                        ArrayAccess [20194,20206]
                            ArrayAccess [20194,20203]
                                SimpleName: data [20194,20198]
                                SimpleName: row [20199,20202]
                            NumberLiteral: 0 [20204,20205]
                        ASSIGNMENT_OPERATOR: = [20207,20208]
                        ArrayAccess [20209,20224]
                            SimpleName: columnData [20209,20219]
                            SimpleName: row [20220,20223]
        ReturnStatement [20244,20282]
            ClassInstanceCreation [20251,20281]
                SimpleType [20255,20268]
                    SimpleName: BigMatrixImpl [20255,20268]
                SimpleName: data [20269,20273]
                BooleanLiteral: false [20275,20280]
===
delete-tree
---
MethodDeclaration [20294,21085]
    Javadoc [20294,20724]
        TagElement [20305,20383]
            TextElement: Creates a column  [20305,20322]
            TagElement [20322,20339]
                SimpleName: BigMatrix [20329,20338]
            TextElement:  using the data from the input [20339,20369]
            TextElement: array. [20377,20383]
        TagElement [20398,20438]
            SimpleName: columnData [20405,20415]
            TextElement:   the input column data [20415,20438]
        TagElement [20446,20480]
            TextElement:  a columnData x 1 BigMatrix [20453,20480]
        TagElement [20488,20556]
            SimpleName: IllegalArgumentException [20496,20520]
            TextElement:  if <code>columnData</code> is empty [20520,20556]
        TagElement [20564,20626]
            SimpleName: NullPointerException [20572,20592]
            TextElement:  if <code>columnData</code>is null [20592,20626]
        TagElement [20634,20716]
            TextElement:  since 2.0 replaced by  [20645,20668]
            TagElement [20668,20716]
                MethodRef [20675,20715]
                    SimpleName: createColumnFieldMatrix [20676,20699]
                    MethodRefParameter [20700,20714]
                        ArrayType [20700,20714]
                            SimpleType [20700,20712]
                                SimpleName: FieldElement [20700,20712]
                            Dimension [20712,20714]
    MarkerAnnotation [20729,20740]
        SimpleName: Deprecated [20730,20740]
    Modifier: public [20745,20751]
    Modifier: static [20752,20758]
    SimpleType [20759,20768]
        SimpleName: BigMatrix [20759,20768]
    SimpleName: createColumnBigMatrix [20769,20790]
    SingleVariableDeclaration [20791,20810]
        ArrayType [20791,20799]
            SimpleType [20791,20797]
                SimpleName: String [20791,20797]
            Dimension [20797,20799]
        SimpleName: columnData [20800,20810]
    Block [20812,21085]
        VariableDeclarationStatement [20822,20852]
            PrimitiveType: int [20822,20825]
            VariableDeclarationFragment [20826,20851]
                SimpleName: nRows [20826,20831]
                QualifiedName: columnData.length [20834,20851]
        VariableDeclarationStatement [20861,20914]
            Modifier: final [20861,20866]
            ArrayType [20867,20881]
                SimpleType [20867,20877]
                    SimpleName: BigDecimal [20867,20877]
                Dimension [20877,20879]
                Dimension [20879,20881]
            VariableDeclarationFragment [20882,20913]
                SimpleName: data [20882,20886]
                ArrayCreation [20889,20913]
                    ArrayType [20893,20913]
                        SimpleType [20893,20903]
                            SimpleName: BigDecimal [20893,20903]
                        Dimension [20903,20910]
                            SimpleName: nRows [20904,20909]
                        Dimension [20910,20913]
                            NumberLiteral: 1 [20911,20912]
        ForStatement [20923,21032]
            VariableDeclarationExpression [20928,20939]
                PrimitiveType: int [20928,20931]
                VariableDeclarationFragment [20932,20939]
                    SimpleName: row [20932,20935]
                    NumberLiteral: 0 [20938,20939]
            InfixExpression [20941,20952]
                SimpleName: row [20941,20944]
                INFIX_EXPRESSION_OPERATOR: < [20945,20946]
                SimpleName: nRows [20947,20952]
            PostfixExpression [20954,20959]
                SimpleName: row [20954,20957]
                POSTFIX_EXPRESSION_OPERATOR: ++ [20957,20959]
            Block [20961,21032]
                ExpressionStatement [20975,21022]
                    Assignment [20975,21021]
                        ArrayAccess [20975,20987]
                            ArrayAccess [20975,20984]
                                SimpleName: data [20975,20979]
                                SimpleName: row [20980,20983]
                            NumberLiteral: 0 [20985,20986]
                        ASSIGNMENT_OPERATOR: = [20988,20989]
                        ClassInstanceCreation [20990,21021]
                            SimpleType [20994,21004]
                                SimpleName: BigDecimal [20994,21004]
                            ArrayAccess [21005,21020]
                                SimpleName: columnData [21005,21015]
                                SimpleName: row [21016,21019]
        ReturnStatement [21041,21079]
            ClassInstanceCreation [21048,21078]
                SimpleType [21052,21065]
                    SimpleName: BigMatrixImpl [21052,21065]
                SimpleName: data [21066,21070]
                BooleanLiteral: false [21072,21077]
===
delete-tree
---
SimpleType [21892,21912]
    SimpleName: MatrixIndexException [21892,21912]
===
delete-node
---
TextElement: Rows and columns are indicated counting from 0 to n-1. [22231,22285]
===
===
delete-node
---
TagElement [22179,22285]
===
===
delete-tree
---
SimpleType [23931,23951]
    SimpleName: MatrixIndexException [23931,23951]
===
delete-tree
---
InfixExpression [23966,24015]
    InfixExpression [23966,24010]
        QualifiedName: selectedRows.length [23966,23985]
        INFIX_EXPRESSION_OPERATOR: * [23986,23987]
        QualifiedName: selectedColumns.length [23988,24010]
    INFIX_EXPRESSION_OPERATOR: == [24011,24013]
    NumberLiteral: 0 [24014,24015]
===
delete-node
---
IfStatement [23962,24279]
===
