===
insert-tree
---
ReturnStatement [14429,14452]
    MethodInvocation [14436,14451]
        SimpleName: equals [14436,14442]
        METHOD_INVOCATION_ARGUMENTS [14443,14450]
            SimpleName: x [14443,14444]
            SimpleName: y [14446,14447]
            NumberLiteral: 1 [14449,14450]
to
Block [14787,14857]
at 0
===
move-tree
---
ExpressionStatement [48369,48426]
    Assignment [48369,48425]
        SimpleName: unscaled [48369,48377]
        ASSIGNMENT_OPERATOR: = [48378,48379]
        MethodInvocation [48380,48425]
            SimpleName: nextAfter [48380,48389]
            METHOD_INVOCATION_ARGUMENTS [48390,48424]
                SimpleName: unscaled [48390,48398]
                QualifiedName: Double.NEGATIVE_INFINITY [48400,48424]
to
SwitchStatement [47541,50885]
at 5
===
move-tree
---
ExpressionStatement [49493,49550]
    Assignment [49493,49549]
        SimpleName: unscaled [49493,49501]
        ASSIGNMENT_OPERATOR: = [49502,49503]
        MethodInvocation [49504,49549]
            SimpleName: nextAfter [49504,49513]
            METHOD_INVOCATION_ARGUMENTS [49514,49548]
                SimpleName: unscaled [49514,49522]
                QualifiedName: Double.POSITIVE_INFINITY [49524,49548]
to
SwitchStatement [47541,50885]
at 21
===
update-node
---
TextElement:  this method [14222,14234]
replace  this method by  equals(x, y, 1)
===
insert-node
---
ExpressionStatement [46665,46731]
to
Block [48355,48696]
at 0
===
move-tree
---
ExpressionStatement [48096,48168]
    Assignment [48096,48167]
        SimpleName: unscaled [48096,48104]
        ASSIGNMENT_OPERATOR: = [48105,48106]
        MethodInvocation [48107,48167]
            METHOD_INVOCATION_RECEIVER [48107,48115]
                SimpleName: FastMath [48107,48115]
            SimpleName: ceil [48116,48120]
            METHOD_INVOCATION_ARGUMENTS [48121,48166]
                MethodInvocation [48121,48166]
                    SimpleName: nextAfter [48121,48130]
                    METHOD_INVOCATION_ARGUMENTS [48131,48165]
                        SimpleName: unscaled [48131,48139]
                        QualifiedName: Double.POSITIVE_INFINITY [48141,48165]
to
Block [49479,49821]
at 0
===
insert-node
---
MethodInvocation [46199,46269]
to
Assignment [48369,48425]
at 2
===
insert-node
---
Assignment [46665,46730]
to
ExpressionStatement [46665,46731]
at 0
===
insert-node
---
MethodInvocation [48406,48476]
to
Assignment [49493,49549]
at 2
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [46199,46207]
    SimpleName: FastMath [46199,46207]
to
MethodInvocation [46199,46269]
at 0
===
insert-node
---
SimpleName: floor [46208,46213]
to
MethodInvocation [46199,46269]
at 1
===
insert-node
---
METHOD_INVOCATION_ARGUMENTS [46214,46268]
to
MethodInvocation [46199,46269]
at 2
===
insert-node
---
SimpleName: unscaled [46665,46673]
to
Assignment [46665,46730]
at 0
===
insert-node
---
ASSIGNMENT_OPERATOR: = [46674,46675]
to
Assignment [46665,46730]
at 1
===
move-tree
---
MethodInvocation [39869,39901]
    METHOD_INVOCATION_RECEIVER [39869,39877]
        SimpleName: FastMath [39869,39877]
    SimpleName: nextAfter [39878,39887]
    METHOD_INVOCATION_ARGUMENTS [39888,39900]
        SimpleName: d [39888,39889]
        SimpleName: direction [39891,39900]
to
Assignment [46665,46730]
at 2
===
move-tree
---
MethodInvocation [48121,48166]
    SimpleName: nextAfter [48121,48130]
    METHOD_INVOCATION_ARGUMENTS [48131,48165]
        SimpleName: unscaled [48131,48139]
        QualifiedName: Double.POSITIVE_INFINITY [48141,48165]
to
Assignment [48096,48167]
at 2
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [48406,48414]
    SimpleName: FastMath [48406,48414]
to
MethodInvocation [48406,48476]
at 0
===
insert-node
---
SimpleName: ceil [48415,48419]
to
MethodInvocation [48406,48476]
at 1
===
insert-node
---
METHOD_INVOCATION_ARGUMENTS [48420,48475]
to
MethodInvocation [48406,48476]
at 2
===
move-tree
---
MethodInvocation [48380,48425]
    SimpleName: nextAfter [48380,48389]
    METHOD_INVOCATION_ARGUMENTS [48390,48424]
        SimpleName: unscaled [48390,48398]
        QualifiedName: Double.NEGATIVE_INFINITY [48400,48424]
to
METHOD_INVOCATION_ARGUMENTS [46214,46268]
at 0
===
move-tree
---
METHOD_INVOCATION_RECEIVER [48107,48115]
    SimpleName: FastMath [48107,48115]
to
MethodInvocation [48121,48166]
at 0
===
move-tree
---
MethodInvocation [49504,49549]
    SimpleName: nextAfter [49504,49513]
    METHOD_INVOCATION_ARGUMENTS [49514,49548]
        SimpleName: unscaled [49514,49522]
        QualifiedName: Double.POSITIVE_INFINITY [49524,49548]
to
METHOD_INVOCATION_ARGUMENTS [48420,48475]
at 0
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [45915,45923]
    SimpleName: FastMath [45915,45923]
to
MethodInvocation [47664,47725]
at 0
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [46035,46043]
    SimpleName: FastMath [46035,46043]
to
MethodInvocation [47775,47835]
at 0
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [46214,46222]
    SimpleName: FastMath [46214,46222]
to
MethodInvocation [48380,48425]
at 0
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [46385,46393]
    SimpleName: FastMath [46385,46393]
to
root
at 0
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [46504,46512]
    SimpleName: FastMath [46504,46512]
to
root
at 0
===
update-node
---
SimpleName: d [39888,39889]
replace d by unscaled
===
insert-node
---
QualifiedName: Double.NEGATIVE_INFINITY [46705,46729]
to
METHOD_INVOCATION_ARGUMENTS [39888,39900]
at 1
===
insert-tree
---
METHOD_INVOCATION_RECEIVER [48420,48428]
    SimpleName: FastMath [48420,48428]
to
MethodInvocation [49504,49549]
at 0
===
move-tree
---
METHOD_INVOCATION_RECEIVER [47664,47672]
    SimpleName: FastMath [47664,47672]
to
MethodInvocation [47679,47724]
at 0
===
move-tree
---
METHOD_INVOCATION_RECEIVER [47775,47783]
    SimpleName: FastMath [47775,47783]
to
MethodInvocation [47789,47834]
at 0
===
delete-tree
---
TagElement [14361,14725]
    TextElement:  This method considers that  [14372,14400]
    TagElement [14400,14418]
        TextElement:  NaN == NaN [14406,14417]
    TextElement: . In release [14418,14430]
    TextElement: 3.0, the semantics will change in order to comply with IEEE754 where it [14438,14509]
    TextElement: is specified that  [14517,14535]
    TagElement [14535,14553]
        TextElement:  NaN != NaN [14541,14552]
    TextElement: . [14553,14554]
    TextElement: New methods have been added for those cases wher the old semantics is [14562,14631]
    TextElement: useful (see e.g.  [14639,14656]
    TagElement [14656,14724]
        MethodRef [14663,14697]
            SimpleName: equalsIncludingNaN [14664,14682]
            MethodRefParameter [14683,14689]
                PrimitiveType: double [14683,14689]
            MethodRefParameter [14690,14696]
                PrimitiveType: double [14690,14696]
        TextElement: equalsIncludingNaN [14705,14723]
    TextElement: . [14724,14725]
===
delete-tree
---
ReturnStatement [14797,14851]
    InfixExpression [14804,14850]
        ParenthesizedExpression [14804,14840]
            InfixExpression [14805,14839]
                MethodInvocation [14805,14820]
                    METHOD_INVOCATION_RECEIVER [14805,14811]
                        SimpleName: Double [14805,14811]
                    SimpleName: isNaN [14812,14817]
                    METHOD_INVOCATION_ARGUMENTS [14818,14819]
                        SimpleName: x [14818,14819]
                INFIX_EXPRESSION_OPERATOR: && [14821,14823]
                MethodInvocation [14824,14839]
                    METHOD_INVOCATION_RECEIVER [14824,14830]
                        SimpleName: Double [14824,14830]
                    SimpleName: isNaN [14831,14836]
                    METHOD_INVOCATION_ARGUMENTS [14837,14838]
                        SimpleName: y [14837,14838]
        INFIX_EXPRESSION_OPERATOR: || [14841,14843]
        InfixExpression [14844,14850]
            SimpleName: x [14844,14845]
            INFIX_EXPRESSION_OPERATOR: == [14846,14848]
            SimpleName: y [14849,14850]
===
delete-tree
---
TagElement [18792,19160]
    TextElement:  This method considers that  [18803,18831]
    TagElement [18831,18849]
        TextElement:  NaN == NaN [18837,18848]
    TextElement: . In release [18849,18861]
    TextElement: 3.0, the semantics will change in order to comply with IEEE754 where it [18869,18940]
    TextElement: is specified that  [18948,18966]
    TagElement [18966,18984]
        TextElement:  NaN != NaN [18972,18983]
    TextElement: . [18984,18985]
    TextElement: New methods have been added for those cases wher the old semantics is [18993,19062]
    TextElement: useful (see e.g.  [19070,19087]
    TagElement [19087,19159]
        MethodRef [19094,19132]
            SimpleName: equalsIncludingNaN [19095,19113]
            MethodRefParameter [19114,19122]
                ArrayType [19114,19122]
                    PrimitiveType: double [19114,19120]
                    Dimension [19120,19122]
            MethodRefParameter [19123,19131]
                ArrayType [19123,19131]
                    PrimitiveType: double [19123,19129]
                    Dimension [19129,19131]
        TextElement: equalsIncludingNaN [19140,19158]
    TextElement: . [19159,19160]
===
delete-tree
---
Javadoc [38940,39772]
    TagElement [38951,39438]
        TextElement: Get the next machine representable number after a number, moving [38951,39015]
        TextElement: in the direction of another number. [39023,39058]
        TextElement: <p> [39066,39069]
        TextElement: If <code>direction</code> is greater than or equal to<code>d</code>, [39077,39145]
        TextElement: the smallest machine representable number strictly greater than [39153,39216]
        TextElement: <code>d</code> is returned; otherwise the largest representable number [39224,39294]
        TextElement: strictly less than <code>d</code> is returned.</p> [39302,39352]
        TextElement: <p> [39360,39363]
        TextElement: If <code>d</code> is NaN or Infinite, it is returned unchanged.</p> [39371,39438]
    TagElement [39453,39473]
        SimpleName: d [39460,39461]
        TextElement:  base number [39461,39473]
    TagElement [39481,39581]
        SimpleName: direction [39488,39497]
        TextElement:  (the only important thing is whether [39497,39534]
        TextElement: direction is greater or smaller than d) [39542,39581]
    TagElement [39589,39661]
        TextElement:  the next machine representable number in the specified direction [39596,39661]
    TagElement [39669,39679]
        TextElement:  1.2 [39675,39679]
    TagElement [39687,39764]
        TextElement:  as of 2.2, replaced by  [39698,39722]
        TagElement [39722,39764]
            MethodRef [39729,39763]
                SimpleName: FastMath [39729,39737]
                SimpleName: nextAfter [39738,39747]
                MethodRefParameter [39748,39754]
                    PrimitiveType: double [39748,39754]
                MethodRefParameter [39756,39762]
                    PrimitiveType: double [39756,39762]
===
delete-tree
---
MarkerAnnotation [39777,39788]
    SimpleName: Deprecated [39778,39788]
===
delete-node
---
Modifier: public [39793,39799]
===
===
delete-node
---
Modifier: static [39800,39806]
===
===
delete-node
---
PrimitiveType: double [39807,39813]
===
===
delete-node
---
SimpleName: nextAfter [39814,39823]
===
===
delete-tree
---
SingleVariableDeclaration [39824,39832]
    PrimitiveType: double [39824,39830]
    SimpleName: d [39831,39832]
===
delete-tree
---
SingleVariableDeclaration [39834,39850]
    PrimitiveType: double [39834,39840]
    SimpleName: direction [39841,39850]
===
delete-node
---
ReturnStatement [39862,39902]
===
===
delete-node
---
Block [39852,39908]
===
===
delete-node
---
MethodDeclaration [38940,39908]
===
===
delete-tree
---
ExpressionStatement [48206,48279]
    Assignment [48206,48278]
        SimpleName: unscaled [48206,48214]
        ASSIGNMENT_OPERATOR: = [48215,48216]
        MethodInvocation [48217,48278]
            METHOD_INVOCATION_RECEIVER [48217,48225]
                SimpleName: FastMath [48217,48225]
            SimpleName: floor [48226,48231]
            METHOD_INVOCATION_ARGUMENTS [48232,48277]
                MethodInvocation [48232,48277]
                    SimpleName: nextAfter [48232,48241]
                    METHOD_INVOCATION_ARGUMENTS [48242,48276]
                        SimpleName: unscaled [48242,48250]
                        QualifiedName: Double.NEGATIVE_INFINITY [48252,48276]
===
delete-node
---
SimpleName: direction [39891,39900]
===
===
delete-node
---
SimpleName: ceil [48116,48120]
===
===
delete-node
---
METHOD_INVOCATION_ARGUMENTS [48121,48166]
===
===
delete-node
---
MethodInvocation [48107,48167]
===
===
delete-tree
---
ExpressionStatement [50081,50154]
    Assignment [50081,50153]
        SimpleName: unscaled [50081,50089]
        ASSIGNMENT_OPERATOR: = [50090,50091]
        MethodInvocation [50092,50153]
            METHOD_INVOCATION_RECEIVER [50092,50100]
                SimpleName: FastMath [50092,50100]
            SimpleName: ceil [50101,50105]
            METHOD_INVOCATION_ARGUMENTS [50106,50152]
                MethodInvocation [50106,50152]
                    SimpleName: nextAfter [50106,50115]
                    METHOD_INVOCATION_ARGUMENTS [50116,50151]
                        SimpleName: unscaled [50116,50124]
                        QualifiedName: Double.POSITIVE_INFINITY [50127,50151]
===
delete-tree
---
MethodDeclaration [65935,66636]
    Javadoc [65935,66377]
        TagElement [65946,65984]
            TextElement: Checks that the given array is sorted. [65946,65984]
        TagElement [65999,66016]
            SimpleName: val [66006,66009]
            TextElement:  Values [66009,66016]
        TagElement [66024,66088]
            SimpleName: dir [66031,66034]
            TextElement:  Order direction (-1 for decreasing, 1 for increasing) [66034,66088]
        TagElement [66096,66144]
            SimpleName: strict [66103,66109]
            TextElement:  Whether the order should be strict [66109,66144]
        TagElement [66152,66218]
            SimpleName: NonMonotonousSequenceException [66160,66190]
            TextElement:  if the array is not sorted. [66190,66218]
        TagElement [66226,66369]
            TextElement:  as of 2.2 (please use the new  [66237,66268]
            TagElement [66268,66338]
                MethodRef [66275,66319]
                    SimpleName: checkOrder [66276,66286]
                    MethodRefParameter [66287,66295]
                        ArrayType [66287,66295]
                            PrimitiveType: double [66287,66293]
                            Dimension [66293,66295]
                    MethodRefParameter [66296,66310]
                        SimpleType [66296,66310]
                            SimpleName: OrderDirection [66296,66310]
                    MethodRefParameter [66311,66318]
                        PrimitiveType: boolean [66311,66318]
                TextElement: checkOrder [66327,66337]
            TextElement:  method). To be removed in 3.0. [66338,66369]
    Modifier: public [66382,66388]
    Modifier: static [66389,66395]
    PrimitiveType: void [66396,66400]
    SimpleName: checkOrder [66401,66411]
    SingleVariableDeclaration [66412,66424]
        ArrayType [66412,66420]
            PrimitiveType: double [66412,66418]
            Dimension [66418,66420]
        SimpleName: val [66421,66424]
    SingleVariableDeclaration [66426,66433]
        PrimitiveType: int [66426,66429]
        SimpleName: dir [66430,66433]
    SingleVariableDeclaration [66435,66449]
        PrimitiveType: boolean [66435,66442]
        SimpleName: strict [66443,66449]
    Block [66451,66636]
        IfStatement [66461,66630]
            InfixExpression [66465,66472]
                SimpleName: dir [66465,66468]
                INFIX_EXPRESSION_OPERATOR: > [66469,66470]
                NumberLiteral: 0 [66471,66472]
            Block [66474,66549]
                ExpressionStatement [66488,66539]
                    MethodInvocation [66488,66538]
                        SimpleName: checkOrder [66488,66498]
                        METHOD_INVOCATION_ARGUMENTS [66499,66537]
                            SimpleName: val [66499,66502]
                            QualifiedName: OrderDirection.INCREASING [66504,66529]
                            SimpleName: strict [66531,66537]
            Block [66555,66630]
                ExpressionStatement [66569,66620]
                    MethodInvocation [66569,66619]
                        SimpleName: checkOrder [66569,66579]
                        METHOD_INVOCATION_ARGUMENTS [66580,66618]
                            SimpleName: val [66580,66583]
                            QualifiedName: OrderDirection.DECREASING [66585,66610]
                            SimpleName: strict [66612,66618]
===
multi-move-tree
---
QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
QualifiedName: Double.NEGATIVE_INFINITY [46548,46572]
at -1
===
multi-move-tree
---
QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
QualifiedName: Double.POSITIVE_INFINITY [46428,46452]
at -1
===
multi-move-tree
---
Assignment [47919,47991]
    SimpleName: unscaled [47919,47927]
    ASSIGNMENT_OPERATOR: = [47928,47929]
    MethodInvocation [47930,47991]
        METHOD_INVOCATION_RECEIVER [47930,47938]
            SimpleName: FastMath [47930,47938]
        SimpleName: floor [47939,47944]
        METHOD_INVOCATION_ARGUMENTS [47945,47990]
            MethodInvocation [47945,47990]
                SimpleName: nextAfter [47945,47954]
                METHOD_INVOCATION_ARGUMENTS [47955,47989]
                    SimpleName: unscaled [47955,47963]
                    QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
Assignment [46374,46454]
at -1
===
multi-move-tree
---
Assignment [47919,47991]
    SimpleName: unscaled [47919,47927]
    ASSIGNMENT_OPERATOR: = [47928,47929]
    MethodInvocation [47930,47991]
        METHOD_INVOCATION_RECEIVER [47930,47938]
            SimpleName: FastMath [47930,47938]
        SimpleName: floor [47939,47944]
        METHOD_INVOCATION_ARGUMENTS [47945,47990]
            MethodInvocation [47945,47990]
                SimpleName: nextAfter [47945,47954]
                METHOD_INVOCATION_ARGUMENTS [47955,47989]
                    SimpleName: unscaled [47955,47963]
                    QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
Assignment [46493,46574]
at -1
===
multi-move-tree
---
MethodInvocation [47930,47991]
    METHOD_INVOCATION_RECEIVER [47930,47938]
        SimpleName: FastMath [47930,47938]
    SimpleName: floor [47939,47944]
    METHOD_INVOCATION_ARGUMENTS [47945,47990]
        MethodInvocation [47945,47990]
            SimpleName: nextAfter [47945,47954]
            METHOD_INVOCATION_ARGUMENTS [47955,47989]
                SimpleName: unscaled [47955,47963]
                QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
MethodInvocation [46504,46574]
at -1
===
multi-move-tree
---
MethodInvocation [47930,47991]
    METHOD_INVOCATION_RECEIVER [47930,47938]
        SimpleName: FastMath [47930,47938]
    SimpleName: floor [47939,47944]
    METHOD_INVOCATION_ARGUMENTS [47945,47990]
        MethodInvocation [47945,47990]
            SimpleName: nextAfter [47945,47954]
            METHOD_INVOCATION_ARGUMENTS [47955,47989]
                SimpleName: unscaled [47955,47963]
                QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
MethodInvocation [46385,46454]
at -1
===
multi-move-tree
---
ExpressionStatement [47919,47992]
    Assignment [47919,47991]
        SimpleName: unscaled [47919,47927]
        ASSIGNMENT_OPERATOR: = [47928,47929]
        MethodInvocation [47930,47991]
            METHOD_INVOCATION_RECEIVER [47930,47938]
                SimpleName: FastMath [47930,47938]
            SimpleName: floor [47939,47944]
            METHOD_INVOCATION_ARGUMENTS [47945,47990]
                MethodInvocation [47945,47990]
                    SimpleName: nextAfter [47945,47954]
                    METHOD_INVOCATION_ARGUMENTS [47955,47989]
                        SimpleName: unscaled [47955,47963]
                        QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
ExpressionStatement [46493,46575]
at -1
===
multi-move-tree
---
ExpressionStatement [47919,47992]
    Assignment [47919,47991]
        SimpleName: unscaled [47919,47927]
        ASSIGNMENT_OPERATOR: = [47928,47929]
        MethodInvocation [47930,47991]
            METHOD_INVOCATION_RECEIVER [47930,47938]
                SimpleName: FastMath [47930,47938]
            SimpleName: floor [47939,47944]
            METHOD_INVOCATION_ARGUMENTS [47945,47990]
                MethodInvocation [47945,47990]
                    SimpleName: nextAfter [47945,47954]
                    METHOD_INVOCATION_ARGUMENTS [47955,47989]
                        SimpleName: unscaled [47955,47963]
                        QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
ExpressionStatement [46374,46455]
at -1
===
multi-move-tree
---
SimpleName: floor [47939,47944]
to
SimpleName: floor [46513,46518]
at -1
===
multi-move-tree
---
SimpleName: floor [47939,47944]
to
SimpleName: ceil [46394,46398]
at -1
===
multi-move-tree
---
ASSIGNMENT_OPERATOR: = [47928,47929]
to
ASSIGNMENT_OPERATOR: = [46383,46384]
at -1
===
multi-move-tree
---
ASSIGNMENT_OPERATOR: = [47928,47929]
to
ASSIGNMENT_OPERATOR: = [46502,46503]
at -1
===
multi-move-tree
---
METHOD_INVOCATION_ARGUMENTS [47945,47990]
    MethodInvocation [47945,47990]
        SimpleName: nextAfter [47945,47954]
        METHOD_INVOCATION_ARGUMENTS [47955,47989]
            SimpleName: unscaled [47955,47963]
            QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
METHOD_INVOCATION_ARGUMENTS [46399,46453]
at -1
===
multi-move-tree
---
METHOD_INVOCATION_ARGUMENTS [47945,47990]
    MethodInvocation [47945,47990]
        SimpleName: nextAfter [47945,47954]
        METHOD_INVOCATION_ARGUMENTS [47955,47989]
            SimpleName: unscaled [47955,47963]
            QualifiedName: Double.NEGATIVE_INFINITY [47965,47989]
to
METHOD_INVOCATION_ARGUMENTS [46519,46573]
at -1
===
multi-move-tree
---
SimpleName: unscaled [47919,47927]
to
SimpleName: unscaled [46374,46382]
at -1
===
multi-move-tree
---
SimpleName: unscaled [47919,47927]
to
SimpleName: unscaled [46493,46501]
at -1
