===
insert-node
---
TagElement [31356,31411]
to
Javadoc [30731,31631]
at 2
===
insert-node
---
TagElement [31419,31475]
to
Javadoc [30731,31631]
at 3
===
insert-tree
---
IfStatement [31763,31815]
    InfixExpression [31767,31777]
        SimpleName: cs1 [31767,31770]
        INFIX_EXPRESSION_OPERATOR: == [31771,31773]
        SimpleName: cs2 [31774,31777]
    Block [31779,31815]
        ReturnStatement [31793,31805]
            BooleanLiteral: true [31800,31804]
to
Block [31701,31768]
at 0
===
insert-tree
---
IfStatement [31824,31893]
    InfixExpression [31828,31854]
        InfixExpression [31828,31839]
            SimpleName: cs1 [31828,31831]
            INFIX_EXPRESSION_OPERATOR: == [31832,31834]
            NullLiteral [31835,31839]
        INFIX_EXPRESSION_OPERATOR: || [31840,31842]
        InfixExpression [31843,31854]
            SimpleName: cs2 [31843,31846]
            INFIX_EXPRESSION_OPERATOR: == [31847,31849]
            NullLiteral [31850,31854]
    Block [31856,31893]
        ReturnStatement [31870,31883]
            BooleanLiteral: false [31877,31882]
to
Block [31701,31768]
at 1
===
insert-node
---
IfStatement [31902,32001]
to
Block [31701,31768]
at 2
===
insert-tree
---
ReturnStatement [32010,32110]
    MethodInvocation [32017,32109]
        METHOD_INVOCATION_RECEIVER [32017,32034]
            SimpleName: CharSequenceUtils [32017,32034]
        SimpleName: regionMatches [32035,32048]
        METHOD_INVOCATION_ARGUMENTS [32049,32108]
            SimpleName: cs1 [32049,32052]
            BooleanLiteral: false [32054,32059]
            NumberLiteral: 0 [32061,32062]
            SimpleName: cs2 [32064,32067]
            NumberLiteral: 0 [32069,32070]
            MethodInvocation [32072,32108]
                METHOD_INVOCATION_RECEIVER [32072,32076]
                    SimpleName: Math [32072,32076]
                SimpleName: max [32077,32080]
                METHOD_INVOCATION_ARGUMENTS [32081,32107]
                    MethodInvocation [32081,32093]
                        METHOD_INVOCATION_RECEIVER [32081,32084]
                            SimpleName: cs1 [32081,32084]
                        SimpleName: length [32085,32091]
                    MethodInvocation [32095,32107]
                        METHOD_INVOCATION_RECEIVER [32095,32098]
                            SimpleName: cs2 [32095,32098]
                        SimpleName: length [32099,32105]
to
Block [31701,31768]
at 3
===
update-node
---
TextElement:  if they are equal.</p> [30795,30818]
replace  if they are equal.</p> by  if they represent
===
insert-node
---
TextElement: equal sequences of characters.</p> [30821,30855]
to
TagElement [30742,31254]
at 3
===
move-tree
---
SimpleName: cs1 [31320,31323]
to
TagElement [31356,31411]
at 0
===
insert-node
---
TextElement:   the first CharSequence, may be  [31366,31399]
to
TagElement [31356,31411]
at 1
===
insert-tree
---
TagElement [31399,31411]
    TextElement:  null [31405,31410]
to
TagElement [31356,31411]
at 2
===
move-tree
---
SimpleName: cs2 [31375,31378]
to
TagElement [31419,31475]
at 0
===
insert-node
---
TextElement:   the second CharSequence, may be  [31429,31463]
to
TagElement [31419,31475]
at 1
===
insert-tree
---
TagElement [31463,31475]
    TextElement:  null [31469,31474]
to
TagElement [31419,31475]
at 2
===
update-node
---
TextElement:  if the CharSequences are equal, case sensitive, or [31444,31495]
replace  if the CharSequences are equal, case sensitive, or by  if the CharSequences are equal (case-sensitive), or both 
===
insert-tree
---
InfixExpression [31906,31952]
    InstanceofExpression [31906,31927]
        SimpleName: cs1 [31906,31909]
        SimpleType [31921,31927]
            SimpleName: String [31921,31927]
    INFIX_EXPRESSION_OPERATOR: && [31928,31930]
    InstanceofExpression [31931,31952]
        SimpleName: cs2 [31931,31934]
        SimpleType [31946,31952]
            SimpleName: String [31946,31952]
to
IfStatement [31902,32001]
at 0
===
insert-node
---
Block [31954,32001]
to
IfStatement [31902,32001]
at 1
===
update-node
---
TextElement:  if they are equal ignoring [31838,31865]
replace  if they are equal ignoring by  if they represent
===
update-node
---
TextElement: the case.</p> [31873,31886]
replace the case.</p> by equal sequences of characters, ignoring case.</p>
===
update-node
---
QualifiedName: java.lang.String [31274,31290]
replace java.lang.String by java.lang.CharSequence
===
move-tree
---
ReturnStatement [31711,31762]
    ConditionalExpression [31718,31761]
        InfixExpression [31718,31729]
            SimpleName: cs1 [31718,31721]
            INFIX_EXPRESSION_OPERATOR: == [31722,31724]
            NullLiteral [31725,31729]
        InfixExpression [31732,31743]
            SimpleName: cs2 [31732,31735]
            INFIX_EXPRESSION_OPERATOR: == [31736,31738]
            NullLiteral [31739,31743]
        MethodInvocation [31746,31761]
            METHOD_INVOCATION_RECEIVER [31746,31749]
                SimpleName: cs1 [31746,31749]
            SimpleName: equals [31750,31756]
            METHOD_INVOCATION_ARGUMENTS [31757,31760]
                SimpleName: cs2 [31757,31760]
to
Block [31954,32001]
at 0
===
move-tree
---
MethodInvocation [31746,31761]
    METHOD_INVOCATION_RECEIVER [31746,31749]
        SimpleName: cs1 [31746,31749]
    SimpleName: equals [31750,31756]
    METHOD_INVOCATION_ARGUMENTS [31757,31760]
        SimpleName: cs2 [31757,31760]
to
ReturnStatement [31711,31762]
at 0
===
delete-node
---
TextElement:   the first CharSequence, may be null [31323,31360]
===
===
delete-node
---
TagElement [31313,31360]
===
===
delete-node
---
TextElement:   the second CharSequence, may be null [31378,31416]
===
===
delete-node
---
TagElement [31368,31416]
===
===
delete-node
---
TextElement: both  [31504,31509]
===
===
delete-tree
---
InfixExpression [31718,31729]
    SimpleName: cs1 [31718,31721]
    INFIX_EXPRESSION_OPERATOR: == [31722,31724]
    NullLiteral [31725,31729]
===
delete-tree
---
InfixExpression [31732,31743]
    SimpleName: cs2 [31732,31735]
    INFIX_EXPRESSION_OPERATOR: == [31736,31738]
    NullLiteral [31739,31743]
===
delete-node
---
ConditionalExpression [31718,31761]
===
