Only in data/changesInfo//Closure_33/properties/modified_classes/inducing/: src
diff -u -r data/changesInfo//Closure_33/properties/modified_classes/inducing/test/com/google/javascript/jscomp/TypeCheckTest.java data/changesInfo//Closure_33/cleaned/inducing/test/com/google/javascript/jscomp/TypeCheckTest.java
--- data/changesInfo//Closure_33/properties/modified_classes/inducing/test/com/google/javascript/jscomp/TypeCheckTest.java	2023-12-27 22:37:41.140429674 -0800
+++ data/changesInfo//Closure_33/cleaned/inducing/test/com/google/javascript/jscomp/TypeCheckTest.java	2023-07-24 06:03:47.893000000 -0700
@@ -5497,6 +5497,48 @@
         "document.getElementById('node').innerHTML = list.toString();");
   }
 
+  public void testIssue700() throws Exception {
+    testTypes(
+            "/**\n" +
+                    " * @param {{text: string}} opt_data\n" +
+                    " * @return {string}\n" +
+                    " */\n" +
+                    "function temp1(opt_data) {\n" +
+                    "  return opt_data.text;\n" +
+                    "}\n" +
+                    "\n" +
+                    "/**\n" +
+                    " * @param {{activity: (boolean|number|string|null|Object)}} opt_data\n" +
+                    " * @return {string}\n" +
+                    " */\n" +
+                    "function temp2(opt_data) {\n" +
+                    "  /** @notypecheck */\n" +
+                    "  function __inner() {\n" +
+                    "    return temp1(opt_data.activity);\n" +
+                    "  }\n" +
+                    "  return __inner();\n" +
+                    "}\n" +
+                    "\n" +
+                    "/**\n" +
+                    " * @param {{n: number, text: string, b: boolean}} opt_data\n" +
+                    " * @return {string}\n" +
+                    " */\n" +
+                    "function temp3(opt_data) {\n" +
+                    "  return 'n: ' + opt_data.n + ', t: ' + opt_data.text + '.';\n" +
+                    "}\n" +
+                    "\n" +
+                    "function callee() {\n" +
+                    "  var output = temp3({\n" +
+                    "    n: 0,\n" +
+                    "    text: 'a string',\n" +
+                    "    b: true\n" +
+                    "  })\n" +
+                    "  alert(output);\n" +
+                    "}\n" +
+                    "\n" +
+                    "callee();");
+  }
+
   public void testIssue483() throws Exception {
     testTypes(
         "/** @constructor */ function C() {" +
