===
update-node
---
SimpleName: testInlineIfParametersModified8 [18183,18214]
replace testInlineIfParametersModified8 by testNoInlineIfParametersModified8
===
update-node
---
SimpleName: testInlineIfParametersModified9 [18332,18363]
replace testInlineIfParametersModified9 by testNoInlineIfParametersModified9
===
insert-tree
---
ExpressionStatement [4465,4595]
    MethodInvocation [4465,4594]
        SimpleName: test [4465,4469]
        METHOD_INVOCATION_ARGUMENTS [4470,4593]
            InfixExpression [4470,4559]
                StringLiteral: "function BAR_FN(x, y, z) { return z(foo(x + y)) }" [4470,4521]
                INFIX_EXPRESSION_OPERATOR: + [4522,4523]
                StringLiteral: "alert(BAR_FN(1, 2, baz))" [4533,4559]
            StringLiteral: "alert(baz(foo(1+2)))" [4571,4593]
to
Block [4566,4924]
at 0
===
update-node
---
SimpleName: enableComputeSideEffects [1315,1339]
replace enableComputeSideEffects by enableMarkNoSideEffects
===
update-node
---
StringLiteral: "var d=c+e;" [10768,10780]
replace "var d=c+e;" by "var d;{d=c+e}"
===
update-node
---
StringLiteral: "var d=c" [11236,11245]
replace "var d=c" by "var d;{d=c}"
===
update-node
---
StringLiteral: "{o.x=2}" [18301,18310]
replace "{o.x=2}" by "o.x=2"
===
update-node
---
StringLiteral: "{o[2]=2}" [18450,18460]
replace "{o[2]=2}" by "o[2]=2"
===
update-node
---
StringLiteral: "var a= nochg()+(nochg()+1+1)+(nochg()+1+1);" [29991,30036]
replace "var a= nochg()+(nochg()+1+1)+(nochg()+1+1);" by "var a= 1+1+(1+1);"
===
update-node
---
StringLiteral: "nochg(x)" [33083,33093]
replace "nochg(x)" by "getWindow(x)"
===
move-tree
---
StringLiteral: "  }" [64370,64375]
to
InfixExpression [63673,64485]
at 12
===
update-node
---
StringLiteral: "var JSCompiler_inline_result$$0;" [7665,7699]
replace "var JSCompiler_inline_result$$0;" by "var JSCompiler_temp_const$$0 = c;\n"
===
update-node
---
StringLiteral: "{var x$$inline_1;" [7711,7730]
replace "{var x$$inline_1;" by "var JSCompiler_inline_result$$1;\n"
===
update-node
---
StringLiteral: "JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}" [7742,7817]
replace "JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}" by "{\n"
===
update-node
---
StringLiteral: "var d=c+JSCompiler_inline_result$$0" [7829,7866]
replace "var d=c+JSCompiler_inline_result$$0" by "var x$$inline_2;\n"
===
insert-node
---
StringLiteral: "JSCompiler_inline_result$$1 = " [7486,7518]
to
InfixExpression [7665,7866]
at 5
===
insert-node
---
StringLiteral: "    function(a$$inline_3){ return a$$inline_3+1 };\n" [7530,7584]
to
InfixExpression [7665,7866]
at 6
===
insert-node
---
StringLiteral: "}" [7596,7599]
to
InfixExpression [7665,7866]
at 7
===
insert-node
---
StringLiteral: "var d=JSCompiler_temp_const$$0 + JSCompiler_inline_result$$1" [7611,7673]
to
InfixExpression [7665,7866]
at 8
===
update-node
---
StringLiteral: "function _x(){" [9226,9242]
replace "function _x(){" by "function _x() { \n"
===
update-node
---
StringLiteral: "  var JSCompiler_inline_result$$0;" [9254,9290]
replace "  var JSCompiler_inline_result$$0;" by "  var JSCompiler_temp_const$$0 = c;\n"
===
update-node
---
StringLiteral: "  {" [9302,9307]
replace "  {" by "  var JSCompiler_inline_result$$1;\n"
===
update-node
---
StringLiteral: "    var x$$inline_1;" [9319,9341]
replace "    var x$$inline_1;" by "  {\n"
===
update-node
---
StringLiteral: "    JSCompiler_inline_result$$0=function(a$$inline_2){" [9353,9409]
replace "    JSCompiler_inline_result$$0=function(a$$inline_2){" by "  var x$$inline_2;\n"
===
update-node
---
StringLiteral: "        return a$$inline_2+1};" [9421,9453]
replace "        return a$$inline_2+1};" by "  JSCompiler_inline_result$$1 = "
===
update-node
---
StringLiteral: "  }" [9465,9470]
replace "  }" by "      function(a$$inline_3) {return a$$inline_3+1};\n"
===
update-node
---
StringLiteral: "  var d=c+JSCompiler_inline_result$$0" [9482,9521]
replace "  var d=c+JSCompiler_inline_result$$0" by "  }\n"
===
insert-node
---
StringLiteral: "  var d = JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\n" [9357,9423]
to
InfixExpression [9226,9536]
at 9
===
update-node
---
StringLiteral: "function f(a){return chg() + a + a;}" [29153,29191]
replace "function f(a){return chg() + a + a;}" by "function f(a){return 1 + a + a;}"
===
update-node
---
StringLiteral: "function f(a){return chg() + a + a;}" [29470,29508]
replace "function f(a){return chg() + a + a;}" by "function f(a){return 1 + a + a;}"
===
update-node
---
StringLiteral: "{var a$$inline_0=chg()+1+1;" [29569,29598]
replace "{var a$$inline_0=chg()+1+1;" by "{var a$$inline_0=1+1+1;"
===
update-node
---
StringLiteral: "a=chg()+a$$inline_0+a$$inline_0}" [29610,29644]
replace "a=chg()+a$$inline_0+a$$inline_0}" by "a=1+a$$inline_0+a$$inline_0}"
===
update-node
---
StringLiteral: "function f(a){return nochg() + a + a;}" [29912,29952]
replace "function f(a){return nochg() + a + a;}" by "function f(a){return a + a;}"
===
update-node
---
StringLiteral: "function f(a){return chg() + a + a;}" [30122,30160]
replace "function f(a){return chg() + a + a;}" by "function f(a){return a + a;}"
===
update-node
---
StringLiteral: "{var a$$inline_0=chg()+1+1;" [30220,30249]
replace "{var a$$inline_0=chg()+1+1;" by "{var a$$inline_0=1+1;"
===
update-node
---
StringLiteral: "a=chg()+a$$inline_0+a$$inline_0}" [30261,30295]
replace "a=chg()+a$$inline_0+a$$inline_0}" by "a=a$$inline_0+a$$inline_0}"
===
update-node
---
StringLiteral: "var foo = function(a) { return nochg(a); };" [32951,32996]
replace "var foo = function(a) { return nochg(a); };" by "var foo = function(a) { return getWindow(a); };"
===
update-node
---
StringLiteral: "HangoutStarter.prototype.launchHangout=function(){" [63673,63725]
replace "HangoutStarter.prototype.launchHangout=function(){" by "HangoutStarter.prototype.launchHangout = function() { "
===
update-node
---
StringLiteral: "  var self$$2=a.b;" [63736,63756]
replace "  var self$$2=a.b;" by "  var self$$2 = a.b;"
===
update-node
---
StringLiteral: "  var JSCompiler_temp_const$$0=goog.Uri;" [63767,63809]
replace "  var JSCompiler_temp_const$$0=goog.Uri;" by "  var JSCompiler_temp_const$$0 = goog.Uri;"
===
update-node
---
StringLiteral: "    var JSCompiler_inline_result$$0;" [63883,63921]
replace "    var JSCompiler_inline_result$$0;" by "  var self$$inline_2 = self$$2;"
===
update-node
---
StringLiteral: "    {" [63932,63939]
replace "    {" by "  if (!self$$inline_2.domServices_) {"
===
update-node
---
StringLiteral: "      var self$$inline_1=self$$2;" [63950,63985]
replace "      var self$$inline_1=self$$2;" by "    self$$inline_2.domServices_ = goog$component$DomServices.get("
===
update-node
---
StringLiteral: "      if(!self$$inline_1.domServices_) {" [63996,64038]
replace "      if(!self$$inline_1.domServices_) {" by "        self$$inline_2.appContext_);"
===
update-node
---
StringLiteral: "        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);" [64049,64146]
replace "        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);" by "  }"
===
update-node
---
StringLiteral: "      }" [64157,64166]
replace "      }" by "  JSCompiler_inline_result$$1=self$$inline_2.domServices_;"
===
update-node
---
StringLiteral: "      JSCompiler_inline_result$$0=self$$inline_1.domServices_;" [64177,64241]
replace "      JSCompiler_inline_result$$0=self$$inline_1.domServices_;" by "  var myUrl = new JSCompiler_temp_const$$0("
===
update-node
---
StringLiteral: "    }" [64252,64259]
replace "    }" by "      JSCompiler_inline_result$$1.getDomHelper()."
===
update-node
---
StringLiteral: "    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();" [64270,64359]
replace "    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();" by "          getWindow().location.href)"
===
delete-tree
---
FieldDeclaration [1113,1223]
    Modifier: final [1113,1118]
    Modifier: static [1119,1125]
    SimpleType [1126,1132]
        SimpleName: String [1126,1132]
    VariableDeclarationFragment [1133,1222]
        SimpleName: EXTERNS [1133,1140]
        InfixExpression [1149,1222]
            StringLiteral: "/** @nosideeffects */ function nochg(){}\n" [1149,1193]
            INFIX_EXPRESSION_OPERATOR: + [1194,1195]
            StringLiteral: "function chg(){}\n" [1202,1222]
===
delete-tree
---
SuperConstructorInvocation [1262,1277]
    SimpleName: EXTERNS [1268,1275]
===
delete-tree
---
ExpressionStatement [4600,4920]
    MethodInvocation [4600,4919]
        SimpleName: test [4600,4604]
        METHOD_INVOCATION_ARGUMENTS [4605,4918]
            InfixExpression [4605,4696]
                StringLiteral: "function BAR_FN(x, y, z) { return z(nochg(x + y)) }" [4605,4658]
                INFIX_EXPRESSION_OPERATOR: + [4659,4660]
                StringLiteral: "alert(BAR_FN(1, 2, baz))" [4670,4696]
            InfixExpression [4708,4918]
                StringLiteral: "var JSCompiler_temp_const$$0=alert;" [4708,4745]
                INFIX_EXPRESSION_OPERATOR: + [4746,4747]
                StringLiteral: "var JSCompiler_inline_result$$1;" [4757,4791]
                StringLiteral: "{JSCompiler_inline_result$$1=baz(nochg(1+2));}" [4803,4851]
                StringLiteral: "JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)" [4863,4918]
===
delete-node
---
StringLiteral: "  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)" [64386,64471]
===
===
delete-tree
---
MethodDeclaration [72668,72946]
    Modifier: public [72668,72674]
    PrimitiveType: void [72675,72679]
    SimpleName: testIssue1101 [72680,72693]
    Block [72696,72946]
        ExpressionStatement [72702,72942]
            MethodInvocation [72702,72941]
                SimpleName: test [72702,72706]
                METHOD_INVOCATION_ARGUMENTS [72716,72940]
                    InfixExpression [72716,72819]
                        StringLiteral: "var x = (function (saved) {" [72716,72745]
                        INFIX_EXPRESSION_OPERATOR: + [72746,72747]
                        StringLiteral: "    return foo(obj) + saved;" [72756,72786]
                        StringLiteral: "  })(obj[\"prop\"]);" [72797,72819]
                    InfixExpression [72829,72940]
                        StringLiteral: "var x;" [72829,72837]
                        INFIX_EXPRESSION_OPERATOR: + [72838,72839]
                        StringLiteral: "{" [72848,72851]
                        StringLiteral: "  var saved$$inline_0=obj[\"prop\"];x=foo(obj)+saved$$inline_0" [72862,72926]
                        StringLiteral: "}" [72937,72940]
