===
insert-tree
---
FieldDeclaration [1113,1223]
    Modifier: final [1113,1118]
    Modifier: static [1119,1125]
    SimpleType [1126,1132]
        SimpleName: String [1126,1132]
    VariableDeclarationFragment [1133,1222]
        SimpleName: EXTERNS [1133,1140]
        InfixExpression [1149,1222]
            StringLiteral: "/** @nosideeffects */ function nochg(){}\n" [1149,1193]
            INFIX_EXPRESSION_OPERATOR: + [1194,1195]
            StringLiteral: "function chg(){}\n" [1202,1222]
to
TypeDeclaration [654,72411]
at 12
===
insert-tree
---
MethodDeclaration [72668,72946]
    Modifier: public [72668,72674]
    PrimitiveType: void [72675,72679]
    SimpleName: testIssue1101 [72680,72693]
    Block [72696,72946]
        ExpressionStatement [72702,72942]
            MethodInvocation [72702,72941]
                SimpleName: test [72702,72706]
                METHOD_INVOCATION_ARGUMENTS [72716,72940]
                    InfixExpression [72716,72819]
                        StringLiteral: "var x = (function (saved) {" [72716,72745]
                        INFIX_EXPRESSION_OPERATOR: + [72746,72747]
                        StringLiteral: "    return foo(obj) + saved;" [72756,72786]
                        StringLiteral: "  })(obj[\"prop\"]);" [72797,72819]
                    InfixExpression [72829,72940]
                        StringLiteral: "var x;" [72829,72837]
                        INFIX_EXPRESSION_OPERATOR: + [72838,72839]
                        StringLiteral: "{" [72848,72851]
                        StringLiteral: "  var saved$$inline_0=obj[\"prop\"];x=foo(obj)+saved$$inline_0" [72862,72926]
                        StringLiteral: "}" [72937,72940]
to
TypeDeclaration [654,72411]
at 248
===
update-node
---
SimpleName: testNoInlineIfParametersModified8 [18092,18125]
replace testNoInlineIfParametersModified8 by testInlineIfParametersModified8
===
update-node
---
SimpleName: testNoInlineIfParametersModified9 [18241,18274]
replace testNoInlineIfParametersModified9 by testInlineIfParametersModified9
===
insert-tree
---
SuperConstructorInvocation [1262,1277]
    SimpleName: EXTERNS [1268,1275]
to
Block [1142,1211]
at 0
===
insert-tree
---
ExpressionStatement [4600,4920]
    MethodInvocation [4600,4919]
        SimpleName: test [4600,4604]
        METHOD_INVOCATION_ARGUMENTS [4605,4918]
            InfixExpression [4605,4696]
                StringLiteral: "function BAR_FN(x, y, z) { return z(nochg(x + y)) }" [4605,4658]
                INFIX_EXPRESSION_OPERATOR: + [4659,4660]
                StringLiteral: "alert(BAR_FN(1, 2, baz))" [4670,4696]
            InfixExpression [4708,4918]
                StringLiteral: "var JSCompiler_temp_const$$0=alert;" [4708,4745]
                INFIX_EXPRESSION_OPERATOR: + [4746,4747]
                StringLiteral: "var JSCompiler_inline_result$$1;" [4757,4791]
                StringLiteral: "{JSCompiler_inline_result$$1=baz(nochg(1+2));}" [4803,4851]
                StringLiteral: "JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)" [4863,4918]
to
Block [4431,4599]
at 0
===
update-node
---
SimpleName: enableMarkNoSideEffects [1181,1204]
replace enableMarkNoSideEffects by enableComputeSideEffects
===
update-node
---
StringLiteral: "var d;{d=c+e}" [10670,10685]
replace "var d;{d=c+e}" by "var d=c+e;"
===
update-node
---
StringLiteral: "var d;{d=c}" [11141,11154]
replace "var d;{d=c}" by "var d=c"
===
update-node
---
StringLiteral: "o.x=2" [18212,18219]
replace "o.x=2" by "{o.x=2}"
===
update-node
---
StringLiteral: "o[2]=2" [18361,18369]
replace "o[2]=2" by "{o[2]=2}"
===
update-node
---
StringLiteral: "var a= 1+1+(1+1);" [29874,29893]
replace "var a= 1+1+(1+1);" by "var a= nochg()+(nochg()+1+1)+(nochg()+1+1);"
===
update-node
---
StringLiteral: "getWindow(x)" [32924,32938]
replace "getWindow(x)" by "nochg(x)"
===
move-tree
---
StringLiteral: "  }" [64044,64049]
to
InfixExpression [63518,64230]
at 15
===
update-node
---
StringLiteral: "var JSCompiler_temp_const$$0 = c;\n" [7340,7377]
replace "var JSCompiler_temp_const$$0 = c;\n" by "var JSCompiler_inline_result$$0;"
===
update-node
---
StringLiteral: "var JSCompiler_inline_result$$1;\n" [7389,7425]
replace "var JSCompiler_inline_result$$1;\n" by "{var x$$inline_1;"
===
update-node
---
StringLiteral: "{\n" [7437,7442]
replace "{\n" by "JSCompiler_inline_result$$0=function(a$$inline_2){return a$$inline_2+1};}"
===
update-node
---
StringLiteral: "var x$$inline_2;\n" [7454,7474]
replace "var x$$inline_2;\n" by "var d=c+JSCompiler_inline_result$$0"
===
update-node
---
StringLiteral: "function _x() { \n" [9039,9059]
replace "function _x() { \n" by "function _x(){"
===
update-node
---
StringLiteral: "  var JSCompiler_temp_const$$0 = c;\n" [9071,9110]
replace "  var JSCompiler_temp_const$$0 = c;\n" by "  var JSCompiler_inline_result$$0;"
===
update-node
---
StringLiteral: "  var JSCompiler_inline_result$$1;\n" [9122,9160]
replace "  var JSCompiler_inline_result$$1;\n" by "  {"
===
update-node
---
StringLiteral: "  {\n" [9172,9179]
replace "  {\n" by "    var x$$inline_1;"
===
update-node
---
StringLiteral: "  var x$$inline_2;\n" [9191,9213]
replace "  var x$$inline_2;\n" by "    JSCompiler_inline_result$$0=function(a$$inline_2){"
===
update-node
---
StringLiteral: "  JSCompiler_inline_result$$1 = " [9225,9259]
replace "  JSCompiler_inline_result$$1 = " by "        return a$$inline_2+1};"
===
update-node
---
StringLiteral: "      function(a$$inline_3) {return a$$inline_3+1};\n" [9271,9326]
replace "      function(a$$inline_3) {return a$$inline_3+1};\n" by "  }"
===
update-node
---
StringLiteral: "  }\n" [9338,9345]
replace "  }\n" by "  var d=c+JSCompiler_inline_result$$0"
===
update-node
---
StringLiteral: "function f(a){return 1 + a + a;}" [29062,29096]
replace "function f(a){return 1 + a + a;}" by "function f(a){return chg() + a + a;}"
===
update-node
---
StringLiteral: "function f(a){return 1 + a + a;}" [29375,29409]
replace "function f(a){return 1 + a + a;}" by "function f(a){return chg() + a + a;}"
===
update-node
---
StringLiteral: "{var a$$inline_0=1+1+1;" [29470,29495]
replace "{var a$$inline_0=1+1+1;" by "{var a$$inline_0=chg()+1+1;"
===
update-node
---
StringLiteral: "a=1+a$$inline_0+a$$inline_0}" [29507,29537]
replace "a=1+a$$inline_0+a$$inline_0}" by "a=chg()+a$$inline_0+a$$inline_0}"
===
update-node
---
StringLiteral: "function f(a){return a + a;}" [29805,29835]
replace "function f(a){return a + a;}" by "function f(a){return nochg() + a + a;}"
===
update-node
---
StringLiteral: "function f(a){return a + a;}" [29979,30009]
replace "function f(a){return a + a;}" by "function f(a){return chg() + a + a;}"
===
update-node
---
StringLiteral: "{var a$$inline_0=1+1;" [30069,30092]
replace "{var a$$inline_0=1+1;" by "{var a$$inline_0=chg()+1+1;"
===
update-node
---
StringLiteral: "a=a$$inline_0+a$$inline_0}" [30104,30132]
replace "a=a$$inline_0+a$$inline_0}" by "a=chg()+a$$inline_0+a$$inline_0}"
===
update-node
---
StringLiteral: "var foo = function(a) { return getWindow(a); };" [32788,32837]
replace "var foo = function(a) { return getWindow(a); };" by "var foo = function(a) { return nochg(a); };"
===
update-node
---
StringLiteral: "HangoutStarter.prototype.launchHangout = function() { " [63518,63574]
replace "HangoutStarter.prototype.launchHangout = function() { " by "HangoutStarter.prototype.launchHangout=function(){"
===
update-node
---
StringLiteral: "  var self$$2 = a.b;" [63585,63607]
replace "  var self$$2 = a.b;" by "  var self$$2=a.b;"
===
update-node
---
StringLiteral: "  var JSCompiler_temp_const$$0 = goog.Uri;" [63618,63662]
replace "  var JSCompiler_temp_const$$0 = goog.Uri;" by "  var JSCompiler_temp_const$$0=goog.Uri;"
===
update-node
---
StringLiteral: "  var self$$inline_2 = self$$2;" [63736,63769]
replace "  var self$$inline_2 = self$$2;" by "    var JSCompiler_inline_result$$0;"
===
update-node
---
StringLiteral: "  if (!self$$inline_2.domServices_) {" [63780,63819]
replace "  if (!self$$inline_2.domServices_) {" by "    {"
===
update-node
---
StringLiteral: "    self$$inline_2.domServices_ = goog$component$DomServices.get(" [63830,63897]
replace "    self$$inline_2.domServices_ = goog$component$DomServices.get(" by "      var self$$inline_1=self$$2;"
===
update-node
---
StringLiteral: "        self$$inline_2.appContext_);" [63908,63946]
replace "        self$$inline_2.appContext_);" by "      if(!self$$inline_1.domServices_) {"
===
update-node
---
StringLiteral: "  }" [63957,63962]
replace "  }" by "        self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);"
===
update-node
---
StringLiteral: "  JSCompiler_inline_result$$1=self$$inline_2.domServices_;" [63973,64033]
replace "  JSCompiler_inline_result$$1=self$$inline_2.domServices_;" by "      }"
===
update-node
---
StringLiteral: "  var myUrl = new JSCompiler_temp_const$$0(" [64060,64105]
replace "  var myUrl = new JSCompiler_temp_const$$0(" by "      JSCompiler_inline_result$$0=self$$inline_1.domServices_;"
===
update-node
---
StringLiteral: "      JSCompiler_inline_result$$1.getDomHelper()." [64116,64167]
replace "      JSCompiler_inline_result$$1.getDomHelper()." by "    }"
===
update-node
---
StringLiteral: "          getWindow().location.href)" [64178,64216]
replace "          getWindow().location.href)" by "    JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();"
===
insert-node
---
StringLiteral: "  var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)" [64386,64471]
to
InfixExpression [63518,64230]
at 16
===
delete-tree
---
ExpressionStatement [4465,4595]
    MethodInvocation [4465,4594]
        SimpleName: test [4465,4469]
        METHOD_INVOCATION_ARGUMENTS [4470,4593]
            InfixExpression [4470,4559]
                StringLiteral: "function BAR_FN(x, y, z) { return z(foo(x + y)) }" [4470,4521]
                INFIX_EXPRESSION_OPERATOR: + [4522,4523]
                StringLiteral: "alert(BAR_FN(1, 2, baz))" [4533,4559]
            StringLiteral: "alert(baz(foo(1+2)))" [4571,4593]
===
delete-node
---
StringLiteral: "JSCompiler_inline_result$$1 = " [7486,7518]
===
===
delete-node
---
StringLiteral: "    function(a$$inline_3){ return a$$inline_3+1 };\n" [7530,7584]
===
===
delete-node
---
StringLiteral: "}" [7596,7599]
===
===
delete-node
---
StringLiteral: "var d=JSCompiler_temp_const$$0 + JSCompiler_inline_result$$1" [7611,7673]
===
===
delete-node
---
StringLiteral: "  var d = JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\n" [9357,9423]
===
