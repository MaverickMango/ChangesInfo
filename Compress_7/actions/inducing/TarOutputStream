===
move-tree
---
FieldDeclaration [2139,2163]
    Modifier: private [2139,2146]
    PrimitiveType: int [2147,2150]
    VariableDeclarationFragment [2151,2162]
        SimpleName: m_currBytes [2151,2162]
to
TypeDeclaration [979,13771]
at 13
===
move-tree
---
FieldDeclaration [2079,2102]
    Modifier: private [2079,2086]
    PrimitiveType: int [2087,2090]
    VariableDeclarationFragment [2091,2101]
        SimpleName: m_assemLen [2091,2101]
to
TypeDeclaration [979,13771]
at 15
===
move-tree
---
FieldDeclaration [2048,2074]
    Modifier: private [2048,2055]
    ArrayType [2056,2062]
        PrimitiveType: byte [2056,2060]
        Dimension [2060,2062]
    VariableDeclarationFragment [2063,2073]
        SimpleName: m_assemBuf [2063,2073]
to
TypeDeclaration [979,13771]
at 15
===
move-tree
---
FieldDeclaration [2107,2134]
    Modifier: private [2107,2114]
    SimpleType [2115,2124]
        SimpleName: TarBuffer [2115,2124]
    VariableDeclarationFragment [2125,2133]
        SimpleName: m_buffer [2125,2133]
to
TypeDeclaration [979,13771]
at 15
===
move-tree
---
FieldDeclaration [1999,2043]
    Modifier: private [1999,2006]
    PrimitiveType: int [2007,2010]
    VariableDeclarationFragment [2011,2042]
        SimpleName: m_longFileMode [2011,2025]
        SimpleName: LONGFILE_ERROR [2028,2042]
to
TypeDeclaration [979,13771]
at 15
===
move-tree
---
MethodDeclaration [3808,4027]
    Javadoc [3808,3931]
        TagElement [3819,3870]
            TextElement: Sets the debugging flag in this stream's TarBuffer. [3819,3870]
        TagElement [3885,3923]
            SimpleName: debug [3892,3897]
            TextElement:  The new BufferDebug value [3897,3923]
    Modifier: public [3936,3942]
    PrimitiveType: void [3943,3947]
    SimpleName: setBufferDebug [3948,3962]
    SingleVariableDeclaration [3964,3977]
        PrimitiveType: boolean [3964,3971]
        SimpleName: debug [3972,3977]
    Block [3984,4027]
        ExpressionStatement [3994,4021]
            MethodInvocation [3994,4020]
                METHOD_INVOCATION_RECEIVER [3994,4002]
                    SimpleName: m_buffer [3994,4002]
                SimpleName: setDebug [4003,4011]
                METHOD_INVOCATION_ARGUMENTS [4013,4018]
                    SimpleName: debug [4013,4018]
to
TypeDeclaration [979,13771]
at 20
===
move-tree
---
MethodDeclaration [4799,5151]
    Javadoc [4799,5044]
        TagElement [4810,4957]
            TextElement: Ends the TAR archive and closes the underlying OutputStream. This means [4810,4881]
            TextElement: that finish() is called followed by calling the TarBuffer's close(). [4889,4957]
        TagElement [4972,5036]
            SimpleName: IOException [4983,4994]
            TextElement:  when an IO error causes operation to fail [4994,5036]
    Modifier: public [5049,5055]
    PrimitiveType: void [5056,5060]
    SimpleName: close [5061,5066]
    SimpleType [5084,5095]
        SimpleName: IOException [5084,5095]
    Block [5100,5151]
        ExpressionStatement [5110,5119]
            MethodInvocation [5110,5118]
                SimpleName: finish [5110,5116]
        ExpressionStatement [5128,5145]
            MethodInvocation [5128,5144]
                METHOD_INVOCATION_RECEIVER [5128,5136]
                    SimpleName: m_buffer [5128,5136]
                SimpleName: close [5137,5142]
to
TypeDeclaration [979,13771]
at 24
===
move-tree
---
MethodDeclaration [4583,4793]
    Javadoc [4583,4709]
        TagElement [4594,4652]
            TextElement: Get the record size being used by this stream's TarBuffer. [4594,4652]
        TagElement [4667,4701]
            TextElement:  The TarBuffer record size. [4674,4701]
    Modifier: public [4714,4720]
    PrimitiveType: int [4721,4724]
    SimpleName: getRecordSize [4725,4738]
    Block [4745,4793]
        ReturnStatement [4755,4787]
            MethodInvocation [4762,4786]
                METHOD_INVOCATION_RECEIVER [4762,4770]
                    SimpleName: m_buffer [4762,4770]
                SimpleName: getRecordSize [4771,4784]
to
TypeDeclaration [979,13771]
at 24
===
move-tree
---
MethodDeclaration [5157,6288]
    Javadoc [5157,5634]
        TagElement [5168,5547]
            TextElement: Close an entry. This method MUST be called for all file entries that [5168,5236]
            TextElement: contain data. The reason is that we must buffer data written to the [5244,5311]
            TextElement: stream in order to satisfy the buffer's record based writes. Thus, there [5319,5391]
            TextElement: may be data fragments still being assembled that must be written to the [5399,5470]
            TextElement: output stream before this entry is closed and the next entry written. [5478,5547]
        TagElement [5562,5626]
            SimpleName: IOException [5573,5584]
            TextElement:  when an IO error causes operation to fail [5584,5626]
    Modifier: public [5639,5645]
    PrimitiveType: void [5646,5650]
    SimpleName: closeEntry [5651,5661]
    SimpleType [5679,5690]
        SimpleName: IOException [5679,5690]
    Block [5695,6288]
        IfStatement [5705,5993]
            InfixExpression [5709,5723]
                SimpleName: m_assemLen [5709,5719]
                INFIX_EXPRESSION_OPERATOR: > [5720,5721]
                NumberLiteral: 0 [5722,5723]
            Block [5734,5993]
                ForStatement [5748,5866]
                    VariableDeclarationExpression [5753,5771]
                        PrimitiveType: int [5753,5756]
                        VariableDeclarationFragment [5757,5771]
                            SimpleName: i [5757,5758]
                            SimpleName: m_assemLen [5761,5771]
                    InfixExpression [5773,5794]
                        SimpleName: i [5773,5774]
                        INFIX_EXPRESSION_OPERATOR: < [5775,5776]
                        QualifiedName: m_assemBuf.length [5777,5794]
                    PrefixExpression [5796,5799]
                        PREFIX_EXPRESSION_OPERATOR: ++ [5796,5798]
                        SimpleName: i [5798,5799]
                    Block [5814,5866]
                        ExpressionStatement [5832,5852]
                            Assignment [5832,5851]
                                ArrayAccess [5832,5847]
                                    SimpleName: m_assemBuf [5832,5842]
                                    SimpleName: i [5844,5845]
                                ASSIGNMENT_OPERATOR: = [5848,5849]
                                NumberLiteral: 0 [5850,5851]
                ExpressionStatement [5880,5915]
                    MethodInvocation [5880,5914]
                        METHOD_INVOCATION_RECEIVER [5880,5888]
                            SimpleName: m_buffer [5880,5888]
                        SimpleName: writeRecord [5889,5900]
                        METHOD_INVOCATION_ARGUMENTS [5902,5912]
                            SimpleName: m_assemBuf [5902,5912]
                ExpressionStatement [5929,5955]
                    Assignment [5929,5954]
                        SimpleName: m_currBytes [5929,5940]
                        ASSIGNMENT_OPERATOR: += [5941,5943]
                        SimpleName: m_assemLen [5944,5954]
                ExpressionStatement [5968,5983]
                    Assignment [5968,5982]
                        SimpleName: m_assemLen [5968,5978]
                        ASSIGNMENT_OPERATOR: = [5979,5980]
                        NumberLiteral: 0 [5981,5982]
        IfStatement [6003,6282]
            InfixExpression [6007,6031]
                SimpleName: m_currBytes [6007,6018]
                INFIX_EXPRESSION_OPERATOR: < [6019,6020]
                SimpleName: m_currSize [6021,6031]
            Block [6042,6282]
                VariableDeclarationStatement [6056,6226]
                    Modifier: final [6056,6061]
                    SimpleType [6062,6068]
                        SimpleName: String [6062,6068]
                    VariableDeclarationFragment [6069,6225]
                        SimpleName: message [6069,6076]
                        InfixExpression [6079,6225]
                            StringLiteral: "entry closed at '" [6079,6098]
                            INFIX_EXPRESSION_OPERATOR: + [6099,6100]
                            SimpleName: m_currBytes [6101,6112]
                            StringLiteral: "' before the '" [6131,6147]
                            SimpleName: m_currSize [6150,6160]
                            StringLiteral: "' bytes specified in the header were written" [6179,6225]
                ThrowStatement [6239,6272]
                    ClassInstanceCreation [6245,6271]
                        SimpleType [6249,6260]
                            SimpleName: IOException [6249,6260]
                        SimpleName: message [6262,6269]
to
TypeDeclaration [979,13771]
at 25
===
insert-tree
---
Javadoc [979,1172]
    TagElement [986,1165]
        TextElement: The TarOutputStream writes a UNIX tar archive as an OutputStream. [986,1051]
        TextElement: Methods are provided to put entries, and then write their contents [1055,1121]
        TextElement: by writing to this stream using write(). [1125,1165]
to
TypeDeclaration [979,13771]
at 0
===
insert-tree
---
FieldDeclaration [1629,1655]
    Modifier: protected [1629,1638]
    PrimitiveType: boolean [1639,1646]
    VariableDeclarationFragment [1649,1654]
        SimpleName: debug [1649,1654]
to
TypeDeclaration [979,13771]
at 9
===
insert-tree
---
FieldDeclaration [1694,1723]
    Modifier: protected [1694,1703]
    SimpleType [1704,1710]
        SimpleName: String [1704,1710]
    VariableDeclarationFragment [1714,1722]
        SimpleName: currName [1714,1722]
to
TypeDeclaration [979,13771]
at 11
===
insert-tree
---
FieldDeclaration [2026,2057]
    Modifier: private [2026,2033]
    PrimitiveType: boolean [2034,2041]
    VariableDeclarationFragment [2042,2056]
        SimpleName: closed [2042,2048]
        BooleanLiteral: false [2051,2056]
to
TypeDeclaration [979,13771]
at 19
===
insert-tree
---
MethodDeclaration [2063,2279]
    Javadoc [2063,2155]
        TagElement [2074,2105]
            TextElement: Constructor for TarInputStream. [2074,2105]
        TagElement [2113,2147]
            SimpleName: os [2120,2122]
            TextElement:  the output stream to use [2122,2147]
    Modifier: public [2160,2166]
    SimpleName: TarOutputStream [2167,2182]
    SingleVariableDeclaration [2183,2198]
        SimpleType [2183,2195]
            SimpleName: OutputStream [2183,2195]
        SimpleName: os [2196,2198]
    Block [2200,2279]
        ConstructorInvocation [2210,2273]
            SimpleName: os [2215,2217]
            QualifiedName: TarBuffer.DEFAULT_BLKSIZE [2219,2244]
            QualifiedName: TarBuffer.DEFAULT_RCDSIZE [2246,2271]
to
TypeDeclaration [979,13771]
at 20
===
insert-tree
---
MethodDeclaration [3487,3663]
    Javadoc [3487,3585]
        TagElement [3498,3522]
            TextElement: Sets the debugging flag. [3498,3522]
        TagElement [3537,3577]
            SimpleName: debugF [3544,3550]
            TextElement:  True to turn on debugging. [3550,3577]
    Modifier: public [3590,3596]
    PrimitiveType: void [3597,3601]
    SimpleName: setDebug [3602,3610]
    SingleVariableDeclaration [3611,3625]
        PrimitiveType: boolean [3611,3618]
        SimpleName: debugF [3619,3625]
    Block [3627,3663]
        ExpressionStatement [3637,3657]
            Assignment [3637,3656]
                FieldAccess [3637,3647]
                    ThisExpression [3637,3641]
                    SimpleName: debug [3642,3647]
                ASSIGNMENT_OPERATOR: = [3648,3649]
                SimpleName: debugF [3650,3656]
to
TypeDeclaration [979,13771]
at 25
===
insert-tree
---
Javadoc [1235,1294]
    TagElement [1239,1292]
        TextElement: Fail if a long file name is required in the archive.  [1239,1292]
to
FieldDeclaration [1236,1446]
at 0
===
insert-tree
---
Javadoc [1348,1399]
    TagElement [1352,1397]
        TextElement: Long paths will be truncated in the archive.  [1352,1397]
to
FieldDeclaration [1452,1667]
at 0
===
insert-tree
---
Javadoc [1456,1531]
    TagElement [1460,1529]
        TextElement: GNU tar extensions are used to store long file names in the archive.  [1460,1529]
to
FieldDeclaration [1673,1993]
at 0
===
update-node
---
Modifier: private [2168,2175]
replace private by protected
===
update-node
---
PrimitiveType: int [2176,2179]
replace int by long
===
update-node
---
Modifier: private [2139,2146]
replace private by protected
===
update-node
---
PrimitiveType: int [2147,2150]
replace int by long
===
update-node
---
Modifier: private [2197,2204]
replace private by protected
===
update-node
---
Modifier: private [2226,2233]
replace private by protected
===
update-node
---
Modifier: private [2079,2086]
replace private by protected
===
update-node
---
Modifier: private [2048,2055]
replace private by protected
===
update-node
---
Modifier: private [2107,2114]
replace private by protected
===
update-node
---
Modifier: private [1999,2006]
replace private by protected
===
insert-node
---
Javadoc [2285,2423]
to
MethodDeclaration [2681,3129]
at 0
===
insert-node
---
Javadoc [3094,3380]
to
MethodDeclaration [4033,4577]
at 0
===
insert-node
---
Javadoc [4305,4514]
to
MethodDeclaration [4799,5151]
at 0
===
insert-node
---
Javadoc [4916,5469]
to
MethodDeclaration [6615,8698]
at 0
===
insert-node
---
Javadoc [6771,7219]
to
MethodDeclaration [5157,6288]
at 0
===
insert-tree
---
SingleVariableDeclaration [9232,9243]
    PrimitiveType: int [9232,9235]
    SimpleName: wOffset [9236,9243]
to
MethodDeclaration [10137,13326]
at 5
===
insert-tree
---
SingleVariableDeclaration [9245,9259]
    PrimitiveType: int [9245,9248]
    SimpleName: numToWrite [9249,9259]
to
MethodDeclaration [10137,13326]
at 6
===
insert-tree
---
Javadoc [11434,11565]
    TagElement [11445,11557]
        TextElement: Write an EOF (end of archive) record to the tar archive. [11445,11501]
        TextElement: An EOF record consists of a record of all zeros. [11509,11557]
to
MethodDeclaration [13332,13769]
at 0
===
update-node
---
SimpleName: m_currSize [2180,2190]
replace m_currSize by currSize
===
update-node
---
SimpleName: m_currBytes [2151,2162]
replace m_currBytes by currBytes
===
update-node
---
SimpleName: m_oneBuf [2212,2220]
replace m_oneBuf by oneBuf
===
update-node
---
SimpleName: m_recordBuf [2241,2252]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: m_assemLen [2091,2101]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_assemBuf [2063,2073]
replace m_assemBuf by assemBuf
===
update-node
---
SimpleName: m_buffer [2125,2133]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_longFileMode [2011,2025]
replace m_longFileMode by longFileMode
===
insert-tree
---
TagElement [2296,2327]
    TextElement: Constructor for TarInputStream. [2296,2327]
to
Javadoc [2285,2423]
at 0
===
insert-tree
---
TagElement [2335,2369]
    SimpleName: os [2342,2344]
    TextElement:  the output stream to use [2344,2369]
to
Javadoc [2285,2423]
at 1
===
move-tree
---
TagElement [2867,2898]
    SimpleName: blockSize [2874,2883]
    TextElement:  the block size [2883,2898]
to
Javadoc [2285,2423]
at 2
===
update-node
---
SimpleName: output [2995,3001]
replace output by os
===
update-node
---
SimpleName: output [3441,3447]
replace output by os
===
insert-tree
---
ExpressionStatement [2908,2927]
    Assignment [2908,2926]
        FieldAccess [2908,2918]
            ThisExpression [2908,2912]
            SimpleName: debug [2913,2918]
        ASSIGNMENT_OPERATOR: = [2919,2920]
        BooleanLiteral: false [2921,2926]
to
Block [3553,3802]
at 2
===
insert-tree
---
TagElement [3105,3329]
    TextElement: Set the long file mode. [3105,3128]
    TextElement: This can be LONGFILE_ERROR(0), LONGFILE_TRUNCATE(1) or LONGFILE_GNU(2). [3136,3207]
    TextElement: This specifies the treatment of long file names (names >= TarConstants.NAMELEN). [3215,3295]
    TextElement: Default is LONGFILE_ERROR. [3303,3329]
to
Javadoc [3094,3380]
at 0
===
move-tree
---
TagElement [4208,4236]
    SimpleName: longFileMode [4215,4227]
    TextElement:  the mode [4227,4236]
to
Javadoc [3094,3380]
at 1
===
insert-tree
---
ExpressionStatement [4276,4293]
    MethodInvocation [4276,4292]
        SimpleName: writeEOFRecord [4276,4290]
to
Block [6576,6609]
at 1
===
insert-tree
---
TagElement [4316,4470]
    TextElement: Ends the TAR archive and closes the underlying OutputStream. [4316,4376]
    TextElement: This means that finish() is called followed by calling the [4384,4442]
    TextElement: TarBuffer's close(). [4450,4470]
to
Javadoc [4305,4514]
at 0
===
move-tree
---
TagElement [4972,5036]
    SimpleName: IOException [4983,4994]
    TextElement:  when an IO error causes operation to fail [4994,5036]
to
Javadoc [4305,4514]
at 1
===
insert-node
---
IfStatement [4568,4694]
to
Block [5100,5151]
at 0
===
insert-tree
---
TagElement [4927,5355]
    TextElement: Put an entry on the output stream. This writes the entry's [4927,4985]
    TextElement: header record and positions the output stream for writing [4993,5050]
    TextElement: the contents of the entry. Once this method is called, the [5058,5116]
    TextElement: stream is ready for calls to write() to write the entry's [5124,5181]
    TextElement: contents. Once the contents are written, closeEntry() [5189,5242]
    TextElement: <B>MUST</B> be called to ensure that all buffered data [5250,5304]
    TextElement: is completely written to the output stream. [5312,5355]
to
Javadoc [4916,5469]
at 0
===
move-tree
---
TagElement [7178,7240]
    SimpleName: entry [7185,7190]
    TextElement:  The TarArchiveEntry to be written to the archive. [7190,7240]
to
Javadoc [4916,5469]
at 1
===
move-tree
---
TagElement [7248,7312]
    SimpleName: IOException [7259,7270]
    TextElement:  when an IO error causes operation to fail [7270,7312]
to
Javadoc [4916,5469]
at 2
===
insert-tree
---
ExpressionStatement [6732,6759]
    Assignment [6732,6758]
        SimpleName: currName [6732,6740]
        ASSIGNMENT_OPERATOR: = [6741,6742]
        MethodInvocation [6743,6758]
            METHOD_INVOCATION_RECEIVER [6743,6748]
                SimpleName: entry [6743,6748]
            SimpleName: getName [6749,6756]
to
Block [7412,8698]
at 5
===
insert-tree
---
TagElement [6782,7175]
    TextElement: Close an entry. This method MUST be called for all file [6782,6837]
    TextElement: entries that contain data. The reason is that we must [6845,6898]
    TextElement: buffer data written to the stream in order to satisfy [6906,6959]
    TextElement: the buffer's record based writes. Thus, there may be [6967,7019]
    TextElement: data fragments still being assembled that must be written [7027,7084]
    TextElement: to the output stream before this entry is closed and the [7092,7148]
    TextElement: next entry written. [7156,7175]
to
Javadoc [6771,7219]
at 0
===
move-tree
---
TagElement [5562,5626]
    SimpleName: IOException [5573,5584]
    TextElement:  when an IO error causes operation to fail [5584,5626]
to
Javadoc [6771,7219]
at 1
===
insert-tree
---
IfStatement [7532,7837]
    InfixExpression [7536,7556]
        SimpleName: currBytes [7536,7545]
        INFIX_EXPRESSION_OPERATOR: < [7546,7547]
        SimpleName: currSize [7548,7556]
    Block [7558,7837]
        ThrowStatement [7572,7827]
            ClassInstanceCreation [7578,7826]
                SimpleType [7582,7593]
                    SimpleName: IOException [7582,7593]
                InfixExpression [7594,7825]
                    StringLiteral: "entry '" [7594,7603]
                    INFIX_EXPRESSION_OPERATOR: + [7604,7605]
                    SimpleName: currName [7606,7614]
                    StringLiteral: "' closed at '" [7617,7632]
                    SimpleName: currBytes [7669,7678]
                    StringLiteral: "' before the '" [7715,7731]
                    SimpleName: currSize [7734,7742]
                    StringLiteral: "' bytes specified in the header were written" [7779,7825]
to
Block [5695,6288]
at 1
===
update-node
---
SimpleName: data [9623,9627]
replace data by b
===
update-node
---
SimpleName: buffer [10041,10047]
replace buffer by wBuf
===
update-node
---
SimpleName: buffer [10882,10888]
replace buffer by wBuf
===
update-node
---
TextElement:  the block size [2883,2898]
replace  the block size by  the block size to use
===
update-node
---
SimpleName: output [3073,3079]
replace output by os
===
update-node
---
QualifiedName: TarBuffer.DEFAULT_RECORDSIZE [3092,3120]
replace TarBuffer.DEFAULT_RECORDSIZE by TarBuffer.DEFAULT_RCDSIZE
===
update-node
---
TextElement: Construct a TarOutputStream using specified input [3146,3195]
replace Construct a TarOutputStream using specified input by Constructor for TarInputStream.
===
update-node
---
SimpleName: output [3261,3267]
replace output by os
===
update-node
---
TextElement:  stream to create TarOutputStream from [3267,3305]
replace  stream to create TarOutputStream from by  the output stream to use
===
update-node
---
TextElement:  the block size [3329,3344]
replace  the block size by  the block size to use
===
update-node
---
TextElement:  the record size [3369,3385]
replace  the record size by  the record size to use
===
update-node
---
SimpleName: output [3570,3576]
replace output by os
===
update-node
---
TextElement:  the mode [4227,4236]
replace  the mode by  the mode to use
===
update-node
---
TextElement:  The new BufferDebug value [3897,3923]
replace  The new BufferDebug value by  True to turn on debugging.
===
update-node
---
TextElement: Ends the TAR archive without closing the underlying OutputStream. The [6305,6374]
replace Ends the TAR archive without closing the underlying OutputStream. The by Ends the TAR archive without closing the underlying OutputStream.
===
update-node
---
TextElement: result is that the EOF record of nulls is written. [6382,6432]
replace result is that the EOF record of nulls is written. by The result is that the two EOF records of nulls are written.
===
update-node
---
TextElement:  when an IO error causes operation to fail [6469,6511]
replace  when an IO error causes operation to fail by  on error
===
update-node
---
TextElement:  when an IO error causes operation to fail [4994,5036]
replace  when an IO error causes operation to fail by  on error
===
insert-tree
---
PrefixExpression [4572,4579]
    PREFIX_EXPRESSION_OPERATOR: ! [4572,4573]
    SimpleName: closed [4573,4579]
to
IfStatement [4568,4694]
at 0
===
insert-node
---
Block [4581,4694]
to
IfStatement [4568,4694]
at 1
===
update-node
---
TextElement:  The TarArchiveEntry to be written to the archive. [7190,7240]
replace  The TarArchiveEntry to be written to the archive. by  The TarEntry to be written to the archive.
===
update-node
---
TextElement:  when an IO error causes operation to fail [7270,7312]
replace  when an IO error causes operation to fail by  on error
===
update-node
---
TextElement:  when an IO error causes operation to fail [5584,5626]
replace  when an IO error causes operation to fail by  on error
===
update-node
---
TextElement: Writes a byte to the current tar archive entry. This method simply calls [9360,9432]
replace Writes a byte to the current tar archive entry. This method simply calls by Writes a byte to the current tar archive entry.
===
update-node
---
TextElement: read( byte[], int, int ). [9440,9465]
replace read( byte[], int, int ). by This method simply calls read( byte[], int, int ).
===
update-node
---
SimpleName: data [9487,9491]
replace data by b
===
update-node
---
TextElement:  when an IO error causes operation to fail [9539,9581]
replace  when an IO error causes operation to fail by  on error
===
update-node
---
TextElement: Writes bytes to the current tar archive entry. This method simply calls [9755,9826]
replace Writes bytes to the current tar archive entry. This method simply calls by Writes bytes to the current tar archive entry.
===
update-node
---
TextElement: write( byte[], int, int ). [9834,9860]
replace write( byte[], int, int ). by This method simply calls write( byte[], int, int ).
===
update-node
---
SimpleName: buffer [9882,9888]
replace buffer by wBuf
===
update-node
---
TextElement:  when an IO error causes operation to fail [9954,9996]
replace  when an IO error causes operation to fail by  on error
===
update-node
---
TextElement: Writes bytes to the current tar archive entry. This method is aware of [10148,10218]
replace Writes bytes to the current tar archive entry. This method is aware of by Writes bytes to the current tar archive entry. This method
===
update-node
---
TextElement: the current entry and will throw an exception if you attempt to write [10226,10295]
replace the current entry and will throw an exception if you attempt to write by is aware of the current entry and will throw an exception if
===
update-node
---
TextElement: bytes past the length specified for the current entry. The method is also [10303,10376]
replace bytes past the length specified for the current entry. The method is also by you attempt to write bytes past the length specified for the
===
update-node
---
TextElement: (painfully) aware of the record buffering required by TarBuffer, and [10384,10452]
replace (painfully) aware of the record buffering required by TarBuffer, and by current entry. The method is also (painfully) aware of the
===
update-node
---
TextElement: manages buffers that are not a multiple of recordsize in length, [10460,10524]
replace manages buffers that are not a multiple of recordsize in length, by record buffering required by TarBuffer, and manages buffers
===
update-node
---
TextElement: including assembling records from small buffers. [10532,10580]
replace including assembling records from small buffers. by that are not a multiple of recordsize in length, including
===
insert-node
---
TextElement: assembling records from small buffers. [8925,8963]
to
TagElement [10148,10580]
at 6
===
update-node
---
SimpleName: buffer [10602,10608]
replace buffer by wBuf
===
update-node
---
SimpleName: offset [10659,10665]
replace offset by wOffset
===
update-node
---
SimpleName: count [10730,10735]
replace count by numToWrite
===
update-node
---
TextElement:  when an IO error causes operation to fail [10795,10837]
replace  when an IO error causes operation to fail by  on error
===
insert-tree
---
FieldAccess [2844,2855]
    ThisExpression [2844,2848]
    SimpleName: buffer [2849,2855]
to
Assignment [3589,3646]
at 0
===
insert-tree
---
FieldAccess [2936,2949]
    ThisExpression [2936,2940]
    SimpleName: assemLen [2941,2949]
to
Assignment [3656,3670]
at 0
===
insert-tree
---
FieldAccess [2963,2976]
    ThisExpression [2963,2967]
    SimpleName: assemBuf [2968,2976]
to
Assignment [3680,3715]
at 0
===
insert-tree
---
FieldAccess [3009,3023]
    ThisExpression [3009,3013]
    SimpleName: recordBuf [3014,3023]
to
Assignment [3725,3761]
at 0
===
insert-tree
---
FieldAccess [3056,3067]
    ThisExpression [3056,3060]
    SimpleName: oneBuf [3061,3067]
to
Assignment [3771,3795]
at 0
===
insert-tree
---
FieldAccess [3441,3458]
    ThisExpression [3441,3445]
    SimpleName: longFileMode [3446,3458]
to
Assignment [4541,4570]
at 0
===
move-tree
---
ExpressionStatement [5110,5119]
    MethodInvocation [5110,5118]
        SimpleName: finish [5110,5116]
to
Block [4581,4694]
at 0
===
move-tree
---
ExpressionStatement [5128,5145]
    MethodInvocation [5128,5144]
        METHOD_INVOCATION_RECEIVER [5128,5136]
            SimpleName: m_buffer [5128,5136]
        SimpleName: close [5137,5142]
to
Block [4581,4694]
at 1
===
insert-tree
---
ExpressionStatement [4645,4657]
    MethodInvocation [4645,4656]
        METHOD_INVOCATION_RECEIVER [4645,4648]
            SimpleName: out [4645,4648]
        SimpleName: close [4649,4654]
to
Block [4581,4694]
at 2
===
insert-tree
---
ExpressionStatement [4670,4684]
    Assignment [4670,4683]
        SimpleName: closed [4670,4676]
        ASSIGNMENT_OPERATOR: = [4677,4678]
        BooleanLiteral: true [4679,4683]
to
Block [4581,4694]
at 3
===
update-node
---
INFIX_EXPRESSION_OPERATOR: > [7451,7452]
replace > by >=
===
update-node
---
QualifiedName: TarArchiveEntry.NAMELEN [7453,7476]
replace TarArchiveEntry.NAMELEN by TarConstants.NAMELEN
===
update-node
---
SimpleName: m_currBytes [8513,8524]
replace m_currBytes by currBytes
===
update-node
---
SimpleName: m_assemLen [5709,5719]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_currSize [11111,11121]
replace m_currSize by currSize
===
insert-tree
---
ThrowStatement [9345,9596]
    ClassInstanceCreation [9351,9595]
        SimpleType [9355,9366]
            SimpleName: IOException [9355,9366]
        InfixExpression [9367,9594]
            StringLiteral: "request to write '" [9367,9387]
            INFIX_EXPRESSION_OPERATOR: + [9388,9389]
            SimpleName: numToWrite [9390,9400]
            StringLiteral: "' bytes exceeds size in header of '" [9437,9474]
            SimpleName: currSize [9511,9519]
            StringLiteral: "' bytes for entry '" [9522,9543]
            SimpleName: currName [9580,9588]
            StringLiteral: "'" [9591,9594]
to
Block [11132,11697]
at 0
===
update-node
---
SimpleName: m_assemLen [11711,11721]
replace m_assemLen by assemLen
===
update-node
---
QualifiedName: m_recordBuf.length [13638,13656]
replace m_recordBuf.length by recordBuf.length
===
update-node
---
SimpleName: output [3615,3621]
replace output by os
===
update-node
---
SimpleName: m_buffer [3994,4002]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_buffer [4762,4770]
replace m_buffer by buffer
===
insert-tree
---
IfStatement [6198,6477]
    InfixExpression [6202,6235]
        SimpleName: longFileMode [6202,6214]
        INFIX_EXPRESSION_OPERATOR: != [6215,6217]
        SimpleName: LONGFILE_TRUNCATE [6218,6235]
    Block [6237,6477]
        ThrowStatement [6255,6463]
            ClassInstanceCreation [6261,6462]
                SimpleType [6265,6281]
                    SimpleName: RuntimeException [6265,6281]
                InfixExpression [6282,6461]
                    StringLiteral: "file name '" [6282,6295]
                    INFIX_EXPRESSION_OPERATOR: + [6296,6297]
                    MethodInvocation [6298,6313]
                        METHOD_INVOCATION_RECEIVER [6298,6303]
                            SimpleName: entry [6298,6303]
                        SimpleName: getName [6304,6311]
                    StringLiteral: "' is too long ( > " [6361,6381]
                    QualifiedName: TarConstants.NAMELEN [6429,6449]
                    StringLiteral: " bytes)" [6452,6461]
to
IfStatement [7501,8400]
at 2
===
update-node
---
SimpleName: m_recordBuf [8444,8455]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: m_buffer [8467,8475]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_recordBuf [8489,8500]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: m_oneBuf [9671,9679]
replace m_oneBuf by oneBuf
===
update-node
---
SimpleName: data [9693,9697]
replace data by b
===
update-node
---
SimpleName: m_oneBuf [9715,9723]
replace m_oneBuf by oneBuf
===
update-node
---
SimpleName: buffer [10098,10104]
replace buffer by wBuf
===
update-node
---
QualifiedName: buffer.length [10109,10122]
replace buffer.length by wBuf.length
===
update-node
---
SimpleName: m_buffer [13727,13735]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_recordBuf [13749,13760]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: m_longFileMode [7505,7519]
replace m_longFileMode by longFileMode
===
update-node
---
SimpleName: m_currSize [8587,8597]
replace m_currSize by currSize
===
update-node
---
SimpleName: m_currSize [8648,8658]
replace m_currSize by currSize
===
move-tree
---
MethodInvocation [8666,8681]
    METHOD_INVOCATION_RECEIVER [8666,8671]
        SimpleName: entry [8666,8671]
    SimpleName: getSize [8672,8679]
to
Assignment [8648,8681]
at 2
===
update-node
---
QualifiedName: m_assemBuf.length [5777,5794]
replace m_assemBuf.length by assemBuf.length
===
update-node
---
SimpleName: m_currBytes [5929,5940]
replace m_currBytes by currBytes
===
update-node
---
SimpleName: m_assemLen [5944,5954]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_assemLen [5968,5978]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_currBytes [11082,11093]
replace m_currBytes by currBytes
===
update-node
---
QualifiedName: m_recordBuf.length [11785,11803]
replace m_recordBuf.length by recordBuf.length
===
insert-tree
---
VariableDeclarationStatement [10073,10112]
    PrimitiveType: int [10073,10076]
    VariableDeclarationFragment [10077,10111]
        SimpleName: aLen [10077,10081]
        InfixExpression [10084,10111]
            QualifiedName: recordBuf.length [10084,10100]
            INFIX_EXPRESSION_OPERATOR: - [10101,10102]
            SimpleName: assemLen [10103,10111]
to
Block [11818,12347]
at 0
===
update-node
---
QualifiedName: m_recordBuf.length [12880,12898]
replace m_recordBuf.length by recordBuf.length
===
update-node
---
QualifiedName: m_recordBuf.length [13198,13216]
replace m_recordBuf.length by recordBuf.length
===
update-node
---
SimpleName: m_currBytes [13231,13242]
replace m_currBytes by currBytes
===
update-node
---
SimpleName: position [13294,13302]
replace position by wOffset
===
update-node
---
SimpleName: m_buffer [5128,5136]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_assemLen [5761,5771]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_buffer [5880,5888]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_assemBuf [5902,5912]
replace m_assemBuf by assemBuf
===
move-tree
---
SimpleName: buffer [13155,13161]
to
METHOD_INVOCATION_RECEIVER [13133,13141]
at 0
===
update-node
---
SimpleName: position [13163,13171]
replace position by wBuf
===
insert-node
---
SimpleName: wOffset [11272,11279]
to
METHOD_INVOCATION_ARGUMENTS [13155,13171]
at 1
===
update-node
---
SimpleName: m_recordBuf [13686,13697]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: m_assemLen [11756,11766]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_currBytes [12193,12204]
replace m_currBytes by currBytes
===
update-node
---
QualifiedName: m_recordBuf.length [12208,12226]
replace m_recordBuf.length by recordBuf.length
===
update-node
---
SimpleName: position [12244,12252]
replace position by wOffset
===
update-node
---
SimpleName: length [12256,12262]
replace length by aLen
===
update-node
---
SimpleName: length [12294,12300]
replace length by aLen
===
update-node
---
SimpleName: m_assemLen [12318,12328]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: position [12520,12528]
replace position by wOffset
===
update-node
---
SimpleName: m_assemLen [12560,12570]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_assemLen [13056,13066]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: m_assemBuf [5832,5842]
replace m_assemBuf by assemBuf
===
update-node
---
SimpleName: m_assemBuf [11923,11933]
replace m_assemBuf by assemBuf
===
update-node
---
SimpleName: m_recordBuf [11938,11949]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: m_assemLen [11988,11998]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: buffer [12036,12042]
replace buffer by wBuf
===
update-node
---
SimpleName: position [12044,12052]
replace position by wOffset
===
update-node
---
SimpleName: m_recordBuf [12054,12065]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: m_assemLen [12101,12111]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: length [12113,12119]
replace length by aLen
===
update-node
---
SimpleName: m_buffer [12139,12147]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_recordBuf [12161,12172]
replace m_recordBuf by recordBuf
===
update-node
---
SimpleName: buffer [12413,12419]
replace buffer by wBuf
===
update-node
---
SimpleName: position [12421,12429]
replace position by wOffset
===
update-node
---
SimpleName: m_assemBuf [12431,12441]
replace m_assemBuf by assemBuf
===
update-node
---
SimpleName: m_assemLen [12443,12453]
replace m_assemLen by assemLen
===
update-node
---
SimpleName: buffer [12949,12955]
replace buffer by wBuf
===
update-node
---
SimpleName: position [12957,12965]
replace position by wOffset
===
update-node
---
SimpleName: m_assemBuf [12967,12977]
replace m_assemBuf by assemBuf
===
update-node
---
SimpleName: m_assemLen [12979,12989]
replace m_assemLen by assemLen
===
delete-tree
---
Javadoc [979,1169]
    TagElement [986,1165]
        TextElement: The TarOutputStream writes a UNIX tar archive as an OutputStream. Methods are [986,1063]
        TextElement: provided to put entries, and then write their contents by writing to this [1067,1140]
        TextElement: stream using write(). [1144,1165]
===
delete-tree
---
Javadoc [1236,1398]
    TagElement [1247,1390]
        TextElement: Flag to indicate that an error should be generated if [1247,1300]
        TextElement: an attempt is made to write an entry that exceeds the 100 char [1308,1370]
        TextElement: POSIX limit. [1378,1390]
===
delete-tree
---
Javadoc [1452,1616]
    TagElement [1463,1608]
        TextElement: Flag to indicate that entry name should be truncated if [1463,1518]
        TextElement: an attempt is made to write an entry that exceeds the 100 char [1526,1588]
        TextElement: POSIX limit. [1596,1608]
===
delete-tree
---
Javadoc [1673,1947]
    TagElement [1684,1939]
        TextElement: Flag to indicate that entry name should be formatted [1684,1736]
        TextElement: according to GNU tar extension if an attempt is made [1744,1796]
        TextElement: to write an entry that exceeds the 100 char POSIX [1804,1853]
        TextElement: limit. Note that this makes the jar unreadable by [1861,1910]
        TextElement: non-GNU tar commands. [1918,1939]
===
delete-tree
---
MethodDeclaration [2259,2675]
    Javadoc [2259,2524]
        TagElement [2270,2369]
            TextElement: Construct a TarOutputStream using specified input [2270,2319]
            TextElement: stream and default block and record sizes. [2327,2369]
        TagElement [2384,2435]
            SimpleName: output [2391,2397]
            TextElement:  stream to create TarOutputStream from [2397,2435]
        TagElement [2443,2475]
            MemberRef [2448,2475]
                SimpleName: TarBuffer [2448,2457]
                SimpleName: DEFAULT_BLOCKSIZE [2458,2475]
        TagElement [2483,2516]
            MemberRef [2488,2516]
                SimpleName: TarBuffer [2488,2497]
                SimpleName: DEFAULT_RECORDSIZE [2498,2516]
    Modifier: public [2529,2535]
    SimpleName: TarOutputStream [2536,2551]
    SingleVariableDeclaration [2553,2578]
        Modifier: final [2553,2558]
        SimpleType [2559,2571]
            SimpleName: OutputStream [2559,2571]
        SimpleName: output [2572,2578]
    Block [2585,2675]
        ConstructorInvocation [2595,2669]
            SimpleName: output [2601,2607]
            QualifiedName: TarBuffer.DEFAULT_BLOCKSIZE [2609,2636]
            QualifiedName: TarBuffer.DEFAULT_RECORDSIZE [2638,2666]
===
delete-tree
---
TagElement [2692,2793]
    TextElement: Construct a TarOutputStream using specified input [2692,2741]
    TextElement: stream, block size and default record sizes. [2749,2793]
===
delete-tree
---
TagElement [2808,2859]
    SimpleName: output [2815,2821]
    TextElement:  stream to create TarOutputStream from [2821,2859]
===
delete-tree
---
TagElement [2906,2939]
    MemberRef [2911,2939]
        SimpleName: TarBuffer [2911,2920]
        SimpleName: DEFAULT_RECORDSIZE [2921,2939]
===
delete-node
---
Javadoc [2681,2947]
===
===
delete-node
---
Modifier: final [2976,2981]
===
===
delete-node
---
Modifier: final [3031,3036]
===
===
delete-node
---
TextElement: stream, block size and record sizes. [3203,3239]
===
===
delete-node
---
Modifier: final [3422,3427]
===
===
delete-node
---
Modifier: final [3477,3482]
===
===
delete-node
---
Modifier: final [3526,3531]
===
===
delete-node
---
SimpleName: m_buffer [3589,3597]
===
===
delete-node
---
SimpleName: m_assemLen [3656,3666]
===
===
delete-node
---
SimpleName: m_assemBuf [3680,3690]
===
===
delete-node
---
SimpleName: m_recordBuf [3725,3736]
===
===
delete-node
---
SimpleName: m_oneBuf [3771,3779]
===
===
delete-tree
---
TagElement [4044,4193]
    TextElement: Set the mode used to work with entrys exceeding [4044,4091]
    TextElement: 100 chars (and thus break the POSIX standard). [4099,4145]
    TextElement: Must be one of the LONGFILE_* constants. [4153,4193]
===
delete-node
---
Javadoc [4033,4244]
===
===
delete-node
---
Modifier: final [4278,4283]
===
===
delete-tree
---
IfStatement [4317,4532]
    InfixExpression [4321,4444]
        InfixExpression [4321,4395]
            InfixExpression [4321,4351]
                SimpleName: LONGFILE_ERROR [4321,4335]
                INFIX_EXPRESSION_OPERATOR: != [4336,4338]
                SimpleName: longFileMode [4339,4351]
            INFIX_EXPRESSION_OPERATOR: && [4352,4354]
            InfixExpression [4367,4395]
                SimpleName: LONGFILE_GNU [4367,4379]
                INFIX_EXPRESSION_OPERATOR: != [4380,4382]
                SimpleName: longFileMode [4383,4395]
        INFIX_EXPRESSION_OPERATOR: && [4396,4398]
        InfixExpression [4411,4444]
            SimpleName: LONGFILE_TRUNCATE [4411,4428]
            INFIX_EXPRESSION_OPERATOR: != [4429,4431]
            SimpleName: longFileMode [4432,4444]
    Block [4455,4532]
        ThrowStatement [4469,4522]
            ClassInstanceCreation [4475,4521]
                SimpleType [4479,4503]
                    SimpleName: IllegalArgumentException [4479,4503]
                StringLiteral: "longFileMode" [4505,4519]
===
delete-node
---
SimpleName: m_longFileMode [4541,4555]
===
===
delete-tree
---
TagElement [4810,4957]
    TextElement: Ends the TAR archive and closes the underlying OutputStream. This means [4810,4881]
    TextElement: that finish() is called followed by calling the TarBuffer's close(). [4889,4957]
===
delete-node
---
Javadoc [4799,5044]
===
===
delete-tree
---
TagElement [6626,7162]
    TextElement: Put an entry on the output stream. This writes the entry's header record [6626,6698]
    TextElement: and positions the output stream for writing the contents of the entry. [6706,6776]
    TextElement: Once this method is called, the stream is ready for calls to write() to [6784,6855]
    TextElement: write the entry's contents. Once the contents are written, closeEntry() [6863,6934]
    TextElement: <B>MUST</B> be called to ensure that all buffered data is completely [6942,7010]
    TextElement: written to the output stream. [7018,7047]
    TextElement: The entry must be 0 terminated. Maximum filename is 99 chars,  [7062,7124]
    TextElement: according to V7 specification. [7132,7162]
===
delete-node
---
Javadoc [6615,7320]
===
===
delete-node
---
Modifier: final [7351,7356]
===
===
delete-node
---
Modifier: final [7692,7697]
===
===
delete-tree
---
IfStatement [8128,8400]
    InfixExpression [8132,8167]
        SimpleName: m_longFileMode [8132,8146]
        INFIX_EXPRESSION_OPERATOR: != [8147,8149]
        SimpleName: LONGFILE_TRUNCATE [8150,8167]
    Block [8182,8400]
        VariableDeclarationStatement [8200,8336]
            Modifier: final [8200,8205]
            SimpleType [8206,8212]
                SimpleName: String [8206,8212]
            VariableDeclarationFragment [8213,8335]
                SimpleName: message [8213,8220]
                InfixExpression [8223,8335]
                    StringLiteral: "file name '" [8223,8236]
                    INFIX_EXPRESSION_OPERATOR: + [8237,8238]
                    MethodInvocation [8239,8254]
                        METHOD_INVOCATION_RECEIVER [8239,8244]
                            SimpleName: entry [8239,8244]
                        SimpleName: getName [8245,8252]
                    StringLiteral: "' is too long ( > " [8277,8297]
                    QualifiedName: TarArchiveEntry.NAMELEN [8300,8323]
                    StringLiteral: " bytes)" [8326,8335]
        ThrowStatement [8353,8386]
            ClassInstanceCreation [8359,8385]
                SimpleType [8363,8374]
                    SimpleName: IOException [8363,8374]
                SimpleName: message [8376,8383]
===
delete-node
---
PrimitiveType: int [8662,8665]
===
===
delete-node
---
CastExpression [8661,8681]
===
===
delete-tree
---
TagElement [5168,5547]
    TextElement: Close an entry. This method MUST be called for all file entries that [5168,5236]
    TextElement: contain data. The reason is that we must buffer data written to the [5244,5311]
    TextElement: stream in order to satisfy the buffer's record based writes. Thus, there [5319,5391]
    TextElement: may be data fragments still being assembled that must be written to the [5399,5470]
    TextElement: output stream before this entry is closed and the next entry written. [5478,5547]
===
delete-node
---
Javadoc [5157,5634]
===
===
delete-tree
---
IfStatement [6003,6282]
    InfixExpression [6007,6031]
        SimpleName: m_currBytes [6007,6018]
        INFIX_EXPRESSION_OPERATOR: < [6019,6020]
        SimpleName: m_currSize [6021,6031]
    Block [6042,6282]
        VariableDeclarationStatement [6056,6226]
            Modifier: final [6056,6061]
            SimpleType [6062,6068]
                SimpleName: String [6062,6068]
            VariableDeclarationFragment [6069,6225]
                SimpleName: message [6069,6076]
                InfixExpression [6079,6225]
                    StringLiteral: "entry closed at '" [6079,6098]
                    INFIX_EXPRESSION_OPERATOR: + [6099,6100]
                    SimpleName: m_currBytes [6101,6112]
                    StringLiteral: "' before the '" [6131,6147]
                    SimpleName: m_currSize [6150,6160]
                    StringLiteral: "' bytes specified in the header were written" [6179,6225]
        ThrowStatement [6239,6272]
            ClassInstanceCreation [6245,6271]
                SimpleType [6249,6260]
                    SimpleName: IOException [6249,6260]
                SimpleName: message [6262,6269]
===
delete-tree
---
MethodDeclaration [8704,9343]
    Javadoc [8704,8951]
        TagElement [8715,8797]
            TextElement: Copies the contents of the specified stream into current tar [8715,8775]
            TextElement: archive entry. [8783,8797]
        TagElement [8812,8871]
            SimpleName: input [8819,8824]
            TextElement:  The InputStream from which to read entrys data [8824,8871]
        TagElement [8879,8943]
            SimpleName: IOException [8890,8901]
            TextElement:  when an IO error causes operation to fail [8901,8943]
    Modifier: public [8956,8962]
    PrimitiveType: void [8963,8967]
    SimpleName: copyEntryContents [8968,8985]
    SingleVariableDeclaration [8987,9010]
        Modifier: final [8987,8992]
        SimpleType [8993,9004]
            SimpleName: InputStream [8993,9004]
        SimpleName: input [9005,9010]
    SimpleType [9028,9039]
        SimpleName: IOException [9028,9039]
    Block [9044,9343]
        VariableDeclarationStatement [9054,9098]
            Modifier: final [9054,9059]
            ArrayType [9060,9066]
                PrimitiveType: byte [9060,9064]
                Dimension [9064,9066]
            VariableDeclarationFragment [9067,9097]
                SimpleName: buffer [9067,9073]
                ArrayCreation [9076,9097]
                    ArrayType [9080,9097]
                        PrimitiveType: byte [9080,9084]
                        Dimension [9084,9097]
                            InfixExpression [9086,9095]
                                NumberLiteral: 32 [9086,9088]
                                INFIX_EXPRESSION_OPERATOR: * [9089,9090]
                                NumberLiteral: 1024 [9091,9095]
        WhileStatement [9107,9337]
            BooleanLiteral: true [9114,9118]
            Block [9129,9337]
                VariableDeclarationStatement [9143,9202]
                    Modifier: final [9143,9148]
                    PrimitiveType: int [9149,9152]
                    VariableDeclarationFragment [9153,9201]
                        SimpleName: numRead [9153,9160]
                        MethodInvocation [9163,9201]
                            METHOD_INVOCATION_RECEIVER [9163,9168]
                                SimpleName: input [9163,9168]
                            SimpleName: read [9169,9173]
                            METHOD_INVOCATION_ARGUMENTS [9175,9199]
                                SimpleName: buffer [9175,9181]
                                NumberLiteral: 0 [9183,9184]
                                QualifiedName: buffer.length [9186,9199]
                IfStatement [9215,9285]
                    InfixExpression [9219,9232]
                        SimpleName: numRead [9219,9226]
                        INFIX_EXPRESSION_OPERATOR: == [9227,9229]
                        PrefixExpression [9230,9232]
                            PREFIX_EXPRESSION_OPERATOR: - [9230,9231]
                            NumberLiteral: 1 [9231,9232]
                    Block [9247,9285]
                        BreakStatement [9265,9271]
                ExpressionStatement [9299,9327]
                    MethodInvocation [9299,9326]
                        SimpleName: write [9299,9304]
                        METHOD_INVOCATION_ARGUMENTS [9306,9324]
                            SimpleName: buffer [9306,9312]
                            NumberLiteral: 0 [9314,9315]
                            SimpleName: numRead [9317,9324]
===
delete-node
---
Modifier: final [9613,9618]
===
===
delete-node
---
Modifier: final [10028,10033]
===
===
delete-node
---
Modifier: final [10869,10874]
===
===
delete-tree
---
SingleVariableDeclaration [10913,10929]
    Modifier: final [10913,10918]
    PrimitiveType: int [10919,10922]
    SimpleName: offset [10923,10929]
===
delete-tree
---
SingleVariableDeclaration [10954,10969]
    Modifier: final [10954,10959]
    PrimitiveType: int [10960,10963]
    SimpleName: count [10964,10969]
===
delete-tree
---
VariableDeclarationStatement [11013,11035]
    PrimitiveType: int [11013,11016]
    VariableDeclarationFragment [11017,11034]
        SimpleName: position [11017,11025]
        SimpleName: offset [11028,11034]
===
delete-tree
---
VariableDeclarationStatement [11044,11067]
    PrimitiveType: int [11044,11047]
    VariableDeclarationFragment [11048,11066]
        SimpleName: numToWrite [11048,11058]
        SimpleName: count [11061,11066]
===
delete-tree
---
VariableDeclarationStatement [11146,11284]
    Modifier: final [11146,11151]
    SimpleType [11152,11158]
        SimpleName: String [11152,11158]
    VariableDeclarationFragment [11159,11283]
        SimpleName: message [11159,11166]
        InfixExpression [11169,11283]
            StringLiteral: "request to write '" [11169,11189]
            INFIX_EXPRESSION_OPERATOR: + [11190,11191]
            SimpleName: numToWrite [11192,11202]
            StringLiteral: "' bytes exceeds size in header of '" [11221,11258]
            SimpleName: m_currSize [11261,11271]
            StringLiteral: "' bytes" [11274,11283]
===
delete-tree
---
ThrowStatement [11297,11330]
    ClassInstanceCreation [11303,11329]
        SimpleType [11307,11318]
            SimpleName: IOException [11307,11318]
        SimpleName: message [11320,11327]
===
delete-tree
---
VariableDeclarationStatement [11836,11887]
    Modifier: final [11836,11841]
    PrimitiveType: int [11842,11845]
    VariableDeclarationFragment [11846,11886]
        SimpleName: length [11846,11852]
        InfixExpression [11855,11886]
            QualifiedName: m_recordBuf.length [11855,11873]
            INFIX_EXPRESSION_OPERATOR: - [11874,11875]
            SimpleName: m_assemLen [11876,11886]
===
delete-node
---
SimpleName: m_buffer [13133,13141]
===
===
delete-tree
---
Javadoc [13332,13542]
    TagElement [13343,13455]
        TextElement: Write an EOF (end of archive) record to the tar archive. An EOF record [13343,13413]
        TextElement: consists of a record of all zeros. [13421,13455]
    TagElement [13470,13534]
        SimpleName: IOException [13481,13492]
        TextElement:  when an IO error causes operation to fail [13492,13534]
