===
move-tree
---
FieldDeclaration [1361,1387]
    Modifier: private [1361,1368]
    PrimitiveType: int [1369,1372]
    VariableDeclarationFragment [1373,1386]
        SimpleName: m_entryOffset [1373,1386]
to
TypeDeclaration [978,13770]
at 9
===
move-tree
---
FieldDeclaration [1259,1286]
    Modifier: private [1259,1266]
    SimpleType [1267,1276]
        SimpleName: TarBuffer [1267,1276]
    VariableDeclarationFragment [1277,1285]
        SimpleName: m_buffer [1277,1285]
to
TypeDeclaration [978,13770]
at 12
===
move-tree
---
FieldDeclaration [1291,1327]
    Modifier: private [1291,1298]
    SimpleType [1299,1314]
        SimpleName: TarArchiveEntry [1299,1314]
    VariableDeclarationFragment [1315,1326]
        SimpleName: m_currEntry [1315,1326]
to
TypeDeclaration [978,13770]
at 12
===
move-tree
---
FieldDeclaration [1454,1478]
    Modifier: private [1454,1461]
    ArrayType [1462,1468]
        PrimitiveType: byte [1462,1466]
        Dimension [1466,1468]
    VariableDeclarationFragment [1469,1477]
        SimpleName: m_oneBuf [1469,1477]
to
TypeDeclaration [978,13770]
at 12
===
move-tree
---
MethodDeclaration [7337,7581]
    Javadoc [7337,7492]
        TagElement [7348,7405]
            TextElement: Closes this stream. Calls the TarBuffer's close() method. [7348,7405]
        TagElement [7420,7484]
            SimpleName: IOException [7431,7442]
            TextElement:  when an IO error causes operation to fail [7442,7484]
    Modifier: public [7497,7503]
    PrimitiveType: void [7504,7508]
    SimpleName: close [7509,7514]
    SimpleType [7532,7543]
        SimpleName: IOException [7532,7543]
    Block [7548,7581]
        ExpressionStatement [7558,7575]
            MethodInvocation [7558,7574]
                METHOD_INVOCATION_RECEIVER [7558,7566]
                    SimpleName: m_buffer [7558,7566]
                SimpleName: close [7567,7572]
to
TypeDeclaration [978,13770]
at 17
===
move-tree
---
MethodDeclaration [8253,8428]
    Javadoc [8253,8378]
        TagElement [8264,8320]
            TextElement: Since we do not support marking just yet, we do nothing. [8264,8320]
        TagElement [8335,8370]
            SimpleName: markLimit [8342,8351]
            TextElement:  The limit to mark. [8351,8370]
    Modifier: public [8383,8389]
    PrimitiveType: void [8390,8394]
    SimpleName: mark [8395,8399]
    SingleVariableDeclaration [8401,8414]
        PrimitiveType: int [8401,8404]
        SimpleName: markLimit [8405,8414]
    Block [8421,8428]
to
TypeDeclaration [978,13770]
at 23
===
move-tree
---
MethodDeclaration [12360,12471]
    Javadoc [12360,12435]
        TagElement [12371,12427]
            TextElement: Since we do not support marking just yet, we do nothing. [12371,12427]
    Modifier: public [12440,12446]
    PrimitiveType: void [12447,12451]
    SimpleName: reset [12452,12457]
    Block [12464,12471]
to
TypeDeclaration [978,13770]
at 24
===
move-tree
---
MethodDeclaration [3161,6512]
    Javadoc [3161,3733]
        TagElement [3172,3605]
            TextElement: Get the next entry in this tar archive. This will skip over any remaining [3172,3245]
            TextElement: data in the current entry, if there is one, and place the input stream at [3253,3326]
            TextElement: the header of the next entry, and read the header and instantiate a new [3334,3405]
            TextElement: TarEntry from the header bytes and return that entry. If there are no [3413,3482]
            TextElement: more entries in the archive, null will be returned to indicate that the [3490,3561]
            TextElement: end of the archive has been reached. [3569,3605]
        TagElement [3620,3670]
            TextElement:  The next TarEntry in the archive, or null. [3627,3670]
        TagElement [3678,3725]
            SimpleName: IOException [3689,3700]
            TextElement:  Description of Exception [3700,3725]
    Modifier: public [3738,3744]
    SimpleType [3745,3760]
        SimpleName: TarArchiveEntry [3745,3760]
    SimpleName: getNextEntry [3761,3773]
    SimpleType [3791,3802]
        SimpleName: IOException [3791,3802]
    Block [3807,6512]
        IfStatement [3817,3879]
            SimpleName: m_hasHitEOF [3821,3832]
            Block [3843,3879]
                ReturnStatement [3857,3869]
                    NullLiteral [3864,3868]
        IfStatement [3889,4441]
            InfixExpression [3893,3912]
                SimpleName: m_currEntry [3893,3904]
                INFIX_EXPRESSION_OPERATOR: != [3905,3907]
                NullLiteral [3908,3912]
            Block [3923,4441]
                VariableDeclarationStatement [3937,3987]
                    Modifier: final [3937,3942]
                    PrimitiveType: int [3943,3946]
                    VariableDeclarationFragment [3947,3986]
                        SimpleName: numToSkip [3947,3956]
                        InfixExpression [3959,3986]
                            SimpleName: m_entrySize [3959,3970]
                            INFIX_EXPRESSION_OPERATOR: - [3971,3972]
                            SimpleName: m_entryOffset [3973,3986]
                IfStatement [4001,4304]
                    SimpleName: m_debug [4005,4012]
                    Block [4027,4304]
                        VariableDeclarationStatement [4045,4256]
                            Modifier: final [4045,4050]
                            SimpleType [4051,4057]
                                SimpleName: String [4051,4057]
                            VariableDeclarationFragment [4058,4255]
                                SimpleName: message [4058,4065]
                                InfixExpression [4068,4255]
                                    StringLiteral: "TarInputStream: SKIP currENTRY '" [4068,4102]
                                    INFIX_EXPRESSION_OPERATOR: + [4103,4104]
                                    MethodInvocation [4125,4146]
                                        METHOD_INVOCATION_RECEIVER [4125,4136]
                                            SimpleName: m_currEntry [4125,4136]
                                        SimpleName: getName [4137,4144]
                                    StringLiteral: "' SZ " [4149,4156]
                                    SimpleName: m_entrySize [4159,4170]
                                    StringLiteral: " OFF " [4193,4200]
                                    SimpleName: m_entryOffset [4203,4216]
                                    StringLiteral: "  skipping " [4219,4232]
                                    SimpleName: numToSkip [4235,4244]
                                    StringLiteral: " bytes" [4247,4255]
                        ExpressionStatement [4273,4290]
                            MethodInvocation [4273,4289]
                                SimpleName: debug [4273,4278]
                                METHOD_INVOCATION_ARGUMENTS [4280,4287]
                                    SimpleName: message [4280,4287]
                IfStatement [4318,4400]
                    InfixExpression [4322,4335]
                        SimpleName: numToSkip [4322,4331]
                        INFIX_EXPRESSION_OPERATOR: > [4332,4333]
                        NumberLiteral: 0 [4334,4335]
                    Block [4350,4400]
                        ExpressionStatement [4368,4386]
                            MethodInvocation [4368,4385]
                                SimpleName: skip [4368,4372]
                                METHOD_INVOCATION_ARGUMENTS [4374,4383]
                                    SimpleName: numToSkip [4374,4383]
                ExpressionStatement [4414,4431]
                    Assignment [4414,4430]
                        SimpleName: m_readBuf [4414,4423]
                        ASSIGNMENT_OPERATOR: = [4424,4425]
                        NullLiteral [4426,4430]
        VariableDeclarationStatement [4451,4498]
            Modifier: final [4451,4456]
            ArrayType [4457,4463]
                PrimitiveType: byte [4457,4461]
                Dimension [4461,4463]
            VariableDeclarationFragment [4464,4497]
                SimpleName: headerBuf [4464,4473]
                MethodInvocation [4476,4497]
                    METHOD_INVOCATION_RECEIVER [4476,4484]
                        SimpleName: m_buffer [4476,4484]
                    SimpleName: readRecord [4485,4495]
        IfStatement [4507,4884]
            InfixExpression [4511,4528]
                SimpleName: headerBuf [4511,4520]
                INFIX_EXPRESSION_OPERATOR: == [4521,4523]
                NullLiteral [4524,4528]
            Block [4539,4681]
                IfStatement [4553,4639]
                    SimpleName: m_debug [4557,4564]
                    Block [4579,4639]
                        ExpressionStatement [4597,4625]
                            MethodInvocation [4597,4624]
                                SimpleName: debug [4597,4602]
                                METHOD_INVOCATION_ARGUMENTS [4604,4622]
                                    StringLiteral: "READ NULL RECORD" [4604,4622]
                ExpressionStatement [4652,4671]
                    Assignment [4652,4670]
                        SimpleName: m_hasHitEOF [4652,4663]
                        ASSIGNMENT_OPERATOR: = [4664,4665]
                        BooleanLiteral: true [4666,4670]
            IfStatement [4695,4884]
                MethodInvocation [4699,4732]
                    METHOD_INVOCATION_RECEIVER [4699,4707]
                        SimpleName: m_buffer [4699,4707]
                    SimpleName: isEOFRecord [4708,4719]
                    METHOD_INVOCATION_ARGUMENTS [4721,4730]
                        SimpleName: headerBuf [4721,4730]
                Block [4743,4884]
                    IfStatement [4757,4842]
                        SimpleName: m_debug [4761,4768]
                        Block [4783,4842]
                            ExpressionStatement [4801,4828]
                                MethodInvocation [4801,4827]
                                    SimpleName: debug [4801,4806]
                                    METHOD_INVOCATION_ARGUMENTS [4808,4825]
                                        StringLiteral: "READ EOF RECORD" [4808,4825]
                    ExpressionStatement [4855,4874]
                        Assignment [4855,4873]
                            SimpleName: m_hasHitEOF [4855,4866]
                            ASSIGNMENT_OPERATOR: = [4867,4868]
                            BooleanLiteral: true [4869,4873]
        IfStatement [4894,5698]
            SimpleName: m_hasHitEOF [4898,4909]
            Block [4920,4963]
                ExpressionStatement [4934,4953]
                    Assignment [4934,4952]
                        SimpleName: m_currEntry [4934,4945]
                        ASSIGNMENT_OPERATOR: = [4946,4947]
                        NullLiteral [4948,4952]
            Block [4985,5698]
                ExpressionStatement [4999,5046]
                    Assignment [4999,5045]
                        SimpleName: m_currEntry [4999,5010]
                        ASSIGNMENT_OPERATOR: = [5011,5012]
                        ClassInstanceCreation [5013,5045]
                            SimpleType [5017,5032]
                                SimpleName: TarArchiveEntry [5017,5032]
                            SimpleName: headerBuf [5034,5043]
                IfStatement [5060,5297]
                    PrefixExpression [5064,5232]
                        PREFIX_EXPRESSION_OPERATOR: ! [5064,5065]
                        ParenthesizedExpression [5065,5232]
                            InfixExpression [5067,5230]
                                InfixExpression [5067,5187]
                                    InfixExpression [5067,5160]
                                        InfixExpression [5067,5117]
                                            InfixExpression [5067,5090]
                                                ArrayAccess [5067,5083]
                                                    SimpleName: headerBuf [5067,5076]
                                                    NumberLiteral: 257 [5078,5081]
                                                INFIX_EXPRESSION_OPERATOR: == [5084,5086]
                                                CharacterLiteral: 'u' [5087,5090]
                                            INFIX_EXPRESSION_OPERATOR: && [5091,5093]
                                            InfixExpression [5094,5117]
                                                ArrayAccess [5094,5110]
                                                    SimpleName: headerBuf [5094,5103]
                                                    NumberLiteral: 258 [5105,5108]
                                                INFIX_EXPRESSION_OPERATOR: == [5111,5113]
                                                CharacterLiteral: 's' [5114,5117]
                                        INFIX_EXPRESSION_OPERATOR: && [5118,5120]
                                        InfixExpression [5137,5160]
                                            ArrayAccess [5137,5153]
                                                SimpleName: headerBuf [5137,5146]
                                                NumberLiteral: 259 [5148,5151]
                                            INFIX_EXPRESSION_OPERATOR: == [5154,5156]
                                            CharacterLiteral: 't' [5157,5160]
                                    INFIX_EXPRESSION_OPERATOR: && [5161,5163]
                                    InfixExpression [5164,5187]
                                        ArrayAccess [5164,5180]
                                            SimpleName: headerBuf [5164,5173]
                                            NumberLiteral: 260 [5175,5178]
                                        INFIX_EXPRESSION_OPERATOR: == [5181,5183]
                                        CharacterLiteral: 'a' [5184,5187]
                                INFIX_EXPRESSION_OPERATOR: && [5188,5190]
                                InfixExpression [5207,5230]
                                    ArrayAccess [5207,5223]
                                        SimpleName: headerBuf [5207,5216]
                                        NumberLiteral: 261 [5218,5221]
                                    INFIX_EXPRESSION_OPERATOR: == [5224,5226]
                                    CharacterLiteral: 'r' [5227,5230]
                    Block [5247,5297]
                IfStatement [5311,5542]
                    SimpleName: m_debug [5315,5322]
                    Block [5337,5542]
                        VariableDeclarationStatement [5355,5494]
                            Modifier: final [5355,5360]
                            SimpleType [5361,5367]
                                SimpleName: String [5361,5367]
                            VariableDeclarationFragment [5368,5493]
                                SimpleName: message [5368,5375]
                                InfixExpression [5378,5493]
                                    StringLiteral: "TarInputStream: SET CURRENTRY '" [5378,5411]
                                    INFIX_EXPRESSION_OPERATOR: + [5412,5413]
                                    MethodInvocation [5434,5455]
                                        METHOD_INVOCATION_RECEIVER [5434,5445]
                                            SimpleName: m_currEntry [5434,5445]
                                        SimpleName: getName [5446,5453]
                                    StringLiteral: "' size = " [5458,5469]
                                    MethodInvocation [5472,5493]
                                        METHOD_INVOCATION_RECEIVER [5472,5483]
                                            SimpleName: m_currEntry [5472,5483]
                                        SimpleName: getSize [5484,5491]
                        ExpressionStatement [5511,5528]
                            MethodInvocation [5511,5527]
                                SimpleName: debug [5511,5516]
                                METHOD_INVOCATION_ARGUMENTS [5518,5525]
                                    SimpleName: message [5518,5525]
                ExpressionStatement [5556,5574]
                    Assignment [5556,5573]
                        SimpleName: m_entryOffset [5556,5569]
                        ASSIGNMENT_OPERATOR: = [5570,5571]
                        NumberLiteral: 0 [5572,5573]
                ExpressionStatement [5647,5688]
                    Assignment [5647,5687]
                        SimpleName: m_entrySize [5647,5658]
                        ASSIGNMENT_OPERATOR: = [5659,5660]
                        CastExpression [5661,5687]
                            PrimitiveType: int [5662,5665]
                            MethodInvocation [5666,5687]
                                METHOD_INVOCATION_RECEIVER [5666,5677]
                                    SimpleName: m_currEntry [5666,5677]
                                SimpleName: getSize [5678,5685]
        IfStatement [5708,6477]
            InfixExpression [5712,5767]
                InfixExpression [5712,5731]
                    NullLiteral [5712,5716]
                    INFIX_EXPRESSION_OPERATOR: != [5717,5719]
                    SimpleName: m_currEntry [5720,5731]
                INFIX_EXPRESSION_OPERATOR: && [5732,5734]
                MethodInvocation [5735,5767]
                    METHOD_INVOCATION_RECEIVER [5735,5746]
                        SimpleName: m_currEntry [5735,5746]
                    SimpleName: isGNULongNameEntry [5747,5765]
            Block [5778,6477]
                VariableDeclarationStatement [5824,5873]
                    Modifier: final [5824,5829]
                    SimpleType [5830,5842]
                        SimpleName: StringBuffer [5830,5842]
                    VariableDeclarationFragment [5843,5872]
                        SimpleName: longName [5843,5851]
                        ClassInstanceCreation [5854,5872]
                            SimpleType [5858,5870]
                                SimpleName: StringBuffer [5858,5870]
                VariableDeclarationStatement [5886,5924]
                    Modifier: final [5886,5891]
                    ArrayType [5892,5898]
                        PrimitiveType: byte [5892,5896]
                        Dimension [5896,5898]
                    VariableDeclarationFragment [5899,5923]
                        SimpleName: buffer [5899,5905]
                        ArrayCreation [5908,5923]
                            ArrayType [5912,5923]
                                PrimitiveType: byte [5912,5916]
                                Dimension [5916,5923]
                                    NumberLiteral: 256 [5918,5921]
                VariableDeclarationStatement [5937,5952]
                    PrimitiveType: int [5937,5940]
                    VariableDeclarationFragment [5941,5951]
                        SimpleName: length [5941,5947]
                        NumberLiteral: 0 [5950,5951]
                WhileStatement [5965,6142]
                    InfixExpression [5972,6004]
                        ParenthesizedExpression [5972,5999]
                            Assignment [5974,5997]
                                SimpleName: length [5974,5980]
                                ASSIGNMENT_OPERATOR: = [5981,5982]
                                MethodInvocation [5983,5997]
                                    SimpleName: read [5983,5987]
                                    METHOD_INVOCATION_ARGUMENTS [5989,5995]
                                        SimpleName: buffer [5989,5995]
                        INFIX_EXPRESSION_OPERATOR: >= [6000,6002]
                        NumberLiteral: 0 [6003,6004]
                    Block [6019,6142]
                        VariableDeclarationStatement [6037,6088]
                            Modifier: final [6037,6042]
                            SimpleType [6043,6049]
                                SimpleName: String [6043,6049]
                            VariableDeclarationFragment [6050,6087]
                                SimpleName: str [6050,6053]
                                ClassInstanceCreation [6056,6087]
                                    SimpleType [6060,6066]
                                        SimpleName: String [6060,6066]
                                    SimpleName: buffer [6068,6074]
                                    NumberLiteral: 0 [6076,6077]
                                    SimpleName: length [6079,6085]
                        ExpressionStatement [6105,6128]
                            MethodInvocation [6105,6127]
                                METHOD_INVOCATION_RECEIVER [6105,6113]
                                    SimpleName: longName [6105,6113]
                                SimpleName: append [6114,6120]
                                METHOD_INVOCATION_ARGUMENTS [6122,6125]
                                    SimpleName: str [6122,6125]
                ExpressionStatement [6155,6170]
                    MethodInvocation [6155,6169]
                        SimpleName: getNextEntry [6155,6167]
                IfStatement [6231,6398]
                    InfixExpression [6235,6319]
                        InfixExpression [6235,6256]
                            MethodInvocation [6235,6252]
                                METHOD_INVOCATION_RECEIVER [6235,6243]
                                    SimpleName: longName [6235,6243]
                                SimpleName: length [6244,6250]
                            INFIX_EXPRESSION_OPERATOR: > [6253,6254]
                            NumberLiteral: 0 [6255,6256]
                        INFIX_EXPRESSION_OPERATOR: && [6273,6275]
                        InfixExpression [6276,6319]
                            MethodInvocation [6276,6314]
                                METHOD_INVOCATION_RECEIVER [6276,6284]
                                    SimpleName: longName [6276,6284]
                                SimpleName: charAt [6285,6291]
                                METHOD_INVOCATION_ARGUMENTS [6292,6313]
                                    InfixExpression [6292,6313]
                                        MethodInvocation [6292,6309]
                                            METHOD_INVOCATION_RECEIVER [6292,6300]
                                                SimpleName: longName [6292,6300]
                                            SimpleName: length [6301,6307]
                                        INFIX_EXPRESSION_OPERATOR: - [6310,6311]
                                        NumberLiteral: 1 [6312,6313]
                            INFIX_EXPRESSION_OPERATOR: == [6315,6317]
                            NumberLiteral: 0 [6318,6319]
                    Block [6321,6398]
                        ExpressionStatement [6339,6384]
                            MethodInvocation [6339,6383]
                                METHOD_INVOCATION_RECEIVER [6339,6347]
                                    SimpleName: longName [6339,6347]
                                SimpleName: deleteCharAt [6348,6360]
                                METHOD_INVOCATION_ARGUMENTS [6361,6382]
                                    InfixExpression [6361,6382]
                                        MethodInvocation [6361,6378]
                                            METHOD_INVOCATION_RECEIVER [6361,6369]
                                                SimpleName: longName [6361,6369]
                                            SimpleName: length [6370,6376]
                                        INFIX_EXPRESSION_OPERATOR: - [6379,6380]
                                        NumberLiteral: 1 [6381,6382]
                ExpressionStatement [6424,6467]
                    MethodInvocation [6424,6466]
                        METHOD_INVOCATION_RECEIVER [6424,6435]
                            SimpleName: m_currEntry [6424,6435]
                        SimpleName: setName [6436,6443]
                        METHOD_INVOCATION_ARGUMENTS [6445,6464]
                            MethodInvocation [6445,6464]
                                METHOD_INVOCATION_RECEIVER [6445,6453]
                                    SimpleName: longName [6445,6453]
                                SimpleName: toString [6454,6462]
        ReturnStatement [6487,6506]
            SimpleName: m_currEntry [6494,6505]
to
TypeDeclaration [978,13770]
at 24
===
move-tree
---
MethodDeclaration [7587,8247]
    Javadoc [7587,7852]
        TagElement [7598,7689]
            TextElement: Copies the contents of the current tar archive entry directly into an [7598,7667]
            TextElement: output stream. [7675,7689]
        TagElement [7704,7772]
            SimpleName: output [7711,7717]
            TextElement:  The OutputStream into which to write the entry's data. [7717,7772]
        TagElement [7780,7844]
            SimpleName: IOException [7791,7802]
            TextElement:  when an IO error causes operation to fail [7802,7844]
    Modifier: public [7857,7863]
    PrimitiveType: void [7864,7868]
    SimpleName: copyEntryContents [7869,7886]
    SingleVariableDeclaration [7888,7913]
        Modifier: final [7888,7893]
        SimpleType [7894,7906]
            SimpleName: OutputStream [7894,7906]
        SimpleName: output [7907,7913]
    SimpleType [7931,7942]
        SimpleName: IOException [7931,7942]
    Block [7947,8247]
        VariableDeclarationStatement [7957,8001]
            Modifier: final [7957,7962]
            ArrayType [7963,7969]
                PrimitiveType: byte [7963,7967]
                Dimension [7967,7969]
            VariableDeclarationFragment [7970,8000]
                SimpleName: buffer [7970,7976]
                ArrayCreation [7979,8000]
                    ArrayType [7983,8000]
                        PrimitiveType: byte [7983,7987]
                        Dimension [7987,8000]
                            InfixExpression [7989,7998]
                                NumberLiteral: 32 [7989,7991]
                                INFIX_EXPRESSION_OPERATOR: * [7992,7993]
                                NumberLiteral: 1024 [7994,7998]
        WhileStatement [8010,8241]
            BooleanLiteral: true [8017,8021]
            Block [8032,8241]
                VariableDeclarationStatement [8046,8099]
                    Modifier: final [8046,8051]
                    PrimitiveType: int [8052,8055]
                    VariableDeclarationFragment [8056,8098]
                        SimpleName: numRead [8056,8063]
                        MethodInvocation [8066,8098]
                            SimpleName: read [8066,8070]
                            METHOD_INVOCATION_ARGUMENTS [8072,8096]
                                SimpleName: buffer [8072,8078]
                                NumberLiteral: 0 [8080,8081]
                                QualifiedName: buffer.length [8083,8096]
                IfStatement [8112,8182]
                    InfixExpression [8116,8129]
                        SimpleName: numRead [8116,8123]
                        INFIX_EXPRESSION_OPERATOR: == [8124,8126]
                        PrefixExpression [8127,8129]
                            PREFIX_EXPRESSION_OPERATOR: - [8127,8128]
                            NumberLiteral: 1 [8128,8129]
                    Block [8144,8182]
                        BreakStatement [8162,8168]
                ExpressionStatement [8196,8231]
                    MethodInvocation [8196,8230]
                        METHOD_INVOCATION_RECEIVER [8196,8202]
                            SimpleName: output [8196,8202]
                        SimpleName: write [8203,8208]
                        METHOD_INVOCATION_ARGUMENTS [8210,8228]
                            SimpleName: buffer [8210,8216]
                            NumberLiteral: 0 [8218,8219]
                            SimpleName: numRead [8221,8228]
to
TypeDeclaration [978,13770]
at 27
===
insert-tree
---
Javadoc [1144,1366]
    TagElement [1151,1359]
        TextElement: The TarInputStream reads a UNIX tar archive as an InputStream. [1151,1213]
        TextElement: methods are provided to position at each successive entry in [1217,1277]
        TextElement: the archive, and the read each entry as a normal input stream [1281,1342]
        TextElement: using read(). [1346,1359]
to
TypeDeclaration [978,13770]
at 0
===
insert-node
---
FieldDeclaration [1427,1476]
to
TypeDeclaration [978,13770]
at 6
===
insert-tree
---
FieldDeclaration [1481,1529]
    Modifier: private [1481,1488]
    Modifier: static [1489,1495]
    Modifier: final [1496,1501]
    PrimitiveType: int [1502,1505]
    VariableDeclarationFragment [1506,1528]
        SimpleName: BUFFER_SIZE [1506,1517]
        InfixExpression [1520,1528]
            NumberLiteral: 8 [1520,1521]
            INFIX_EXPRESSION_OPERATOR: * [1522,1523]
            NumberLiteral: 1024 [1524,1528]
to
TypeDeclaration [978,13770]
at 7
===
insert-tree
---
FieldDeclaration [1534,1589]
    Modifier: private [1534,1541]
    Modifier: static [1542,1548]
    Modifier: final [1549,1554]
    PrimitiveType: int [1555,1558]
    VariableDeclarationFragment [1559,1588]
        SimpleName: LARGE_BUFFER_SIZE [1559,1576]
        InfixExpression [1579,1588]
            NumberLiteral: 32 [1579,1581]
            INFIX_EXPRESSION_OPERATOR: * [1582,1583]
            NumberLiteral: 1024 [1584,1588]
to
TypeDeclaration [978,13770]
at 8
===
insert-tree
---
FieldDeclaration [1594,1636]
    Modifier: private [1594,1601]
    Modifier: static [1602,1608]
    Modifier: final [1609,1614]
    PrimitiveType: int [1615,1618]
    VariableDeclarationFragment [1619,1635]
        SimpleName: BYTE_MASK [1619,1628]
        NumberLiteral: 0xFF [1631,1635]
to
TypeDeclaration [978,13770]
at 9
===
insert-tree
---
FieldDeclaration [1717,1745]
    Modifier: protected [1717,1726]
    PrimitiveType: boolean [1727,1734]
    VariableDeclarationFragment [1735,1744]
        SimpleName: hasHitEOF [1735,1744]
to
TypeDeclaration [978,13770]
at 11
===
insert-tree
---
MethodDeclaration [2177,2390]
    Javadoc [2177,2268]
        TagElement [2188,2219]
            TextElement: Constructor for TarInputStream. [2188,2219]
        TagElement [2227,2260]
            SimpleName: is [2234,2236]
            TextElement:  the input stream to use [2236,2260]
    Modifier: public [2273,2279]
    SimpleName: TarInputStream [2280,2294]
    SingleVariableDeclaration [2295,2309]
        SimpleType [2295,2306]
            SimpleName: InputStream [2295,2306]
        SimpleName: is [2307,2309]
    Block [2311,2390]
        ConstructorInvocation [2321,2384]
            SimpleName: is [2326,2328]
            QualifiedName: TarBuffer.DEFAULT_BLKSIZE [2330,2355]
            QualifiedName: TarBuffer.DEFAULT_RCDSIZE [2357,2382]
to
TypeDeclaration [978,13770]
at 19
===
insert-tree
---
MethodDeclaration [4556,5538]
    Javadoc [4556,4938]
        TagElement [4567,4791]
            TextElement: Skip bytes in the input buffer. This skips bytes in the [4567,4622]
            TextElement: current entry's data, not the entire archive, and will [4630,4684]
            TextElement: stop at the end of the current entry's data if the number [4692,4749]
            TextElement: to skip extends beyond that point. [4757,4791]
        TagElement [4806,4851]
            SimpleName: numToSkip [4813,4822]
            TextElement:  The number of bytes to skip. [4822,4851]
        TagElement [4859,4894]
            TextElement:  the number actually skipped [4866,4894]
        TagElement [4902,4930]
            SimpleName: IOException [4910,4921]
            TextElement:  on error [4921,4930]
    Modifier: public [4943,4949]
    PrimitiveType: long [4950,4954]
    SimpleName: skip [4955,4959]
    SingleVariableDeclaration [4960,4974]
        PrimitiveType: long [4960,4964]
        SimpleName: numToSkip [4965,4974]
    SimpleType [4983,4994]
        SimpleName: IOException [4983,4994]
    Block [4995,5538]
        VariableDeclarationStatement [5155,5194]
            ArrayType [5155,5161]
                PrimitiveType: byte [5155,5159]
                Dimension [5159,5161]
            VariableDeclarationFragment [5162,5193]
                SimpleName: skipBuf [5162,5169]
                ArrayCreation [5172,5193]
                    ArrayType [5176,5193]
                        PrimitiveType: byte [5176,5180]
                        Dimension [5180,5193]
                            SimpleName: BUFFER_SIZE [5181,5192]
        VariableDeclarationStatement [5203,5225]
            PrimitiveType: long [5203,5207]
            VariableDeclarationFragment [5208,5224]
                SimpleName: skip [5208,5212]
                SimpleName: numToSkip [5215,5224]
        WhileStatement [5234,5497]
            InfixExpression [5241,5249]
                SimpleName: skip [5241,5245]
                INFIX_EXPRESSION_OPERATOR: > [5246,5247]
                NumberLiteral: 0 [5248,5249]
            Block [5251,5497]
                VariableDeclarationStatement [5265,5334]
                    PrimitiveType: int [5265,5268]
                    VariableDeclarationFragment [5269,5333]
                        SimpleName: realSkip [5269,5277]
                        CastExpression [5280,5333]
                            PrimitiveType: int [5281,5284]
                            ParenthesizedExpression [5286,5333]
                                ConditionalExpression [5287,5332]
                                    InfixExpression [5287,5308]
                                        SimpleName: skip [5287,5291]
                                        INFIX_EXPRESSION_OPERATOR: > [5292,5293]
                                        QualifiedName: skipBuf.length [5294,5308]
                                    QualifiedName: skipBuf.length [5311,5325]
                                    SimpleName: skip [5328,5332]
                VariableDeclarationStatement [5347,5388]
                    PrimitiveType: int [5347,5350]
                    VariableDeclarationFragment [5351,5387]
                        SimpleName: numRead [5351,5358]
                        MethodInvocation [5361,5387]
                            SimpleName: read [5361,5365]
                            METHOD_INVOCATION_ARGUMENTS [5366,5386]
                                SimpleName: skipBuf [5366,5373]
                                NumberLiteral: 0 [5375,5376]
                                SimpleName: realSkip [5378,5386]
                IfStatement [5401,5458]
                    InfixExpression [5405,5418]
                        SimpleName: numRead [5405,5412]
                        INFIX_EXPRESSION_OPERATOR: == [5413,5415]
                        PrefixExpression [5416,5418]
                            PREFIX_EXPRESSION_OPERATOR: - [5416,5417]
                            NumberLiteral: 1 [5417,5418]
                    Block [5420,5458]
                        BreakStatement [5438,5444]
                ExpressionStatement [5471,5487]
                    Assignment [5471,5486]
                        SimpleName: skip [5471,5475]
                        ASSIGNMENT_OPERATOR: -= [5476,5478]
                        SimpleName: numRead [5479,5486]
        ReturnStatement [5506,5532]
            ParenthesizedExpression [5513,5531]
                InfixExpression [5514,5530]
                    SimpleName: numToSkip [5514,5523]
                    INFIX_EXPRESSION_OPERATOR: - [5524,5525]
                    SimpleName: skip [5526,5530]
to
TypeDeclaration [978,13770]
at 27
===
insert-node
---
Modifier: private [1427,1434]
to
FieldDeclaration [1427,1476]
at 0
===
insert-node
---
Modifier: static [1435,1441]
to
FieldDeclaration [1427,1476]
at 1
===
insert-node
---
Modifier: final [1442,1447]
to
FieldDeclaration [1427,1476]
at 2
===
insert-node
---
PrimitiveType: int [1448,1451]
to
FieldDeclaration [1427,1476]
at 3
===
insert-node
---
VariableDeclarationFragment [1452,1475]
to
FieldDeclaration [1427,1476]
at 4
===
update-node
---
Modifier: private [1332,1339]
replace private by protected
===
update-node
---
Modifier: private [1392,1399]
replace private by protected
===
update-node
---
PrimitiveType: int [1400,1403]
replace int by long
===
update-node
---
Modifier: private [1361,1368]
replace private by protected
===
update-node
---
PrimitiveType: int [1369,1372]
replace int by long
===
update-node
---
Modifier: private [1483,1490]
replace private by protected
===
update-node
---
Modifier: private [1259,1266]
replace private by protected
===
update-node
---
Modifier: private [1291,1298]
replace private by protected
===
insert-tree
---
Javadoc [1916,2101]
    TagElement [1927,2093]
        TextElement: This contents of this array is not used at all in this class, [1927,1988]
        TextElement: it is only here to avoid repreated object creation during calls [1996,2059]
        TextElement: to the no-arg read method. [2067,2093]
to
FieldDeclaration [1454,1478]
at 0
===
update-node
---
Modifier: private [1454,1461]
replace private by protected
===
insert-node
---
Javadoc [2396,2533]
to
MethodDeclaration [1929,2376]
at 0
===
insert-node
---
Javadoc [3754,4341]
to
MethodDeclaration [6734,7331]
at 0
===
insert-node
---
Javadoc [6009,6576]
to
MethodDeclaration [3161,6512]
at 0
===
insert-node
---
SimpleName: SMALL_BUFFER_SIZE [1452,1469]
to
VariableDeclarationFragment [1452,1475]
at 0
===
move-tree
---
NumberLiteral: 256 [5918,5921]
to
VariableDeclarationFragment [1452,1475]
at 1
===
update-node
---
SimpleName: m_debug [1348,1355]
replace m_debug by debug
===
update-node
---
SimpleName: m_entrySize [1404,1415]
replace m_entrySize by entrySize
===
update-node
---
SimpleName: m_entryOffset [1373,1386]
replace m_entryOffset by entryOffset
===
update-node
---
SimpleName: m_readBuf [1498,1507]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: m_buffer [1277,1285]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_currEntry [1315,1326]
replace m_currEntry by currEntry
===
update-node
---
SimpleName: m_oneBuf [1469,1477]
replace m_oneBuf by oneBuf
===
insert-tree
---
TagElement [2407,2438]
    TextElement: Constructor for TarInputStream. [2407,2438]
to
Javadoc [2396,2533]
at 0
===
insert-tree
---
TagElement [2446,2479]
    SimpleName: is [2453,2455]
    TextElement:  the input stream to use [2455,2479]
to
Javadoc [2396,2533]
at 1
===
move-tree
---
TagElement [2112,2150]
    SimpleName: blockSize [2119,2128]
    TextElement:  the block size to use [2128,2150]
to
Javadoc [2396,2533]
at 2
===
update-node
---
SimpleName: input [2245,2250]
replace input by is
===
update-node
---
SimpleName: input [2697,2702]
replace input by is
===
insert-tree
---
ExpressionStatement [3013,3033]
    Assignment [3013,3032]
        FieldAccess [3013,3025]
            ThisExpression [3013,3017]
            SimpleName: readBuf [3018,3025]
        ASSIGNMENT_OPERATOR: = [3026,3027]
        NullLiteral [3028,3032]
to
Block [2806,2938]
at 2
===
insert-tree
---
ExpressionStatement [3077,3096]
    Assignment [3077,3095]
        FieldAccess [3077,3087]
            ThisExpression [3077,3081]
            SimpleName: debug [3082,3087]
        ASSIGNMENT_OPERATOR: = [3088,3089]
        BooleanLiteral: false [3090,3095]
to
Block [2806,2938]
at 4
===
insert-tree
---
ExpressionStatement [3105,3128]
    Assignment [3105,3127]
        FieldAccess [3105,3119]
            ThisExpression [3105,3109]
            SimpleName: hasHitEOF [3110,3119]
        ASSIGNMENT_OPERATOR: = [3120,3121]
        BooleanLiteral: false [3122,3127]
to
Block [2806,2938]
at 5
===
insert-tree
---
TagElement [3765,4217]
    TextElement: Get the available data that can be read from the current [3765,3821]
    TextElement: entry in the archive. This does not indicate how much data [3829,3887]
    TextElement: is left in the entire archive, only in the current entry. [3895,3952]
    TextElement: This value is determined from the entry's size header field [3960,4019]
    TextElement: and the amount of data already read from the current entry. [4027,4086]
    TextElement: Integer.MAX_VALUE is returen in case more than Integer.MAX_VALUE [4094,4158]
    TextElement: bytes are left in the current entry in the archive. [4166,4217]
to
Javadoc [3754,4341]
at 0
===
move-tree
---
TagElement [7081,7141]
    TextElement:  The number of available bytes for the current entry. [7088,7141]
to
Javadoc [3754,4341]
at 1
===
move-tree
---
TagElement [7149,7213]
    SimpleName: IOException [7160,7171]
    TextElement:  when an IO error causes operation to fail [7171,7213]
to
Javadoc [3754,4341]
at 2
===
insert-tree
---
IfStatement [4398,4496]
    InfixExpression [4402,4445]
        InfixExpression [4402,4425]
            SimpleName: entrySize [4402,4411]
            INFIX_EXPRESSION_OPERATOR: - [4412,4413]
            SimpleName: entryOffset [4414,4425]
        INFIX_EXPRESSION_OPERATOR: > [4426,4427]
        QualifiedName: Integer.MAX_VALUE [4428,4445]
    Block [4447,4496]
        ReturnStatement [4461,4486]
            QualifiedName: Integer.MAX_VALUE [4468,4485]
to
Block [7280,7331]
at 0
===
insert-tree
---
ReturnStatement [4505,4544]
    CastExpression [4512,4543]
        PrimitiveType: int [4513,4516]
        ParenthesizedExpression [4518,4543]
            InfixExpression [4519,4542]
                SimpleName: entrySize [4519,4528]
                INFIX_EXPRESSION_OPERATOR: - [4529,4530]
                SimpleName: entryOffset [4531,4542]
to
Block [7280,7331]
at 1
===
insert-tree
---
TagElement [6020,6467]
    TextElement: Get the next entry in this tar archive. This will skip [6020,6074]
    TextElement: over any remaining data in the current entry, if there [6082,6136]
    TextElement: is one, and place the input stream at the header of the [6144,6199]
    TextElement: next entry, and read the header and instantiate a new [6207,6260]
    TextElement: TarEntry from the header bytes and return that entry. [6268,6321]
    TextElement: If there are no more entries in the archive, null will [6329,6383]
    TextElement: be returned to indicate that the end of the archive has [6391,6446]
    TextElement: been reached. [6454,6467]
to
Javadoc [6009,6576]
at 0
===
move-tree
---
TagElement [3620,3670]
    TextElement:  The next TarEntry in the archive, or null. [3627,3670]
to
Javadoc [6009,6576]
at 1
===
move-tree
---
TagElement [3678,3725]
    SimpleName: IOException [3689,3700]
    TextElement:  Description of Exception [3700,3725]
to
Javadoc [6009,6576]
at 2
===
move-tree
---
IfStatement [4001,4304]
    SimpleName: m_debug [4005,4012]
    Block [4027,4304]
        VariableDeclarationStatement [4045,4256]
            Modifier: final [4045,4050]
            SimpleType [4051,4057]
                SimpleName: String [4051,4057]
            VariableDeclarationFragment [4058,4255]
                SimpleName: message [4058,4065]
                InfixExpression [4068,4255]
                    StringLiteral: "TarInputStream: SKIP currENTRY '" [4068,4102]
                    INFIX_EXPRESSION_OPERATOR: + [4103,4104]
                    MethodInvocation [4125,4146]
                        METHOD_INVOCATION_RECEIVER [4125,4136]
                            SimpleName: m_currEntry [4125,4136]
                        SimpleName: getName [4137,4144]
                    StringLiteral: "' SZ " [4149,4156]
                    SimpleName: m_entrySize [4159,4170]
                    StringLiteral: " OFF " [4193,4200]
                    SimpleName: m_entryOffset [4203,4216]
                    StringLiteral: "  skipping " [4219,4232]
                    SimpleName: numToSkip [4235,4244]
                    StringLiteral: " bytes" [4247,4255]
        ExpressionStatement [4273,4290]
            MethodInvocation [4273,4289]
                SimpleName: debug [4273,4278]
                METHOD_INVOCATION_ARGUMENTS [4280,4287]
                    SimpleName: message [4280,4287]
to
Block [3807,6512]
at 4
===
insert-tree
---
ReturnStatement [8953,8970]
    SimpleName: currEntry [8960,8969]
to
Block [3807,6512]
at 7
===
insert-tree
---
ReturnStatement [9291,9345]
    ConditionalExpression [9298,9344]
        InfixExpression [9298,9307]
            SimpleName: num [9298,9301]
            INFIX_EXPRESSION_OPERATOR: == [9302,9304]
            PrefixExpression [9305,9307]
                PREFIX_EXPRESSION_OPERATOR: - [9305,9306]
                NumberLiteral: 1 [9306,9307]
        PrefixExpression [9310,9312]
            PREFIX_EXPRESSION_OPERATOR: - [9310,9311]
            NumberLiteral: 1 [9311,9312]
        InfixExpression [9315,9344]
            ParenthesizedExpression [9315,9332]
                CastExpression [9316,9331]
                    PrimitiveType: int [9317,9320]
                    ArrayAccess [9322,9331]
                        SimpleName: oneBuf [9322,9328]
                        NumberLiteral: 0 [9329,9330]
            INFIX_EXPRESSION_OPERATOR: & [9333,9334]
            SimpleName: BYTE_MASK [9335,9344]
to
Block [8917,9119]
at 1
===
update-node
---
SimpleName: buffer [10152,10158]
replace buffer by buf
===
update-node
---
SimpleName: count [10230,10235]
replace count by numToRead
===
insert-tree
---
IfStatement [10060,10171]
    InfixExpression [10064,10101]
        ParenthesizedExpression [10064,10089]
            InfixExpression [10065,10088]
                SimpleName: numToRead [10065,10074]
                INFIX_EXPRESSION_OPERATOR: + [10075,10076]
                SimpleName: entryOffset [10077,10088]
        INFIX_EXPRESSION_OPERATOR: > [10090,10091]
        SimpleName: entrySize [10092,10101]
    Block [10103,10171]
        ExpressionStatement [10117,10161]
            Assignment [10117,10160]
                SimpleName: numToRead [10117,10126]
                ASSIGNMENT_OPERATOR: = [10127,10128]
                CastExpression [10129,10160]
                    PrimitiveType: int [10130,10133]
                    ParenthesizedExpression [10135,10160]
                        InfixExpression [10136,10159]
                            SimpleName: entrySize [10136,10145]
                            INFIX_EXPRESSION_OPERATOR: - [10146,10147]
                            SimpleName: entryOffset [10148,10159]
to
Block [10269,12354]
at 4
===
insert-node
---
IfStatement [10181,10768]
to
Block [10269,12354]
at 5
===
update-node
---
SimpleName: output [7907,7913]
replace output by out
===
update-node
---
SimpleName: input [2321,2326]
replace input by is
===
update-node
---
QualifiedName: TarBuffer.DEFAULT_RECORDSIZE [2339,2367]
replace TarBuffer.DEFAULT_RECORDSIZE by TarBuffer.DEFAULT_RCDSIZE
===
update-node
---
TextElement: Construct a TarInputStream using specified input [2393,2441]
replace Construct a TarInputStream using specified input by Constructor for TarInputStream.
===
update-node
---
SimpleName: input [2507,2512]
replace input by is
===
update-node
---
TextElement:  stream to create TarInputStream from [2512,2549]
replace  stream to create TarInputStream from by  the input stream to use
===
update-node
---
SimpleName: input [2823,2828]
replace input by is
===
update-node
---
TextElement:  The new Debug value [3006,3026]
replace  The new Debug value by  True to turn on debugging.
===
update-node
---
TextElement:  when an IO error causes operation to fail [7442,7484]
replace  when an IO error causes operation to fail by  on error
===
update-node
---
TextElement:  when an IO error causes operation to fail [7171,7213]
replace  when an IO error causes operation to fail by  for signature
===
update-node
---
TextElement:  Description of Exception [3700,3725]
replace  Description of Exception by  on error
===
update-node
---
SimpleName: m_hasHitEOF [3821,3832]
replace m_hasHitEOF by hasHitEOF
===
update-node
---
SimpleName: m_debug [4005,4012]
replace m_debug by hasHitEOF
===
move-tree
---
Block [4920,4963]
    ExpressionStatement [4934,4953]
        Assignment [4934,4952]
            SimpleName: m_currEntry [4934,4945]
            ASSIGNMENT_OPERATOR: = [4946,4947]
            NullLiteral [4948,4952]
to
IfStatement [4001,4304]
at 1
===
update-node
---
TextElement: Reads a byte from the current tar archive entry. This method simply calls [8626,8699]
replace Reads a byte from the current tar archive entry. This method simply calls by Reads a byte from the current tar archive entry.
===
update-node
---
TextElement: read( byte[], int, int ). [8707,8732]
replace read( byte[], int, int ). by This method simply calls read( byte[], int, int ).
===
update-node
---
TextElement:  when an IO error causes operation to fail [8813,8855]
replace  when an IO error causes operation to fail by  on error
===
update-node
---
TextElement: Reads bytes from the current tar archive entry. This method is aware of [9595,9666]
replace Reads bytes from the current tar archive entry. This method is aware of by Reads bytes from the current tar archive entry.
===
update-node
---
TextElement: the boundaries of the current entry in the archive and will deal with [9674,9743]
replace the boundaries of the current entry in the archive and will deal with by This method is aware of the boundaries of the current
===
update-node
---
TextElement: them as if they were this stream's start and EOF. [9751,9800]
replace them as if they were this stream's start and EOF. by entry in the archive and will deal with them as if they
===
insert-node
---
TextElement: were this stream's start and EOF. [9554,9587]
to
TagElement [9595,9800]
at 3
===
update-node
---
SimpleName: buffer [9822,9828]
replace buffer by buf
===
update-node
---
SimpleName: count [9948,9953]
replace count by numToRead
===
update-node
---
TextElement:  when an IO error causes operation to fail [10067,10109]
replace  when an IO error causes operation to fail by  on error
===
insert-tree
---
InfixExpression [10185,10200]
    SimpleName: readBuf [10185,10192]
    INFIX_EXPRESSION_OPERATOR: != [10193,10195]
    NullLiteral [10196,10200]
to
IfStatement [10181,10768]
at 0
===
move-tree
---
Block [10624,11306]
    VariableDeclarationStatement [10638,10735]
        Modifier: final [10638,10643]
        PrimitiveType: int [10644,10647]
        VariableDeclarationFragment [10648,10734]
            SimpleName: size [10648,10652]
            ConditionalExpression [10671,10734]
                ParenthesizedExpression [10671,10703]
                    InfixExpression [10673,10701]
                        SimpleName: numToRead [10673,10682]
                        INFIX_EXPRESSION_OPERATOR: > [10683,10684]
                        QualifiedName: m_readBuf.length [10685,10701]
                QualifiedName: m_readBuf.length [10706,10722]
                SimpleName: numToRead [10725,10734]
    ExpressionStatement [10749,10806]
        MethodInvocation [10749,10805]
            METHOD_INVOCATION_RECEIVER [10749,10755]
                SimpleName: System [10749,10755]
            SimpleName: arraycopy [10756,10765]
            METHOD_INVOCATION_ARGUMENTS [10767,10803]
                SimpleName: m_readBuf [10767,10776]
                NumberLiteral: 0 [10778,10779]
                SimpleName: buffer [10781,10787]
                SimpleName: position [10789,10797]
                SimpleName: size [10799,10803]
    IfStatement [10820,11203]
        InfixExpression [10824,10848]
            SimpleName: size [10824,10828]
            INFIX_EXPRESSION_OPERATOR: >= [10829,10831]
            QualifiedName: m_readBuf.length [10832,10848]
        Block [10863,10912]
            ExpressionStatement [10881,10898]
                Assignment [10881,10897]
                    SimpleName: m_readBuf [10881,10890]
                    ASSIGNMENT_OPERATOR: = [10891,10892]
                    NullLiteral [10893,10897]
        Block [10942,11203]
            VariableDeclarationStatement [10960,11006]
                Modifier: final [10960,10965]
                PrimitiveType: int [10966,10969]
                VariableDeclarationFragment [10970,11005]
                    SimpleName: newLength [10970,10979]
                    InfixExpression [10982,11005]
                        QualifiedName: m_readBuf.length [10982,10998]
                        INFIX_EXPRESSION_OPERATOR: - [10999,11000]
                        SimpleName: size [11001,11005]
            VariableDeclarationStatement [11023,11070]
                Modifier: final [11023,11028]
                ArrayType [11029,11035]
                    PrimitiveType: byte [11029,11033]
                    Dimension [11033,11035]
                VariableDeclarationFragment [11036,11069]
                    SimpleName: newBuffer [11036,11045]
                    ArrayCreation [11048,11069]
                        ArrayType [11052,11069]
                            PrimitiveType: byte [11052,11056]
                            Dimension [11056,11069]
                                SimpleName: newLength [11058,11067]
            ExpressionStatement [11088,11149]
                MethodInvocation [11088,11148]
                    METHOD_INVOCATION_RECEIVER [11088,11094]
                        SimpleName: System [11088,11094]
                    SimpleName: arraycopy [11095,11104]
                    METHOD_INVOCATION_ARGUMENTS [11106,11146]
                        SimpleName: m_readBuf [11106,11115]
                        SimpleName: size [11117,11121]
                        SimpleName: newBuffer [11123,11132]
                        NumberLiteral: 0 [11134,11135]
                        SimpleName: newLength [11137,11146]
            ExpressionStatement [11167,11189]
                Assignment [11167,11188]
                    SimpleName: m_readBuf [11167,11176]
                    ASSIGNMENT_OPERATOR: = [11177,11178]
                    SimpleName: newBuffer [11179,11188]
    ExpressionStatement [11217,11235]
        Assignment [11217,11234]
            SimpleName: totalRead [11217,11226]
            ASSIGNMENT_OPERATOR: += [11227,11229]
            SimpleName: size [11230,11234]
    ExpressionStatement [11248,11266]
        Assignment [11248,11265]
            SimpleName: numToRead [11248,11257]
            ASSIGNMENT_OPERATOR: -= [11258,11260]
            SimpleName: size [11261,11265]
    ExpressionStatement [11279,11296]
        Assignment [11279,11295]
            SimpleName: position [11279,11287]
            ASSIGNMENT_OPERATOR: += [11288,11290]
            SimpleName: size [11291,11295]
to
IfStatement [10181,10768]
at 1
===
update-node
---
TextElement: Copies the contents of the current tar archive entry directly into an [7598,7667]
replace Copies the contents of the current tar archive entry directly into an by Copies the contents of the current tar archive entry directly into
===
update-node
---
TextElement: output stream. [7675,7689]
replace output stream. by an output stream.
===
update-node
---
SimpleName: output [7711,7717]
replace output by out
===
update-node
---
TextElement:  when an IO error causes operation to fail [7802,7844]
replace  when an IO error causes operation to fail by  on error
===
insert-tree
---
FieldAccess [2949,2960]
    ThisExpression [2949,2953]
    SimpleName: buffer [2954,2960]
to
Assignment [2841,2897]
at 0
===
insert-tree
---
FieldAccess [3042,3053]
    ThisExpression [3042,3046]
    SimpleName: oneBuf [3047,3053]
to
Assignment [2907,2931]
at 0
===
insert-tree
---
FieldAccess [3288,3298]
    ThisExpression [3288,3292]
    SimpleName: debug [3293,3298]
to
Assignment [3097,3112]
at 0
===
update-node
---
SimpleName: m_currEntry [3893,3904]
replace m_currEntry by currEntry
===
move-tree
---
ExpressionStatement [4999,5046]
    Assignment [4999,5045]
        SimpleName: m_currEntry [4999,5010]
        ASSIGNMENT_OPERATOR: = [5011,5012]
        ClassInstanceCreation [5013,5045]
            SimpleType [5017,5032]
                SimpleName: TarArchiveEntry [5017,5032]
            SimpleName: headerBuf [5034,5043]
to
Block [4027,4304]
at 0
===
move-tree
---
ExpressionStatement [5556,5574]
    Assignment [5556,5573]
        SimpleName: m_entryOffset [5556,5569]
        ASSIGNMENT_OPERATOR: = [5570,5571]
        NumberLiteral: 0 [5572,5573]
to
Block [4027,4304]
at 1
===
insert-tree
---
ExpressionStatement [8030,8062]
    Assignment [8030,8061]
        SimpleName: entrySize [8030,8039]
        ASSIGNMENT_OPERATOR: = [8040,8041]
        MethodInvocation [8042,8061]
            METHOD_INVOCATION_RECEIVER [8042,8051]
                SimpleName: currEntry [8042,8051]
            SimpleName: getSize [8052,8059]
to
Block [4027,4304]
at 2
===
move-tree
---
INFIX_EXPRESSION_OPERATOR: != [5717,5719]
to
InfixExpression [5712,5731]
at 2
===
move-tree
---
NullLiteral [5712,5716]
to
InfixExpression [5712,5731]
at 2
===
insert-node
---
IfStatement [8474,8654]
to
Block [5778,6477]
at 5
===
update-node
---
SimpleName: m_entryOffset [10373,10386]
replace m_entryOffset by entryOffset
===
update-node
---
SimpleName: m_entrySize [10390,10401]
replace m_entrySize by entrySize
===
move-tree
---
VariableDeclarationStatement [11672,11693]
    PrimitiveType: int [11672,11675]
    VariableDeclarationFragment [11676,11692]
        SimpleName: size [11676,11680]
        SimpleName: numToRead [11683,11692]
to
Block [10624,11306]
at 0
===
insert-node
---
IfStatement [10377,10673]
to
Block [10624,11306]
at 3
===
move-tree
---
VariableDeclarationStatement [10310,10332]
    PrimitiveType: int [10310,10313]
    VariableDeclarationFragment [10314,10331]
        SimpleName: numToRead [10314,10323]
        SimpleName: count [10326,10331]
to
Block [11347,12284]
at 2
===
update-node
---
SimpleName: m_entryOffset [12294,12307]
replace m_entryOffset by entryOffset
===
update-node
---
SimpleName: buffer [7970,7976]
replace buffer by buf
===
update-node
---
SimpleName: input [2867,2872]
replace input by is
===
update-node
---
SimpleName: m_buffer [3122,3130]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_buffer [7558,7566]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_buffer [6697,6705]
replace m_buffer by buffer
===
update-node
---
PrimitiveType: int [3943,3946]
replace int by long
===
move-tree
---
Block [5247,5297]
to
root
at 0
===
update-node
---
SimpleName: m_currEntry [5720,5731]
replace m_currEntry by currEntry
===
insert-tree
---
InfixExpression [8478,8495]
    SimpleName: currEntry [8478,8487]
    INFIX_EXPRESSION_OPERATOR: == [8488,8490]
    NullLiteral [8491,8495]
to
IfStatement [8474,8654]
at 0
===
insert-node
---
Block [8497,8654]
to
IfStatement [8474,8654]
at 1
===
insert-tree
---
InfixExpression [10381,10401]
    SimpleName: sz [10381,10383]
    INFIX_EXPRESSION_OPERATOR: >= [10384,10386]
    QualifiedName: readBuf.length [10387,10401]
to
IfStatement [10377,10673]
at 0
===
move-tree
---
Block [10863,10912]
    ExpressionStatement [10881,10898]
        Assignment [10881,10897]
            SimpleName: m_readBuf [10881,10890]
            ASSIGNMENT_OPERATOR: = [10891,10892]
            NullLiteral [10893,10897]
to
IfStatement [10377,10673]
at 1
===
move-tree
---
Block [10942,11203]
    VariableDeclarationStatement [10960,11006]
        Modifier: final [10960,10965]
        PrimitiveType: int [10966,10969]
        VariableDeclarationFragment [10970,11005]
            SimpleName: newLength [10970,10979]
            InfixExpression [10982,11005]
                QualifiedName: m_readBuf.length [10982,10998]
                INFIX_EXPRESSION_OPERATOR: - [10999,11000]
                SimpleName: size [11001,11005]
    VariableDeclarationStatement [11023,11070]
        Modifier: final [11023,11028]
        ArrayType [11029,11035]
            PrimitiveType: byte [11029,11033]
            Dimension [11033,11035]
        VariableDeclarationFragment [11036,11069]
            SimpleName: newBuffer [11036,11045]
            ArrayCreation [11048,11069]
                ArrayType [11052,11069]
                    PrimitiveType: byte [11052,11056]
                    Dimension [11056,11069]
                        SimpleName: newLength [11058,11067]
    ExpressionStatement [11088,11149]
        MethodInvocation [11088,11148]
            METHOD_INVOCATION_RECEIVER [11088,11094]
                SimpleName: System [11088,11094]
            SimpleName: arraycopy [11095,11104]
            METHOD_INVOCATION_ARGUMENTS [11106,11146]
                SimpleName: m_readBuf [11106,11115]
                SimpleName: size [11117,11121]
                SimpleName: newBuffer [11123,11132]
                NumberLiteral: 0 [11134,11135]
                SimpleName: newLength [11137,11146]
    ExpressionStatement [11167,11189]
        Assignment [11167,11188]
            SimpleName: m_readBuf [11167,11176]
            ASSIGNMENT_OPERATOR: = [11177,11178]
            SimpleName: newBuffer [11179,11188]
to
IfStatement [10377,10673]
at 2
===
move-tree
---
INFIX_EXPRESSION_OPERATOR: == [11424,11426]
to
InfixExpression [11419,11430]
at 2
===
move-tree
---
NullLiteral [11419,11423]
to
InfixExpression [11419,11430]
at 2
===
move-tree
---
SimpleName: numToRead [10314,10323]
to
VariableDeclarationFragment [10314,10331]
at 1
===
insert-tree
---
ExpressionStatement [6830,7088]
    MethodInvocation [6830,7087]
        METHOD_INVOCATION_RECEIVER [6830,6840]
            QualifiedName: System.err [6830,6840]
        SimpleName: println [6841,6848]
        METHOD_INVOCATION_ARGUMENTS [6849,7086]
            InfixExpression [6849,7086]
                StringLiteral: "TarInputStream: SKIP currENTRY '" [6849,6883]
                INFIX_EXPRESSION_OPERATOR: + [6908,6909]
                MethodInvocation [6910,6929]
                    METHOD_INVOCATION_RECEIVER [6910,6919]
                        SimpleName: currEntry [6910,6919]
                    SimpleName: getName [6920,6927]
                StringLiteral: "' SZ " [6932,6939]
                SimpleName: entrySize [6966,6975]
                StringLiteral: " OFF " [6978,6985]
                SimpleName: entryOffset [7012,7023]
                StringLiteral: "  skipping " [7026,7039]
                SimpleName: numToSkip [7066,7075]
                StringLiteral: " bytes" [7078,7086]
to
Block [5247,5297]
at 0
===
update-node
---
SimpleName: m_readBuf [4414,4423]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: m_buffer [4476,4484]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_hasHitEOF [4652,4663]
replace m_hasHitEOF by hasHitEOF
===
update-node
---
SimpleName: m_buffer [4699,4707]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_currEntry [4934,4945]
replace m_currEntry by currEntry
===
update-node
---
SimpleName: m_currEntry [4999,5010]
replace m_currEntry by currEntry
===
insert-tree
---
ExpressionStatement [7788,7972]
    MethodInvocation [7788,7971]
        METHOD_INVOCATION_RECEIVER [7788,7798]
            QualifiedName: System.err [7788,7798]
        SimpleName: println [7799,7806]
        METHOD_INVOCATION_ARGUMENTS [7807,7970]
            InfixExpression [7807,7970]
                StringLiteral: "TarInputStream: SET CURRENTRY '" [7807,7840]
                INFIX_EXPRESSION_OPERATOR: + [7865,7866]
                MethodInvocation [7867,7886]
                    METHOD_INVOCATION_RECEIVER [7867,7876]
                        SimpleName: currEntry [7867,7876]
                    SimpleName: getName [7877,7884]
                StringLiteral: "' size = " [7913,7924]
                MethodInvocation [7951,7970]
                    METHOD_INVOCATION_RECEIVER [7951,7960]
                        SimpleName: currEntry [7951,7960]
                    SimpleName: getSize [7961,7968]
to
root
at 0
===
update-node
---
SimpleName: m_entryOffset [5556,5569]
replace m_entryOffset by entryOffset
===
update-node
---
SimpleName: m_currEntry [5735,5746]
replace m_currEntry by currEntry
===
update-node
---
SimpleName: buffer [5899,5905]
replace buffer by buf
===
move-tree
---
ReturnStatement [6487,6506]
    SimpleName: m_currEntry [6494,6505]
to
Block [8497,8654]
at 0
===
update-node
---
SimpleName: m_oneBuf [8949,8957]
replace m_oneBuf by oneBuf
===
update-node
---
SimpleName: size [11676,11680]
replace size by sz
===
insert-node
---
ConditionalExpression [10225,10302]
to
VariableDeclarationFragment [11676,11692]
at 1
===
insert-tree
---
VariableDeclarationStatement [10474,10507]
    PrimitiveType: int [10474,10477]
    VariableDeclarationFragment [10478,10506]
        SimpleName: newLen [10478,10484]
        InfixExpression [10487,10506]
            QualifiedName: readBuf.length [10487,10501]
            INFIX_EXPRESSION_OPERATOR: - [10502,10503]
            SimpleName: sz [10504,10506]
to
Block [10942,11203]
at 0
===
update-node
---
SimpleName: size [11230,11234]
replace size by sz
===
update-node
---
SimpleName: size [11261,11265]
replace size by sz
===
update-node
---
SimpleName: size [11291,11295]
replace size by sz
===
insert-tree
---
ThrowStatement [10931,11031]
    ClassInstanceCreation [10937,11030]
        SimpleType [10941,10952]
            SimpleName: IOException [10941,10952]
        InfixExpression [10953,11029]
            StringLiteral: "unexpected EOF with " [10953,10975]
            INFIX_EXPRESSION_OPERATOR: + [10976,10977]
            SimpleName: numToRead [10978,10987]
            StringLiteral: " bytes unread" [11014,11029]
to
Block [11445,11658]
at 0
===
update-node
---
SimpleName: count [10326,10331]
replace count by sz
===
update-node
---
SimpleName: recordLength [11716,11728]
replace recordLength by recLen
===
update-node
---
SimpleName: recordLength [11760,11772]
replace recordLength by recLen
===
update-node
---
SimpleName: size [11775,11779]
replace size by sz
===
update-node
---
SimpleName: size [12208,12212]
replace size by sz
===
update-node
---
SimpleName: size [12239,12243]
replace size by sz
===
update-node
---
SimpleName: size [12269,12273]
replace size by sz
===
update-node
---
SimpleName: m_entrySize [3959,3970]
replace m_entrySize by entrySize
===
update-node
---
SimpleName: m_entryOffset [3973,3986]
replace m_entryOffset by entryOffset
===
update-node
---
SimpleName: m_hasHitEOF [4855,4866]
replace m_hasHitEOF by hasHitEOF
===
insert-node
---
NullLiteral [8635,8639]
to
ReturnStatement [6487,6506]
at 0
===
update-node
---
SimpleName: m_currEntry [6424,6435]
replace m_currEntry by currEntry
===
insert-tree
---
ParenthesizedExpression [10225,10253]
    InfixExpression [10226,10252]
        SimpleName: numToRead [10226,10235]
        INFIX_EXPRESSION_OPERATOR: > [10236,10237]
        QualifiedName: readBuf.length [10238,10252]
to
ConditionalExpression [10225,10302]
at 0
===
insert-node
---
QualifiedName: readBuf.length [10256,10270]
to
ConditionalExpression [10225,10302]
at 1
===
move-tree
---
SimpleName: numToRead [11683,11692]
to
ConditionalExpression [10225,10302]
at 2
===
update-node
---
SimpleName: m_readBuf [10767,10776]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: buffer [10781,10787]
replace buffer by buf
===
update-node
---
SimpleName: size [10799,10803]
replace size by sz
===
insert-node
---
SimpleName: LARGE_BUFFER_SIZE [11952,11969]
to
Dimension [7987,8000]
at 0
===
update-node
---
SimpleName: output [8196,8202]
replace output by out
===
update-node
---
SimpleName: buffer [8210,8216]
replace buffer by buf
===
update-node
---
SimpleName: m_readBuf [10881,10890]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: newBuffer [11036,11045]
replace newBuffer by newBuf
===
update-node
---
SimpleName: m_readBuf [11167,11176]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: newBuffer [11179,11188]
replace newBuffer by newBuf
===
update-node
---
SimpleName: m_buffer [11380,11388]
replace m_buffer by buffer
===
update-node
---
SimpleName: m_readBuf [11881,11890]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: size [12070,12074]
replace size by sz
===
update-node
---
SimpleName: recordLength [12077,12089]
replace recordLength by recLen
===
update-node
---
SimpleName: buffer [8072,8078]
replace buffer by buf
===
update-node
---
QualifiedName: buffer.length [8083,8096]
replace buffer.length by buf.length
===
insert-node
---
StringLiteral: "READ NULL RECORD" [7366,7384]
to
root
at 0
===
insert-node
---
SimpleName: SMALL_BUFFER_SIZE [8263,8280]
to
Dimension [5916,5923]
at 0
===
move-tree
---
ClassInstanceCreation [6056,6087]
    SimpleType [6060,6066]
        SimpleName: String [6060,6066]
    SimpleName: buffer [6068,6074]
    NumberLiteral: 0 [6076,6077]
    SimpleName: length [6079,6085]
to
METHOD_INVOCATION_ARGUMENTS [6122,6125]
at 0
===
update-node
---
SimpleName: m_readBuf [11106,11115]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: size [11117,11121]
replace size by sz
===
update-node
---
SimpleName: newBuffer [11123,11132]
replace newBuffer by newBuf
===
update-node
---
SimpleName: newLength [11137,11146]
replace newLength by newLen
===
update-node
---
SimpleName: buffer [11838,11844]
replace buffer by buf
===
update-node
---
SimpleName: size [11856,11860]
replace size by sz
===
update-node
---
SimpleName: size [11966,11970]
replace size by sz
===
update-node
---
SimpleName: m_readBuf [11972,11981]
replace m_readBuf by readBuf
===
update-node
---
SimpleName: buffer [12134,12140]
replace buffer by buf
===
update-node
---
SimpleName: recordLength [12152,12164]
replace recordLength by recLen
===
insert-node
---
StringLiteral: "READ EOF RECORD" [7543,7560]
to
root
at 0
===
update-node
---
SimpleName: buffer [5989,5995]
replace buffer by buf
===
update-node
---
SimpleName: buffer [6068,6074]
replace buffer by buf
===
update-node
---
SimpleName: recordLength [11986,11998]
replace recordLength by recLen
===
update-node
---
SimpleName: size [12001,12005]
replace size by sz
===
update-node
---
SimpleName: newLength [11058,11067]
replace newLength by newLen
===
update-node
---
SimpleName: recordLength [11903,11915]
replace recordLength by recLen
===
update-node
---
SimpleName: size [11918,11922]
replace size by sz
===
delete-tree
---
Javadoc [978,1194]
    TagElement [985,1190]
        TextElement: The TarInputStream reads a UNIX tar archive as an InputStream. methods are [985,1059]
        TextElement: provided to position at each successive entry in the archive, and the read [1063,1137]
        TextElement: each entry as a normal input stream using read(). [1141,1190]
===
delete-tree
---
FieldDeclaration [1421,1449]
    Modifier: private [1421,1428]
    PrimitiveType: boolean [1429,1436]
    VariableDeclarationFragment [1437,1448]
        SimpleName: m_hasHitEOF [1437,1448]
===
delete-tree
---
MethodDeclaration [1514,1923]
    Javadoc [1514,1776]
        TagElement [1525,1623]
            TextElement: Construct a TarInputStream using specified input [1525,1573]
            TextElement: stream and default block and record sizes. [1581,1623]
        TagElement [1638,1687]
            SimpleName: input [1645,1650]
            TextElement:  stream to create TarInputStream from [1650,1687]
        TagElement [1695,1727]
            MemberRef [1700,1727]
                SimpleName: TarBuffer [1700,1709]
                SimpleName: DEFAULT_BLOCKSIZE [1710,1727]
        TagElement [1735,1768]
            MemberRef [1740,1768]
                SimpleName: TarBuffer [1740,1749]
                SimpleName: DEFAULT_RECORDSIZE [1750,1768]
    Modifier: public [1781,1787]
    SimpleName: TarInputStream [1788,1802]
    SingleVariableDeclaration [1804,1827]
        Modifier: final [1804,1809]
        SimpleType [1810,1821]
            SimpleName: InputStream [1810,1821]
        SimpleName: input [1822,1827]
    Block [1834,1923]
        ConstructorInvocation [1844,1917]
            SimpleName: input [1850,1855]
            QualifiedName: TarBuffer.DEFAULT_BLOCKSIZE [1857,1884]
            QualifiedName: TarBuffer.DEFAULT_RECORDSIZE [1886,1914]
===
delete-tree
---
TagElement [1940,2040]
    TextElement: Construct a TarInputStream using specified input [1940,1988]
    TextElement: stream, block size and default record sizes. [1996,2040]
===
delete-tree
---
TagElement [2055,2104]
    SimpleName: input [2062,2067]
    TextElement:  stream to create TarInputStream from [2067,2104]
===
delete-tree
---
TagElement [2158,2191]
    MemberRef [2163,2191]
        SimpleName: TarBuffer [2163,2172]
        SimpleName: DEFAULT_RECORDSIZE [2173,2191]
===
delete-node
---
Javadoc [1929,2199]
===
===
delete-node
---
Modifier: final [2227,2232]
===
===
delete-node
---
Modifier: final [2279,2284]
===
===
delete-node
---
TextElement: stream, block size and record sizes. [2449,2485]
===
===
delete-node
---
Modifier: final [2679,2684]
===
===
delete-node
---
Modifier: final [2731,2736]
===
===
delete-node
---
Modifier: final [2779,2784]
===
===
delete-node
---
SimpleName: m_buffer [2841,2849]
===
===
delete-node
---
SimpleName: m_oneBuf [2907,2915]
===
===
delete-node
---
Modifier: final [3061,3066]
===
===
delete-node
---
SimpleName: m_debug [3097,3104]
===
===
delete-tree
---
TagElement [6745,7066]
    TextElement: Get the available data that can be read from the current entry in the [6745,6814]
    TextElement: archive. This does not indicate how much data is left in the entire [6822,6889]
    TextElement: archive, only in the current entry. This value is determined from the [6897,6966]
    TextElement: entry's size header field and the amount of data already read from the [6974,7044]
    TextElement: current entry. [7052,7066]
===
delete-node
---
Javadoc [6734,7221]
===
===
delete-tree
---
ReturnStatement [7290,7325]
    InfixExpression [7297,7324]
        SimpleName: m_entrySize [7297,7308]
        INFIX_EXPRESSION_OPERATOR: - [7309,7310]
        SimpleName: m_entryOffset [7311,7324]
===
delete-tree
---
TagElement [3172,3605]
    TextElement: Get the next entry in this tar archive. This will skip over any remaining [3172,3245]
    TextElement: data in the current entry, if there is one, and place the input stream at [3253,3326]
    TextElement: the header of the next entry, and read the header and instantiate a new [3334,3405]
    TextElement: TarEntry from the header bytes and return that entry. If there are no [3413,3482]
    TextElement: more entries in the archive, null will be returned to indicate that the [3490,3561]
    TextElement: end of the archive has been reached. [3569,3605]
===
delete-node
---
Javadoc [3161,3733]
===
===
delete-node
---
Modifier: final [3937,3942]
===
===
delete-node
---
Modifier: final [4451,4456]
===
===
delete-tree
---
IfStatement [4553,4639]
    SimpleName: m_debug [4557,4564]
    Block [4579,4639]
        ExpressionStatement [4597,4625]
            MethodInvocation [4597,4624]
                SimpleName: debug [4597,4602]
                METHOD_INVOCATION_ARGUMENTS [4604,4622]
                    StringLiteral: "READ NULL RECORD" [4604,4622]
===
delete-tree
---
IfStatement [4757,4842]
    SimpleName: m_debug [4761,4768]
    Block [4783,4842]
        ExpressionStatement [4801,4828]
            MethodInvocation [4801,4827]
                SimpleName: debug [4801,4806]
                METHOD_INVOCATION_ARGUMENTS [4808,4825]
                    StringLiteral: "READ EOF RECORD" [4808,4825]
===
delete-tree
---
VariableDeclarationStatement [4045,4256]
    Modifier: final [4045,4050]
    SimpleType [4051,4057]
        SimpleName: String [4051,4057]
    VariableDeclarationFragment [4058,4255]
        SimpleName: message [4058,4065]
        InfixExpression [4068,4255]
            StringLiteral: "TarInputStream: SKIP currENTRY '" [4068,4102]
            INFIX_EXPRESSION_OPERATOR: + [4103,4104]
            MethodInvocation [4125,4146]
                METHOD_INVOCATION_RECEIVER [4125,4136]
                    SimpleName: m_currEntry [4125,4136]
                SimpleName: getName [4137,4144]
            StringLiteral: "' SZ " [4149,4156]
            SimpleName: m_entrySize [4159,4170]
            StringLiteral: " OFF " [4193,4200]
            SimpleName: m_entryOffset [4203,4216]
            StringLiteral: "  skipping " [4219,4232]
            SimpleName: numToSkip [4235,4244]
            StringLiteral: " bytes" [4247,4255]
===
delete-tree
---
ExpressionStatement [4273,4290]
    MethodInvocation [4273,4289]
        SimpleName: debug [4273,4278]
        METHOD_INVOCATION_ARGUMENTS [4280,4287]
            SimpleName: message [4280,4287]
===
delete-node
---
SimpleName: m_hasHitEOF [4898,4909]
===
===
delete-tree
---
PrefixExpression [5064,5232]
    PREFIX_EXPRESSION_OPERATOR: ! [5064,5065]
    ParenthesizedExpression [5065,5232]
        InfixExpression [5067,5230]
            InfixExpression [5067,5187]
                InfixExpression [5067,5160]
                    InfixExpression [5067,5117]
                        InfixExpression [5067,5090]
                            ArrayAccess [5067,5083]
                                SimpleName: headerBuf [5067,5076]
                                NumberLiteral: 257 [5078,5081]
                            INFIX_EXPRESSION_OPERATOR: == [5084,5086]
                            CharacterLiteral: 'u' [5087,5090]
                        INFIX_EXPRESSION_OPERATOR: && [5091,5093]
                        InfixExpression [5094,5117]
                            ArrayAccess [5094,5110]
                                SimpleName: headerBuf [5094,5103]
                                NumberLiteral: 258 [5105,5108]
                            INFIX_EXPRESSION_OPERATOR: == [5111,5113]
                            CharacterLiteral: 's' [5114,5117]
                    INFIX_EXPRESSION_OPERATOR: && [5118,5120]
                    InfixExpression [5137,5160]
                        ArrayAccess [5137,5153]
                            SimpleName: headerBuf [5137,5146]
                            NumberLiteral: 259 [5148,5151]
                        INFIX_EXPRESSION_OPERATOR: == [5154,5156]
                        CharacterLiteral: 't' [5157,5160]
                INFIX_EXPRESSION_OPERATOR: && [5161,5163]
                InfixExpression [5164,5187]
                    ArrayAccess [5164,5180]
                        SimpleName: headerBuf [5164,5173]
                        NumberLiteral: 260 [5175,5178]
                    INFIX_EXPRESSION_OPERATOR: == [5181,5183]
                    CharacterLiteral: 'a' [5184,5187]
            INFIX_EXPRESSION_OPERATOR: && [5188,5190]
            InfixExpression [5207,5230]
                ArrayAccess [5207,5223]
                    SimpleName: headerBuf [5207,5216]
                    NumberLiteral: 261 [5218,5221]
                INFIX_EXPRESSION_OPERATOR: == [5224,5226]
                CharacterLiteral: 'r' [5227,5230]
===
delete-node
---
IfStatement [5060,5297]
===
===
delete-tree
---
IfStatement [5311,5542]
    SimpleName: m_debug [5315,5322]
    Block [5337,5542]
        VariableDeclarationStatement [5355,5494]
            Modifier: final [5355,5360]
            SimpleType [5361,5367]
                SimpleName: String [5361,5367]
            VariableDeclarationFragment [5368,5493]
                SimpleName: message [5368,5375]
                InfixExpression [5378,5493]
                    StringLiteral: "TarInputStream: SET CURRENTRY '" [5378,5411]
                    INFIX_EXPRESSION_OPERATOR: + [5412,5413]
                    MethodInvocation [5434,5455]
                        METHOD_INVOCATION_RECEIVER [5434,5445]
                            SimpleName: m_currEntry [5434,5445]
                        SimpleName: getName [5446,5453]
                    StringLiteral: "' size = " [5458,5469]
                    MethodInvocation [5472,5493]
                        METHOD_INVOCATION_RECEIVER [5472,5483]
                            SimpleName: m_currEntry [5472,5483]
                        SimpleName: getSize [5484,5491]
        ExpressionStatement [5511,5528]
            MethodInvocation [5511,5527]
                SimpleName: debug [5511,5516]
                METHOD_INVOCATION_ARGUMENTS [5518,5525]
                    SimpleName: message [5518,5525]
===
delete-tree
---
ExpressionStatement [5647,5688]
    Assignment [5647,5687]
        SimpleName: m_entrySize [5647,5658]
        ASSIGNMENT_OPERATOR: = [5659,5660]
        CastExpression [5661,5687]
            PrimitiveType: int [5662,5665]
            MethodInvocation [5666,5687]
                METHOD_INVOCATION_RECEIVER [5666,5677]
                    SimpleName: m_currEntry [5666,5677]
                SimpleName: getSize [5678,5685]
===
delete-node
---
Block [4985,5698]
===
===
delete-node
---
IfStatement [4894,5698]
===
===
delete-node
---
Modifier: final [5824,5829]
===
===
delete-node
---
Modifier: final [5886,5891]
===
===
delete-node
---
Modifier: final [6037,6042]
===
===
delete-tree
---
SimpleType [6043,6049]
    SimpleName: String [6043,6049]
===
delete-node
---
SimpleName: str [6050,6053]
===
===
delete-node
---
VariableDeclarationFragment [6050,6087]
===
===
delete-node
---
VariableDeclarationStatement [6037,6088]
===
===
delete-node
---
SimpleName: str [6122,6125]
===
===
delete-node
---
SimpleName: m_currEntry [6494,6505]
===
===
delete-node
---
Modifier: final [8927,8932]
===
===
delete-tree
---
IfStatement [8975,9113]
    InfixExpression [8979,8988]
        SimpleName: num [8979,8982]
        INFIX_EXPRESSION_OPERATOR: == [8983,8985]
        PrefixExpression [8986,8988]
            PREFIX_EXPRESSION_OPERATOR: - [8986,8987]
            NumberLiteral: 1 [8987,8988]
    Block [8999,9034]
        ReturnStatement [9013,9024]
            SimpleName: num [9020,9023]
    Block [9056,9113]
        ReturnStatement [9070,9103]
            InfixExpression [9077,9102]
                CastExpression [9077,9095]
                    PrimitiveType: int [9078,9081]
                    ArrayAccess [9082,9095]
                        SimpleName: m_oneBuf [9082,9090]
                        NumberLiteral: 0 [9092,9093]
                INFIX_EXPRESSION_OPERATOR: & [9096,9097]
                NumberLiteral: 0xFF [9098,9102]
===
delete-tree
---
MethodDeclaration [9125,9578]
    Javadoc [9125,9447]
        TagElement [9136,9241]
            TextElement: Reads bytes from the current tar archive entry. This method simply calls [9136,9208]
            TextElement: read( byte[], int, int ). [9216,9241]
        TagElement [9256,9312]
            SimpleName: buffer [9263,9269]
            TextElement:  The buffer into which to place bytes read. [9269,9312]
        TagElement [9320,9367]
            TextElement:  The number of bytes read, or -1 at EOF. [9327,9367]
        TagElement [9375,9439]
            SimpleName: IOException [9386,9397]
            TextElement:  when an IO error causes operation to fail [9397,9439]
    Modifier: public [9452,9458]
    PrimitiveType: int [9459,9462]
    SimpleName: read [9463,9467]
    SingleVariableDeclaration [9469,9488]
        Modifier: final [9469,9474]
        ArrayType [9475,9481]
            PrimitiveType: byte [9475,9479]
            Dimension [9479,9481]
        SimpleName: buffer [9482,9488]
    SimpleType [9506,9517]
        SimpleName: IOException [9506,9517]
    Block [9522,9578]
        ReturnStatement [9532,9572]
            MethodInvocation [9539,9571]
                SimpleName: read [9539,9543]
                METHOD_INVOCATION_ARGUMENTS [9545,9569]
                    SimpleName: buffer [9545,9551]
                    NumberLiteral: 0 [9553,9554]
                    QualifiedName: buffer.length [9556,9569]
===
delete-node
---
Modifier: final [10139,10144]
===
===
delete-node
---
Modifier: final [10181,10186]
===
===
delete-node
---
Modifier: final [10220,10225]
===
===
delete-node
---
PrimitiveType: int [10279,10282]
===
===
delete-node
---
SimpleName: position [10283,10291]
===
===
delete-node
---
VariableDeclarationFragment [10283,10300]
===
===
delete-node
---
VariableDeclarationStatement [10279,10301]
===
===
delete-tree
---
VariableDeclarationStatement [10638,10735]
    Modifier: final [10638,10643]
    PrimitiveType: int [10644,10647]
    VariableDeclarationFragment [10648,10734]
        SimpleName: size [10648,10652]
        ConditionalExpression [10671,10734]
            ParenthesizedExpression [10671,10703]
                InfixExpression [10673,10701]
                    SimpleName: numToRead [10673,10682]
                    INFIX_EXPRESSION_OPERATOR: > [10683,10684]
                    QualifiedName: m_readBuf.length [10685,10701]
            QualifiedName: m_readBuf.length [10706,10722]
            SimpleName: numToRead [10725,10734]
===
delete-tree
---
VariableDeclarationStatement [10960,11006]
    Modifier: final [10960,10965]
    PrimitiveType: int [10966,10969]
    VariableDeclarationFragment [10970,11005]
        SimpleName: newLength [10970,10979]
        InfixExpression [10982,11005]
            QualifiedName: m_readBuf.length [10982,10998]
            INFIX_EXPRESSION_OPERATOR: - [10999,11000]
            SimpleName: size [11001,11005]
===
delete-node
---
Modifier: final [11023,11028]
===
===
delete-tree
---
InfixExpression [10824,10848]
    SimpleName: size [10824,10828]
    INFIX_EXPRESSION_OPERATOR: >= [10829,10831]
    QualifiedName: m_readBuf.length [10832,10848]
===
delete-node
---
IfStatement [10820,11203]
===
===
delete-tree
---
IfStatement [10456,10582]
    InfixExpression [10460,10503]
        ParenthesizedExpression [10460,10489]
            InfixExpression [10462,10487]
                SimpleName: numToRead [10462,10471]
                INFIX_EXPRESSION_OPERATOR: + [10472,10473]
                SimpleName: m_entryOffset [10474,10487]
        INFIX_EXPRESSION_OPERATOR: > [10490,10491]
        SimpleName: m_entrySize [10492,10503]
    Block [10514,10582]
        ExpressionStatement [10528,10572]
            Assignment [10528,10571]
                SimpleName: numToRead [10528,10537]
                ASSIGNMENT_OPERATOR: = [10538,10539]
                ParenthesizedExpression [10540,10571]
                    InfixExpression [10542,10569]
                        SimpleName: m_entrySize [10542,10553]
                        INFIX_EXPRESSION_OPERATOR: - [10554,10555]
                        SimpleName: m_entryOffset [10556,10569]
===
delete-tree
---
InfixExpression [10596,10613]
    NullLiteral [10596,10600]
    INFIX_EXPRESSION_OPERATOR: != [10601,10603]
    SimpleName: m_readBuf [10604,10613]
===
delete-node
---
IfStatement [10592,11306]
===
===
delete-node
---
Modifier: final [11361,11366]
===
===
delete-tree
---
VariableDeclarationStatement [11498,11594]
    Modifier: final [11498,11503]
    SimpleType [11504,11510]
        SimpleName: String [11504,11510]
    VariableDeclarationFragment [11511,11593]
        SimpleName: message [11511,11518]
        InfixExpression [11541,11593]
            StringLiteral: "unexpected EOF with " [11541,11563]
            INFIX_EXPRESSION_OPERATOR: + [11564,11565]
            SimpleName: numToRead [11566,11575]
            StringLiteral: " bytes unread" [11578,11593]
===
delete-tree
---
ThrowStatement [11611,11644]
    ClassInstanceCreation [11617,11643]
        SimpleType [11621,11632]
            SimpleName: IOException [11621,11632]
        SimpleName: message [11634,11641]
===
delete-node
---
Modifier: final [11706,11711]
===
===
delete-node
---
Modifier: final [7888,7893]
===
===
delete-node
---
Modifier: final [7957,7962]
===
===
delete-tree
---
InfixExpression [7989,7998]
    NumberLiteral: 32 [7989,7991]
    INFIX_EXPRESSION_OPERATOR: * [7992,7993]
    NumberLiteral: 1024 [7994,7998]
===
delete-node
---
Modifier: final [8046,8051]
===
===
delete-tree
---
MethodDeclaration [12477,13455]
    Javadoc [12477,12845]
        TagElement [12488,12705]
            TextElement: Skip bytes in the input buffer. This skips bytes in the current entry's [12488,12559]
            TextElement: data, not the entire archive, and will stop at the end of the current [12567,12636]
            TextElement: entry's data if the number to skip extends beyond that point. [12644,12705]
        TagElement [12720,12765]
            SimpleName: numToSkip [12727,12736]
            TextElement:  The number of bytes to skip. [12736,12765]
        TagElement [12773,12837]
            SimpleName: IOException [12784,12795]
            TextElement:  when an IO error causes operation to fail [12795,12837]
    Modifier: public [12850,12856]
    PrimitiveType: void [12857,12861]
    SimpleName: skip [12862,12866]
    SingleVariableDeclaration [12868,12887]
        Modifier: final [12868,12873]
        PrimitiveType: int [12874,12877]
        SimpleName: numToSkip [12878,12887]
    SimpleType [12905,12916]
        SimpleName: IOException [12905,12916]
    Block [12921,13455]
        VariableDeclarationStatement [13081,13125]
            Modifier: final [13081,13086]
            ArrayType [13087,13093]
                PrimitiveType: byte [13087,13091]
                Dimension [13091,13093]
            VariableDeclarationFragment [13094,13124]
                SimpleName: skipBuf [13094,13101]
                ArrayCreation [13104,13124]
                    ArrayType [13108,13124]
                        PrimitiveType: byte [13108,13112]
                        Dimension [13112,13124]
                            InfixExpression [13114,13122]
                                NumberLiteral: 8 [13114,13115]
                                INFIX_EXPRESSION_OPERATOR: * [13116,13117]
                                NumberLiteral: 1024 [13118,13122]
        VariableDeclarationStatement [13134,13154]
            PrimitiveType: int [13134,13137]
            VariableDeclarationFragment [13138,13153]
                SimpleName: num [13138,13141]
                SimpleName: numToSkip [13144,13153]
        WhileStatement [13163,13449]
            InfixExpression [13170,13177]
                SimpleName: num [13170,13173]
                INFIX_EXPRESSION_OPERATOR: > [13174,13175]
                NumberLiteral: 0 [13176,13177]
            Block [13188,13449]
                VariableDeclarationStatement [13202,13268]
                    Modifier: final [13202,13207]
                    PrimitiveType: int [13208,13211]
                    VariableDeclarationFragment [13212,13267]
                        SimpleName: count [13212,13217]
                        ConditionalExpression [13220,13267]
                            ParenthesizedExpression [13220,13244]
                                InfixExpression [13222,13242]
                                    SimpleName: num [13222,13225]
                                    INFIX_EXPRESSION_OPERATOR: > [13226,13227]
                                    QualifiedName: skipBuf.length [13228,13242]
                            QualifiedName: skipBuf.length [13247,13261]
                            SimpleName: num [13264,13267]
                VariableDeclarationStatement [13281,13327]
                    Modifier: final [13281,13286]
                    PrimitiveType: int [13287,13290]
                    VariableDeclarationFragment [13291,13326]
                        SimpleName: numRead [13291,13298]
                        MethodInvocation [13301,13326]
                            SimpleName: read [13301,13305]
                            METHOD_INVOCATION_ARGUMENTS [13307,13324]
                                SimpleName: skipBuf [13307,13314]
                                NumberLiteral: 0 [13316,13317]
                                SimpleName: count [13319,13324]
                IfStatement [13340,13410]
                    InfixExpression [13344,13357]
                        SimpleName: numRead [13344,13351]
                        INFIX_EXPRESSION_OPERATOR: == [13352,13354]
                        PrefixExpression [13355,13357]
                            PREFIX_EXPRESSION_OPERATOR: - [13355,13356]
                            NumberLiteral: 1 [13356,13357]
                    Block [13372,13410]
                        BreakStatement [13390,13396]
                ExpressionStatement [13424,13439]
                    Assignment [13424,13438]
                        SimpleName: num [13424,13427]
                        ASSIGNMENT_OPERATOR: -= [13428,13430]
                        SimpleName: numRead [13431,13438]
===
delete-tree
---
Javadoc [13461,13622]
    TagElement [13472,13553]
        TextElement: Utility method to do debugging. [13472,13503]
        TextElement: Capable of being overidden in sub-classes. [13511,13553]
    TagElement [13568,13614]
        SimpleName: message [13575,13582]
        TextElement:  the message to use in debugging [13582,13614]
===
delete-node
---
Modifier: protected [13627,13636]
===
===
delete-node
---
PrimitiveType: void [13637,13641]
===
===
delete-node
---
SimpleName: debug [13642,13647]
===
===
delete-tree
---
SingleVariableDeclaration [13649,13669]
    Modifier: final [13649,13654]
    SimpleType [13655,13661]
        SimpleName: String [13655,13661]
    SimpleName: message [13662,13669]
===
delete-node
---
SimpleName: message [13742,13749]
===
===
delete-node
---
Block [13676,13768]
===
===
delete-node
---
MethodDeclaration [13461,13768]
===
===
multi-move-tree
---
Block [13708,13762]
    ExpressionStatement [13722,13752]
        MethodInvocation [13722,13751]
            METHOD_INVOCATION_RECEIVER [13722,13732]
                QualifiedName: System.err [13722,13732]
            SimpleName: println [13733,13740]
            METHOD_INVOCATION_ARGUMENTS [13742,13749]
                SimpleName: message [13742,13749]
to
Block [7506,7576]
at -1
===
multi-move-tree
---
Block [13708,13762]
    ExpressionStatement [13722,13752]
        MethodInvocation [13722,13751]
            METHOD_INVOCATION_RECEIVER [13722,13732]
                QualifiedName: System.err [13722,13732]
            SimpleName: println [13733,13740]
            METHOD_INVOCATION_ARGUMENTS [13742,13749]
                SimpleName: message [13742,13749]
to
Block [7770,7986]
at -1
===
multi-move-tree
---
Block [13708,13762]
    ExpressionStatement [13722,13752]
        MethodInvocation [13722,13751]
            METHOD_INVOCATION_RECEIVER [13722,13732]
                QualifiedName: System.err [13722,13732]
            SimpleName: println [13733,13740]
            METHOD_INVOCATION_ARGUMENTS [13742,13749]
                SimpleName: message [13742,13749]
to
Block [7329,7400]
at -1
===
multi-move-tree
---
METHOD_INVOCATION_ARGUMENTS [13742,13749]
    SimpleName: message [13742,13749]
to
METHOD_INVOCATION_ARGUMENTS [7366,7384]
at -1
===
multi-move-tree
---
METHOD_INVOCATION_ARGUMENTS [13742,13749]
    SimpleName: message [13742,13749]
to
METHOD_INVOCATION_ARGUMENTS [7543,7560]
at -1
===
multi-move-tree
---
SimpleName: offset [10294,10300]
to
SimpleName: offset [10745,10751]
at -1
===
multi-move-tree
---
SimpleName: offset [10294,10300]
to
SimpleName: offset [11423,11429]
at -1
===
multi-move-tree
---
SimpleName: offset [10294,10300]
to
SimpleName: offset [10351,10357]
at -1
===
multi-move-tree
---
SimpleName: offset [10294,10300]
to
SimpleName: offset [11194,11200]
at -1
===
multi-move-tree
---
SimpleName: offset [10294,10300]
to
SimpleName: offset [11525,11531]
at -1
===
multi-move-tree
---
SimpleName: position [11846,11854]
to
SimpleName: offset [10745,10751]
at -1
===
multi-move-tree
---
SimpleName: position [11846,11854]
to
SimpleName: offset [11423,11429]
at -1
===
multi-move-tree
---
SimpleName: position [11846,11854]
to
SimpleName: offset [10351,10357]
at -1
===
multi-move-tree
---
SimpleName: position [11846,11854]
to
SimpleName: offset [11194,11200]
at -1
===
multi-move-tree
---
SimpleName: position [11846,11854]
to
SimpleName: offset [11525,11531]
at -1
===
multi-move-tree
---
SimpleName: m_debug [13690,13697]
to
SimpleName: debug [7763,7768]
at -1
===
multi-move-tree
---
SimpleName: m_debug [13690,13697]
to
SimpleName: debug [7499,7504]
at -1
===
multi-move-tree
---
SimpleName: m_debug [13690,13697]
to
SimpleName: debug [7322,7327]
at -1
===
multi-move-tree
---
SimpleName: m_debug [13690,13697]
to
SimpleName: debug [6805,6810]
at -1
===
multi-move-tree
---
IfStatement [13686,13762]
    SimpleName: m_debug [13690,13697]
    Block [13708,13762]
        ExpressionStatement [13722,13752]
            MethodInvocation [13722,13751]
                METHOD_INVOCATION_RECEIVER [13722,13732]
                    QualifiedName: System.err [13722,13732]
                SimpleName: println [13733,13740]
                METHOD_INVOCATION_ARGUMENTS [13742,13749]
                    SimpleName: message [13742,13749]
to
IfStatement [7318,7400]
at -1
===
multi-move-tree
---
IfStatement [13686,13762]
    SimpleName: m_debug [13690,13697]
    Block [13708,13762]
        ExpressionStatement [13722,13752]
            MethodInvocation [13722,13751]
                METHOD_INVOCATION_RECEIVER [13722,13732]
                    QualifiedName: System.err [13722,13732]
                SimpleName: println [13733,13740]
                METHOD_INVOCATION_ARGUMENTS [13742,13749]
                    SimpleName: message [13742,13749]
to
IfStatement [7495,7576]
at -1
===
multi-move-tree
---
IfStatement [13686,13762]
    SimpleName: m_debug [13690,13697]
    Block [13708,13762]
        ExpressionStatement [13722,13752]
            MethodInvocation [13722,13751]
                METHOD_INVOCATION_RECEIVER [13722,13732]
                    QualifiedName: System.err [13722,13732]
                SimpleName: println [13733,13740]
                METHOD_INVOCATION_ARGUMENTS [13742,13749]
                    SimpleName: message [13742,13749]
to
IfStatement [7759,7986]
at -1
===
multi-move-tree
---
IfStatement [13686,13762]
    SimpleName: m_debug [13690,13697]
    Block [13708,13762]
        ExpressionStatement [13722,13752]
            MethodInvocation [13722,13751]
                METHOD_INVOCATION_RECEIVER [13722,13732]
                    QualifiedName: System.err [13722,13732]
                SimpleName: println [13733,13740]
                METHOD_INVOCATION_ARGUMENTS [13742,13749]
                    SimpleName: message [13742,13749]
to
IfStatement [6801,7102]
at -1
===
multi-move-tree
---
SimpleName: println [13733,13740]
to
SimpleName: println [7358,7365]
at -1
===
multi-move-tree
---
SimpleName: println [13733,13740]
to
SimpleName: println [7535,7542]
at -1
===
multi-move-tree
---
SimpleName: position [12142,12150]
to
SimpleName: offset [10745,10751]
at -1
===
multi-move-tree
---
SimpleName: position [12142,12150]
to
SimpleName: offset [11423,11429]
at -1
===
multi-move-tree
---
SimpleName: position [12142,12150]
to
SimpleName: offset [10351,10357]
at -1
===
multi-move-tree
---
SimpleName: position [12142,12150]
to
SimpleName: offset [11194,11200]
at -1
===
multi-move-tree
---
SimpleName: position [12142,12150]
to
SimpleName: offset [11525,11531]
at -1
===
multi-move-tree
---
MethodInvocation [13722,13751]
    METHOD_INVOCATION_RECEIVER [13722,13732]
        QualifiedName: System.err [13722,13732]
    SimpleName: println [13733,13740]
    METHOD_INVOCATION_ARGUMENTS [13742,13749]
        SimpleName: message [13742,13749]
to
MethodInvocation [7524,7561]
at -1
===
multi-move-tree
---
MethodInvocation [13722,13751]
    METHOD_INVOCATION_RECEIVER [13722,13732]
        QualifiedName: System.err [13722,13732]
    SimpleName: println [13733,13740]
    METHOD_INVOCATION_ARGUMENTS [13742,13749]
        SimpleName: message [13742,13749]
to
MethodInvocation [7347,7385]
at -1
===
multi-move-tree
---
SimpleName: position [10789,10797]
to
SimpleName: offset [10351,10357]
at -1
===
multi-move-tree
---
METHOD_INVOCATION_RECEIVER [13722,13732]
    QualifiedName: System.err [13722,13732]
to
METHOD_INVOCATION_RECEIVER [7524,7534]
at -1
===
multi-move-tree
---
METHOD_INVOCATION_RECEIVER [13722,13732]
    QualifiedName: System.err [13722,13732]
to
METHOD_INVOCATION_RECEIVER [7347,7357]
at -1
===
multi-move-tree
---
SimpleName: position [11279,11287]
to
SimpleName: offset [10745,10751]
at -1
===
multi-move-tree
---
ExpressionStatement [13722,13752]
    MethodInvocation [13722,13751]
        METHOD_INVOCATION_RECEIVER [13722,13732]
            QualifiedName: System.err [13722,13732]
        SimpleName: println [13733,13740]
        METHOD_INVOCATION_ARGUMENTS [13742,13749]
            SimpleName: message [13742,13749]
to
ExpressionStatement [7524,7562]
at -1
===
multi-move-tree
---
ExpressionStatement [13722,13752]
    MethodInvocation [13722,13751]
        METHOD_INVOCATION_RECEIVER [13722,13732]
            QualifiedName: System.err [13722,13732]
        SimpleName: println [13733,13740]
        METHOD_INVOCATION_ARGUMENTS [13742,13749]
            SimpleName: message [13742,13749]
to
ExpressionStatement [7347,7386]
at -1
===
multi-move-tree
---
SimpleName: position [12257,12265]
to
SimpleName: offset [10745,10751]
at -1
===
multi-move-tree
---
SimpleName: position [12257,12265]
to
SimpleName: offset [11423,11429]
at -1
===
multi-move-tree
---
SimpleName: position [12257,12265]
to
SimpleName: offset [10351,10357]
at -1
===
multi-move-tree
---
SimpleName: position [12257,12265]
to
SimpleName: offset [11194,11200]
at -1
===
multi-move-tree
---
SimpleName: position [12257,12265]
to
SimpleName: offset [11525,11531]
at -1
