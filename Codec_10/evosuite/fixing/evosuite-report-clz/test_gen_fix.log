cd /home/liumengjiao/Desktop/CI/Benchmark/../bugs/Codec_10_fix && timeout 300000 gen_tests.pl -g evosuite -p Codec -v 10f -n 3 -o /home/liumengjiao/Desktop/CI/Evosuite/Codec_10/ -b 300 >> evosuite-report-clz/test_gen_fix.log 2>&1

--------------------------------------------------------------------------------
                     Defects4j Execution Environment 
--------------------------------------------------------------------------------
PWD.........................../home/liumengjiao/Desktop/CI/bugs/Codec_10_fix
SHELL........................./bin/bash
TZ............................America/Los_Angeles
JAVA_HOME...................../usr/local/lib/jdk1.8.0_351
Java Exec...................../usr/local/lib/jdk1.8.0_351/bin/java
Java Exec Resolved............/usr/local/lib/jdk1.8.0_351/bin/java
Java Version:
  java version "1.8.0_351"
  Java(TM) SE Runtime Environment (build 1.8.0_351-b10)
  Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)
Git version...................git version 2.34.1
SVN version...................1.14.1
Perl version..................v5.34.0
--------------------------------------------------------------------------------
Checking out 41c68e9e to /tmp/gen_tests.pl_534014_1695211290............... OK
Executed command: git clone /home/liumengjiao/Desktop/defects4j/project_repos/commons-codec.git /tmp/gen_tests.pl_534014_1695211290 2>&1 && cd /tmp/gen_tests.pl_534014_1695211290 && git checkout 41c68e9ef470696009d72133c7f05a20e2728e34 2>&1
Cloning into '/tmp/gen_tests.pl_534014_1695211290'...
done.
Note: switching to '41c68e9ef470696009d72133c7f05a20e2728e34'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 41c68e9e [CODEC-117] Caverphone encodes names starting and ending with "mb" incorrectly.
Init local repository...................................................... OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290 && git init 2>&1 && git config user.name defects4j 2>&1 && git config user.email defects4j@localhost 2>&1 && git config core.autocrlf false 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_534014_1695211290/.git/
Tag post-fix revision...................................................... OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290 && git init 2>&1 && echo ".svn" > .gitignore && git add -A 2>&1 && git commit -a -m D4J_Codec_10_POST_FIX_REVISION 2>&1 && git tag D4J_Codec_10_POST_FIX_REVISION 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_534014_1695211290/.git/
[detached HEAD ec9f5e5f] D4J_Codec_10_POST_FIX_REVISION
 2 files changed, 4 insertions(+)
 create mode 100644 .defects4j.config
 create mode 100644 .gitignore
Run post-checkout hook..................................................... OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290 && git add -A 2>&1 && git commit -a -m "D4J_Codec_10_POST_FIX_COMPILABLE" 2>&1 && git tag D4J_Codec_10_POST_FIX_COMPILABLE 2>&1
[detached HEAD ced24c99] D4J_Codec_10_POST_FIX_COMPILABLE
 4 files changed, 1623 insertions(+), 8 deletions(-)
 create mode 100644 src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java.bak
 create mode 100644 src/test/org/apache/commons/codec/language/SoundexTest.java.bak
Initialize fixed program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290 && git add -A 2>&1 && git commit -a -m "D4J_Codec_10_FIXED_VERSION" 2>&1 && git tag D4J_Codec_10_FIXED_VERSION 2>&1
[detached HEAD 791ce113] D4J_Codec_10_FIXED_VERSION
 1 file changed, 8 insertions(+)
 create mode 100644 defects4j.build.properties
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290; git apply -p1 /home/liumengjiao/Desktop/defects4j/framework/projects/Codec/patches/10.src.patch 2>&1
Initialize buggy program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290 && git add -A 2>&1 && git commit -a -m "D4J_Codec_10_BUGGY_VERSION" 2>&1 && git tag D4J_Codec_10_BUGGY_VERSION 2>&1
[detached HEAD 310e0486] D4J_Codec_10_BUGGY_VERSION
 2 files changed, 2 insertions(+), 2 deletions(-)
Diff 41c68e9e:2a8fd84f..................................................... OK
Executed command: git --git-dir=/home/liumengjiao/Desktop/defects4j/project_repos/commons-codec.git diff --no-ext-diff --binary 41c68e9ef470696009d72133c7f05a20e2728e34 2a8fd84f1f380fc472ecf415b771cb5fd789719b 
diff --git a/src/java/org/apache/commons/codec/language/Caverphone.java b/src/java/org/apache/commons/codec/language/Caverphone.java
index 28505574..6f7769e4 100644
--- a/src/java/org/apache/commons/codec/language/Caverphone.java
+++ b/src/java/org/apache/commons/codec/language/Caverphone.java
@@ -71,9 +71,7 @@ public class Caverphone implements StringEncoder {
         txt = txt.replaceAll("^enough", "enou2f");  // 2.0 only
         txt = txt.replaceAll("^trough", "trou2f");  // 2.0 only - note the spec says ^enough here again, c+p error I assume
         txt = txt.replaceAll("^gn", "2n");
-
-        // End 
-        txt = txt.replaceAll("mb$", "m2");
+        txt = txt.replaceAll("^mb", "m2");
 
         // 4. Handle replacements
         txt = txt.replaceAll("cq", "2q");
diff --git a/src/test/org/apache/commons/codec/language/CaverphoneTest.java b/src/test/org/apache/commons/codec/language/CaverphoneTest.java
index 00f7d964..a4cb492f 100644
--- a/src/test/org/apache/commons/codec/language/CaverphoneTest.java
+++ b/src/test/org/apache/commons/codec/language/CaverphoneTest.java
@@ -164,6 +164,83 @@ public class CaverphoneTest extends StringEncoderAbstractTest {
             "Xylon"});
     }
 
+    /**
+     * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
+     * 
+     * @throws EncoderException
+     */
+    public void testDavidHoodRevisitedRandomNameTTA1111111() throws EncoderException {
+        this.checkEncodingVariations("TTA1111111", new String[]{
+            "Darda",
+            "Datha",
+            "Dedie",
+            "Deedee",
+            "Deerdre",
+            "Deidre",
+            "Deirdre",
+            "Detta",
+            "Didi",
+            "Didier",
+            "Dido",
+            "Dierdre",
+            "Dieter",
+            "Dita",
+            "Ditter",
+            "Dodi",
+            "Dodie",
+            "Dody",
+            "Doherty",
+            "Dorthea",
+            "Dorthy",
+            "Doti",
+            "Dotti",
+            "Dottie",
+            "Dotty",
+            "Doty",
+            "Doughty",
+            "Douty",
+            "Dowdell",
+            "Duthie",
+            "Tada",
+            "Taddeo",
+            "Tadeo",
+            "Tadio",
+            "Tati",
+            "Teador",
+            "Tedda",
+            "Tedder",
+            "Teddi",
+            "Teddie",
+            "Teddy",
+            "Tedi",
+            "Tedie",
+            "Teeter",
+            "Teodoor",
+            "Teodor",
+            "Terti",
+            "Theda",
+            "Theodor",
+            "Theodore",
+            "Theta",
+            "Thilda",
+            "Thordia",
+            "Tilda",
+            "Tildi",
+            "Tildie",
+            "Tildy",
+            "Tita",
+            "Tito",
+            "Tjader",
+            "Toddie",
+            "Toddy",
+            "Torto",
+            "Tuddor",
+            "Tudor",
+            "Turtle",
+            "Tuttle",
+            "Tutto"});
+    }
+
     /**
      * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
      * 
@@ -242,83 +319,6 @@ public class CaverphoneTest extends StringEncoderAbstractTest {
             "Tyne"});
     }
 
-    /**
-     * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
-     * 
-     * @throws EncoderException
-     */
-    public void testDavidHoodRevisitedRandomNameTTA1111111() throws EncoderException {
-        this.checkEncodingVariations("TTA1111111", new String[]{
-            "Darda",
-            "Datha",
-            "Dedie",
-            "Deedee",
-            "Deerdre",
-            "Deidre",
-            "Deirdre",
-            "Detta",
-            "Didi",
-            "Didier",
-            "Dido",
-            "Dierdre",
-            "Dieter",
-            "Dita",
-            "Ditter",
-            "Dodi",
-            "Dodie",
-            "Dody",
-            "Doherty",
-            "Dorthea",
-            "Dorthy",
-            "Doti",
-            "Dotti",
-            "Dottie",
-            "Dotty",
-            "Doty",
-            "Doughty",
-            "Douty",
-            "Dowdell",
-            "Duthie",
-            "Tada",
-            "Taddeo",
-            "Tadeo",
-            "Tadio",
-            "Tati",
-            "Teador",
-            "Tedda",
-            "Tedder",
-            "Teddi",
-            "Teddie",
-            "Teddy",
-            "Tedi",
-            "Tedie",
-            "Teeter",
-            "Teodoor",
-            "Teodor",
-            "Terti",
-            "Theda",
-            "Theodor",
-            "Theodore",
-            "Theta",
-            "Thilda",
-            "Thordia",
-            "Tilda",
-            "Tildi",
-            "Tildie",
-            "Tildy",
-            "Tita",
-            "Tito",
-            "Tjader",
-            "Toddie",
-            "Toddy",
-            "Torto",
-            "Tuddor",
-            "Tudor",
-            "Turtle",
-            "Tuttle",
-            "Tutto"});
-    }
-
     /**
      * See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
      * 
@@ -330,11 +330,6 @@ public class CaverphoneTest extends StringEncoderAbstractTest {
         this.checkEncodingVariations("APA1111111", new String[]{"able", "appear"});
     }
 
-    public void testEndMb() throws EncoderException {
-        String[][] data = {{"mb", "M111111111"}, {"mbmb", "MPM1111111"}};
-        this.checkEncodings(data);
-    }
-
     // Caverphone Revisited
     public void testIsCaverphoneEquals() {
         Caverphone caverphone = new Caverphone();
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290; git apply -p1 /tmp/gen_tests.pl_534014_1695211290/.defects4j.diff 2>&1
/tmp/gen_tests.pl_534014_1695211290/.defects4j.diff:26: trailing whitespace.
     * 
warning: 1 line adds whitespace errors.
Tag pre-fix revision....................................................... OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290 && git add -A 2>&1 && git commit -a -m "D4J_Codec_10_PRE_FIX_REVISION" 2>&1 && git tag D4J_Codec_10_PRE_FIX_REVISION 2>&1
[detached HEAD c27f25a7] D4J_Codec_10_PRE_FIX_REVISION
 2 files changed, 78 insertions(+), 85 deletions(-)
Check out program version: Codec-10f....................................... OK
Executed command: cd /tmp/gen_tests.pl_534014_1695211290 && git checkout D4J_Codec_10_FIXED_VERSION 2>&1
Previous HEAD position was c27f25a7 D4J_Codec_10_PRE_FIX_REVISION
HEAD is now at 791ce113 D4J_Codec_10_FIXED_VERSION
Running ant (compile)...................................................... OK
Executed command:  cd /tmp/gen_tests.pl_534014_1695211290 && /home/liumengjiao/Desktop/defects4j/major/bin/ant -f /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/home/liumengjiao/Desktop/defects4j -Dd4j.dir.projects=/home/liumengjiao/Desktop/defects4j/framework/projects -Dbasedir=/tmp/gen_tests.pl_534014_1695211290 -Dbuild.compiler=javac1.7  compile 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml

init:
     [echo] -------- commons-codec 1.5-SNAPSHOT --------

prepare:
    [mkdir] Created dir: /tmp/gen_tests.pl_534014_1695211290/target
    [mkdir] Created dir: /tmp/gen_tests.pl_534014_1695211290/target/classes
    [mkdir] Created dir: /tmp/gen_tests.pl_534014_1695211290/target/tests
    [mkdir] Created dir: /tmp/gen_tests.pl_534014_1695211290/target/test-reports

static:

compile:
    [javac] /tmp/gen_tests.pl_534014_1695211290/build.xml:56: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 36 source files to /tmp/gen_tests.pl_534014_1695211290/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.4
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/UnsupportedEncodingException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/MessageDigest.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchAlgorithmException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FilterOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/UnsupportedEncodingException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/MessageDigest.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchAlgorithmException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ByteArrayOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Error.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/System.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/System.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Math.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Math.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AbstractStringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AbstractStringBuilder.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/InterruptedException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/InterruptedException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NullPointerException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IndexOutOfBoundsException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IndexOutOfBoundsException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Random.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Random.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/Charset.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/nio/charset/Charset.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassCastException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassCastException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/MessageDigestSpi.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/MessageDigestSpi.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/GeneralSecurityException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/GeneralSecurityException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NoClassDefFoundError.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/NoClassDefFoundError.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/LinkageError.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/LinkageError.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ReflectiveOperationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ReflectiveOperationException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArrayIndexOutOfBoundsException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArrayIndexOutOfBoundsException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] 99 warnings
     [copy] Copying 6 files to /tmp/gen_tests.pl_534014_1695211290/target/classes

BUILD SUCCESSFUL
Total time: 0 seconds
Creating temporary output directory........................................ OK
Executed command: mkdir -p /tmp/gen_tests.pl_534014_1695211290/evosuite
Generating (regression) tests with: evosuite............................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/bin/evosuite.sh

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class org.apache.commons.codec.language.Caverphone     -projectCP /tmp/gen_tests.pl_534014_1695211290/target/classes     -seed 3010     -Dsearch_budget=150     -Dassertion_timeout=150     -Dtest_dir=/tmp/gen_tests.pl_534014_1695211290/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: org.apache.commons.codec.language.Caverphone
* Starting Client-0
* Connecting to master process on port 13145
* Analyzing classpath: 
  - /tmp/gen_tests.pl_534014_1695211290/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.language.Caverphone
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 9
* Using seed 3010
* Starting evolution
* Initial Number of Goals in DynaMOSA = 7 / 9
* Search finished after 0s and 0 generations, 645 statements, best individual has fitness: 0.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Generated 5 tests with total length 11
* Resulting test suite's coverage: 100%
* Generating assertions
* Resulting test suite's mutation score: 54%
* Writing tests to file
* Writing JUnit test case 'Caverphone_ESTest' to /tmp/gen_tests.pl_534014_1695211290/evosuite
* Done!

* Computation finished
OK
Creating test suite archive................................................ OK
Executed command: tar -cjf /tmp/gen_tests.pl_534014_1695211290/Codec-10f-evosuite.3.tar.bz2 -C /tmp/gen_tests.pl_534014_1695211290/evosuite/ .
Creating output directory.................................................. OK
Executed command: mkdir -p /home/liumengjiao/Desktop/CI/Evosuite/Codec_10//Codec/evosuite/3
Moving test suite archive to /home/liumengjiao/Desktop/CI/Evosuite/Codec_10 OK
Executed command: mv /tmp/gen_tests.pl_534014_1695211290/Codec-10f-evosuite.3.tar.bz2 /home/liumengjiao/Desktop/CI/Evosuite/Codec_10//Codec/evosuite/3
