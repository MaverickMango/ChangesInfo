===
insert-node
---
MethodDeclaration [32256,32866]
to
TypeDeclaration [1420,83516]
at 43
===
insert-tree
---
TypeDeclaration [32870,33019]
    Modifier: static [32870,32876]
    TYPE_DECLARATION_KIND: class [32877,32882]
    SimpleName: NumbericResultPredicate [32883,32906]
    ParameterizedType [32918,32933]
        SimpleType [32918,32927]
            SimpleName: Predicate [32918,32927]
        SimpleType [32928,32932]
            SimpleName: Node [32928,32932]
    MethodDeclaration [32940,33015]
        Modifier: public [32940,32946]
        PrimitiveType: boolean [32947,32954]
        SimpleName: apply [32955,32960]
        SingleVariableDeclaration [32961,32967]
            SimpleType [32961,32965]
                SimpleName: Node [32961,32965]
            SimpleName: n [32966,32967]
        Block [32969,33015]
            ReturnStatement [32977,33009]
                MethodInvocation [32984,33008]
                    SimpleName: isNumericResultHelper [32984,33005]
                    METHOD_INVOCATION_ARGUMENTS [33006,33007]
                        SimpleName: n [33006,33007]
to
TypeDeclaration [1420,83516]
at 44
===
insert-tree
---
FieldDeclaration [33023,33124]
    Modifier: static [33023,33029]
    Modifier: final [33030,33035]
    SimpleType [33036,33059]
        SimpleName: NumbericResultPredicate [33036,33059]
    VariableDeclarationFragment [33060,33123]
        SimpleName: NUMBERIC_RESULT_PREDICATE [33060,33085]
        ClassInstanceCreation [33094,33123]
            SimpleType [33098,33121]
                SimpleName: NumbericResultPredicate [33098,33121]
to
TypeDeclaration [1420,83516]
at 45
===
insert-tree
---
MethodDeclaration [33311,34156]
    Modifier: static [33311,33317]
    PrimitiveType: boolean [33318,33325]
    SimpleName: isNumericResultHelper [33326,33347]
    SingleVariableDeclaration [33348,33354]
        SimpleType [33348,33352]
            SimpleName: Node [33348,33352]
        SimpleName: n [33353,33354]
    Block [33356,34156]
        SwitchStatement [33362,34152]
            MethodInvocation [33370,33381]
                METHOD_INVOCATION_RECEIVER [33370,33371]
                    SimpleName: n [33370,33371]
                SimpleName: getType [33372,33379]
            SwitchCase [33391,33406]
                QualifiedName: Token.ADD [33396,33405]
            ReturnStatement [33415,33500]
                InfixExpression [33422,33499]
                    PrefixExpression [33422,33453]
                        PREFIX_EXPRESSION_OPERATOR: ! [33422,33423]
                        MethodInvocation [33423,33453]
                            SimpleName: mayBeString [33423,33434]
                            METHOD_INVOCATION_ARGUMENTS [33435,33452]
                                MethodInvocation [33435,33452]
                                    METHOD_INVOCATION_RECEIVER [33435,33436]
                                        SimpleName: n [33435,33436]
                                    SimpleName: getFirstChild [33437,33450]
                    INFIX_EXPRESSION_OPERATOR: && [33466,33468]
                    PrefixExpression [33469,33499]
                        PREFIX_EXPRESSION_OPERATOR: ! [33469,33470]
                        MethodInvocation [33470,33499]
                            SimpleName: mayBeString [33470,33481]
                            METHOD_INVOCATION_ARGUMENTS [33482,33498]
                                MethodInvocation [33482,33498]
                                    METHOD_INVOCATION_RECEIVER [33482,33483]
                                        SimpleName: n [33482,33483]
                                    SimpleName: getLastChild [33484,33496]
            SwitchCase [33507,33525]
                QualifiedName: Token.BITNOT [33512,33524]
            SwitchCase [33532,33549]
                QualifiedName: Token.BITOR [33537,33548]
            SwitchCase [33556,33574]
                QualifiedName: Token.BITXOR [33561,33573]
            SwitchCase [33581,33599]
                QualifiedName: Token.BITAND [33586,33598]
            SwitchCase [33606,33621]
                QualifiedName: Token.LSH [33611,33620]
            SwitchCase [33628,33643]
                QualifiedName: Token.RSH [33633,33642]
            SwitchCase [33650,33666]
                QualifiedName: Token.URSH [33655,33665]
            SwitchCase [33673,33688]
                QualifiedName: Token.SUB [33678,33687]
            SwitchCase [33695,33710]
                QualifiedName: Token.MUL [33700,33709]
            SwitchCase [33717,33732]
                QualifiedName: Token.MOD [33722,33731]
            SwitchCase [33739,33754]
                QualifiedName: Token.DIV [33744,33753]
            SwitchCase [33761,33776]
                QualifiedName: Token.INC [33766,33775]
            SwitchCase [33783,33798]
                QualifiedName: Token.DEC [33788,33797]
            SwitchCase [33805,33820]
                QualifiedName: Token.POS [33810,33819]
            SwitchCase [33827,33842]
                QualifiedName: Token.NEG [33832,33841]
            SwitchCase [33849,33867]
                QualifiedName: Token.NUMBER [33854,33866]
            ReturnStatement [33876,33888]
                BooleanLiteral: true [33883,33887]
            SwitchCase [33895,33911]
                QualifiedName: Token.NAME [33900,33910]
            VariableDeclarationStatement [33920,33948]
                SimpleType [33920,33926]
                    SimpleName: String [33920,33926]
                VariableDeclarationFragment [33927,33947]
                    SimpleName: name [33927,33931]
                    MethodInvocation [33934,33947]
                        METHOD_INVOCATION_RECEIVER [33934,33935]
                            SimpleName: n [33934,33935]
                        SimpleName: getString [33936,33945]
            IfStatement [33957,34015]
                MethodInvocation [33961,33979]
                    METHOD_INVOCATION_RECEIVER [33961,33965]
                        SimpleName: name [33961,33965]
                    SimpleName: equals [33966,33972]
                    METHOD_INVOCATION_ARGUMENTS [33973,33978]
                        StringLiteral: "NaN" [33973,33978]
                Block [33981,34015]
                    ReturnStatement [33993,34005]
                        BooleanLiteral: true [34000,34004]
            IfStatement [34024,34087]
                MethodInvocation [34028,34051]
                    METHOD_INVOCATION_RECEIVER [34028,34032]
                        SimpleName: name [34028,34032]
                    SimpleName: equals [34033,34039]
                    METHOD_INVOCATION_ARGUMENTS [34040,34050]
                        StringLiteral: "Infinity" [34040,34050]
                Block [34053,34087]
                    ReturnStatement [34065,34077]
                        BooleanLiteral: true [34072,34076]
            ReturnStatement [34096,34109]
                BooleanLiteral: false [34103,34108]
            SwitchCase [34116,34124]
            ReturnStatement [34133,34146]
                BooleanLiteral: false [34140,34145]
to
TypeDeclaration [1420,83516]
at 47
===
insert-tree
---
TypeDeclaration [34160,34308]
    Modifier: static [34160,34166]
    TYPE_DECLARATION_KIND: class [34167,34172]
    SimpleName: BooleanResultPredicate [34173,34195]
    ParameterizedType [34207,34222]
        SimpleType [34207,34216]
            SimpleName: Predicate [34207,34216]
        SimpleType [34217,34221]
            SimpleName: Node [34217,34221]
    MethodDeclaration [34229,34304]
        Modifier: public [34229,34235]
        PrimitiveType: boolean [34236,34243]
        SimpleName: apply [34244,34249]
        SingleVariableDeclaration [34250,34256]
            SimpleType [34250,34254]
                SimpleName: Node [34250,34254]
            SimpleName: n [34255,34256]
        Block [34258,34304]
            ReturnStatement [34266,34298]
                MethodInvocation [34273,34297]
                    SimpleName: isBooleanResultHelper [34273,34294]
                    METHOD_INVOCATION_ARGUMENTS [34295,34296]
                        SimpleName: n [34295,34296]
to
TypeDeclaration [1420,83516]
at 48
===
insert-tree
---
FieldDeclaration [34312,34410]
    Modifier: static [34312,34318]
    Modifier: final [34319,34324]
    SimpleType [34325,34347]
        SimpleName: BooleanResultPredicate [34325,34347]
    VariableDeclarationFragment [34348,34409]
        SimpleName: BOOLEAN_RESULT_PREDICATE [34348,34372]
        ClassInstanceCreation [34381,34409]
            SimpleType [34385,34407]
                SimpleName: BooleanResultPredicate [34385,34407]
to
TypeDeclaration [1420,83516]
at 49
===
insert-tree
---
MethodDeclaration [34597,35243]
    Modifier: static [34597,34603]
    PrimitiveType: boolean [34604,34611]
    SimpleName: isBooleanResultHelper [34612,34633]
    SingleVariableDeclaration [34634,34640]
        SimpleType [34634,34638]
            SimpleName: Node [34634,34638]
        SimpleName: n [34639,34640]
    Block [34642,35243]
        SwitchStatement [34784,35239]
            MethodInvocation [34792,34803]
                METHOD_INVOCATION_RECEIVER [34792,34793]
                    SimpleName: n [34792,34793]
                SimpleName: getType [34794,34801]
            SwitchCase [34833,34849]
                QualifiedName: Token.TRUE [34838,34848]
            SwitchCase [34856,34873]
                QualifiedName: Token.FALSE [34861,34872]
            SwitchCase [34901,34915]
                QualifiedName: Token.EQ [34906,34914]
            SwitchCase [34922,34936]
                QualifiedName: Token.NE [34927,34935]
            SwitchCase [34943,34959]
                QualifiedName: Token.SHEQ [34948,34958]
            SwitchCase [34966,34982]
                QualifiedName: Token.SHNE [34971,34981]
            SwitchCase [34989,35003]
                QualifiedName: Token.LT [34994,35002]
            SwitchCase [35010,35024]
                QualifiedName: Token.GT [35015,35023]
            SwitchCase [35031,35045]
                QualifiedName: Token.LE [35036,35044]
            SwitchCase [35052,35066]
                QualifiedName: Token.GE [35057,35065]
            SwitchCase [35091,35105]
                QualifiedName: Token.IN [35096,35104]
            SwitchCase [35112,35134]
                QualifiedName: Token.INSTANCEOF [35117,35133]
            SwitchCase [35160,35175]
                QualifiedName: Token.NOT [35165,35174]
            ReturnStatement [35184,35196]
                BooleanLiteral: true [35191,35195]
            SwitchCase [35203,35211]
            ReturnStatement [35220,35233]
                BooleanLiteral: false [35227,35232]
to
TypeDeclaration [1420,83516]
at 51
===
insert-tree
---
TypeDeclaration [35536,35684]
    Modifier: static [35536,35542]
    TYPE_DECLARATION_KIND: class [35543,35548]
    SimpleName: MayBeStringResultPredicate [35549,35575]
    ParameterizedType [35587,35602]
        SimpleType [35587,35596]
            SimpleName: Predicate [35587,35596]
        SimpleType [35597,35601]
            SimpleName: Node [35597,35601]
    MethodDeclaration [35609,35680]
        Modifier: public [35609,35615]
        PrimitiveType: boolean [35616,35623]
        SimpleName: apply [35624,35629]
        SingleVariableDeclaration [35630,35636]
            SimpleType [35630,35634]
                SimpleName: Node [35630,35634]
            SimpleName: n [35635,35636]
        Block [35638,35680]
            ReturnStatement [35646,35674]
                MethodInvocation [35653,35673]
                    SimpleName: mayBeStringHelper [35653,35670]
                    METHOD_INVOCATION_ARGUMENTS [35671,35672]
                        SimpleName: n [35671,35672]
to
TypeDeclaration [1420,83516]
at 54
===
insert-tree
---
FieldDeclaration [35688,35793]
    Modifier: static [35688,35694]
    Modifier: final [35695,35700]
    SimpleType [35701,35727]
        SimpleName: MayBeStringResultPredicate [35701,35727]
    VariableDeclarationFragment [35728,35792]
        SimpleName: MAY_BE_STRING_PREDICATE [35728,35751]
        ClassInstanceCreation [35760,35792]
            SimpleType [35764,35790]
                SimpleName: MayBeStringResultPredicate [35764,35790]
to
TypeDeclaration [1420,83516]
at 55
===
insert-tree
---
MethodDeclaration [35942,36125]
    Modifier: static [35942,35948]
    PrimitiveType: boolean [35949,35956]
    SimpleName: mayBeString [35957,35968]
    SingleVariableDeclaration [35969,35975]
        SimpleType [35969,35973]
            SimpleName: Node [35969,35973]
        SimpleName: n [35974,35975]
    SingleVariableDeclaration [35977,35992]
        PrimitiveType: boolean [35977,35984]
        SimpleName: recurse [35985,35992]
    Block [35994,36125]
        IfStatement [36000,36121]
            SimpleName: recurse [36004,36011]
            Block [36013,36073]
                ReturnStatement [36021,36067]
                    MethodInvocation [36028,36066]
                        SimpleName: valueCheck [36028,36038]
                        METHOD_INVOCATION_ARGUMENTS [36039,36065]
                            SimpleName: n [36039,36040]
                            SimpleName: MAY_BE_STRING_PREDICATE [36042,36065]
            Block [36079,36121]
                ReturnStatement [36087,36115]
                    MethodInvocation [36094,36114]
                        SimpleName: mayBeStringHelper [36094,36111]
                        METHOD_INVOCATION_ARGUMENTS [36112,36113]
                            SimpleName: n [36112,36113]
to
TypeDeclaration [1420,83516]
at 57
===
insert-tree
---
MethodDeclaration [36129,36271]
    Modifier: static [36129,36135]
    PrimitiveType: boolean [36136,36143]
    SimpleName: mayBeStringHelper [36144,36161]
    SingleVariableDeclaration [36162,36168]
        SimpleType [36162,36166]
            SimpleName: Node [36162,36166]
        SimpleName: n [36167,36168]
    Block [36170,36271]
        ReturnStatement [36176,36267]
            InfixExpression [36183,36266]
                PrefixExpression [36183,36202]
                    PREFIX_EXPRESSION_OPERATOR: ! [36183,36184]
                    MethodInvocation [36184,36202]
                        SimpleName: isNumericResult [36184,36199]
                        METHOD_INVOCATION_ARGUMENTS [36200,36201]
                            SimpleName: n [36200,36201]
                INFIX_EXPRESSION_OPERATOR: && [36203,36205]
                PrefixExpression [36206,36225]
                    PREFIX_EXPRESSION_OPERATOR: ! [36206,36207]
                    MethodInvocation [36207,36225]
                        SimpleName: isBooleanResult [36207,36222]
                        METHOD_INVOCATION_ARGUMENTS [36223,36224]
                            SimpleName: n [36223,36224]
                PrefixExpression [36237,36252]
                    PREFIX_EXPRESSION_OPERATOR: ! [36237,36238]
                    MethodInvocation [36238,36252]
                        SimpleName: isUndefined [36238,36249]
                        METHOD_INVOCATION_ARGUMENTS [36250,36251]
                            SimpleName: n [36250,36251]
                PrefixExpression [36256,36266]
                    PREFIX_EXPRESSION_OPERATOR: ! [36256,36257]
                    MethodInvocation [36257,36266]
                        SimpleName: isNull [36257,36263]
                        METHOD_INVOCATION_ARGUMENTS [36264,36265]
                            SimpleName: n [36264,36265]
to
TypeDeclaration [1420,83516]
at 58
===
insert-tree
---
Javadoc [32256,32365]
    TagElement [32265,32359]
        TextElement: Apply the supplied predicate against the potential [32265,32315]
        TextElement: all possible result of the expression. [32321,32359]
to
MethodDeclaration [32256,32866]
at 0
===
insert-node
---
Modifier: static [32368,32374]
to
MethodDeclaration [32256,32866]
at 1
===
insert-node
---
PrimitiveType: boolean [32375,32382]
to
MethodDeclaration [32256,32866]
at 2
===
insert-node
---
SimpleName: valueCheck [32383,32393]
to
MethodDeclaration [32256,32866]
at 3
===
insert-tree
---
SingleVariableDeclaration [32394,32400]
    SimpleType [32394,32398]
        SimpleName: Node [32394,32398]
    SimpleName: n [32399,32400]
to
MethodDeclaration [32256,32866]
at 4
===
insert-tree
---
SingleVariableDeclaration [32402,32419]
    ParameterizedType [32402,32417]
        SimpleType [32402,32411]
            SimpleName: Predicate [32402,32411]
        SimpleType [32412,32416]
            SimpleName: Node [32412,32416]
    SimpleName: p [32418,32419]
to
MethodDeclaration [32256,32866]
at 5
===
insert-node
---
Block [32421,32866]
to
MethodDeclaration [32256,32866]
at 6
===
insert-tree
---
ReturnStatement [33255,33303]
    MethodInvocation [33262,33302]
        SimpleName: valueCheck [33262,33272]
        METHOD_INVOCATION_ARGUMENTS [33273,33301]
            SimpleName: n [33273,33274]
            SimpleName: NUMBERIC_RESULT_PREDICATE [33276,33301]
to
Block [32377,33142]
at 0
===
insert-tree
---
ReturnStatement [34542,34589]
    MethodInvocation [34549,34588]
        SimpleName: valueCheck [34549,34559]
        METHOD_INVOCATION_ARGUMENTS [34560,34587]
            SimpleName: n [34560,34561]
            SimpleName: BOOLEAN_RESULT_PREDICATE [34563,34587]
to
Block [33268,33869]
at 0
===
insert-tree
---
ReturnStatement [35906,35934]
    MethodInvocation [35913,35933]
        SimpleName: mayBeString [35913,35924]
        METHOD_INVOCATION_ARGUMENTS [35925,35932]
            SimpleName: n [35925,35926]
            BooleanLiteral: true [35928,35932]
to
Block [34265,34366]
at 0
===
insert-tree
---
ReturnStatement [32507,32546]
    MethodInvocation [32514,32545]
        SimpleName: valueCheck [32514,32524]
        METHOD_INVOCATION_ARGUMENTS [32525,32544]
            MethodInvocation [32525,32541]
                METHOD_INVOCATION_RECEIVER [32525,32526]
                    SimpleName: n [32525,32526]
                SimpleName: getLastChild [32527,32539]
            SimpleName: p [32543,32544]
to
root
at 0
===
insert-tree
---
ReturnStatement [32598,32685]
    InfixExpression [32605,32684]
        MethodInvocation [32605,32637]
            SimpleName: valueCheck [32605,32615]
            METHOD_INVOCATION_ARGUMENTS [32616,32636]
                MethodInvocation [32616,32633]
                    METHOD_INVOCATION_RECEIVER [32616,32617]
                        SimpleName: n [32616,32617]
                    SimpleName: getFirstChild [32618,32631]
                SimpleName: p [32635,32636]
        INFIX_EXPRESSION_OPERATOR: && [32650,32652]
        MethodInvocation [32653,32684]
            SimpleName: valueCheck [32653,32663]
            METHOD_INVOCATION_ARGUMENTS [32664,32683]
                MethodInvocation [32664,32680]
                    METHOD_INVOCATION_RECEIVER [32664,32665]
                        SimpleName: n [32664,32665]
                    SimpleName: getLastChild [32666,32678]
                SimpleName: p [32682,32683]
to
root
at 0
===
insert-tree
---
ReturnStatement [32717,32814]
    InfixExpression [32724,32813]
        MethodInvocation [32724,32766]
            SimpleName: valueCheck [32724,32734]
            METHOD_INVOCATION_ARGUMENTS [32735,32765]
                MethodInvocation [32735,32762]
                    METHOD_INVOCATION_RECEIVER [32735,32752]
                        MethodInvocation [32735,32752]
                            METHOD_INVOCATION_RECEIVER [32735,32736]
                                SimpleName: n [32735,32736]
                            SimpleName: getFirstChild [32737,32750]
                    SimpleName: getNext [32753,32760]
                SimpleName: p [32764,32765]
        INFIX_EXPRESSION_OPERATOR: && [32779,32781]
        MethodInvocation [32782,32813]
            SimpleName: valueCheck [32782,32792]
            METHOD_INVOCATION_ARGUMENTS [32793,32812]
                MethodInvocation [32793,32809]
                    METHOD_INVOCATION_RECEIVER [32793,32794]
                        SimpleName: n [32793,32794]
                    SimpleName: getLastChild [32795,32807]
                SimpleName: p [32811,32812]
to
root
at 0
===
insert-tree
---
ReturnStatement [32838,32856]
    MethodInvocation [32845,32855]
        METHOD_INVOCATION_RECEIVER [32845,32846]
            SimpleName: p [32845,32846]
        SimpleName: apply [32847,32852]
        METHOD_INVOCATION_ARGUMENTS [32853,32854]
            SimpleName: n [32853,32854]
to
root
at 0
===
delete-tree
---
SwitchCase [32493,32511]
    QualifiedName: Token.BITNOT [32498,32510]
===
delete-tree
---
SwitchCase [32542,32560]
    QualifiedName: Token.BITXOR [32547,32559]
===
delete-tree
---
SwitchCase [32567,32585]
    QualifiedName: Token.BITAND [32572,32584]
===
delete-tree
---
SwitchCase [32614,32629]
    QualifiedName: Token.RSH [32619,32628]
===
delete-tree
---
SwitchCase [32636,32652]
    QualifiedName: Token.URSH [32641,32651]
===
delete-tree
---
SwitchCase [32659,32674]
    QualifiedName: Token.SUB [32664,32673]
===
delete-tree
---
SwitchCase [32725,32740]
    QualifiedName: Token.DIV [32730,32739]
===
delete-tree
---
SwitchCase [32747,32762]
    QualifiedName: Token.INC [32752,32761]
===
delete-tree
---
SwitchCase [32769,32784]
    QualifiedName: Token.DEC [32774,32783]
===
delete-tree
---
SwitchCase [32813,32828]
    QualifiedName: Token.NEG [32818,32827]
===
delete-tree
---
SwitchCase [32835,32853]
    QualifiedName: Token.NUMBER [32840,32852]
===
delete-tree
---
ReturnStatement [32862,32874]
    BooleanLiteral: true [32869,32873]
===
delete-tree
---
SwitchCase [32881,32897]
    QualifiedName: Token.NAME [32886,32896]
===
delete-tree
---
VariableDeclarationStatement [32906,32934]
    SimpleType [32906,32912]
        SimpleName: String [32906,32912]
    VariableDeclarationFragment [32913,32933]
        SimpleName: name [32913,32917]
        MethodInvocation [32920,32933]
            METHOD_INVOCATION_RECEIVER [32920,32921]
                SimpleName: n [32920,32921]
            SimpleName: getString [32922,32931]
===
delete-tree
---
IfStatement [32943,33001]
    MethodInvocation [32947,32965]
        METHOD_INVOCATION_RECEIVER [32947,32951]
            SimpleName: name [32947,32951]
        SimpleName: equals [32952,32958]
        METHOD_INVOCATION_ARGUMENTS [32959,32964]
            StringLiteral: "NaN" [32959,32964]
    Block [32967,33001]
        ReturnStatement [32979,32991]
            BooleanLiteral: true [32986,32990]
===
delete-tree
---
IfStatement [33010,33073]
    MethodInvocation [33014,33037]
        METHOD_INVOCATION_RECEIVER [33014,33018]
            SimpleName: name [33014,33018]
        SimpleName: equals [33019,33025]
        METHOD_INVOCATION_ARGUMENTS [33026,33036]
            StringLiteral: "Infinity" [33026,33036]
    Block [33039,33073]
        ReturnStatement [33051,33063]
            BooleanLiteral: true [33058,33062]
===
delete-tree
---
ReturnStatement [33082,33095]
    BooleanLiteral: false [33089,33094]
===
delete-tree
---
ReturnStatement [33119,33132]
    BooleanLiteral: false [33126,33131]
===
delete-tree
---
SwitchCase [33459,33475]
    QualifiedName: Token.TRUE [33464,33474]
===
delete-tree
---
SwitchCase [33482,33499]
    QualifiedName: Token.FALSE [33487,33498]
===
delete-tree
---
SwitchCase [33569,33585]
    QualifiedName: Token.SHEQ [33574,33584]
===
delete-tree
---
SwitchCase [33592,33608]
    QualifiedName: Token.SHNE [33597,33607]
===
delete-tree
---
SwitchCase [33636,33650]
    QualifiedName: Token.GT [33641,33649]
===
delete-tree
---
SwitchCase [33657,33671]
    QualifiedName: Token.LE [33662,33670]
===
delete-tree
---
SwitchCase [33678,33692]
    QualifiedName: Token.GE [33683,33691]
===
delete-tree
---
SwitchCase [33738,33760]
    QualifiedName: Token.INSTANCEOF [33743,33759]
===
delete-tree
---
ReturnStatement [33810,33822]
    BooleanLiteral: true [33817,33821]
===
delete-tree
---
ReturnStatement [33846,33859]
    BooleanLiteral: false [33853,33858]
===
delete-tree
---
ReturnStatement [34271,34362]
    InfixExpression [34278,34361]
        PrefixExpression [34278,34297]
            PREFIX_EXPRESSION_OPERATOR: ! [34278,34279]
            MethodInvocation [34279,34297]
                SimpleName: isNumericResult [34279,34294]
                METHOD_INVOCATION_ARGUMENTS [34295,34296]
                    SimpleName: n [34295,34296]
        INFIX_EXPRESSION_OPERATOR: && [34298,34300]
        PrefixExpression [34301,34320]
            PREFIX_EXPRESSION_OPERATOR: ! [34301,34302]
            MethodInvocation [34302,34320]
                SimpleName: isBooleanResult [34302,34317]
                METHOD_INVOCATION_ARGUMENTS [34318,34319]
                    SimpleName: n [34318,34319]
        PrefixExpression [34332,34347]
            PREFIX_EXPRESSION_OPERATOR: ! [34332,34333]
            MethodInvocation [34333,34347]
                SimpleName: isUndefined [34333,34344]
                METHOD_INVOCATION_ARGUMENTS [34345,34346]
                    SimpleName: n [34345,34346]
        PrefixExpression [34351,34361]
            PREFIX_EXPRESSION_OPERATOR: ! [34351,34352]
            MethodInvocation [34352,34361]
                SimpleName: isNull [34352,34358]
                METHOD_INVOCATION_ARGUMENTS [34359,34360]
                    SimpleName: n [34359,34360]
===
multi-move-tree
---
SwitchCase [33717,33731]
    QualifiedName: Token.IN [33722,33730]
to
SwitchCase [32456,32474]
at -1
===
multi-move-tree
---
SwitchCase [32592,32607]
    QualifiedName: Token.LSH [32597,32606]
to
SwitchCase [32456,32474]
at -1
===
multi-move-tree
---
QualifiedName: Token.NE [33553,33561]
to
QualifiedName: Token.AND [32558,32567]
at -1
===
multi-move-tree
---
QualifiedName: Token.MOD [32708,32717]
to
QualifiedName: Token.AND [32558,32567]
at -1
===
multi-move-tree
---
QualifiedName: Token.LT [33620,33628]
to
QualifiedName: Token.HOOK [32697,32707]
at -1
===
multi-move-tree
---
QualifiedName: Token.BITOR [32523,32534]
to
QualifiedName: Token.HOOK [32697,32707]
at -1
===
multi-move-tree
---
MethodInvocation [33418,33429]
    METHOD_INVOCATION_RECEIVER [33418,33419]
        SimpleName: n [33418,33419]
    SimpleName: getType [33420,33427]
to
MethodInvocation [32435,32446]
at -1
===
multi-move-tree
---
MethodInvocation [32391,32402]
    METHOD_INVOCATION_RECEIVER [32391,32392]
        SimpleName: n [32391,32392]
    SimpleName: getType [32393,32400]
to
MethodInvocation [32435,32446]
at -1
===
multi-move-tree
---
SwitchCase [33786,33801]
    QualifiedName: Token.NOT [33791,33800]
to
SwitchCase [32481,32498]
at -1
===
multi-move-tree
---
SwitchCase [32681,32696]
    QualifiedName: Token.MUL [32686,32695]
to
SwitchCase [32481,32498]
at -1
===
multi-move-tree
---
QualifiedName: Token.POS [32796,32805]
to
QualifiedName: Token.OR [32580,32588]
at -1
===
multi-move-tree
---
QualifiedName: Token.EQ [33532,33540]
to
QualifiedName: Token.OR [32580,32588]
at -1
===
multi-move-tree
---
QualifiedName: Token.MUL [32686,32695]
to
QualifiedName: Token.COMMA [32486,32497]
at -1
===
multi-move-tree
---
QualifiedName: Token.NOT [33791,33800]
to
QualifiedName: Token.COMMA [32486,32497]
at -1
===
multi-move-tree
---
SwitchCase [33829,33837]
to
SwitchCase [32821,32829]
at -1
===
multi-move-tree
---
SwitchCase [33102,33110]
to
SwitchCase [32821,32829]
at -1
===
multi-move-tree
---
SwitchCase [32518,32535]
    QualifiedName: Token.BITOR [32523,32534]
to
SwitchCase [32692,32708]
at -1
===
multi-move-tree
---
SwitchCase [33615,33629]
    QualifiedName: Token.LT [33620,33628]
to
SwitchCase [32692,32708]
at -1
===
multi-move-tree
---
SwitchCase [32703,32718]
    QualifiedName: Token.MOD [32708,32717]
to
SwitchCase [32553,32568]
at -1
===
multi-move-tree
---
SwitchCase [33548,33562]
    QualifiedName: Token.NE [33553,33561]
to
SwitchCase [32553,32568]
at -1
===
multi-move-tree
---
SwitchStatement [33410,33865]
    MethodInvocation [33418,33429]
        METHOD_INVOCATION_RECEIVER [33418,33419]
            SimpleName: n [33418,33419]
        SimpleName: getType [33420,33427]
    SwitchCase [33459,33475]
        QualifiedName: Token.TRUE [33464,33474]
    SwitchCase [33482,33499]
        QualifiedName: Token.FALSE [33487,33498]
    SwitchCase [33527,33541]
        QualifiedName: Token.EQ [33532,33540]
    SwitchCase [33548,33562]
        QualifiedName: Token.NE [33553,33561]
    SwitchCase [33569,33585]
        QualifiedName: Token.SHEQ [33574,33584]
    SwitchCase [33592,33608]
        QualifiedName: Token.SHNE [33597,33607]
    SwitchCase [33615,33629]
        QualifiedName: Token.LT [33620,33628]
    SwitchCase [33636,33650]
        QualifiedName: Token.GT [33641,33649]
    SwitchCase [33657,33671]
        QualifiedName: Token.LE [33662,33670]
    SwitchCase [33678,33692]
        QualifiedName: Token.GE [33683,33691]
    SwitchCase [33717,33731]
        QualifiedName: Token.IN [33722,33730]
    SwitchCase [33738,33760]
        QualifiedName: Token.INSTANCEOF [33743,33759]
    SwitchCase [33786,33801]
        QualifiedName: Token.NOT [33791,33800]
    ReturnStatement [33810,33822]
        BooleanLiteral: true [33817,33821]
    SwitchCase [33829,33837]
    ReturnStatement [33846,33859]
        BooleanLiteral: false [33853,33858]
to
SwitchStatement [32427,32862]
at -1
===
multi-move-tree
---
SwitchStatement [32383,33138]
    MethodInvocation [32391,32402]
        METHOD_INVOCATION_RECEIVER [32391,32392]
            SimpleName: n [32391,32392]
        SimpleName: getType [32393,32400]
    SwitchCase [32493,32511]
        QualifiedName: Token.BITNOT [32498,32510]
    SwitchCase [32518,32535]
        QualifiedName: Token.BITOR [32523,32534]
    SwitchCase [32542,32560]
        QualifiedName: Token.BITXOR [32547,32559]
    SwitchCase [32567,32585]
        QualifiedName: Token.BITAND [32572,32584]
    SwitchCase [32592,32607]
        QualifiedName: Token.LSH [32597,32606]
    SwitchCase [32614,32629]
        QualifiedName: Token.RSH [32619,32628]
    SwitchCase [32636,32652]
        QualifiedName: Token.URSH [32641,32651]
    SwitchCase [32659,32674]
        QualifiedName: Token.SUB [32664,32673]
    SwitchCase [32681,32696]
        QualifiedName: Token.MUL [32686,32695]
    SwitchCase [32703,32718]
        QualifiedName: Token.MOD [32708,32717]
    SwitchCase [32725,32740]
        QualifiedName: Token.DIV [32730,32739]
    SwitchCase [32747,32762]
        QualifiedName: Token.INC [32752,32761]
    SwitchCase [32769,32784]
        QualifiedName: Token.DEC [32774,32783]
    SwitchCase [32791,32806]
        QualifiedName: Token.POS [32796,32805]
    SwitchCase [32813,32828]
        QualifiedName: Token.NEG [32818,32827]
    SwitchCase [32835,32853]
        QualifiedName: Token.NUMBER [32840,32852]
    ReturnStatement [32862,32874]
        BooleanLiteral: true [32869,32873]
    SwitchCase [32881,32897]
        QualifiedName: Token.NAME [32886,32896]
    VariableDeclarationStatement [32906,32934]
        SimpleType [32906,32912]
            SimpleName: String [32906,32912]
        VariableDeclarationFragment [32913,32933]
            SimpleName: name [32913,32917]
            MethodInvocation [32920,32933]
                METHOD_INVOCATION_RECEIVER [32920,32921]
                    SimpleName: n [32920,32921]
                SimpleName: getString [32922,32931]
    IfStatement [32943,33001]
        MethodInvocation [32947,32965]
            METHOD_INVOCATION_RECEIVER [32947,32951]
                SimpleName: name [32947,32951]
            SimpleName: equals [32952,32958]
            METHOD_INVOCATION_ARGUMENTS [32959,32964]
                StringLiteral: "NaN" [32959,32964]
        Block [32967,33001]
            ReturnStatement [32979,32991]
                BooleanLiteral: true [32986,32990]
    IfStatement [33010,33073]
        MethodInvocation [33014,33037]
            METHOD_INVOCATION_RECEIVER [33014,33018]
                SimpleName: name [33014,33018]
            SimpleName: equals [33019,33025]
            METHOD_INVOCATION_ARGUMENTS [33026,33036]
                StringLiteral: "Infinity" [33026,33036]
        Block [33039,33073]
            ReturnStatement [33051,33063]
                BooleanLiteral: true [33058,33062]
    ReturnStatement [33082,33095]
        BooleanLiteral: false [33089,33094]
    SwitchCase [33102,33110]
    ReturnStatement [33119,33132]
        BooleanLiteral: false [33126,33131]
to
SwitchStatement [32427,32862]
at -1
===
multi-move-tree
---
SwitchCase [32791,32806]
    QualifiedName: Token.POS [32796,32805]
to
SwitchCase [32575,32589]
at -1
===
multi-move-tree
---
SwitchCase [33527,33541]
    QualifiedName: Token.EQ [33532,33540]
to
SwitchCase [32575,32589]
at -1
===
multi-move-tree
---
QualifiedName: Token.IN [33722,33730]
to
QualifiedName: Token.ASSIGN [32461,32473]
at -1
===
multi-move-tree
---
QualifiedName: Token.LSH [32597,32606]
to
QualifiedName: Token.ASSIGN [32461,32473]
at -1
