===
insert-tree
---
ImportDeclaration [850,917]
    QualifiedName: org.apache.commons.math.exception.NumberIsTooLargeException [857,916]
to
CompilationUnit [0,5255]
at 1
===
insert-tree
---
ImportDeclaration [918,979]
    QualifiedName: org.apache.commons.math.exception.OutOfRangeException [925,978]
to
CompilationUnit [0,5255]
at 2
===
insert-tree
---
SimpleType [2627,2652]
    SimpleName: NumberIsTooLargeException [2627,2652]
to
MethodDeclaration [1861,2269]
at 5
===
insert-node
---
Javadoc [2659,3403]
to
MethodDeclaration [2275,3343]
at 0
===
insert-tree
---
SimpleType [3458,3477]
    SimpleName: OutOfRangeException [3458,3477]
to
MethodDeclaration [2275,3343]
at 5
===
insert-node
---
TagElement [2670,3162]
to
Javadoc [2659,3403]
at 0
===
move-tree
---
TagElement [3088,3123]
    SimpleName: p [3095,3096]
    TextElement:  the cumulative probability [3096,3123]
to
Javadoc [2659,3403]
at 1
===
insert-node
---
TagElement [3220,3326]
to
Javadoc [2659,3403]
at 2
===
insert-node
---
TagElement [3334,3395]
to
Javadoc [2659,3403]
at 3
===
update-node
---
TextElement: words, this method represents the probability mass function for the [1134,1201]
replace words, this method represents the probability mass function for the by words, this method represents the probability mass function (PMF)
===
update-node
---
TextElement: distribution. [1209,1222]
replace distribution. by for the distribution.
===
update-node
---
TextElement:  the point at which the probability density function is evaluated. [1245,1311]
replace  the point at which the probability density function is evaluated. by  the point at which the PMF is evaluated
===
update-node
---
TextElement:  the value of the probability density function at  [1326,1376]
replace  the value of the probability density function at  by  the value of the probability mass function at 
===
update-node
---
TextElement: words, this method represents the probability distribution function, or [1597,1668]
replace words, this method represents the probability distribution function, or by words, this method represents the (cumulative) distribution function
===
update-node
---
TextElement: PDF for the distribution. [1676,1701]
replace PDF for the distribution. by (CDF) for this distribution.
===
update-node
---
TextElement:  the point at which the PDF is evaluated [1724,1764]
replace  the point at which the PDF is evaluated by  the point at which the CDF is evaluated
===
update-node
---
TextElement:  PDF for this distribution. [1779,1806]
replace  PDF for this distribution. by  the probability that a random variable with this
===
insert-node
---
TextElement: distribution takes a value less than or equal to  [1944,1993]
to
TagElement [1772,1806]
at 1
===
insert-tree
---
TagElement [1993,2002]
    TextElement:  x [1999,2001]
to
TagElement [1772,1806]
at 2
===
update-node
---
TextElement:  the inclusive lower bound [2041,2067]
replace  the inclusive lower bound by  the exclusive lower bound
===
update-node
---
TextElement:  the cumulative probability [2125,2152]
replace  the cumulative probability by  the probability that a random variable with this distribution
===
insert-node
---
TextElement: will take a value between  [2390,2416]
to
TagElement [2118,2152]
at 1
===
insert-tree
---
TagElement [2416,2426]
    TextElement:  x0 [2422,2425]
to
TagElement [2118,2152]
at 2
===
insert-node
---
TextElement:  and  [2426,2431]
to
TagElement [2118,2152]
at 3
===
insert-tree
---
TagElement [2431,2441]
    TextElement:  x1 [2437,2440]
to
TagElement [2118,2152]
at 4
===
insert-node
---
TextElement: , [2441,2442]
to
TagElement [2118,2152]
at 5
===
insert-node
---
TextElement: excluding the lower and including the upper endpoint [2450,2502]
to
TagElement [2118,2152]
at 6
===
update-node
---
SimpleName: IllegalArgumentException [2168,2192]
replace IllegalArgumentException by NumberIsTooLargeException
===
insert-node
---
TextElement: Computes the quantile function of this distribution. [2670,2722]
to
TagElement [2670,3162]
at 0
===
insert-node
---
TextElement: For a random variable  [2730,2752]
to
TagElement [2670,3162]
at 1
===
move-tree
---
TagElement [2309,2318]
    TextElement:  X [2315,2317]
to
TagElement [2670,3162]
at 2
===
insert-node
---
TextElement:  distributed according to this distribution, [2761,2805]
to
TagElement [2670,3162]
at 3
===
insert-node
---
TextElement: the returned value is [2813,2834]
to
TagElement [2670,3162]
at 4
===
move-tree
---
TextElement: <ul> [2465,2469]
to
TagElement [2670,3162]
at 5
===
insert-node
---
TextElement: <li><code>inf{x in Z | P(X<=x) >= p}</code> for  [2854,2902]
to
TagElement [2670,3162]
at 6
===
insert-tree
---
TagElement [2902,2920]
    TextElement:  0 < p <= 1 [2908,2919]
to
TagElement [2670,3162]
at 7
===
insert-node
---
TextElement: ,</li> [2920,2926]
to
TagElement [2670,3162]
at 8
===
insert-node
---
TextElement: <li><code>inf{x in Z | P(X<=x) > 0}</code> for  [2934,2981]
to
TagElement [2670,3162]
at 9
===
insert-tree
---
TagElement [2981,2994]
    TextElement:  p = 0 [2987,2993]
to
TagElement [2670,3162]
at 10
===
insert-node
---
TextElement: .</li> [2994,3000]
to
TagElement [2670,3162]
at 11
===
move-tree
---
TextElement: </ul> [3068,3073]
to
TagElement [2670,3162]
at 12
===
insert-node
---
TextElement: If the result exceeds the range of the data type  [3021,3070]
to
TagElement [2670,3162]
at 13
===
insert-tree
---
TagElement [3070,3081]
    TextElement:  int [3076,3080]
to
TagElement [2670,3162]
at 14
===
insert-node
---
TextElement: , [3081,3082]
to
TagElement [2670,3162]
at 15
===
insert-node
---
TextElement: then  [3090,3095]
to
TagElement [2670,3162]
at 16
===
move-tree
---
TagElement [2724,2749]
    TextElement:  Integer.MIN_VALUE [2730,2748]
to
TagElement [2670,3162]
at 17
===
insert-node
---
TextElement:  or  [3120,3124]
to
TagElement [2670,3162]
at 18
===
move-tree
---
TagElement [2999,3024]
    TextElement:  Integer.MAX_VALUE [3005,3023]
to
TagElement [2670,3162]
at 19
===
move-tree
---
TextElement:  is returned. [2749,2762]
to
TagElement [2670,3162]
at 20
===
insert-node
---
TextElement:  the smallest  [3227,3241]
to
TagElement [3220,3326]
at 0
===
move-tree
---
TagElement [3236,3245]
    TextElement:  p [3242,3244]
to
TagElement [3220,3326]
at 1
===
insert-node
---
TextElement: -quantile of this distribution [3250,3280]
to
TagElement [3220,3326]
at 2
===
insert-node
---
TextElement: (largest 0-quantile for  [3288,3312]
to
TagElement [3220,3326]
at 3
===
insert-tree
---
TagElement [3312,3325]
    TextElement:  p = 0 [3318,3324]
to
TagElement [3220,3326]
at 4
===
insert-node
---
TextElement: ) [3325,3326]
to
TagElement [3220,3326]
at 5
===
insert-node
---
SimpleName: OutOfRangeException [3342,3361]
to
TagElement [3334,3395]
at 0
===
move-tree
---
TextElement:  if  [3232,3236]
to
TagElement [3334,3395]
at 1
===
insert-tree
---
TagElement [3365,3378]
    TextElement:  p < 0 [3371,3377]
to
TagElement [3334,3395]
at 2
===
insert-node
---
TextElement:  or  [3378,3382]
to
TagElement [3334,3395]
at 3
===
insert-tree
---
TagElement [3382,3395]
    TextElement:  p > 1 [3388,3394]
to
TagElement [3334,3395]
at 4
===
update-node
---
TextElement: Access the lower bound of the support. [3849,3887]
replace Access the lower bound of the support. by Access the lower bound of the support. This method must return the same
===
insert-node
---
TextElement: value as  [4063,4072]
to
TagElement [3849,3887]
at 1
===
insert-tree
---
TagElement [4072,4111]
    TextElement:  inverseCumulativeProbability(0) [4078,4110]
to
TagElement [3849,3887]
at 2
===
insert-node
---
TextElement: . In other words, this [4111,4133]
to
TagElement [3849,3887]
at 3
===
insert-node
---
TextElement: method must return [4141,4159]
to
TagElement [3849,3887]
at 4
===
insert-node
---
TextElement: <p><code>inf {x in Z | P(X <= x) > 0}</code>.</p> [4167,4216]
to
TagElement [3849,3887]
at 5
===
update-node
---
TextElement: Access the upper bound of the support. [4050,4088]
replace Access the upper bound of the support. by Access the upper bound of the support. This method must return the same
===
insert-node
---
TextElement: value as  [4458,4467]
to
TagElement [4050,4088]
at 1
===
insert-tree
---
TagElement [4467,4506]
    TextElement:  inverseCumulativeProbability(1) [4473,4505]
to
TagElement [4050,4088]
at 2
===
insert-node
---
TextElement: . In other words, this [4506,4528]
to
TagElement [4050,4088]
at 3
===
insert-node
---
TextElement: method must return [4536,4554]
to
TagElement [4050,4088]
at 4
===
insert-node
---
TextElement: <p><code>inf {x in R | P(X <= x) = 1}</code>.</p> [4562,4611]
to
TagElement [4050,4088]
at 5
===
update-node
---
TextElement:  P(x0 <= X <= x1) [1998,2015]
replace  P(x0 <= X <= x1) by  P(x0 < X <= x1)
===
delete-node
---
TextElement: For this distribution,  [2286,2309]
===
===
delete-node
---
TextElement: , this method returns the largest [2318,2351]
===
===
delete-tree
---
TagElement [2359,2368]
    TextElement:  x [2365,2367]
===
delete-node
---
TextElement:  such that  [2368,2379]
===
===
delete-tree
---
TagElement [2379,2401]
    TextElement:  P(X <= x) <= p [2385,2400]
===
delete-node
---
TextElement: . [2401,2402]
===
===
delete-node
---
TextElement: <br/> [2410,2415]
===
===
delete-node
---
TextElement: Note that this definition implies: [2423,2457]
===
===
delete-node
---
TextElement: <li> If there is a minimum value,  [2478,2512]
===
===
delete-tree
---
TagElement [2512,2521]
    TextElement:  m [2518,2520]
===
delete-node
---
TextElement: , with positive [2521,2536]
===
===
delete-node
---
TextElement: probability under (the density of)  [2546,2581]
===
===
delete-tree
---
TagElement [2581,2590]
    TextElement:  X [2587,2589]
===
delete-node
---
TextElement: , then  [2590,2597]
===
===
delete-tree
---
TagElement [2597,2610]
    TextElement:  m - 1 [2603,2609]
===
delete-node
---
TextElement:  is [2610,2613]
===
===
delete-node
---
TextElement: returned by  [2623,2635]
===
===
delete-tree
---
TagElement [2635,2675]
    TextElement:  inverseCumulativeProbability(0). [2641,2674]
===
delete-node
---
TextElement:   If there is [2675,2688]
===
===
delete-node
---
TextElement: no such value  [2698,2712]
===
===
delete-tree
---
TagElement [2712,2721]
    TextElement:  m [2718,2720]
===
delete-node
---
TextElement: ,   [2721,2724]
===
===
delete-node
---
TextElement: </li> [2771,2776]
===
===
delete-node
---
TextElement: <li> If there is a maximum value,  [2785,2819]
===
===
delete-tree
---
TagElement [2819,2828]
    TextElement:  M [2825,2827]
===
delete-node
---
TextElement: , such that [2828,2839]
===
===
delete-tree
---
TagElement [2849,2870]
    TextElement:  P(X <= M) = 1 [2855,2869]
===
delete-node
---
TextElement: , then  [2870,2877]
===
===
delete-tree
---
TagElement [2877,2886]
    TextElement:  M [2883,2885]
===
delete-node
---
TextElement:  is returned by [2886,2901]
===
===
delete-tree
---
TagElement [2911,2950]
    TextElement:  inverseCumulativeProbability(1) [2917,2949]
===
delete-node
---
TextElement: . [2950,2951]
===
===
delete-node
---
TextElement: If there is no such value,  [2961,2988]
===
===
delete-tree
---
TagElement [2988,2997]
    TextElement:  M [2994,2996]
===
delete-node
---
TextElement: ,  [2997,2999]
===
===
delete-node
---
TextElement:  is [3024,3027]
===
===
delete-node
---
TextElement: returned. [3037,3046]
===
===
delete-node
---
TextElement: </li> [3055,3060]
===
===
delete-node
---
TagElement [2286,3073]
===
===
delete-tree
---
TagElement [3131,3192]
    TextElement:  the largest  [3138,3151]
    TagElement [3151,3160]
        TextElement:  x [3157,3159]
    TextElement:  such that  [3160,3171]
    TagElement [3171,3192]
        TextElement:  P(X < x) <= p [3177,3191]
===
delete-node
---
SimpleName: IllegalArgumentException [3208,3232]
===
===
delete-node
---
TextElement:  is not between 0 and 1 [3245,3268]
===
===
delete-node
---
TextElement: (inclusive) [3276,3287]
===
===
delete-node
---
TagElement [3200,3287]
===
===
delete-node
---
Javadoc [2275,3295]
===
