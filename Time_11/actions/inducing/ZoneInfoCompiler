===
insert-tree
---
FieldDeclaration [2296,2362]
    Modifier: static [2296,2302]
    ParameterizedType [2303,2323]
        SimpleType [2303,2314]
            SimpleName: ThreadLocal [2303,2314]
        SimpleType [2315,2322]
            SimpleName: Boolean [2315,2322]
    VariableDeclarationFragment [2324,2361]
        SimpleName: cVerbose [2324,2332]
        ClassInstanceCreation [2335,2361]
            ParameterizedType [2339,2359]
                SimpleType [2339,2350]
                    SimpleName: ThreadLocal [2339,2350]
                SimpleType [2351,2358]
                    SimpleName: Boolean [2351,2358]
to
TypeDeclaration [1509,28531]
at 6
===
insert-tree
---
Initializer [2367,2418]
    Modifier: static [2367,2373]
    Block [2374,2418]
        ExpressionStatement [2384,2412]
            MethodInvocation [2384,2411]
                METHOD_INVOCATION_RECEIVER [2384,2392]
                    SimpleName: cVerbose [2384,2392]
                SimpleName: set [2393,2396]
                METHOD_INVOCATION_ARGUMENTS [2397,2410]
                    QualifiedName: Boolean.FALSE [2397,2410]
to
TypeDeclaration [1509,28531]
at 7
===
insert-tree
---
MethodDeclaration [2424,2611]
    Javadoc [2424,2536]
        TagElement [2435,2491]
            TextElement: Gets a flag indicating that verbose logging is required. [2435,2491]
        TagElement [2499,2528]
            TextElement:  true to log verbosely [2506,2528]
    Modifier: public [2541,2547]
    Modifier: static [2548,2554]
    PrimitiveType: boolean [2555,2562]
    SimpleName: verbose [2563,2570]
    Block [2573,2611]
        ReturnStatement [2583,2605]
            MethodInvocation [2590,2604]
                METHOD_INVOCATION_RECEIVER [2590,2598]
                    SimpleName: cVerbose [2590,2598]
                SimpleName: get [2599,2602]
to
TypeDeclaration [1509,28531]
at 8
===
insert-tree
---
VariableDeclarationStatement [3339,3363]
    PrimitiveType: boolean [3339,3346]
    VariableDeclarationFragment [3347,3362]
        SimpleName: verbose [3347,3354]
        BooleanLiteral: false [3357,3362]
to
Block [2718,3856]
at 3
===
insert-tree
---
ExpressionStatement [4350,4372]
    MethodInvocation [4350,4371]
        METHOD_INVOCATION_RECEIVER [4350,4358]
            SimpleName: cVerbose [4350,4358]
        SimpleName: set [4359,4362]
        METHOD_INVOCATION_ARGUMENTS [4363,4370]
            SimpleName: verbose [4363,4370]
to
Block [2718,3856]
at 9
===
insert-tree
---
ExpressionStatement [4868,4945]
    MethodInvocation [4868,4944]
        METHOD_INVOCATION_RECEIVER [4868,4878]
            QualifiedName: System.out [4868,4878]
        SimpleName: println [4879,4886]
        METHOD_INVOCATION_ARGUMENTS [4887,4943]
            StringLiteral: "  -verbose            Output verbosely (default false)" [4887,4943]
to
Block [3895,4247]
at 4
===
insert-tree
---
ExpressionStatement [12970,13015]
    MethodInvocation [12970,13014]
        METHOD_INVOCATION_RECEIVER [12970,12980]
            QualifiedName: System.out [12970,12980]
        SimpleName: println [12981,12988]
        METHOD_INVOCATION_ARGUMENTS [12989,13013]
            StringLiteral: "Writing zoneinfo files" [12989,13013]
to
Block [11590,14922]
at 3
===
insert-node
---
TextElement: -verbose            Output verbosely (default false) [3044,3096]
to
TagElement [2307,2649]
at 6
===
insert-node
---
IfStatement [3665,3917]
to
IfStatement [3065,3330]
at 2
===
insert-node
---
IfStatement [13487,13611]
to
Block [12707,13605]
at 0
===
insert-tree
---
MethodInvocation [3669,3695]
    METHOD_INVOCATION_RECEIVER [3669,3679]
        StringLiteral: "-verbose" [3669,3679]
    SimpleName: equals [3680,3686]
    METHOD_INVOCATION_ARGUMENTS [3687,3694]
        ArrayAccess [3687,3694]
            SimpleName: args [3687,3691]
            SimpleName: i [3692,3693]
to
IfStatement [3665,3917]
at 0
===
insert-tree
---
Block [3697,3752]
    ExpressionStatement [3719,3734]
        Assignment [3719,3733]
            SimpleName: verbose [3719,3726]
            ASSIGNMENT_OPERATOR: = [3727,3728]
            BooleanLiteral: true [3729,3733]
to
IfStatement [3665,3917]
at 1
===
move-tree
---
IfStatement [3171,3330]
    MethodInvocation [3175,3195]
        METHOD_INVOCATION_RECEIVER [3175,3179]
            StringLiteral: "-?" [3175,3179]
        SimpleName: equals [3180,3186]
        METHOD_INVOCATION_ARGUMENTS [3187,3194]
            ArrayAccess [3187,3194]
                SimpleName: args [3187,3191]
                SimpleName: i [3192,3193]
    Block [3197,3278]
        ExpressionStatement [3219,3232]
            MethodInvocation [3219,3231]
                SimpleName: printUsage [3219,3229]
        ReturnStatement [3253,3260]
    Block [3284,3330]
        BreakStatement [3306,3312]
to
IfStatement [3665,3917]
at 2
===
insert-tree
---
MethodInvocation [13491,13517]
    METHOD_INVOCATION_RECEIVER [13491,13507]
        SimpleName: ZoneInfoCompiler [13491,13507]
    SimpleName: verbose [13508,13515]
to
IfStatement [13487,13611]
at 0
===
insert-node
---
Block [13519,13611]
to
IfStatement [13487,13611]
at 1
===
move-tree
---
ExpressionStatement [12729,12773]
    MethodInvocation [12729,12772]
        METHOD_INVOCATION_RECEIVER [12729,12739]
            QualifiedName: System.out [12729,12739]
        SimpleName: println [12740,12747]
        METHOD_INVOCATION_ARGUMENTS [12748,12771]
            InfixExpression [12748,12771]
                StringLiteral: "Writing " [12748,12758]
                INFIX_EXPRESSION_OPERATOR: + [12759,12760]
                MethodInvocation [12761,12771]
                    METHOD_INVOCATION_RECEIVER [12761,12763]
                        SimpleName: tz [12761,12763]
                    SimpleName: getID [12764,12769]
to
Block [13519,13611]
at 0
