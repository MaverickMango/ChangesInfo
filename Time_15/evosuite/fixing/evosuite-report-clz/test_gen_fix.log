cd /home/liumengjiao/Desktop/CI/Benchmark/../bugs/Time_15_fix && timeout 300000 gen_tests.pl -g evosuite -p Time -v 15f -n 3 -o /home/liumengjiao/Desktop/CI/Evosuite/Time_15/ -b 300 >> evosuite-report-clz/test_gen_fix.log 2>&1

--------------------------------------------------------------------------------
                     Defects4j Execution Environment 
--------------------------------------------------------------------------------
PWD.........................../home/liumengjiao/Desktop/CI/bugs/Time_15_fix
SHELL........................./bin/bash
TZ............................America/Los_Angeles
JAVA_HOME...................../usr/local/lib/jdk1.8.0_351
Java Exec...................../usr/local/lib/jdk1.8.0_351/bin/java
Java Exec Resolved............/usr/local/lib/jdk1.8.0_351/bin/java
Java Version:
  java version "1.8.0_351"
  Java(TM) SE Runtime Environment (build 1.8.0_351-b10)
  Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)
Git version...................git version 2.34.1
SVN version...................1.14.1
Perl version..................v5.34.0
--------------------------------------------------------------------------------
Checking out 0cefc4c2 to /tmp/gen_tests.pl_531875_1695210951............... OK
Executed command: git clone /home/liumengjiao/Desktop/defects4j/project_repos/joda-time.git /tmp/gen_tests.pl_531875_1695210951 2>&1 && cd /tmp/gen_tests.pl_531875_1695210951 && git checkout 0cefc4c212e92e5dccdfa658785c419483317558 2>&1
Cloning into '/tmp/gen_tests.pl_531875_1695210951'...
done.
Note: switching to '0cefc4c212e92e5dccdfa658785c419483317558'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 0cefc4c2 FieldUtils.safeMultiply(long,int) [3520651]
Init local repository...................................................... OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951 && git init 2>&1 && git config user.name defects4j 2>&1 && git config user.email defects4j@localhost 2>&1 && git config core.autocrlf false 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_531875_1695210951/.git/
Tag post-fix revision...................................................... OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951 && git init 2>&1 && echo ".svn" > .gitignore && git add -A 2>&1 && git commit -a -m D4J_Time_15_POST_FIX_REVISION 2>&1 && git tag D4J_Time_15_POST_FIX_REVISION 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_531875_1695210951/.git/
[detached HEAD 8c7c3e4f] D4J_Time_15_POST_FIX_REVISION
 2 files changed, 4 insertions(+), 8 deletions(-)
 create mode 100644 .defects4j.config
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Time/failing_tests/0cefc4c212e92e5dccdfa658785c419483317558 /tmp/gen_tests.pl_531875_1695210951/src/test/java
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Time/dependent_tests /tmp/gen_tests.pl_531875_1695210951/src/test/java
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Time/random_tests /tmp/gen_tests.pl_531875_1695210951/src/test/java
Initialize fixed program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951 && git add -A 2>&1 && git commit -a -m "D4J_Time_15_FIXED_VERSION" 2>&1 && git tag D4J_Time_15_FIXED_VERSION 2>&1
[detached HEAD c1ddaa13] D4J_Time_15_FIXED_VERSION
 17 files changed, 5886 insertions(+), 276 deletions(-)
 create mode 100644 defects4j.build.properties
 create mode 100644 src/test/java/org/joda/time/TestDateTimeComparator.java.bak
 create mode 100644 src/test/java/org/joda/time/TestDateTimeUtils.java.bak
 create mode 100644 src/test/java/org/joda/time/TestDateTimeZone.java.bak
 create mode 100644 src/test/java/org/joda/time/format/TestDateTimeFormat.java.bak
 create mode 100644 src/test/java/org/joda/time/format/TestDateTimeFormatStyle.java.bak
 create mode 100644 src/test/java/org/joda/time/format/TestDateTimeFormatter.java.bak
 create mode 100644 src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java.bak
 create mode 100644 src/test/java/org/joda/time/format/TestPeriodFormatParsing.java.bak
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951; git apply -p1 /home/liumengjiao/Desktop/defects4j/framework/projects/Time/patches/15.src.patch 2>&1
Initialize buggy program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951 && git add -A 2>&1 && git commit -a -m "D4J_Time_15_BUGGY_VERSION" 2>&1 && git tag D4J_Time_15_BUGGY_VERSION 2>&1
[detached HEAD e8d8f60d] D4J_Time_15_BUGGY_VERSION
 2 files changed, 1 insertion(+), 4 deletions(-)
Diff 0cefc4c2:383354ad..................................................... OK
Executed command: git --git-dir=/home/liumengjiao/Desktop/defects4j/project_repos/joda-time.git diff --no-ext-diff --binary 0cefc4c212e92e5dccdfa658785c419483317558 383354adc669c3fd8d9e6fe3a25403df993e11e7 
diff --git a/RELEASE-NOTES.txt b/RELEASE-NOTES.txt
index 51e26971..790834fc 100644
--- a/RELEASE-NOTES.txt
+++ b/RELEASE-NOTES.txt
@@ -50,9 +50,6 @@ Bug fixes since 2.1
   parseInto() to lose the year. This fix reverts behaviour to v1.x so that parseInto()
   will use the supplied year, not the default year of the formatter.
 
-- FieldUtils.safeMultiply(long,int) [3520651]
-  Fix implementation to throw exception for (Long.MIN_VALUE, -1)
-
 - Javadoc fix to BaseChronology [3513326]
 
 
diff --git a/src/main/java/org/joda/time/field/FieldUtils.java b/src/main/java/org/joda/time/field/FieldUtils.java
index 1e045b22..55ed991d 100644
--- a/src/main/java/org/joda/time/field/FieldUtils.java
+++ b/src/main/java/org/joda/time/field/FieldUtils.java
@@ -118,7 +118,8 @@ public class FieldUtils {
     public static int safeMultiply(int val1, int val2) {
         long total = (long) val1 * (long) val2;
         if (total < Integer.MIN_VALUE || total > Integer.MAX_VALUE) {
-          throw new ArithmeticException("Multiplication overflows an int: " + val1 + " * " + val2);
+            throw new ArithmeticException
+                ("The calculation caused an overflow: " + val1 + " * " + val2);
         }
         return (int) total;
     }
@@ -127,26 +128,24 @@ public class FieldUtils {
      * Multiply two values throwing an exception if overflow occurs.
      * 
      * @param val1  the first value
-     * @param val2  the second value
+     * @param scalar  the second value
      * @return the new total
      * @throws ArithmeticException if the value is too big or too small
      * @since 1.2
      */
-    public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                if (val1 == Long.MIN_VALUE) {
-                    throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
-                }
-                return -val1;
-            case 0:
-                return 0L;
-            case 1:
-                return val1;
+    public static long safeMultiply(long val1, int scalar) {
+        switch (scalar) {
+        case -1:
+            return -val1;
+        case 0:
+            return 0L;
+        case 1:
+            return val1;
         }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
-          throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        long total = val1 * scalar;
+        if (total / scalar != val1) {
+            throw new ArithmeticException
+                ("The calculation caused an overflow: " + val1 + " * " + scalar);
         }
         return total;
     }
diff --git a/src/test/java/org/joda/time/field/TestFieldUtils.java b/src/test/java/org/joda/time/field/TestFieldUtils.java
index e60d1923..2933d41d 100644
--- a/src/test/java/org/joda/time/field/TestFieldUtils.java
+++ b/src/test/java/org/joda/time/field/TestFieldUtils.java
@@ -191,94 +191,50 @@ public class TestFieldUtils extends TestCase {
 
     //-----------------------------------------------------------------------
     public void testSafeMultiplyLongLong() {
-        assertEquals(0L, FieldUtils.safeMultiply(0L, 0L));
-        
-        assertEquals(1L, FieldUtils.safeMultiply(1L, 1L));
-        assertEquals(3L, FieldUtils.safeMultiply(1L, 3L));
-        assertEquals(3L, FieldUtils.safeMultiply(3L, 1L));
-        
-        assertEquals(6L, FieldUtils.safeMultiply(2L, 3L));
-        assertEquals(-6L, FieldUtils.safeMultiply(2L, -3L));
-        assertEquals(-6L, FieldUtils.safeMultiply(-2L, 3L));
-        assertEquals(6L, FieldUtils.safeMultiply(-2L, -3L));
-        
-        assertEquals(Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, 1L));
-        assertEquals(Long.MIN_VALUE, FieldUtils.safeMultiply(Long.MIN_VALUE, 1L));
-        assertEquals(-Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, -1L));
-        
-        try {
-            FieldUtils.safeMultiply(Long.MIN_VALUE, -1L);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-        
-        try {
-            FieldUtils.safeMultiply(-1L, Long.MIN_VALUE);
-            fail();
-        } catch (ArithmeticException e) {
-        }
+      assertEquals(0L, FieldUtils.safeMultiply(0L, 0L));
       
-        try {
-            FieldUtils.safeMultiply(Long.MIN_VALUE, 100L);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-        
-        try {
-            FieldUtils.safeMultiply(Long.MIN_VALUE, Long.MAX_VALUE);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-        
-        try {
-            FieldUtils.safeMultiply(Long.MAX_VALUE, Long.MIN_VALUE);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-    }
-
-    //-----------------------------------------------------------------------
-    public void testSafeMultiplyLongInt() {
-        assertEquals(0L, FieldUtils.safeMultiply(0L, 0));
-        
-        assertEquals(1L, FieldUtils.safeMultiply(1L, 1));
-        assertEquals(3L, FieldUtils.safeMultiply(1L, 3));
-        assertEquals(3L, FieldUtils.safeMultiply(3L, 1));
-        
-        assertEquals(6L, FieldUtils.safeMultiply(2L, 3));
-        assertEquals(-6L, FieldUtils.safeMultiply(2L, -3));
-        assertEquals(-6L, FieldUtils.safeMultiply(-2L, 3));
-        assertEquals(6L, FieldUtils.safeMultiply(-2L, -3));
-        
-        assertEquals(-1L * Integer.MIN_VALUE, FieldUtils.safeMultiply(-1L, Integer.MIN_VALUE));
-        
-        assertEquals(Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, 1));
-        assertEquals(Long.MIN_VALUE, FieldUtils.safeMultiply(Long.MIN_VALUE, 1));
-        assertEquals(-Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, -1));
-        
-        try {
-            FieldUtils.safeMultiply(Long.MIN_VALUE, -1);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-        
-        try {
-            FieldUtils.safeMultiply(Long.MIN_VALUE, 100);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-        
-        try {
-            FieldUtils.safeMultiply(Long.MIN_VALUE, Integer.MAX_VALUE);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-        
-        try {
-            FieldUtils.safeMultiply(Long.MAX_VALUE, Integer.MIN_VALUE);
-            fail();
-        } catch (ArithmeticException e) {
-        }
-    }
+      assertEquals(1L, FieldUtils.safeMultiply(1L, 1L));
+      assertEquals(3L, FieldUtils.safeMultiply(1L, 3L));
+      assertEquals(3L, FieldUtils.safeMultiply(3L, 1L));
+      
+      assertEquals(6L, FieldUtils.safeMultiply(2L, 3L));
+      assertEquals(-6L, FieldUtils.safeMultiply(2L, -3L));
+      assertEquals(-6L, FieldUtils.safeMultiply(-2L, 3L));
+      assertEquals(6L, FieldUtils.safeMultiply(-2L, -3L));
+      
+      assertEquals(Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, 1L));
+      assertEquals(Long.MIN_VALUE, FieldUtils.safeMultiply(Long.MIN_VALUE, 1L));
+      assertEquals(-Long.MAX_VALUE, FieldUtils.safeMultiply(Long.MAX_VALUE, -1L));
+      
+      try {
+          FieldUtils.safeMultiply(Long.MIN_VALUE, -1L);
+          fail();
+      } catch (ArithmeticException e) {
+      }
+      
+      try {
+          FieldUtils.safeMultiply(-1L, Long.MIN_VALUE);
+          fail();
+      } catch (ArithmeticException e) {
+      }
+    
+      try {
+          FieldUtils.safeMultiply(Long.MIN_VALUE, 100L);
+          fail();
+      } catch (ArithmeticException e) {
+      }
+      
+      try {
+          FieldUtils.safeMultiply(Long.MIN_VALUE, Long.MAX_VALUE);
+          fail();
+      } catch (ArithmeticException e) {
+      }
+      
+      try {
+          FieldUtils.safeMultiply(Long.MAX_VALUE, Long.MIN_VALUE);
+          fail();
+      } catch (ArithmeticException e) {
+      }
+  }
 }
 
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951; git apply -p1 /tmp/gen_tests.pl_531875_1695210951/.defects4j.diff 2>&1
/tmp/gen_tests.pl_531875_1695210951/.defects4j.diff:170: trailing whitespace.
      
/tmp/gen_tests.pl_531875_1695210951/.defects4j.diff:175: trailing whitespace.
      
/tmp/gen_tests.pl_531875_1695210951/.defects4j.diff:179: trailing whitespace.
      
/tmp/gen_tests.pl_531875_1695210951/.defects4j.diff:185: trailing whitespace.
      
/tmp/gen_tests.pl_531875_1695210951/.defects4j.diff:191: trailing whitespace.
    
warning: squelched 2 whitespace errors
warning: 7 lines add whitespace errors.
Tag pre-fix revision....................................................... OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951 && git add -A 2>&1 && git commit -a -m "D4J_Time_15_PRE_FIX_REVISION" 2>&1 && git tag D4J_Time_15_PRE_FIX_REVISION 2>&1
[detached HEAD f6eaa183] D4J_Time_15_PRE_FIX_REVISION
 3 files changed, 59 insertions(+), 107 deletions(-)
Check out program version: Time-15f........................................ OK
Executed command: cd /tmp/gen_tests.pl_531875_1695210951 && git checkout D4J_Time_15_FIXED_VERSION 2>&1
Previous HEAD position was f6eaa183 D4J_Time_15_PRE_FIX_REVISION
HEAD is now at c1ddaa13 D4J_Time_15_FIXED_VERSION
Running ant (compile)...................................................... OK
Executed command:  cd /tmp/gen_tests.pl_531875_1695210951 && /home/liumengjiao/Desktop/defects4j/major/bin/ant -f /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/home/liumengjiao/Desktop/defects4j -Dd4j.dir.projects=/home/liumengjiao/Desktop/defects4j/framework/projects -Dbasedir=/tmp/gen_tests.pl_531875_1695210951 -Dbuild.compiler=javac1.7  compile 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml

init:
     [echo] -------- joda-time 2.1 --------

getjunit:

installjunit:

getjodaconvert:

prepare:
    [mkdir] Created dir: /tmp/gen_tests.pl_531875_1695210951/build
    [mkdir] Created dir: /tmp/gen_tests.pl_531875_1695210951/build/classes
    [mkdir] Created dir: /tmp/gen_tests.pl_531875_1695210951/build/conf

static:
     [copy] Copying 1 file to /tmp/gen_tests.pl_531875_1695210951/build/conf

compile.main:
    [javac] Compiling 156 source files to /tmp/gen_tests.pl_531875_1695210951/build/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ref/Reference.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ref/SoftReference.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/SecurityException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Deprecated.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormatSymbols.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/BasicPermission.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/Permission.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/Guard.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ref/WeakReference.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/WeakHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/UnsupportedOperationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ResourceBundle.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/concurrent/ConcurrentHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/concurrent/ConcurrentMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataInput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataOutput.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/DataOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/OutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/SuppressWarnings.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/BufferedReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileOutputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassLoader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectOutputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ref/Reference.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ref/SoftReference.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/SecurityException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] 100 warnings
     [copy] Copying 7 files to /tmp/gen_tests.pl_531875_1695210951/build/classes

compile.zoneinfo:

joda-time.compile:

compile:
    [mkdir] Created dir: /tmp/gen_tests.pl_531875_1695210951/build/classes/org/joda/time/tz/data
     [java] Writing zoneinfo files
     [java] Writing ZoneInfoMap

BUILD SUCCESSFUL
Total time: 1 second
Creating temporary output directory........................................ OK
Executed command: mkdir -p /tmp/gen_tests.pl_531875_1695210951/evosuite
Generating (regression) tests with: evosuite............................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/bin/evosuite.sh

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class org.joda.time.field.FieldUtils     -projectCP /tmp/gen_tests.pl_531875_1695210951/build/classes:/home/liumengjiao/Desktop/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar     -seed 3015     -Dsearch_budget=150     -Dassertion_timeout=150     -Dtest_dir=/tmp/gen_tests.pl_531875_1695210951/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: org.joda.time.field.FieldUtils
* Starting Client-0
* Connecting to master process on port 10290
* Analyzing classpath: 
  - /tmp/gen_tests.pl_531875_1695210951/build/classes
  - /home/liumengjiao/Desktop/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar
* Finished analyzing classpath
* Generating tests for class org.joda.time.field.FieldUtils
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 78
* Using seed 3015
* Starting evolution
* Initial Number of Goals in DynaMOSA = 38 / 78
* Search finished after 151s and 9845 generations, 4297350 statements, best individual has fitness: 2.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 78
* Number of covered goals: 76
* Generated 44 tests with total length 54
* Resulting test suite's coverage: 97%
* Generating assertions
* Resulting test suite's mutation score: 41%
* Writing tests to file
* Writing JUnit test case 'FieldUtils_ESTest' to /tmp/gen_tests.pl_531875_1695210951/evosuite
* Done!

* Computation finished
OK
Creating test suite archive................................................ OK
Executed command: tar -cjf /tmp/gen_tests.pl_531875_1695210951/Time-15f-evosuite.3.tar.bz2 -C /tmp/gen_tests.pl_531875_1695210951/evosuite/ .
Creating output directory.................................................. OK
Executed command: mkdir -p /home/liumengjiao/Desktop/CI/Evosuite/Time_15//Time/evosuite/3
Moving test suite archive to /home/liumengjiao/Desktop/CI/Evosuite/Time_15/ OK
Executed command: mv /tmp/gen_tests.pl_531875_1695210951/Time-15f-evosuite.3.tar.bz2 /home/liumengjiao/Desktop/CI/Evosuite/Time_15//Time/evosuite/3
