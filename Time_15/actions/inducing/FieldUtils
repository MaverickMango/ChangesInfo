===
insert-tree
---
MethodDeclaration [3601,4222]
    Javadoc [3601,3881]
        TagElement [3612,3673]
            TextElement: Multiply two values throwing an exception if overflow occurs. [3612,3673]
        TagElement [3689,3717]
            SimpleName: val1 [3696,3700]
            TextElement:   the first value [3700,3717]
        TagElement [3725,3754]
            SimpleName: val2 [3732,3736]
            TextElement:   the second value [3736,3754]
        TagElement [3762,3783]
            TextElement:  the new total [3769,3783]
        TagElement [3791,3855]
            SimpleName: ArithmeticException [3799,3818]
            TextElement:  if the value is too big or too small [3818,3855]
        TagElement [3863,3873]
            TextElement:  1.2 [3869,3873]
    Modifier: public [3886,3892]
    Modifier: static [3893,3899]
    PrimitiveType: int [3900,3903]
    SimpleName: safeMultiply [3904,3916]
    SingleVariableDeclaration [3917,3925]
        PrimitiveType: int [3917,3920]
        SimpleName: val1 [3921,3925]
    SingleVariableDeclaration [3927,3935]
        PrimitiveType: int [3927,3930]
        SimpleName: val2 [3931,3935]
    Block [3937,4222]
        VariableDeclarationStatement [3947,3986]
            PrimitiveType: long [3947,3951]
            VariableDeclarationFragment [3952,3985]
                SimpleName: total [3952,3957]
                InfixExpression [3960,3985]
                    CastExpression [3960,3971]
                        PrimitiveType: long [3961,3965]
                        SimpleName: val1 [3967,3971]
                    INFIX_EXPRESSION_OPERATOR: * [3972,3973]
                    CastExpression [3974,3985]
                        PrimitiveType: long [3975,3979]
                        SimpleName: val2 [3981,3985]
        IfStatement [3995,4188]
            InfixExpression [3999,4053]
                InfixExpression [3999,4024]
                    SimpleName: total [3999,4004]
                    INFIX_EXPRESSION_OPERATOR: < [4005,4006]
                    QualifiedName: Integer.MIN_VALUE [4007,4024]
                INFIX_EXPRESSION_OPERATOR: || [4025,4027]
                InfixExpression [4028,4053]
                    SimpleName: total [4028,4033]
                    INFIX_EXPRESSION_OPERATOR: > [4034,4035]
                    QualifiedName: Integer.MAX_VALUE [4036,4053]
            Block [4055,4188]
                ThrowStatement [4069,4178]
                    ClassInstanceCreation [4075,4177]
                        SimpleType [4079,4098]
                            SimpleName: ArithmeticException [4079,4098]
                        InfixExpression [4116,4176]
                            StringLiteral: "The calculation caused an overflow: " [4116,4154]
                            INFIX_EXPRESSION_OPERATOR: + [4155,4156]
                            SimpleName: val1 [4157,4161]
                            StringLiteral: " * " [4164,4169]
                            SimpleName: val2 [4172,4176]
        ReturnStatement [4197,4216]
            CastExpression [4204,4215]
                PrimitiveType: int [4205,4208]
                SimpleName: total [4210,4215]
to
TypeDeclaration [773,9354]
at 9
===
insert-tree
---
MethodDeclaration [4228,4966]
    Javadoc [4228,4510]
        TagElement [4239,4300]
            TextElement: Multiply two values throwing an exception if overflow occurs. [4239,4300]
        TagElement [4316,4344]
            SimpleName: val1 [4323,4327]
            TextElement:   the first value [4327,4344]
        TagElement [4352,4383]
            SimpleName: scalar [4359,4365]
            TextElement:   the second value [4365,4383]
        TagElement [4391,4412]
            TextElement:  the new total [4398,4412]
        TagElement [4420,4484]
            SimpleName: ArithmeticException [4428,4447]
            TextElement:  if the value is too big or too small [4447,4484]
        TagElement [4492,4502]
            TextElement:  1.2 [4498,4502]
    Modifier: public [4515,4521]
    Modifier: static [4522,4528]
    PrimitiveType: long [4529,4533]
    SimpleName: safeMultiply [4534,4546]
    SingleVariableDeclaration [4547,4556]
        PrimitiveType: long [4547,4551]
        SimpleName: val1 [4552,4556]
    SingleVariableDeclaration [4558,4568]
        PrimitiveType: int [4558,4561]
        SimpleName: scalar [4562,4568]
    Block [4570,4966]
        SwitchStatement [4580,4730]
            SimpleName: scalar [4588,4594]
            SwitchCase [4606,4614]
                PrefixExpression [4611,4613]
                    PREFIX_EXPRESSION_OPERATOR: - [4611,4612]
                    NumberLiteral: 1 [4612,4613]
            ReturnStatement [4627,4640]
                PrefixExpression [4634,4639]
                    PREFIX_EXPRESSION_OPERATOR: - [4634,4635]
                    SimpleName: val1 [4635,4639]
            SwitchCase [4649,4656]
                NumberLiteral: 0 [4654,4655]
            ReturnStatement [4669,4679]
                NumberLiteral: 0L [4676,4678]
            SwitchCase [4688,4695]
                NumberLiteral: 1 [4693,4694]
            ReturnStatement [4708,4720]
                SimpleName: val1 [4715,4719]
        VariableDeclarationStatement [4739,4766]
            PrimitiveType: long [4739,4743]
            VariableDeclarationFragment [4744,4765]
                SimpleName: total [4744,4749]
                InfixExpression [4752,4765]
                    SimpleName: val1 [4752,4756]
                    INFIX_EXPRESSION_OPERATOR: * [4757,4758]
                    SimpleName: scalar [4759,4765]
        IfStatement [4775,4938]
            InfixExpression [4779,4801]
                InfixExpression [4779,4793]
                    SimpleName: total [4779,4784]
                    INFIX_EXPRESSION_OPERATOR: / [4785,4786]
                    SimpleName: scalar [4787,4793]
                INFIX_EXPRESSION_OPERATOR: != [4794,4796]
                SimpleName: val1 [4797,4801]
            Block [4803,4938]
                ThrowStatement [4817,4928]
                    ClassInstanceCreation [4823,4927]
                        SimpleType [4827,4846]
                            SimpleName: ArithmeticException [4827,4846]
                        InfixExpression [4864,4926]
                            StringLiteral: "The calculation caused an overflow: " [4864,4902]
                            INFIX_EXPRESSION_OPERATOR: + [4903,4904]
                            SimpleName: val1 [4905,4909]
                            StringLiteral: " * " [4912,4917]
                            SimpleName: scalar [4920,4926]
        ReturnStatement [4947,4960]
            SimpleName: total [4954,4959]
to
TypeDeclaration [773,9354]
at 10
===
insert-tree
---
IfStatement [5303,5354]
    InfixExpression [5307,5316]
        SimpleName: val2 [5307,5311]
        INFIX_EXPRESSION_OPERATOR: == [5312,5314]
        NumberLiteral: 1 [5315,5316]
    Block [5318,5354]
        ReturnStatement [5332,5344]
            SimpleName: val1 [5339,5343]
to
Block [3922,4224]
at 0
===
move-tree
---
InfixExpression [3949,3958]
    SimpleName: val2 [3949,3953]
    INFIX_EXPRESSION_OPERATOR: == [3954,3956]
    NumberLiteral: 0 [3957,3958]
to
IfStatement [3932,3994]
at 0
===
update-node
---
NumberLiteral: 0L [3981,3983]
replace 0L by 0
===
delete-tree
---
InfixExpression [3936,3945]
    SimpleName: val1 [3936,3940]
    INFIX_EXPRESSION_OPERATOR: == [3941,3943]
    NumberLiteral: 0 [3944,3945]
===
delete-node
---
INFIX_EXPRESSION_OPERATOR: || [3946,3948]
===
===
delete-node
---
InfixExpression [3936,3958]
===
