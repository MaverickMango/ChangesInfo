===
insert-tree
---
MethodDeclaration [43776,45295]
    Javadoc [43776,44785]
        TagElement [43787,44516]
            TextElement: <p>Checks if the String contains any character in the given [43787,43846]
            TextElement: set of characters.</p> [43854,43876]
            TextElement: <p>A <code>null</code> String will return <code>false</code>. [43891,43952]
            TextElement: A <code>null</code> or zero length search array will return <code>false</code>.</p> [43960,44043]
            TextElement: <pre> [44058,44063]
            TextElement: StringUtils.containsAny(null, *)                = false [44071,44126]
            TextElement: StringUtils.containsAny("", *)                  = false [44134,44189]
            TextElement: StringUtils.containsAny(*, null)                = false [44197,44252]
            TextElement: StringUtils.containsAny(*, [])                  = false [44260,44315]
            TextElement: StringUtils.containsAny("zzabyycdxx",['z','a']) = true [44323,44377]
            TextElement: StringUtils.containsAny("zzabyycdxx",['b','y']) = true [44385,44439]
            TextElement: StringUtils.containsAny("aba", ['z'])           = false [44447,44502]
            TextElement: </pre> [44510,44516]
        TagElement [44531,44575]
            SimpleName: str [44538,44541]
            TextElement:   the String to check, may be null [44541,44575]
        TagElement [44583,44639]
            SimpleName: searchChars [44590,44601]
            TextElement:   the chars to search for, may be null [44601,44639]
        TagElement [44647,44759]
            TextElement:  the <code>true</code> if any of the chars are found, [44654,44707]
            TextElement: <code>false</code> if no match or null input [44715,44759]
        TagElement [44767,44777]
            TextElement:  2.4 [44773,44777]
    Modifier: public [44790,44796]
    Modifier: static [44797,44803]
    PrimitiveType: boolean [44804,44811]
    SimpleName: containsAny [44812,44823]
    SingleVariableDeclaration [44824,44834]
        SimpleType [44824,44830]
            SimpleName: String [44824,44830]
        SimpleName: str [44831,44834]
    SingleVariableDeclaration [44836,44854]
        ArrayType [44836,44842]
            PrimitiveType: char [44836,44840]
            Dimension [44840,44842]
        SimpleName: searchChars [44843,44854]
    Block [44856,45295]
        IfStatement [44866,45003]
            InfixExpression [44870,44964]
                InfixExpression [44870,44937]
                    InfixExpression [44870,44902]
                        InfixExpression [44870,44881]
                            SimpleName: str [44870,44873]
                            INFIX_EXPRESSION_OPERATOR: == [44874,44876]
                            NullLiteral [44877,44881]
                        INFIX_EXPRESSION_OPERATOR: || [44882,44884]
                        InfixExpression [44885,44902]
                            MethodInvocation [44885,44897]
                                METHOD_INVOCATION_RECEIVER [44885,44888]
                                    SimpleName: str [44885,44888]
                                SimpleName: length [44889,44895]
                            INFIX_EXPRESSION_OPERATOR: == [44898,44900]
                            NumberLiteral: 0 [44901,44902]
                    INFIX_EXPRESSION_OPERATOR: || [44903,44905]
                    InfixExpression [44918,44937]
                        SimpleName: searchChars [44918,44929]
                        INFIX_EXPRESSION_OPERATOR: == [44930,44932]
                        NullLiteral [44933,44937]
                INFIX_EXPRESSION_OPERATOR: || [44938,44940]
                InfixExpression [44941,44964]
                    QualifiedName: searchChars.length [44941,44959]
                    INFIX_EXPRESSION_OPERATOR: == [44960,44962]
                    NumberLiteral: 0 [44963,44964]
            Block [44966,45003]
                ReturnStatement [44980,44993]
                    BooleanLiteral: false [44987,44992]
        ForStatement [45012,45267]
            VariableDeclarationExpression [45017,45026]
                PrimitiveType: int [45017,45020]
                VariableDeclarationFragment [45021,45026]
                    SimpleName: i [45021,45022]
                    NumberLiteral: 0 [45025,45026]
            InfixExpression [45028,45044]
                SimpleName: i [45028,45029]
                INFIX_EXPRESSION_OPERATOR: < [45030,45031]
                MethodInvocation [45032,45044]
                    METHOD_INVOCATION_RECEIVER [45032,45035]
                        SimpleName: str [45032,45035]
                    SimpleName: length [45036,45042]
            PostfixExpression [45046,45049]
                SimpleName: i [45046,45047]
                POSTFIX_EXPRESSION_OPERATOR: ++ [45047,45049]
            Block [45051,45267]
                VariableDeclarationStatement [45065,45089]
                    PrimitiveType: char [45065,45069]
                    VariableDeclarationFragment [45070,45088]
                        SimpleName: ch [45070,45072]
                        MethodInvocation [45075,45088]
                            METHOD_INVOCATION_RECEIVER [45075,45078]
                                SimpleName: str [45075,45078]
                            SimpleName: charAt [45079,45085]
                            METHOD_INVOCATION_ARGUMENTS [45086,45087]
                                SimpleName: i [45086,45087]
                ForStatement [45102,45257]
                    VariableDeclarationExpression [45107,45116]
                        PrimitiveType: int [45107,45110]
                        VariableDeclarationFragment [45111,45116]
                            SimpleName: j [45111,45112]
                            NumberLiteral: 0 [45115,45116]
                    InfixExpression [45118,45140]
                        SimpleName: j [45118,45119]
                        INFIX_EXPRESSION_OPERATOR: < [45120,45121]
                        QualifiedName: searchChars.length [45122,45140]
                    PostfixExpression [45142,45145]
                        SimpleName: j [45142,45143]
                        POSTFIX_EXPRESSION_OPERATOR: ++ [45143,45145]
                    Block [45147,45257]
                        IfStatement [45165,45243]
                            InfixExpression [45169,45189]
                                ArrayAccess [45169,45183]
                                    SimpleName: searchChars [45169,45180]
                                    SimpleName: j [45181,45182]
                                INFIX_EXPRESSION_OPERATOR: == [45184,45186]
                                SimpleName: ch [45187,45189]
                            Block [45191,45243]
                                ReturnStatement [45213,45225]
                                    BooleanLiteral: true [45220,45224]
        ReturnStatement [45276,45289]
            BooleanLiteral: false [45283,45288]
to
TypeDeclaration [947,210359]
at 40
===
insert-tree
---
MethodDeclaration [45301,46498]
    Javadoc [45301,46268]
        TagElement [45312,45999]
            TextElement: <p>Checks if the String contains any character in the given [45312,45371]
            TextElement: set of characters.</p> [45379,45401]
            TextElement: <p>A <code>null</code> String will return <code>false</code>. [45416,45477]
            TextElement: A <code>null</code> search string will return <code>false</code>.</p> [45485,45554]
            TextElement: <pre> [45569,45574]
            TextElement: StringUtils.containsAny(null, *)            = false [45582,45633]
            TextElement: StringUtils.containsAny("", *)              = false [45641,45692]
            TextElement: StringUtils.containsAny(*, null)            = false [45700,45751]
            TextElement: StringUtils.containsAny(*, "")              = false [45759,45810]
            TextElement: StringUtils.containsAny("zzabyycdxx", "za") = true [45818,45868]
            TextElement: StringUtils.containsAny("zzabyycdxx", "by") = true [45876,45926]
            TextElement: StringUtils.containsAny("aba","z")          = false [45934,45985]
            TextElement: </pre> [45993,45999]
        TagElement [46014,46058]
            SimpleName: str [46021,46024]
            TextElement:   the String to check, may be null [46024,46058]
        TagElement [46066,46122]
            SimpleName: searchChars [46073,46084]
            TextElement:   the chars to search for, may be null [46084,46122]
        TagElement [46130,46242]
            TextElement:  the <code>true</code> if any of the chars are found, [46137,46190]
            TextElement: <code>false</code> if no match or null input [46198,46242]
        TagElement [46250,46260]
            TextElement:  2.4 [46256,46260]
    Modifier: public [46273,46279]
    Modifier: static [46280,46286]
    PrimitiveType: boolean [46287,46294]
    SimpleName: containsAny [46295,46306]
    SingleVariableDeclaration [46307,46317]
        SimpleType [46307,46313]
            SimpleName: String [46307,46313]
        SimpleName: str [46314,46317]
    SingleVariableDeclaration [46319,46337]
        SimpleType [46319,46325]
            SimpleName: String [46319,46325]
        SimpleName: searchChars [46326,46337]
    Block [46339,46498]
        IfStatement [46349,46492]
            InfixExpression [46353,46372]
                SimpleName: searchChars [46353,46364]
                INFIX_EXPRESSION_OPERATOR: == [46365,46367]
                NullLiteral [46368,46372]
            Block [46374,46411]
                ReturnStatement [46388,46401]
                    BooleanLiteral: false [46395,46400]
            Block [46417,46492]
                ReturnStatement [46431,46482]
                    MethodInvocation [46438,46481]
                        SimpleName: containsAny [46438,46449]
                        METHOD_INVOCATION_ARGUMENTS [46450,46480]
                            SimpleName: str [46450,46453]
                            MethodInvocation [46455,46480]
                                METHOD_INVOCATION_RECEIVER [46455,46466]
                                    SimpleName: searchChars [46455,46466]
                                SimpleName: toCharArray [46467,46478]
to
TypeDeclaration [947,210359]
at 41
===
update-node
---
TextElement: <li><b>ContainsOnly/ContainsNone</b> [1656,1692]
replace <li><b>ContainsOnly/ContainsNone</b> by <li><b>ContainsOnly/ContainsNone/ContainsAny</b>
===
update-node
---
TextElement: - does String contains only/none of these characters</li> [1701,1758]
replace - does String contains only/none of these characters</li> by - does String contains only/none/any of these characters</li>
