cd /home/liumengjiao/Desktop/CI/Benchmark/../bugs/Math_105_fix && timeout 300000 gen_tests.pl -g evosuite -p Math -v 105f -n 3 -o /home/liumengjiao/Desktop/CI/Evosuite/Math_105/ -b 300 >> evosuite-report-clz/test_gen_fix.log 2>&1

--------------------------------------------------------------------------------
                     Defects4j Execution Environment 
--------------------------------------------------------------------------------
PWD.........................../home/liumengjiao/Desktop/CI/bugs/Math_105_fix
SHELL........................./bin/bash
TZ............................America/Los_Angeles
JAVA_HOME...................../usr/local/lib/jdk1.8.0_351
Java Exec...................../usr/local/lib/jdk1.8.0_351/bin/java
Java Exec Resolved............/usr/local/lib/jdk1.8.0_351/bin/java
Java Version:
  java version "1.8.0_351"
  Java(TM) SE Runtime Environment (build 1.8.0_351-b10)
  Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)
Git version...................git version 2.34.1
SVN version...................1.14.1
Perl version..................v5.34.0
--------------------------------------------------------------------------------
Checking out fc21b26f to /tmp/gen_tests.pl_563196_1695217154............... OK
Executed command: git clone /home/liumengjiao/Desktop/defects4j/project_repos/commons-math.git /tmp/gen_tests.pl_563196_1695217154 2>&1 && cd /tmp/gen_tests.pl_563196_1695217154 && git checkout fc21b26f84312e4f75e8b144238618c73a8b091f 2>&1
Cloning into '/tmp/gen_tests.pl_563196_1695217154'...
done.
Note: switching to 'fc21b26f84312e4f75e8b144238618c73a8b091f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at fc21b26f8 Modified getSumSquaredErrors method in SimpleRegression to always return a non-negative result. JIRA: MATH-85 Reported by Mark Osborn Patched by Luc Maisonobe
Init local repository...................................................... OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154 && git init 2>&1 && git config user.name defects4j 2>&1 && git config user.email defects4j@localhost 2>&1 && git config core.autocrlf false 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_563196_1695217154/.git/
Tag post-fix revision...................................................... OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154 && git init 2>&1 && echo ".svn" > .gitignore && git add -A 2>&1 && git commit -a -m D4J_Math_105_POST_FIX_REVISION 2>&1 && git tag D4J_Math_105_POST_FIX_REVISION 2>&1
Reinitialized existing Git repository in /tmp/gen_tests.pl_563196_1695217154/.git/
[detached HEAD 9d94da8d7] D4J_Math_105_POST_FIX_REVISION
 2 files changed, 4 insertions(+)
 create mode 100644 .defects4j.config
 create mode 100644 .gitignore
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Math/random_tests /tmp/gen_tests.pl_563196_1695217154/src/test
Excluding broken/flaky tests............................................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/util/rm_broken_tests.pl /home/liumengjiao/Desktop/defects4j/framework/projects/Math/broken_tests /tmp/gen_tests.pl_563196_1695217154/src/test
Initialize fixed program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154 && git add -A 2>&1 && git commit -a -m "D4J_Math_105_FIXED_VERSION" 2>&1 && git tag D4J_Math_105_FIXED_VERSION 2>&1
[detached HEAD 95a5981a1] D4J_Math_105_FIXED_VERSION
 7 files changed, 302 insertions(+)
 create mode 100644 defects4j.build.properties
 create mode 100644 src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java.bak
 create mode 100644 src/test/org/apache/commons/math/distribution/WeibullDistributionTest.java.bak
 create mode 100644 src/test/org/apache/commons/math/stat/descriptive/summary/SumTest.java.bak
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154; git apply -p1 /home/liumengjiao/Desktop/defects4j/framework/projects/Math/patches/105.src.patch 2>&1
Initialize buggy program version........................................... OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154 && git add -A 2>&1 && git commit -a -m "D4J_Math_105_BUGGY_VERSION" 2>&1 && git tag D4J_Math_105_BUGGY_VERSION 2>&1
[detached HEAD 53ba87a42] D4J_Math_105_BUGGY_VERSION
 2 files changed, 2 insertions(+), 2 deletions(-)
Diff fc21b26f:ab1b9500..................................................... OK
Executed command: git --git-dir=/home/liumengjiao/Desktop/defects4j/project_repos/commons-math.git diff --no-ext-diff --binary fc21b26f84312e4f75e8b144238618c73a8b091f ab1b9500fd4b6898757e9c74dc2eeae692b25146 
diff --git a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java
index d9fa592c0..c105a41ae 100644
--- a/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java
+++ b/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java
@@ -236,21 +236,6 @@ public class SimpleRegression implements Serializable {
      * sum of squared errors</a> (SSE) associated with the regression 
      * model.
      * <p>
-     * The sum is computed using the computational formula
-     * <p>
-     * <code>SSE = SYY - (SXY * SXY / SXX)</code>
-     * <p>
-     * where <code>SYY</code> is the sum of the squared deviations of the y
-     * values about their mean, <code>SXX</code> is similarly defined and
-     * <code>SXY</code> is the sum of the products of x and y mean deviations.
-     * <p>
-     * The sums are accumulated using the updating algorithm referenced in 
-     * {@link #addData}.  
-     * <p>
-     * The return value is constrained to be non-negative - i.e., if due to 
-     * rounding errors the computational formula returns a negative result, 
-     * 0 is returned.
-     * <p>
      * <strong>Preconditions</strong>: <ul>
      * <li>At least two observations (with at least two different x values)
      * must have been added before invoking this method. If this method is 
@@ -261,7 +246,7 @@ public class SimpleRegression implements Serializable {
      * @return sum of squared errors associated with the regression model
      */
     public double getSumSquaredErrors() {
-        return Math.max(0d, sumYY - sumXY * sumXY / sumXX);
+        return sumYY - sumXY * sumXY / sumXX;
     }
 
     /**
diff --git a/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java b/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java
index b6aa67c9d..a649b10d2 100644
--- a/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java
+++ b/src/test/org/apache/commons/math/stat/regression/SimpleRegressionTest.java
@@ -237,7 +237,6 @@ public final class SimpleRegressionTest extends TestCase {
         }
         assertEquals(0.0, regression.getSignificance(), 1.0e-5);
         assertTrue(regression.getSlope() > 0.0);
-        assertTrue(regression.getSumSquaredErrors() >= 0.0);
     }
 
     public void testPerfectNegative() throws Exception {
@@ -262,16 +261,4 @@ public final class SimpleRegressionTest extends TestCase {
         assertTrue( 0.0 < regression.getSignificance()
                     && regression.getSignificance() < 1.0);       
     }
-    
-    
-    // Jira MATH-85 = Bugzilla 39432
-    public void testSSENonNegative() {
-        double[] y = { 8915.102, 8919.302, 8923.502 };
-        double[] x = { 1.107178495E2, 1.107264895E2, 1.107351295E2 };
-        SimpleRegression reg = new SimpleRegression();
-        for (int i = 0; i < x.length; i++) {
-            reg.addData(x[i], y[i]);
-        }
-        assertTrue(reg.getSumSquaredErrors() >= 0.0);
-    } 
 }
diff --git a/xdocs/changes.xml b/xdocs/changes.xml
index c534f2137..8f33730f8 100644
--- a/xdocs/changes.xml
+++ b/xdocs/changes.xml
@@ -62,10 +62,6 @@ Commons Math Release Notes</title>
       <action dev="psteitz" type="update" issue="MATH-140" due-to="Xiaogang Zhang">
         Added Fast Fourier Transform implementation.
       </action>
-      <action dev="psteitz" type="fix" issue="MATH-85" due-to="Mark Osborn, Luc Maisonobe">
-        Modified getSumSquaredErrors method in SimpleRegression to always
-        return a non-negative result.
-      </action>
     </release>
     <release version="1.1" date="2005-12-17"  
  description="This is a maintenance release containing bug fixes and enhancements.
Apply patch................................................................ OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154; git apply -p1 /tmp/gen_tests.pl_563196_1695217154/.defects4j.diff 2>&1
Tag pre-fix revision....................................................... OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154 && git add -A 2>&1 && git commit -a -m "D4J_Math_105_PRE_FIX_REVISION" 2>&1 && git tag D4J_Math_105_PRE_FIX_REVISION 2>&1
[detached HEAD 03c7881f6] D4J_Math_105_PRE_FIX_REVISION
 3 files changed, 1 insertion(+), 33 deletions(-)
Check out program version: Math-105f....................................... OK
Executed command: cd /tmp/gen_tests.pl_563196_1695217154 && git checkout D4J_Math_105_FIXED_VERSION 2>&1
Previous HEAD position was 03c7881f6 D4J_Math_105_PRE_FIX_REVISION
HEAD is now at 95a5981a1 D4J_Math_105_FIXED_VERSION
Running ant (compile)...................................................... OK
Executed command:  cd /tmp/gen_tests.pl_563196_1695217154 && /home/liumengjiao/Desktop/defects4j/major/bin/ant -f /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/home/liumengjiao/Desktop/defects4j -Dd4j.dir.projects=/home/liumengjiao/Desktop/defects4j/framework/projects -Dbasedir=/tmp/gen_tests.pl_563196_1695217154 -Dbuild.compiler=javac1.7  compile 2>&1
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Buildfile: /home/liumengjiao/Desktop/defects4j/framework/projects/defects4j.build.xml

init:

setProxy:

noProxy:
     [echo] Proxy not used.

get-custom-dep-commons-logging.jar:

get-dep-commons-logging.jar:
      [get] Getting: http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.3.jar
      [get] To: /home/liumengjiao/.maven/repository/commons-logging/jars/commons-logging-1.0.3.jar
      [get] Error opening connection java.io.FileNotFoundException: http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.3.jar
      [get] Error opening connection java.io.FileNotFoundException: http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.3.jar
      [get] Error opening connection java.io.FileNotFoundException: http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.3.jar
      [get] Can't get http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.3.jar to /home/liumengjiao/.maven/repository/commons-logging/jars/commons-logging-1.0.3.jar

get-custom-dep-commons-discovery.jar:

get-dep-commons-discovery.jar:
      [get] Getting: http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar
      [get] To: /home/liumengjiao/.maven/repository/commons-discovery/jars/commons-discovery-0.2.jar
      [get] Error opening connection java.io.FileNotFoundException: http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar
      [get] Error opening connection java.io.FileNotFoundException: http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar
      [get] Error opening connection java.io.FileNotFoundException: http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar
      [get] Can't get http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar to /home/liumengjiao/.maven/repository/commons-discovery/jars/commons-discovery-0.2.jar

get-deps:

compile:
    [mkdir] Created dir: /tmp/gen_tests.pl_563196_1695217154/target/classes
    [javac] /tmp/gen_tests.pl_563196_1695217154/build.xml:72: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 139 source files to /tmp/gen_tests.pl_563196_1695217154/target/classes
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArithmeticException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/FieldPosition.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParsePosition.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/BufferedReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStreamReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/InstantiationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Random.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/MessageDigest.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/SecureRandom.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchAlgorithmException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchProviderException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/net/MalformedURLException.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] warning: /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.
    [javac]   It is recommended that the compiler be upgraded.
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/PrintWriter.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalArgumentException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ClassNotFoundException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ArithmeticException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalStateException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/FieldPosition.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/Format.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/NumberFormat.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParsePosition.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/File.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/BufferedReader.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/FileReader.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/io/InputStreamReader.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/InstantiationException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Random.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/MessageDigest.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/SecureRandom.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchAlgorithmException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/security/NoSuchProviderException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/net/MalformedURLException.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Integer.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] /usr/local/lib/jdk1.8.0_351/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 100 warnings
    [mkdir] Created dir: /tmp/gen_tests.pl_563196_1695217154/target/classes/META-INF
     [copy] Copying 1 file to /tmp/gen_tests.pl_563196_1695217154/target/classes/META-INF

BUILD SUCCESSFUL
Total time: 5 seconds
Creating temporary output directory........................................ OK
Executed command: mkdir -p /tmp/gen_tests.pl_563196_1695217154/evosuite
Generating (regression) tests with: evosuite............................... OK
Executed command: /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/bin/evosuite.sh

Executing command:
java -cp /home/liumengjiao/Desktop/defects4j/framework/lib/test_generation/generation/evosuite-current.jar org.evosuite.EvoSuite     -class org.apache.commons.math.stat.regression.SimpleRegression     -projectCP /tmp/gen_tests.pl_563196_1695217154/target/classes:/home/liumengjiao/Desktop/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar     -seed 3105     -Dsearch_budget=150     -Dassertion_timeout=150     -Dtest_dir=/tmp/gen_tests.pl_563196_1695217154/evosuite     -criterion branch -Dstopping_condition=MaxTime -Dshow_progress=false -Djunit_check=false -Dfilter_assertions=false -Dtest_comments=false -mem 1500 
* EvoSuite 1.1.0
* Going to generate test cases for class: org.apache.commons.math.stat.regression.SimpleRegression
* Starting Client-0
* Connecting to master process on port 5524
* Analyzing classpath: 
  - /tmp/gen_tests.pl_563196_1695217154/target/classes
  - /home/liumengjiao/Desktop/defects4j/framework/projects/Math/lib/commons-discovery-0.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.stat.regression.SimpleRegression
* Test criterion:
  - Branch Coverage
* Total number of test goals for DYNAMOSA: 33
* Using seed 3105
* Starting evolution
* Initial Number of Goals in DynaMOSA = 29 / 33
* Search finished after 2s and 4 generations, 3354 statements, best individual has fitness: 0.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 33
* Number of covered goals: 33
* Generated 15 tests with total length 47
* Resulting test suite's coverage: 100%
* Generating assertions
* Resulting test suite's mutation score: 31%
* Writing tests to file
* Writing JUnit test case 'SimpleRegression_ESTest' to /tmp/gen_tests.pl_563196_1695217154/evosuite
* Done!

* Computation finished
OK
Creating test suite archive................................................ OK
Executed command: tar -cjf /tmp/gen_tests.pl_563196_1695217154/Math-105f-evosuite.3.tar.bz2 -C /tmp/gen_tests.pl_563196_1695217154/evosuite/ .
Creating output directory.................................................. OK
Executed command: mkdir -p /home/liumengjiao/Desktop/CI/Evosuite/Math_105//Math/evosuite/3
Moving test suite archive to /home/liumengjiao/Desktop/CI/Evosuite/Math_105 OK
Executed command: mv /tmp/gen_tests.pl_563196_1695217154/Math-105f-evosuite.3.tar.bz2 /home/liumengjiao/Desktop/CI/Evosuite/Math_105//Math/evosuite/3
