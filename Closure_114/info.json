{
  "logger": {
    "currentLogLevel": 20,
    "name": "root.bean.benchmarks.Defects4JBug"
  },
  "d4jCmd": "/home/liumengjiao/Desktop/defects4j/framework/bin/defects4j",
  "dataDir": "data/changesInfo/",
  "timeoutSecond": 300,
  "proj": "Closure",
  "id": "114",
  "workingDir": "../bugs/Closure_114_buggy",
  "inducingCommit": "686a1daa30deb8970d5f3d9aa799d84cff92eac2",
  "originalCommit": "c1c79684ee1bc10c75c3585abbf822b6ef3c7e9a",
  "bug_name": "Closure_114",
  "derive": "defects4j",
  "original_fixing_commit": "5f03c6817341d39d8dead76c7511fd6bb0b9009f",
  "buildFiles_changed": false,
  "inducing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/NameAnalyzer.java",
        "src/com/google/javascript/jscomp/NameAnalyzer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "getEnclosingFunctionDependencyScope",
            "visit"
          ],
          "num": 2
        },
        {
          "qualified_names": [
            "visit",
            "getEnclosingFunctionDependencyScope"
          ],
          "num": 2
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "521",
            "1509",
            "1510",
            "1511",
            "1512"
          ],
          "num": 5
        },
        {
          "qualified_names": [
            "521",
            "1509"
          ],
          "num": 2
        }
      ],
      "diff": "diff --git a/src/com/google/javascript/jscomp/NameAnalyzer.java b/src/com/google/javascript/jscomp/NameAnalyzer.java\nindex 8a2c0ee..9069c01 100644\n--- a/src/com/google/javascript/jscomp/NameAnalyzer.java\n+++ b/src/com/google/javascript/jscomp/NameAnalyzer.java\n@@ -518,7 +518,7 @@\n               recordDepScope(nameNode, ns);\n             }\n           } else {\n-            recordDepScope(parent, ns);\n+            recordDepScope(n, ns);\n           }\n         }\n       } else if (NodeUtil.isVarDeclaration(n)) {\n@@ -1506,10 +1506,7 @@\n       }\n \n       if (parent.getType() \u003d\u003d Token.ASSIGN) {\n-        Node gramp \u003d parent.getParent();\n-        if (gramp !\u003d null \u0026\u0026 gramp.getType() \u003d\u003d Token.EXPR_RESULT) {\n-          return scopes.get(gramp);\n-        }\n+        return scopes.get(parent);\n       }\n     }\n \n",
      "operations": [
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "update-node",
          "from": "",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "VariableDeclarationStatement [50920,50952]",
          "to": ""
        },
        {
          "type": "delete-tree",
          "from": "InfixExpression [50965,51018]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "Block [51020,51067]",
          "to": ""
        },
        {
          "type": "delete-node",
          "from": "IfStatement [50961,51067]",
          "to": ""
        }
      ]
    }
  ],
  "inducing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  },
  "trigger_tests": [
    {
      "test_class": "com.google.javascript.jscomp.NameAnalyzerTest",
      "test_function": "testAssignWithCall",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    },
    {
      "test_class": "com.google.javascript.jscomp.NameAnalyzerTest",
      "test_function": "testNestedAssign2",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    },
    {
      "test_class": "com.google.javascript.jscomp.NameAnalyzerTest",
      "test_function": "testNestedAssign3",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    },
    {
      "test_class": "com.google.javascript.jscomp.NameAnalyzerTest",
      "test_function": "testNestedAssign4",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    },
    {
      "test_class": "com.google.javascript.jscomp.NameAnalyzerTest",
      "test_function": "testNestedAssigns",
      "exception": "junit.framework.AssertionFailedError",
      "message": ""
    }
  ],
  "fixing_changes": [
    {
      "changed_type": "UPDATE",
      "changed_class": [
        "src/com/google/javascript/jscomp/NameAnalyzer.java",
        "src/com/google/javascript/jscomp/NameAnalyzer.java"
      ],
      "changed_functions": [
        {
          "qualified_names": [
            "visit"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "visit"
          ],
          "num": 1
        }
      ],
      "changed_lines": [
        {
          "qualified_names": [
            "517"
          ],
          "num": 1
        },
        {
          "qualified_names": [
            "517"
          ],
          "num": 1
        }
      ],
      "diff": "diff -u -r data/changesInfo//Closure_114/properties/modified_classes/inducing/src/com/google/javascript/jscomp/NameAnalyzer.java data/changesInfo//Closure_114/cleaned/fixing/src/com/google/javascript/jscomp/NameAnalyzer.java\n--- data/changesInfo//Closure_114/properties/modified_classes/inducing/src/com/google/javascript/jscomp/NameAnalyzer.java\t2023-08-25 13:30:51.175180734 +0800\n+++ data/changesInfo//Closure_114/cleaned/fixing/src/com/google/javascript/jscomp/NameAnalyzer.java\t2023-07-25 16:00:28.767129908 +0800\n@@ -514,7 +514,7 @@\n             // logic.\n             if (parent.getFirstChild().getNext() !\u003d n) {\n               recordDepScope(n, ns);\n-            } else {\n+            } else if (!(parent.getType() \u003d\u003d Token.CALL \u0026\u0026 parent.getFirstChild() \u003d\u003d n)) {\n               recordDepScope(nameNode, ns);\n             }\n           } else {\n",
      "operations": [
        {
          "type": "insert-node",
          "from": "",
          "to": "IfStatement [17167,17296]"
        },
        {
          "type": "insert-tree",
          "from": "",
          "to": "PrefixExpression [17171,17235]"
        },
        {
          "type": "move-tree",
          "from": "",
          "to": ""
        }
      ]
    }
  ],
  "fixing_type": {
    "add_classes": {
      "qualified_names": [],
      "num": 0
    },
    "delete_classes": {
      "qualified_names": [],
      "num": 0
    },
    "add_functions": {
      "qualified_names": [],
      "num": 0
    },
    "delete_functions": {
      "qualified_names": [],
      "num": 0
    }
  }
}