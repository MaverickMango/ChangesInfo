diff --git a/gen/com/google/javascript/jscomp/FunctionInformationMap.java b/gen/com/google/javascript/jscomp/FunctionInformationMap.java
index 7ecd5bd..7d09eb4 100644
--- a/gen/com/google/javascript/jscomp/FunctionInformationMap.java
+++ b/gen/com/google/javascript/jscomp/FunctionInformationMap.java
@@ -212,7 +212,7 @@
       return size;
     }
     
-    @Override
+    @java.lang.Override
     protected Object writeReplace() throws java.io.ObjectStreamException {
       return super.writeReplace();
     }
@@ -687,7 +687,7 @@
       return size;
     }
     
-    @Override
+    @java.lang.Override
     protected Object writeReplace() throws java.io.ObjectStreamException {
       return super.writeReplace();
     }
@@ -1014,7 +1014,7 @@
     return size;
   }
   
-  @Override
+  @java.lang.Override
   protected Object writeReplace() throws java.io.ObjectStreamException {
     return super.writeReplace();
   }
diff --git a/gen/com/google/javascript/jscomp/Instrumentation.java b/gen/com/google/javascript/jscomp/Instrumentation.java
index 32f3a25..4031c59 100644
--- a/gen/com/google/javascript/jscomp/Instrumentation.java
+++ b/gen/com/google/javascript/jscomp/Instrumentation.java
@@ -178,7 +178,7 @@
     return size;
   }
   
-  @Override
+  @java.lang.Override
   protected Object writeReplace() throws java.io.ObjectStreamException {
     return super.writeReplace();
   }
diff --git a/lib/google_common_deploy.jar b/lib/google_common_deploy.jar
index 41a2c23..09e1ac2 100755
--- a/lib/google_common_deploy.jar
+++ b/lib/google_common_deploy.jar
Binary files differ
diff --git a/src/com/google/javascript/jscomp/CheckGlobalThis.java b/src/com/google/javascript/jscomp/CheckGlobalThis.java
index f11616d..5108686 100644
--- a/src/com/google/javascript/jscomp/CheckGlobalThis.java
+++ b/src/com/google/javascript/jscomp/CheckGlobalThis.java
@@ -89,6 +89,7 @@
       JSDocInfo jsDoc = getFunctionJsDocInfo(n);
       if (jsDoc != null &&
           (jsDoc.isConstructor() ||
+           jsDoc.isInterface() ||
            jsDoc.hasThisType() ||
            jsDoc.isOverride())) {
         return false;
@@ -122,12 +123,14 @@
       } else {
         // Only traverse the right side if it's not an assignment to a prototype
         // property or subproperty.
-        if (lhs.getType() == Token.GETPROP) {
-          if (lhs.getLastChild().getString().equals("prototype")) {
+        if (NodeUtil.isGet(lhs)) {
+          if (lhs.getType() == Token.GETPROP &&
+              lhs.getLastChild().getString().equals("prototype")) {
             return false;
           }
-          String leftName = lhs.getQualifiedName();
-          if (leftName != null && leftName.contains(".prototype.")) {
+          Node llhs = lhs.getFirstChild();
+          if (llhs.getType() == Token.GETPROP &&
+              llhs.getLastChild().getString().equals("prototype")) {
             return false;
           }
         }
diff --git a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
index 98e17aa..b168fd9 100644
--- a/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
+++ b/test/com/google/javascript/jscomp/CheckGlobalThisTest.java
@@ -108,6 +108,11 @@
     testSame("/** @constructor */a.A = function() { this.m2 = 5; }");
   }
 
+  public void testInterface1() {
+    testSame(
+        "/** @interface */function A() { /** @type {string} */ this.m2; }");
+  }
+
   public void testOverride1() {
     testSame("/** @constructor */function A() { } var a = new A();" +
              "/** @override */ a.foo = function() { this.bar = 5; };");
@@ -145,6 +150,15 @@
     testSame("a.b.c.D.prototype.m1 = function() { this.m2 = 5; }");
   }
 
+  public void testMethod4() {
+    testSame("a.prototype['x' + 'y'] =  function() { this.foo = 3; };");
+  }
+
+  public void testPropertyOfMethod() {
+    testFailure("a.protoype.b = {}; " +
+        "a.prototype.b.c = function() { this.foo = 3; };");
+  }
+
   public void testStaticMethod1() {
     testFailure("a.b = function() { this.m2 = 5; }");
   }
