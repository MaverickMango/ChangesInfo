===
insert-tree
---
ImportDeclaration [1172,1194]
    QualifiedName: java.util.List [1179,1193]
to
CompilationUnit [0,246561]
at 13
===
insert-node
---
MethodDeclaration [241460,242896]
to
TypeDeclaration [1173,246560]
at 804
===
insert-node
---
Modifier: private [241460,241467]
to
MethodDeclaration [241460,242896]
at 0
===
insert-node
---
PrimitiveType: void [241468,241472]
to
MethodDeclaration [241460,242896]
at 1
===
insert-node
---
SimpleName: testClosureTypesMultipleWarnings [241473,241505]
to
MethodDeclaration [241460,242896]
at 2
===
insert-tree
---
SingleVariableDeclaration [241513,241522]
    SimpleType [241513,241519]
        SimpleName: String [241513,241519]
    SimpleName: js [241520,241522]
to
MethodDeclaration [241460,242896]
at 3
===
insert-tree
---
SingleVariableDeclaration [241524,241549]
    ParameterizedType [241524,241536]
        SimpleType [241524,241528]
            SimpleName: List [241524,241528]
        SimpleType [241529,241535]
            SimpleName: String [241529,241535]
    SimpleName: descriptions [241537,241549]
to
MethodDeclaration [241460,242896]
at 4
===
insert-tree
---
SimpleType [241558,241567]
    SimpleName: Exception [241558,241567]
to
MethodDeclaration [241460,242896]
at 5
===
insert-node
---
Block [241568,242896]
to
MethodDeclaration [241460,242896]
at 6
===
insert-tree
---
ExpressionStatement [209503,209843]
    MethodInvocation [209503,209842]
        SimpleName: testClosureTypesMultipleWarnings [209503,209535]
        METHOD_INVOCATION_ARGUMENTS [209545,209841]
            InfixExpression [209545,209679]
                MethodInvocation [209545,209575]
                    SimpleName: suppressMissingProperty [209545,209568]
                    METHOD_INVOCATION_ARGUMENTS [209569,209574]
                        StringLiteral: "foo" [209569,209574]
                INFIX_EXPRESSION_OPERATOR: + [209576,209577]
                StringLiteral: "/** @constructor \n * @extends {T} */var T = function() {};" [209586,209647]
                StringLiteral: "alert((new T).foo);" [209658,209679]
            MethodInvocation [209689,209841]
                METHOD_INVOCATION_RECEIVER [209689,209694]
                    SimpleName: Lists [209689,209694]
                SimpleName: newArrayList [209695,209707]
                METHOD_INVOCATION_ARGUMENTS [209721,209840]
                    StringLiteral: "Parse error. Cycle detected in inheritance chain of type T" [209721,209781]
                    StringLiteral: "Could not resolve type in @extends tag of T" [209795,209840]
to
Block [209474,209709]
at 0
===
insert-node
---
ExpressionStatement [241345,241452]
to
Block [241201,242426]
at 0
===
move-tree
---
VariableDeclarationStatement [241207,241243]
    SimpleType [241207,241211]
        SimpleName: Node [241207,241211]
    VariableDeclarationFragment [241212,241242]
        SimpleName: n [241212,241213]
        MethodInvocation [241216,241242]
            METHOD_INVOCATION_RECEIVER [241216,241224]
                SimpleName: compiler [241216,241224]
            SimpleName: parseTestCode [241225,241238]
            METHOD_INVOCATION_ARGUMENTS [241239,241241]
                SimpleName: js [241239,241241]
to
Block [241568,242896]
at 0
===
move-tree
---
VariableDeclarationStatement [241248,241285]
    SimpleType [241248,241252]
        SimpleName: Node [241248,241252]
    VariableDeclarationFragment [241253,241284]
        SimpleName: externs [241253,241260]
        ClassInstanceCreation [241263,241284]
            SimpleType [241267,241271]
                SimpleName: Node [241267,241271]
            QualifiedName: Token.BLOCK [241272,241283]
to
Block [241568,242896]
at 1
===
move-tree
---
VariableDeclarationStatement [241290,241347]
    SimpleType [241290,241294]
        SimpleName: Node [241290,241294]
    VariableDeclarationFragment [241295,241346]
        SimpleName: externAndJsRoot [241295,241310]
        ClassInstanceCreation [241313,241346]
            SimpleType [241317,241321]
                SimpleName: Node [241317,241321]
            QualifiedName: Token.BLOCK [241322,241333]
            SimpleName: externs [241335,241342]
            SimpleName: n [241344,241345]
to
Block [241568,242896]
at 2
===
move-tree
---
ExpressionStatement [241352,241394]
    MethodInvocation [241352,241393]
        METHOD_INVOCATION_RECEIVER [241352,241367]
            SimpleName: externAndJsRoot [241352,241367]
        SimpleName: setIsSyntheticBlock [241368,241387]
        METHOD_INVOCATION_ARGUMENTS [241388,241392]
            BooleanLiteral: true [241388,241392]
to
Block [241568,242896]
at 3
===
move-tree
---
ExpressionStatement [241400,241522]
    MethodInvocation [241400,241521]
        SimpleName: assertEquals [241400,241412]
        METHOD_INVOCATION_ARGUMENTS [241413,241520]
            InfixExpression [241413,241483]
                StringLiteral: "parsing error: " [241413,241430]
                INFIX_EXPRESSION_OPERATOR: + [241431,241432]
                MethodInvocation [241441,241483]
                    METHOD_INVOCATION_RECEIVER [241441,241456]
                        MethodInvocation [241441,241456]
                            METHOD_INVOCATION_RECEIVER [241441,241447]
                                SimpleName: Joiner [241441,241447]
                            SimpleName: on [241448,241450]
                            METHOD_INVOCATION_ARGUMENTS [241451,241455]
                                StringLiteral: ", " [241451,241455]
                    SimpleName: join [241457,241461]
                    METHOD_INVOCATION_ARGUMENTS [241462,241482]
                        MethodInvocation [241462,241482]
                            METHOD_INVOCATION_RECEIVER [241462,241470]
                                SimpleName: compiler [241462,241470]
                            SimpleName: getErrors [241471,241480]
            NumberLiteral: 0 [241493,241494]
            MethodInvocation [241496,241520]
                METHOD_INVOCATION_RECEIVER [241496,241504]
                    SimpleName: compiler [241496,241504]
                SimpleName: getErrorCount [241505,241518]
to
Block [241568,242896]
at 4
===
move-tree
---
ExpressionStatement [241591,241680]
    MethodInvocation [241591,241679]
        METHOD_INVOCATION_RECEIVER [241591,241653]
            ClassInstanceCreation [241591,241653]
                SimpleType [241595,241619]
                    SimpleName: ProcessClosurePrimitives [241595,241619]
                SimpleName: compiler [241620,241628]
                QualifiedName: CheckLevel.ERROR [241630,241646]
                BooleanLiteral: true [241648,241652]
        SimpleName: process [241663,241670]
        METHOD_INVOCATION_ARGUMENTS [241671,241678]
            NullLiteral [241671,241675]
            SimpleName: n [241677,241678]
to
Block [241568,242896]
at 5
===
move-tree
---
VariableDeclarationStatement [241686,241747]
    SimpleType [241686,241702]
        SimpleName: CodingConvention [241686,241702]
    VariableDeclarationFragment [241703,241746]
        SimpleName: convention [241703,241713]
        MethodInvocation [241716,241746]
            METHOD_INVOCATION_RECEIVER [241716,241724]
                SimpleName: compiler [241716,241724]
            SimpleName: getCodingConvention [241725,241744]
to
Block [241568,242896]
at 6
===
move-tree
---
ExpressionStatement [241752,242043]
    MethodInvocation [241752,242042]
        METHOD_INVOCATION_RECEIVER [241752,242006]
            ClassInstanceCreation [241752,242006]
                SimpleType [241756,241765]
                    SimpleName: TypeCheck [241756,241765]
                SimpleName: compiler [241766,241774]
                MethodInvocation [241784,241987]
                    METHOD_INVOCATION_RECEIVER [241784,241963]
                        MethodInvocation [241784,241963]
                            METHOD_INVOCATION_RECEIVER [241784,241856]
                                ClassInstanceCreation [241784,241856]
                                    SimpleType [241788,241821]
                                        SimpleName: ClosureReverseAbstractInterpreter [241788,241821]
                                    SimpleName: convention [241835,241845]
                                    SimpleName: registry [241847,241855]
                            SimpleName: append [241857,241863]
                            METHOD_INVOCATION_ARGUMENTS [241881,241962]
                                ClassInstanceCreation [241881,241962]
                                    SimpleType [241885,241919]
                                        SimpleName: SemanticReverseAbstractInterpreter [241885,241919]
                                    SimpleName: convention [241941,241951]
                                    SimpleName: registry [241953,241961]
                    SimpleName: getFirst [241977,241985]
                SimpleName: registry [241997,242005]
        SimpleName: processForTesting [242016,242033]
        METHOD_INVOCATION_ARGUMENTS [242034,242041]
            NullLiteral [242034,242038]
            SimpleName: n [242040,242041]
to
Block [241568,242896]
at 7
===
move-tree
---
ExpressionStatement [242049,242091]
    MethodInvocation [242049,242090]
        SimpleName: assertEquals [242049,242061]
        METHOD_INVOCATION_ARGUMENTS [242062,242089]
            NumberLiteral: 0 [242062,242063]
            MethodInvocation [242065,242089]
                METHOD_INVOCATION_RECEIVER [242065,242073]
                    SimpleName: compiler [242065,242073]
                SimpleName: getErrorCount [242074,242087]
to
Block [241568,242896]
at 8
===
move-tree
---
IfStatement [242097,242422]
    InfixExpression [242101,242120]
        SimpleName: description [242101,242112]
        INFIX_EXPRESSION_OPERATOR: == [242113,242115]
        NullLiteral [242116,242120]
    Block [242122,242286]
        ExpressionStatement [242130,242280]
            MethodInvocation [242130,242279]
                SimpleName: assertEquals [242130,242142]
                METHOD_INVOCATION_ARGUMENTS [242154,242278]
                    InfixExpression [242154,242237]
                        StringLiteral: "unexpected warning(s) : " [242154,242180]
                        INFIX_EXPRESSION_OPERATOR: + [242181,242182]
                        MethodInvocation [242193,242237]
                            METHOD_INVOCATION_RECEIVER [242193,242208]
                                MethodInvocation [242193,242208]
                                    METHOD_INVOCATION_RECEIVER [242193,242199]
                                        SimpleName: Joiner [242193,242199]
                                    SimpleName: on [242200,242202]
                                    METHOD_INVOCATION_ARGUMENTS [242203,242207]
                                        StringLiteral: ", " [242203,242207]
                            SimpleName: join [242209,242213]
                            METHOD_INVOCATION_ARGUMENTS [242214,242236]
                                MethodInvocation [242214,242236]
                                    METHOD_INVOCATION_RECEIVER [242214,242222]
                                        SimpleName: compiler [242214,242222]
                                    SimpleName: getWarnings [242223,242234]
                    NumberLiteral: 0 [242249,242250]
                    MethodInvocation [242252,242278]
                        METHOD_INVOCATION_RECEIVER [242252,242260]
                            SimpleName: compiler [242252,242260]
                        SimpleName: getWarningCount [242261,242276]
    Block [242292,242422]
        ExpressionStatement [242300,242344]
            MethodInvocation [242300,242343]
                SimpleName: assertEquals [242300,242312]
                METHOD_INVOCATION_ARGUMENTS [242313,242342]
                    NumberLiteral: 1 [242313,242314]
                    MethodInvocation [242316,242342]
                        METHOD_INVOCATION_RECEIVER [242316,242324]
                            SimpleName: compiler [242316,242324]
                        SimpleName: getWarningCount [242325,242340]
        ExpressionStatement [242351,242416]
            MethodInvocation [242351,242415]
                SimpleName: assertEquals [242351,242363]
                METHOD_INVOCATION_ARGUMENTS [242364,242414]
                    SimpleName: description [242364,242375]
                    FieldAccess [242377,242414]
                        ArrayAccess [242377,242402]
                            MethodInvocation [242377,242399]
                                METHOD_INVOCATION_RECEIVER [242377,242385]
                                    SimpleName: compiler [242377,242385]
                                SimpleName: getWarnings [242386,242397]
                            NumberLiteral: 0 [242400,242401]
                        SimpleName: description [242403,242414]
to
Block [241568,242896]
at 9
===
insert-node
---
MethodInvocation [241345,241451]
to
ExpressionStatement [241345,241452]
at 0
===
insert-node
---
SimpleName: testClosureTypesMultipleWarnings [241345,241377]
to
MethodInvocation [241345,241451]
at 0
===
insert-node
---
METHOD_INVOCATION_ARGUMENTS [241378,241450]
to
MethodInvocation [241345,241451]
at 1
===
insert-node
---
SimpleName: descriptions [242468,242480]
to
InfixExpression [242101,242120]
at 0
===
insert-node
---
ForStatement [242737,242886]
to
Block [242292,242422]
at 1
===
insert-node
---
SimpleName: js [241378,241380]
to
METHOD_INVOCATION_ARGUMENTS [241378,241450]
at 0
===
insert-node
---
ConditionalExpression [241390,241450]
to
METHOD_INVOCATION_ARGUMENTS [241378,241450]
at 1
===
insert-tree
---
VariableDeclarationExpression [242742,242751]
    PrimitiveType: int [242742,242745]
    VariableDeclarationFragment [242746,242751]
        SimpleName: i [242746,242747]
        NumberLiteral: 0 [242750,242751]
to
ForStatement [242737,242886]
at 0
===
insert-tree
---
InfixExpression [242753,242776]
    SimpleName: i [242753,242754]
    INFIX_EXPRESSION_OPERATOR: < [242755,242756]
    MethodInvocation [242757,242776]
        METHOD_INVOCATION_RECEIVER [242757,242769]
            SimpleName: descriptions [242757,242769]
        SimpleName: size [242770,242774]
to
ForStatement [242737,242886]
at 1
===
insert-tree
---
PostfixExpression [242778,242781]
    SimpleName: i [242778,242779]
    POSTFIX_EXPRESSION_OPERATOR: ++ [242779,242781]
to
ForStatement [242737,242886]
at 2
===
insert-node
---
Block [242783,242886]
to
ForStatement [242737,242886]
at 3
===
update-node
---
StringLiteral: "function f(x) { return x; }" [221055,221084]
replace "function f(x) { return x; }" by "function f(x) { return 3; }"
===
insert-node
---
InfixExpression [241390,241409]
to
ConditionalExpression [241390,241450]
at 0
===
insert-node
---
NullLiteral [241412,241416]
to
ConditionalExpression [241390,241450]
at 1
===
insert-tree
---
MethodInvocation [241419,241450]
    METHOD_INVOCATION_RECEIVER [241419,241424]
        SimpleName: Lists [241419,241424]
    SimpleName: newArrayList [241425,241437]
    METHOD_INVOCATION_ARGUMENTS [241438,241449]
        SimpleName: description [241438,241449]
to
ConditionalExpression [241390,241450]
at 2
===
move-tree
---
ExpressionStatement [242351,242416]
    MethodInvocation [242351,242415]
        SimpleName: assertEquals [242351,242363]
        METHOD_INVOCATION_ARGUMENTS [242364,242414]
            SimpleName: description [242364,242375]
            FieldAccess [242377,242414]
                ArrayAccess [242377,242402]
                    MethodInvocation [242377,242399]
                        METHOD_INVOCATION_RECEIVER [242377,242385]
                            SimpleName: compiler [242377,242385]
                        SimpleName: getWarnings [242386,242397]
                    NumberLiteral: 0 [242400,242401]
                SimpleName: description [242403,242414]
to
Block [242783,242886]
at 0
===
move-tree
---
SimpleName: description [242101,242112]
to
InfixExpression [241390,241409]
at 0
===
insert-node
---
INFIX_EXPRESSION_OPERATOR: == [241402,241404]
to
InfixExpression [241390,241409]
at 1
===
insert-node
---
NullLiteral [241405,241409]
to
InfixExpression [241390,241409]
at 2
===
insert-tree
---
MethodInvocation [242681,242700]
    METHOD_INVOCATION_RECEIVER [242681,242693]
        SimpleName: descriptions [242681,242693]
    SimpleName: size [242694,242698]
to
METHOD_INVOCATION_ARGUMENTS [242313,242342]
at 0
===
insert-tree
---
MethodInvocation [242806,242825]
    METHOD_INVOCATION_RECEIVER [242806,242818]
        SimpleName: descriptions [242806,242818]
    SimpleName: get [242819,242822]
    METHOD_INVOCATION_ARGUMENTS [242823,242824]
        SimpleName: i [242823,242824]
to
METHOD_INVOCATION_ARGUMENTS [242364,242414]
at 0
===
insert-node
---
SimpleName: i [242862,242863]
to
ArrayAccess [242377,242402]
at 1
===
delete-tree
---
ExpressionStatement [209480,209705]
    MethodInvocation [209480,209704]
        SimpleName: testTypes [209480,209489]
        METHOD_INVOCATION_ARGUMENTS [209499,209703]
            InfixExpression [209499,209633]
                MethodInvocation [209499,209529]
                    SimpleName: suppressMissingProperty [209499,209522]
                    METHOD_INVOCATION_ARGUMENTS [209523,209528]
                        StringLiteral: "foo" [209523,209528]
                INFIX_EXPRESSION_OPERATOR: + [209530,209531]
                StringLiteral: "/** @constructor \n * @extends {T} */var T = function() {};" [209540,209601]
                StringLiteral: "alert((new T).foo);" [209612,209633]
            StringLiteral: "Parse error. Cycle detected in inheritance chain of type T" [209643,209703]
===
delete-node
---
NumberLiteral: 1 [242313,242314]
===
===
delete-node
---
SimpleName: description [242364,242375]
===
===
delete-node
---
NumberLiteral: 0 [242400,242401]
===
