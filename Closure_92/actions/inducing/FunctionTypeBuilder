===
insert-tree
---
ImportDeclaration [991,1031]
    QualifiedName: com.google.common.base.Predicate [998,1030]
to
CompilationUnit [0,23412]
at 6
===
insert-tree
---
FieldDeclaration [3677,3832]
    Modifier: static [3677,3683]
    Modifier: final [3684,3689]
    SimpleType [3690,3704]
        SimpleName: DiagnosticType [3690,3704]
    VariableDeclarationFragment [3705,3831]
        SimpleName: RESOLVED_TAG_EMPTY [3705,3723]
        MethodInvocation [3726,3831]
            METHOD_INVOCATION_RECEIVER [3726,3740]
                SimpleName: DiagnosticType [3726,3740]
            SimpleName: warning [3741,3748]
            METHOD_INVOCATION_ARGUMENTS [3756,3830]
                StringLiteral: "JSC_RESOLVED_TAG_EMPTY" [3756,3780]
                StringLiteral: "Could not resolve type in {0} tag of {1}" [3788,3830]
to
TypeDeclaration [1808,23411]
at 23
===
insert-tree
---
TypeDeclaration [5090,5829]
    Modifier: private [5090,5097]
    TYPE_DECLARATION_KIND: class [5098,5103]
    SimpleName: ExtendedTypeValidator [5104,5125]
    ParameterizedType [5137,5154]
        SimpleType [5137,5146]
            SimpleName: Predicate [5137,5146]
        SimpleType [5147,5153]
            SimpleName: JSType [5147,5153]
    MethodDeclaration [5161,5825]
        MarkerAnnotation [5161,5170]
            SimpleName: Override [5162,5170]
        Modifier: public [5175,5181]
        PrimitiveType: boolean [5182,5189]
        SimpleName: apply [5190,5195]
        SingleVariableDeclaration [5196,5207]
            SimpleType [5196,5202]
                SimpleName: JSType [5196,5202]
            SimpleName: type [5203,5207]
        Block [5209,5825]
            VariableDeclarationStatement [5217,5263]
                SimpleType [5217,5227]
                    SimpleName: ObjectType [5217,5227]
                VariableDeclarationFragment [5228,5262]
                    SimpleName: objectType [5228,5238]
                    MethodInvocation [5241,5262]
                        METHOD_INVOCATION_RECEIVER [5241,5251]
                            SimpleName: ObjectType [5241,5251]
                        SimpleName: cast [5252,5256]
                        METHOD_INVOCATION_ARGUMENTS [5257,5261]
                            SimpleName: type [5257,5261]
            IfStatement [5270,5799]
                InfixExpression [5274,5292]
                    SimpleName: objectType [5274,5284]
                    INFIX_EXPRESSION_OPERATOR: == [5285,5287]
                    NullLiteral [5288,5292]
                Block [5294,5371]
                    ExpressionStatement [5304,5363]
                        MethodInvocation [5304,5362]
                            SimpleName: reportWarning [5304,5317]
                            METHOD_INVOCATION_ARGUMENTS [5318,5361]
                                SimpleName: EXTENDS_NON_OBJECT [5318,5336]
                                SimpleName: fnName [5338,5344]
                                MethodInvocation [5346,5361]
                                    METHOD_INVOCATION_RECEIVER [5346,5350]
                                        SimpleName: type [5346,5350]
                                    SimpleName: toString [5351,5359]
                IfStatement [5377,5799]
                    InfixExpression [5381,5689]
                        MethodInvocation [5381,5407]
                            METHOD_INVOCATION_RECEIVER [5381,5391]
                                SimpleName: objectType [5381,5391]
                            SimpleName: isUnknownType [5392,5405]
                        INFIX_EXPRESSION_OPERATOR: && [5408,5410]
                        ParenthesizedExpression [5585,5689]
                            InfixExpression [5586,5688]
                                InfixExpression [5586,5627]
                                    MethodInvocation [5586,5619]
                                        METHOD_INVOCATION_RECEIVER [5586,5596]
                                            SimpleName: objectType [5586,5596]
                                        SimpleName: getImplicitPrototype [5597,5617]
                                    INFIX_EXPRESSION_OPERATOR: == [5620,5622]
                                    NullLiteral [5623,5627]
                                INFIX_EXPRESSION_OPERATOR: || [5628,5630]
                                MethodInvocation [5642,5688]
                                    METHOD_INVOCATION_RECEIVER [5642,5675]
                                        MethodInvocation [5642,5675]
                                            METHOD_INVOCATION_RECEIVER [5642,5652]
                                                SimpleName: objectType [5642,5652]
                                            SimpleName: getImplicitPrototype [5653,5673]
                                    SimpleName: isResolved [5676,5686]
                    Block [5691,5763]
                        ExpressionStatement [5701,5755]
                            MethodInvocation [5701,5754]
                                SimpleName: reportWarning [5701,5714]
                                METHOD_INVOCATION_ARGUMENTS [5715,5753]
                                    SimpleName: RESOLVED_TAG_EMPTY [5715,5733]
                                    StringLiteral: "@extends" [5735,5745]
                                    SimpleName: fnName [5747,5753]
                    Block [5769,5799]
                        ReturnStatement [5779,5791]
                            BooleanLiteral: true [5786,5790]
            ReturnStatement [5806,5819]
                BooleanLiteral: false [5813,5818]
to
TypeDeclaration [1808,23411]
at 31
===
insert-tree
---
TypeDeclaration [5834,6562]
    Modifier: private [5834,5841]
    TYPE_DECLARATION_KIND: class [5842,5847]
    SimpleName: ImplementedTypeValidator [5848,5872]
    ParameterizedType [5884,5901]
        SimpleType [5884,5893]
            SimpleName: Predicate [5884,5893]
        SimpleType [5894,5900]
            SimpleName: JSType [5894,5900]
    MethodDeclaration [5908,6558]
        MarkerAnnotation [5908,5917]
            SimpleName: Override [5909,5917]
        Modifier: public [5922,5928]
        PrimitiveType: boolean [5929,5936]
        SimpleName: apply [5937,5942]
        SingleVariableDeclaration [5943,5954]
            SimpleType [5943,5949]
                SimpleName: JSType [5943,5949]
            SimpleName: type [5950,5954]
        Block [5956,6558]
            VariableDeclarationStatement [5964,6010]
                SimpleType [5964,5974]
                    SimpleName: ObjectType [5964,5974]
                VariableDeclarationFragment [5975,6009]
                    SimpleName: objectType [5975,5985]
                    MethodInvocation [5988,6009]
                        METHOD_INVOCATION_RECEIVER [5988,5998]
                            SimpleName: ObjectType [5988,5998]
                        SimpleName: cast [5999,6003]
                        METHOD_INVOCATION_ARGUMENTS [6004,6008]
                            SimpleName: type [6004,6008]
            IfStatement [6017,6532]
                InfixExpression [6021,6039]
                    SimpleName: objectType [6021,6031]
                    INFIX_EXPRESSION_OPERATOR: == [6032,6034]
                    NullLiteral [6035,6039]
                Block [6041,6101]
                    ExpressionStatement [6051,6093]
                        MethodInvocation [6051,6092]
                            SimpleName: reportError [6051,6062]
                            METHOD_INVOCATION_ARGUMENTS [6063,6091]
                                SimpleName: BAD_IMPLEMENTED_TYPE [6063,6083]
                                SimpleName: fnName [6085,6091]
                IfStatement [6107,6532]
                    InfixExpression [6111,6419]
                        MethodInvocation [6111,6137]
                            METHOD_INVOCATION_RECEIVER [6111,6121]
                                SimpleName: objectType [6111,6121]
                            SimpleName: isUnknownType [6122,6135]
                        INFIX_EXPRESSION_OPERATOR: && [6138,6140]
                        ParenthesizedExpression [6315,6419]
                            InfixExpression [6316,6418]
                                InfixExpression [6316,6357]
                                    MethodInvocation [6316,6349]
                                        METHOD_INVOCATION_RECEIVER [6316,6326]
                                            SimpleName: objectType [6316,6326]
                                        SimpleName: getImplicitPrototype [6327,6347]
                                    INFIX_EXPRESSION_OPERATOR: == [6350,6352]
                                    NullLiteral [6353,6357]
                                INFIX_EXPRESSION_OPERATOR: || [6358,6360]
                                MethodInvocation [6372,6418]
                                    METHOD_INVOCATION_RECEIVER [6372,6405]
                                        MethodInvocation [6372,6405]
                                            METHOD_INVOCATION_RECEIVER [6372,6382]
                                                SimpleName: objectType [6372,6382]
                                            SimpleName: getImplicitPrototype [6383,6403]
                                    SimpleName: isResolved [6406,6416]
                    Block [6421,6496]
                        ExpressionStatement [6431,6488]
                            MethodInvocation [6431,6487]
                                SimpleName: reportWarning [6431,6444]
                                METHOD_INVOCATION_ARGUMENTS [6445,6486]
                                    SimpleName: RESOLVED_TAG_EMPTY [6445,6463]
                                    StringLiteral: "@implements" [6465,6478]
                                    SimpleName: fnName [6480,6486]
                    Block [6502,6532]
                        ReturnStatement [6512,6524]
                            BooleanLiteral: true [6519,6523]
            ReturnStatement [6539,6552]
                BooleanLiteral: false [6546,6551]
to
TypeDeclaration [1808,23411]
at 32
===
insert-tree
---
VariableDeclarationStatement [12118,12204]
    SimpleType [12118,12124]
        SimpleName: JSType [12118,12124]
    VariableDeclarationFragment [12125,12203]
        SimpleName: maybeBaseType [12125,12138]
        MethodInvocation [12155,12203]
            METHOD_INVOCATION_RECEIVER [12155,12173]
                MethodInvocation [12155,12173]
                    METHOD_INVOCATION_RECEIVER [12155,12159]
                        SimpleName: info [12155,12159]
                    SimpleName: getBaseType [12160,12171]
            SimpleName: evaluate [12174,12182]
            METHOD_INVOCATION_ARGUMENTS [12183,12202]
                SimpleName: scope [12183,12188]
                SimpleName: typeRegistry [12190,12202]
to
Block [10429,10650]
at 0
===
insert-node
---
IfStatement [12215,12379]
to
Block [10429,10650]
at 1
===
insert-node
---
VariableDeclarationStatement [12681,12737]
to
Block [10930,11195]
at 0
===
insert-node
---
IfStatement [12748,12934]
to
Block [10930,11195]
at 1
===
insert-tree
---
InfixExpression [12219,12313]
    InfixExpression [12219,12240]
        SimpleName: maybeBaseType [12219,12232]
        INFIX_EXPRESSION_OPERATOR: != [12233,12235]
        NullLiteral [12236,12240]
    INFIX_EXPRESSION_OPERATOR: && [12241,12243]
    MethodInvocation [12258,12313]
        METHOD_INVOCATION_RECEIVER [12258,12271]
            SimpleName: maybeBaseType [12258,12271]
        SimpleName: setValidator [12272,12284]
        METHOD_INVOCATION_ARGUMENTS [12285,12312]
            ClassInstanceCreation [12285,12312]
                SimpleType [12289,12310]
                    SimpleName: ExtendedTypeValidator [12289,12310]
to
IfStatement [12215,12379]
at 0
===
insert-node
---
Block [12315,12379]
to
IfStatement [12215,12379]
at 1
===
insert-tree
---
SimpleType [12681,12687]
    SimpleName: JSType [12681,12687]
to
VariableDeclarationStatement [12681,12737]
at 0
===
insert-node
---
VariableDeclarationFragment [12688,12736]
to
VariableDeclarationStatement [12681,12737]
at 1
===
insert-tree
---
InfixExpression [12752,12851]
    InfixExpression [12752,12774]
        SimpleName: maybeInterType [12752,12766]
        INFIX_EXPRESSION_OPERATOR: != [12767,12769]
        NullLiteral [12770,12774]
    INFIX_EXPRESSION_OPERATOR: && [12775,12777]
    MethodInvocation [12792,12851]
        METHOD_INVOCATION_RECEIVER [12792,12806]
            SimpleName: maybeInterType [12792,12806]
        SimpleName: setValidator [12807,12819]
        METHOD_INVOCATION_ARGUMENTS [12820,12850]
            ClassInstanceCreation [12820,12850]
                SimpleType [12824,12848]
                    SimpleName: ImplementedTypeValidator [12824,12848]
to
IfStatement [12748,12934]
at 0
===
move-tree
---
Block [11048,11111]
    ExpressionStatement [11062,11099]
        MethodInvocation [11062,11098]
            METHOD_INVOCATION_RECEIVER [11062,11083]
                SimpleName: implementedInterfaces [11062,11083]
            SimpleName: add [11084,11087]
            METHOD_INVOCATION_ARGUMENTS [11088,11097]
                SimpleName: interType [11088,11097]
to
IfStatement [12748,12934]
at 1
===
move-tree
---
ExpressionStatement [10441,10518]
    Assignment [10441,10517]
        SimpleName: baseType [10441,10449]
        ASSIGNMENT_OPERATOR: = [10450,10451]
        MethodInvocation [10452,10517]
            METHOD_INVOCATION_RECEIVER [10452,10462]
                SimpleName: ObjectType [10452,10462]
            SimpleName: cast [10463,10467]
            METHOD_INVOCATION_ARGUMENTS [10468,10516]
                MethodInvocation [10468,10516]
                    METHOD_INVOCATION_RECEIVER [10468,10486]
                        MethodInvocation [10468,10486]
                            METHOD_INVOCATION_RECEIVER [10468,10472]
                                SimpleName: info [10468,10472]
                            SimpleName: getBaseType [10473,10484]
                    SimpleName: evaluate [10487,10495]
                    METHOD_INVOCATION_ARGUMENTS [10496,10515]
                        SimpleName: scope [10496,10501]
                        SimpleName: typeRegistry [10503,10515]
to
Block [12315,12379]
at 0
===
insert-node
---
SimpleName: maybeInterType [12688,12702]
to
VariableDeclarationFragment [12688,12736]
at 0
===
move-tree
---
MethodInvocation [10981,11012]
    METHOD_INVOCATION_RECEIVER [10981,10982]
        SimpleName: t [10981,10982]
    SimpleName: evaluate [10983,10991]
    METHOD_INVOCATION_ARGUMENTS [10992,11011]
        SimpleName: scope [10992,10997]
        SimpleName: typeRegistry [10999,11011]
to
VariableDeclarationFragment [12688,12736]
at 1
===
insert-node
---
CastExpression [12340,12366]
to
Assignment [10441,10517]
at 2
===
insert-node
---
SimpleType [12341,12351]
to
CastExpression [12340,12366]
at 0
===
insert-node
---
SimpleName: maybeBaseType [12353,12366]
to
CastExpression [12340,12366]
at 1
===
insert-tree
---
CastExpression [12893,12920]
    SimpleType [12894,12904]
        SimpleName: ObjectType [12894,12904]
    SimpleName: maybeInterType [12906,12920]
to
METHOD_INVOCATION_ARGUMENTS [11088,11097]
at 0
===
move-tree
---
SimpleName: ObjectType [10452,10462]
to
SimpleType [12341,12351]
at 0
===
delete-node
---
METHOD_INVOCATION_RECEIVER [10452,10462]
===
===
delete-node
---
SimpleName: cast [10463,10467]
===
===
delete-tree
---
METHOD_INVOCATION_ARGUMENTS [10468,10516]
    MethodInvocation [10468,10516]
        METHOD_INVOCATION_RECEIVER [10468,10486]
            MethodInvocation [10468,10486]
                METHOD_INVOCATION_RECEIVER [10468,10472]
                    SimpleName: info [10468,10472]
                SimpleName: getBaseType [10473,10484]
        SimpleName: evaluate [10487,10495]
        METHOD_INVOCATION_ARGUMENTS [10496,10515]
            SimpleName: scope [10496,10501]
            SimpleName: typeRegistry [10503,10515]
===
delete-node
---
MethodInvocation [10452,10517]
===
===
delete-tree
---
IfStatement [10529,10640]
    InfixExpression [10533,10549]
        SimpleName: baseType [10533,10541]
        INFIX_EXPRESSION_OPERATOR: == [10542,10544]
        NullLiteral [10545,10549]
    Block [10551,10640]
        ExpressionStatement [10565,10628]
            MethodInvocation [10565,10627]
                SimpleName: reportWarning [10565,10578]
                METHOD_INVOCATION_ARGUMENTS [10579,10626]
                    SimpleName: EXTENDS_NON_OBJECT [10579,10597]
                    SimpleName: fnName [10599,10605]
                    MethodInvocation [10607,10626]
                        METHOD_INVOCATION_RECEIVER [10607,10615]
                            SimpleName: baseType [10607,10615]
                        SimpleName: toString [10616,10624]
===
delete-node
---
SimpleName: interType [11088,11097]
===
===
delete-tree
---
SimpleType [10942,10952]
    SimpleName: ObjectType [10942,10952]
===
delete-node
---
SimpleName: interType [10953,10962]
===
===
delete-tree
---
METHOD_INVOCATION_RECEIVER [10965,10975]
    SimpleName: ObjectType [10965,10975]
===
delete-node
---
SimpleName: cast [10976,10980]
===
===
delete-node
---
METHOD_INVOCATION_ARGUMENTS [10981,11012]
===
===
delete-node
---
MethodInvocation [10965,11013]
===
===
delete-node
---
VariableDeclarationFragment [10953,11013]
===
===
delete-node
---
VariableDeclarationStatement [10942,11014]
===
===
delete-tree
---
InfixExpression [11029,11046]
    SimpleName: interType [11029,11038]
    INFIX_EXPRESSION_OPERATOR: != [11039,11041]
    NullLiteral [11042,11046]
===
delete-tree
---
Block [11117,11185]
    ExpressionStatement [11131,11173]
        MethodInvocation [11131,11172]
            SimpleName: reportError [11131,11142]
            METHOD_INVOCATION_ARGUMENTS [11143,11171]
                SimpleName: BAD_IMPLEMENTED_TYPE [11143,11163]
                SimpleName: fnName [11165,11171]
===
delete-node
---
IfStatement [11025,11185]
===
